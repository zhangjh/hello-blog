{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/jd_root.txt","path":"jd_root.txt","modified":1,"renderable":0},{"_id":"source/wechat.JPG","path":"wechat.JPG","modified":1,"renderable":0},{"_id":"source/404/404.jpg","path":"404/404.jpg","modified":1,"renderable":0},{"_id":"source/search/index.html","path":"search/index.html","modified":1,"renderable":0},{"_id":"themes/nextNew/source/CNAME","path":"CNAME","modified":1,"renderable":1},{"_id":"themes/nextNew/source/robots.txt","path":"robots.txt","modified":1,"renderable":1},{"_id":"themes/nextNew/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/nextNew/source/css/search.css","path":"css/search.css","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/beian.png","path":"images/beian.png","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/default_avatar.jpg","path":"images/default_avatar.jpg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/search.png","path":"images/search.png","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/nextNew/source/images/zfb.png","path":"images/zfb.png","modified":1,"renderable":1},{"_id":"themes/nextNew/source/js/bootstrap.js","path":"js/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/js/bootstrap.scrollspy.js","path":"js/bootstrap.scrollspy.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/js/fancy-box.js","path":"js/fancy-box.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/js/helpers.js","path":"js/helpers.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/js/hook-duoshuo.js","path":"js/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/js/jiathis.js","path":"js/jiathis.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/js/ua-parser.min.js","path":"js/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/notie/notie.min.css","path":"vendors/notie/notie.min.css","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/bootstrap/css/bootstrap-theme.min.css","path":"vendors/bootstrap/css/bootstrap-theme.min.css","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.eot","path":"vendors/bootstrap/fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.ttf","path":"vendors/bootstrap/fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.woff","path":"vendors/bootstrap/fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.woff2","path":"vendors/bootstrap/fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/bootstrap/js/bootstrap.min.js","path":"vendors/bootstrap/js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/firebase/firebase.js","path":"vendors/firebase/firebase.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/bootstrap/css/bootstrap.min.css","path":"vendors/bootstrap/css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.svg","path":"vendors/bootstrap/fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/capture_demo.html","hash":"21b129c125e659a3ebd3d8a388af766f73d45017","modified":1539973807983},{"_id":"source/favicon.ico","hash":"7f383b3d26dc99997f6eb3abdb5b83ba65246e95","modified":1539973807984},{"_id":"source/invite.html","hash":"edf0b36f717c3cd2c67e3028630a78991063155f","modified":1539973807984},{"_id":"source/jd_root.txt","hash":"5b4effd6a64bdc34f64b1144df315b050c9a0665","modified":1539973807984},{"_id":"source/wechat.JPG","hash":"d6f0d651600c79cce770291b665e497e1128d985","modified":1539973807984},{"_id":"source/结婚照.html","hash":"ff08ebfc322de6d840d9a3ee35e6890008f4be44","modified":1539973807984},{"_id":"themes/nextNew/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1539973807984},{"_id":"themes/nextNew/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1539973807985},{"_id":"themes/nextNew/.gitignore","hash":"eace06f5c0ab3910d0ceae05900bf4964fe6fed5","modified":1539973807985},{"_id":"themes/nextNew/.hound.yml","hash":"3f1ea7ceccd1d9cacb855a873838fc13590c0d05","modified":1539973807985},{"_id":"themes/nextNew/.javascript_ignore","hash":"fe77c57bc5cf33f5d8fa9549c560651ea2e1c9b2","modified":1539973807985},{"_id":"themes/nextNew/.jshintrc","hash":"12c5e37da3432bee2219ed1c667076d54f1639c0","modified":1539973807985},{"_id":"themes/nextNew/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1539973807985},{"_id":"themes/nextNew/README.md","hash":"0b709591995001cd860384d6c189e51d91690714","modified":1539973807985},{"_id":"themes/nextNew/_config.yml","hash":"3ac5b4429a1ea594a0ec8d48cbb3f999239c61a5","modified":1539973807985},{"_id":"themes/nextNew/bower.json","hash":"4a53cab758c7d69be2ce773b2afff7dd962b7cb0","modified":1539973807985},{"_id":"source/404/404.jpg","hash":"5f6ac0a5c50ea257ff6d25230c89944f25ff461f","modified":1539973807976},{"_id":"source/404/index.html","hash":"3cae8464990fd3269ec3160e927f459c2d3fe19b","modified":1539973807976},{"_id":"source/_posts/FormData.md","hash":"37f29956fa67ee0a58107a63828788f15a2791db","modified":1539973807976},{"_id":"source/_posts/Git-push-HTTP-request-failed-403-fatal问题解决.md","hash":"abed7d2058f96eb5d7a9b5a95993d122b1ff8998","modified":1539973807976},{"_id":"source/_posts/Intermediate-Algorithm-Scripting-2.md","hash":"b51a51b4df357822f294bad9ed3cbfe7da2ee41d","modified":1539973807976},{"_id":"source/_posts/Intermediate-Algorithm-Scripting.md","hash":"6db5859b0c5ce56c1c18d4ef22384a99411383d1","modified":1539973807976},{"_id":"source/_posts/ant-design的select组件onSelect事件简析.md","hash":"a31d80699bb2379c7bc84c9364f184dad7b0f52b","modified":1539973807976},{"_id":"source/_posts/aria2-transmission.md","hash":"7ce094c1409138f766162c3f6405405a2b01e083","modified":1539973807976},{"_id":"source/_posts/awk-calc.md","hash":"735185b3369120c7d5f5c57a626c911575eb4fa0","modified":1539973807976},{"_id":"source/_posts/aws-mongo-protect.md","hash":"8d62bf0c17f1992ddeefff5fef8da1a5e0816b0e","modified":1539973807976},{"_id":"source/_posts/beginning.md","hash":"d533169b0c3a2af465fb5d752e07932755e04d6a","modified":1539973807976},{"_id":"source/_posts/beian.md","hash":"5fb77336850690bc73d1d2ff4ae1f8dc19824bb0","modified":1539973807977},{"_id":"source/_posts/carousel.md","hash":"bec3c9d5fb1a7e78ef99640a5fc3977ba36995a4","modified":1539973807977},{"_id":"source/_posts/charles.md","hash":"4b0055dca1c947037502315d9ab09b2a36572215","modified":1539973807977},{"_id":"source/_posts/chrome-extension-learning.md","hash":"7f2d42b8e1cce72f99604761ff5c087c7bceb423","modified":1539973807977},{"_id":"source/_posts/css-learning.md","hash":"5b6bd384b9dd45bc82f639ec9e6ca37f9322dbd9","modified":1539973807977},{"_id":"source/_posts/csv-encoding-bom.md","hash":"398738c80a01653899ecebabac49b184af18dc08","modified":1539973807978},{"_id":"source/_posts/error-commit.md","hash":"431872da30c233cc9dbe6b370f36a4606937b6f2","modified":1539973807978},{"_id":"source/_posts/filewatchers.md","hash":"490fb2d6e8647caef837a5de69b81cf731d98028","modified":1539973807978},{"_id":"source/_posts/find-xargs-cp.md","hash":"55c401d0522ff5788511fbe2cbc7876b2e7cf245","modified":1539973807978},{"_id":"source/_posts/freecodecamp-Basic-Algorithm-Scripting.md","hash":"e213a88533e14a6b509aafae8741611e8119fb62","modified":1539973807978},{"_id":"source/_posts/gfw-squid-stunnel.md","hash":"b5a9aebf3dd6e73f1858ff087195ccd403ec51b1","modified":1539973807978},{"_id":"source/_posts/git-learning-1.md","hash":"2222c8779be193e0f136cae36096bf7d9a78167a","modified":1539973807978},{"_id":"source/_posts/git-learning-2.md","hash":"b41ff742a4ba88c43f39f45166d5c3da2af9650f","modified":1539973807978},{"_id":"source/_posts/git-learning-3.md","hash":"a2cb398fe91994a506c0276370b678662a42d8e5","modified":1539973807978},{"_id":"source/_posts/gitcafe-dns.md","hash":"ccb7448ce56c2bd19a0d9a95fda787d2c31b24ba","modified":1539973807978},{"_id":"source/_posts/gitpages-warning.md","hash":"1113095856958fe7a6e935b236c9bce10179c5eb","modified":1539973807978},{"_id":"source/_posts/gulp-learning.md","hash":"6dae1271c09b78f4264b5a1c15ae0eeb1e642429","modified":1539973807978},{"_id":"source/_posts/gulp-minify-blog.md","hash":"30dc3f1e13930c4fc37bcbd2206d2f52b0c0196a","modified":1539973807979},{"_id":"source/_posts/hello-world.md","hash":"6dcab621200237a3925a22bc77a9c30b7d013904","modified":1539973807979},{"_id":"source/_posts/hexo-visit-analytics-md.md","hash":"6e52668f3d793b61bc894a14e6be8d768b78fbbf","modified":1539973807979},{"_id":"source/_posts/html5-camera.md","hash":"1b7da9371a676687123fcbd859c5dec487861ce0","modified":1539973807979},{"_id":"source/_posts/idea-jvm.md","hash":"18f3d1c01eb8a23affa67c830ee5492adc8c579f","modified":1539973807979},{"_id":"source/_posts/idea-remote-debug.md","hash":"bb473e13fe9565781a02fef078ff5cb371c7408b","modified":1539973807979},{"_id":"source/_posts/interview-questions.md.bak","hash":"787f8f2ace41ece54eb59c0669d893d0d8388850","modified":1539973807979},{"_id":"source/_posts/invite.html","hash":"01b0b09fff8322176d8bee479385b94cefbde637","modified":1539973807979},{"_id":"source/_posts/iptables.md","hash":"9b3ed25adccdb8c9f915d7c409901288bb0696a1","modified":1539973807979},{"_id":"source/_posts/jenkins-autobuild.md","hash":"042e0f26cbbf2aca204d937f61e267f82e90564b","modified":1539973807979},{"_id":"source/_posts/js-big-number.md","hash":"95567d63e6910b2228d0c1c852124f67f8abf45d","modified":1539973807979},{"_id":"source/_posts/js-device.md","hash":"e5faac423085d9b814dcec24c1fac6b86fb01af2","modified":1539973807980},{"_id":"source/_posts/js-encode.md","hash":"732ab2ba104c21763a7201f5b2685fab3307640e","modified":1539973807980},{"_id":"source/_posts/js-for-in.md","hash":"a1b16c885eb864d063381c1d2f41536e1cd3d00d","modified":1539973807980},{"_id":"source/_posts/js-lib-share.md","hash":"6cea83375a43130bd66deb32ecdad3ba217e8cfa","modified":1539973807980},{"_id":"source/_posts/js-lib-share2.md","hash":"78c059946da98dacefeb993b1e95700c7e263e5e","modified":1539973807980},{"_id":"source/_posts/js-lib-share3.md","hash":"13638638993b8ebc26a29d9ec873b53450c61bb5","modified":1539973807980},{"_id":"source/_posts/js-max-number.md","hash":"569134c204b766096bdd2327a96446ba6c48c960","modified":1539973807980},{"_id":"source/_posts/kclr.md","hash":"d4bcb574772563f17b79da7a76f9d6879c525de3","modified":1539973807980},{"_id":"source/_posts/kcxl-2.md","hash":"8f35299e0e3f03c3c5dfc47e7cf779884e92431c","modified":1539973807980},{"_id":"source/_posts/kcxl-3.md","hash":"807884fe961c54783ecf668afdb3467868cadea1","modified":1539973807980},{"_id":"source/_posts/kcxl.md","hash":"17d3776b3b97e987bd3923e47a6130524ab7fa3f","modified":1539973807980},{"_id":"source/_posts/lazy-load.md","hash":"00343b13b27368ecfd4ca118727449b1402567ce","modified":1539973807981},{"_id":"source/_posts/linux-install-mysql.md","hash":"db344bd46b3774a22f6cac85671256da477f0f05","modified":1539973807981},{"_id":"source/_posts/local-weather.md","hash":"fd0131d58675e3d159f2ac949feed049bbc6f28f","modified":1539973807981},{"_id":"source/_posts/markdown-learning.md","hash":"29b1660ad530c3205159047bb4608c1ac7cd0a36","modified":1539973807981},{"_id":"source/_posts/maven-repo.md","hash":"76af40e85775d53883315b542b0fa566c5e49c9a","modified":1539973807981},{"_id":"source/_posts/message-restore.md","hash":"c5c25ee7924f94c4873bc5134a3f0e67f37e4863","modified":1539973807981},{"_id":"source/_posts/mongodb-back-restore.md","hash":"5a1e3f6c90571e1cca76178125a8b727f2eb9670","modified":1539973807981},{"_id":"source/_posts/mongoose-update-all.md","hash":"f5fcf0a0a17bfc39be80fed76ab0443de11f0b81","modified":1539973807981},{"_id":"source/_posts/myreading-2015.md","hash":"ac1eb7e9a831caed428a89d5be5e12327af9b32c","modified":1539973807981},{"_id":"source/_posts/myreading-2016.md","hash":"c16e9d11d341d8bbf1f6e79ad60bafeb1aa10cff","modified":1539973807981},{"_id":"source/_posts/myreading-2017.md","hash":"e1217a2513e57b184b8f7555a2c68904ecb6bc8e","modified":1539973807982},{"_id":"source/_posts/myreading-2018.md","hash":"2477a980a20c146ea2a9855068f3d9c4d9e4f313","modified":1539973807982},{"_id":"source/_posts/mysql-case-when.md","hash":"d9db00c8bb83f46061f59a4428cd5c7dc667ca00","modified":1539973807982},{"_id":"source/_posts/mysql-in-find_in_set.md","hash":"3604d077f4ba074c336be7705e5b84725ac5e3a2","modified":1539973807982},{"_id":"source/_posts/node-authority.md","hash":"a66019e40c39212707b1d9a1dcbb9429fcccfd61","modified":1539973807982},{"_id":"source/_posts/node-crypto.md","hash":"a0b45dbeded5d4b5b501fdfafe8626fcc3d5384b","modified":1539973807982},{"_id":"source/_posts/node-ssh-shell.md","hash":"558360bc9234316735bbfe7c4c3c3cea7d59f016","modified":1539973807982},{"_id":"source/_posts/raspberry-autoplay.md","hash":"a6e8169a5dc6ac8b02cfbd86dfade417b2a57970","modified":1539973807982},{"_id":"source/_posts/raspberry-init.md","hash":"049d76d976cc91c5baca712d4626c8d0ffee7bbf","modified":1539973807982},{"_id":"source/_posts/sendEmail.md","hash":"b3f9d21c03dc1a249a9572312f33cfc0f0d65f91","modified":1539973807982},{"_id":"source/_posts/shell-run-mysql.md","hash":"c5221a0a4344fdbfe9af26250f7331a84f4aa821","modified":1539973807982},{"_id":"source/_posts/summary17.md","hash":"2eb3dbab1bdd09f6017352324986ec752e839295","modified":1539973807982},{"_id":"source/_posts/translate_github_acquire.md","hash":"fd9c5ea9f55887b02011d1dfe7a890cea95ba6d5","modified":1539973807982},{"_id":"source/_posts/volatile.md","hash":"bf0a92085a20d94c78394ced8b2a4662e0777a02","modified":1539973807982},{"_id":"source/_posts/wedding.html","hash":"ff08ebfc322de6d840d9a3ee35e6890008f4be44","modified":1539973807983},{"_id":"source/_posts/write-comment.md","hash":"453d85b7f27dc04b6d3d7db20fac8468ea2b1abf","modified":1539973807983},{"_id":"source/_posts/write-comment2.md","hash":"934b45783c59c7750951e7915f511cf0cc98e01f","modified":1539973807983},{"_id":"source/_posts/write-comment3.md","hash":"a34a8373358e590a17dfe15935e1d3f8f9704f03","modified":1539973807983},{"_id":"source/_posts/write-comment4.md","hash":"d6e492d84df27e0c71e815bcab802031b5b6ebe2","modified":1539973807983},{"_id":"source/_posts/written-crawler.md","hash":"eeb67de74ef5594aa565816fc7a5e4da521960b7","modified":1539973807983},{"_id":"source/_posts/xz-decompress.md","hash":"369ea87fb93bc11bd6b3a8dbdfe8b88b7d1adcef","modified":1539973807983},{"_id":"source/_posts/zhihu-node.md","hash":"79b823a116b8079e4c890e075de257269b0b6f0d","modified":1539973807983},{"_id":"source/_posts/zhihu-writing.md","hash":"7595b33b0893a0730bc422584bb9479ca9f4c8d1","modified":1539973807983},{"_id":"source/about/index.md","hash":"9847c53fafe68137f92808bcf90beaef31c20e1e","modified":1539973807983},{"_id":"source/categories/index.md","hash":"163fc6d7edf81230deea02a0c82c17369c1d246a","modified":1539973807983},{"_id":"source/issue/index.md","hash":"249dc4ff7e422241509b11ed8aa918a463be5f16","modified":1539973807984},{"_id":"source/js/custom.js","hash":"f971a4aeea2820f29d5fb5b62e43a78e9420797f","modified":1539973807984},{"_id":"source/search/index.html","hash":"d4c5737e4b5a544e17d41f0cb9e23f90cd1c7be0","modified":1539973807984},{"_id":"source/tags/index.md","hash":"1d968ac2d1e256d1384bd77f451092b4d34f0c5d","modified":1539973807984},{"_id":"themes/nextNew/languages/de.yml","hash":"7a8de0e5665c52a1bf168c1e7dd222c8a74fb0ab","modified":1539973807985},{"_id":"themes/nextNew/languages/default.yml","hash":"f57623e47f533c8d53d859628fa6a368a5298a00","modified":1539973807985},{"_id":"themes/nextNew/languages/en.yml","hash":"f57623e47f533c8d53d859628fa6a368a5298a00","modified":1539973807985},{"_id":"themes/nextNew/languages/fr-FR.yml","hash":"2cec663601ac8d178e97aee91d967fa99a95ad4e","modified":1539973807985},{"_id":"themes/nextNew/languages/pt.yml","hash":"8e38fdf3a5232b428d2e4a641666dbabab87c3d1","modified":1539973807985},{"_id":"themes/nextNew/languages/ru.yml","hash":"1d1b158f9cff1b38978086043f299b3fc590e007","modified":1539973807985},{"_id":"themes/nextNew/languages/zh-Hans.yml","hash":"1e1235b67d62544557d44f4dd807ab3b2990c058","modified":1539973807985},{"_id":"themes/nextNew/languages/zh-hk.yml","hash":"248b88c825fde8e35839f3954d38df4e72a0537c","modified":1539973807985},{"_id":"themes/nextNew/languages/zh-tw.yml","hash":"42ba1d0c6b6026ba1e613ad11efb75432a8132ac","modified":1539973807985},{"_id":"themes/nextNew/layout/_layout.swig","hash":"015c24f7bb511a17d3ec2b6db725bd6ef50c74b1","modified":1539973807986},{"_id":"themes/nextNew/layout/archive.swig","hash":"0c3ce594759f347ea90a4ce592a7a18e2ae4cc5c","modified":1539973807989},{"_id":"themes/nextNew/layout/category.swig","hash":"d6b3e1dc5e0b8deade9a084c463126e70188ee9b","modified":1539973807989},{"_id":"themes/nextNew/layout/index.swig","hash":"4622e5f1a4423ace89c6bacdb9702bbf9a55456e","modified":1539973807989},{"_id":"themes/nextNew/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1539973807989},{"_id":"themes/nextNew/layout/post.swig","hash":"e00557127ef168a89f20edc523bfc5742c91f1d0","modified":1539973807989},{"_id":"themes/nextNew/layout/tag.swig","hash":"aab44af54fcbc66fea4ad12b2767ffca3eadd451","modified":1539973807989},{"_id":"themes/nextNew/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1539973807989},{"_id":"themes/nextNew/source/CNAME","hash":"8145b088f322daf1ef57edabc73dd27e6b820756","modified":1539973807989},{"_id":"themes/nextNew/source/robots.txt","hash":"7feff226a9ab21c7749d607fa77e6fba5856c2d7","modified":1539973807996},{"_id":"themes/nextNew/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1539973808014},{"_id":"themes/nextNew/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1539973808014},{"_id":"themes/nextNew/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1539973808014},{"_id":"themes/nextNew/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539973807993},{"_id":"themes/nextNew/layout/_macro/post-collapse.swig","hash":"8cc9929e1e8212fdb6f505bbc488c30c684429fb","modified":1539973807986},{"_id":"themes/nextNew/layout/_macro/post.swig","hash":"9db1a1cf2529011260bbb32c108616d1cea97416","modified":1540106519901},{"_id":"themes/nextNew/layout/_macro/sidebar.swig","hash":"39b05ae0af73936925c3452dacb460a21246e552","modified":1539973807986},{"_id":"themes/nextNew/layout/_partials/comments.swig","hash":"101ace13d15d47ed2a13b724bd648b2147604300","modified":1539973807986},{"_id":"themes/nextNew/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1539973807986},{"_id":"themes/nextNew/layout/_partials/footer.swig","hash":"0ab45a17c0bafab418456a316323d751f215cf5d","modified":1539973807986},{"_id":"themes/nextNew/layout/_partials/head.swig","hash":"e43f19c7fae6203c7f7ea1b10599d13d0f05c049","modified":1539973807986},{"_id":"themes/nextNew/layout/_partials/header.swig","hash":"38dbd8f96cddccc5a9110b61551f7f35825785a2","modified":1539973807986},{"_id":"themes/nextNew/layout/_partials/old-browsers.swig","hash":"edb2ebd61cb7c8ee0b7ebc9dd1cb4a68db741b91","modified":1539973807986},{"_id":"themes/nextNew/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1539973807986},{"_id":"themes/nextNew/layout/_partials/search.swig","hash":"37088a1f6ba43900c963181239162d5433210b97","modified":1539973807986},{"_id":"themes/nextNew/layout/_scripts/analytics.swig","hash":"33ca06b9bd9a15a19432d5396b85bd319f017319","modified":1539973807987},{"_id":"themes/nextNew/layout/_scripts/baidushare.swig","hash":"62e43b1314e7657a6cb938f9b2fea3a342370435","modified":1540106519905},{"_id":"themes/nextNew/layout/_scripts/bootstrap.scrollspy.swig","hash":"85295f126836b95f0837d03e58228bb3cf8c4490","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/fancy-box.swig","hash":"41b4ff1446060c88c33bf666a32277dcf12129f0","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/helpers.swig","hash":"4d2cbfca0aaf546a2b5813288073e824c1498fdf","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/mathjax.swig","hash":"7f72d9bd2d07835f4ac3075bb61d966057d4b662","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/motion.swig","hash":"0d9761e3b1bb9e666ccc71bad59f035deb5a88c6","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1539973807989},{"_id":"themes/nextNew/scripts/filters/sticky.js","hash":"6b1ea0c09105352813357d0fff4e1d3f4c821fa3","modified":1539973807989},{"_id":"themes/nextNew/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1539973807989},{"_id":"themes/nextNew/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1539973807989},{"_id":"themes/nextNew/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1539973807989},{"_id":"themes/nextNew/source/css/main.styl","hash":"56dacee56c5eaa4b2676d196452314fb50f758aa","modified":1539973807993},{"_id":"themes/nextNew/source/css/search.css","hash":"d78f123c2a15f28ad9ecd069d2962fb0c7b95b61","modified":1539973807993},{"_id":"themes/nextNew/source/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1539973807993},{"_id":"themes/nextNew/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1539973807994},{"_id":"themes/nextNew/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1539973807994},{"_id":"themes/nextNew/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1539973807994},{"_id":"themes/nextNew/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1539973807994},{"_id":"themes/nextNew/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1539973807994},{"_id":"themes/nextNew/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1539973807994},{"_id":"themes/nextNew/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1539973807994},{"_id":"themes/nextNew/source/images/default_avatar.jpg","hash":"6d4235b839250a2bc2c972668e7cb1178b903c69","modified":1539973807994},{"_id":"themes/nextNew/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539973807994},{"_id":"themes/nextNew/source/images/logo.png","hash":"f0dcbba74e583a6cc2ae3c63a8d00322a5aed0df","modified":1539973807994},{"_id":"themes/nextNew/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1539973807994},{"_id":"themes/nextNew/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1539973807994},{"_id":"themes/nextNew/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1539973807994},{"_id":"themes/nextNew/source/images/search.png","hash":"1a28aef8399bac23a443b0263bad24c9aeb1d083","modified":1539973807994},{"_id":"themes/nextNew/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1539973807995},{"_id":"themes/nextNew/source/images/zfb.png","hash":"80d680972e24608c9b8fd542210720a0c4410884","modified":1539973807995},{"_id":"themes/nextNew/source/js/bootstrap.js","hash":"f9b637b6d064f728d7dc2b6b5058a006a4454299","modified":1539973807995},{"_id":"themes/nextNew/source/js/bootstrap.scrollspy.js","hash":"ae7bdce88b515aade4eea8bf7407eec458bcd625","modified":1539973807995},{"_id":"themes/nextNew/source/js/fancy-box.js","hash":"b5fa638ed371b5f658b0826ec4afee25d9986ef2","modified":1539973807995},{"_id":"themes/nextNew/source/js/helpers.js","hash":"c15216ef897334362789ba37464298948b2eef95","modified":1539973807995},{"_id":"themes/nextNew/source/js/hook-duoshuo.js","hash":"ccb32e0a1acf798337c9697e1aab5484b52f9df4","modified":1539973807995},{"_id":"themes/nextNew/source/js/jiathis.js","hash":"26c827c23976973fe877f6e477a008c8a72f9d00","modified":1539973807995},{"_id":"themes/nextNew/source/js/motion.js","hash":"b4132517fe499538ad725094593fb7ead8c04bf7","modified":1539973807995},{"_id":"themes/nextNew/source/js/search.js","hash":"8b32ca118b705e3886d6c3f45290e4619dc5b835","modified":1539973807995},{"_id":"themes/nextNew/source/js/ua-parser.min.js","hash":"1148fa2bcb8b2e40c31e5f597bf794a57369a2e6","modified":1539973807995},{"_id":"themes/nextNew/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539973807992},{"_id":"themes/nextNew/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539973807992},{"_id":"themes/nextNew/source/css/_mixins/default.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539973807992},{"_id":"themes/nextNew/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539973807993},{"_id":"themes/nextNew/layout/_partials/search/baidu.swig","hash":"867eb834a91b50f04a4d474cd52276dc8fef6e3f","modified":1540107038726},{"_id":"themes/nextNew/layout/_partials/search/swiftype.swig","hash":"be7b5c5dbfcb62f51d3f425b57347fe99c0edd7d","modified":1539973807986},{"_id":"themes/nextNew/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1539973807987},{"_id":"themes/nextNew/layout/_partials/share/baidu_share.swig","hash":"c9035a9c1b0875a6ec11ef447cee5e97b31aa44d","modified":1539973807987},{"_id":"themes/nextNew/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1539973807987},{"_id":"themes/nextNew/layout/_partials/share/jiathis.swig","hash":"efee46057c9381a42fe75db5343d0226400682e8","modified":1539973807987},{"_id":"themes/nextNew/layout/_scripts/ads/ads.js","hash":"b311657a20879240c474d321fe0d1c4cb9eba0c4","modified":1539973807987},{"_id":"themes/nextNew/layout/_scripts/ads/az_recommend_books.swig","hash":"9f5c564510a3d480a9418bf0d3dd4fe9588a75ea","modified":1539973807987},{"_id":"themes/nextNew/layout/_scripts/ads/bottom-az-ads.swig","hash":"ab9011d144095d56273ffbbf7d27affa2607ded7","modified":1539973807987},{"_id":"themes/nextNew/layout/_scripts/ads/bottom-jd-ads.swig","hash":"4bae28fdaf1520bb3e9ada2a6e36db321755b536","modified":1539973807987},{"_id":"themes/nextNew/layout/_scripts/ads/googleads.swig","hash":"8d8c50a96b01736464ef9eb89a2511da603f12c5","modified":1539973807987},{"_id":"themes/nextNew/layout/_scripts/ads/jd_recommend_books.swig","hash":"7f396b6c2880c701306fdcaa871b41874334a715","modified":1539973807987},{"_id":"themes/nextNew/layout/_scripts/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/analytics/facebook-sdk.swig","hash":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/analytics/visit.swig","hash":"059c2cf7dc71f12bc70f187b87a5b38cfa70a36d","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/analytics/zhanzhang-analytics.swig","hash":"e9ce44e02f57588a9e60018fb2076d53e5cebfda","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/comments/changyan.swig","hash":"62b57e7ce645a13a44fc088f8f0f050201e53aa8","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/comments/comment.swig","hash":"5d628bab475dc66a3499e186d5674f6a403bf221","modified":1540106519907},{"_id":"themes/nextNew/layout/_scripts/comments/disqus.swig","hash":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/comments/duoshuo.swig","hash":"d686cd4e105d4be3dad19a4cb75bbfb7195483ad","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/pages/post-ads.swig","hash":"64133088e875c3c0604380f25f647ef667432716","modified":1539973807988},{"_id":"themes/nextNew/layout/_scripts/pages/post-details.swig","hash":"7a34b02808f144ee4a11032ae3a149eb634a7e82","modified":1539973807988},{"_id":"themes/nextNew/source/css/_custom/comment.styl","hash":"4ecf4a470e44d1139b260d4eb484f1e0c8c862a1","modified":1539973807992},{"_id":"themes/nextNew/source/css/_custom/custom.styl","hash":"7225ad262ddb679c9d717f173cf18a1698ba13f3","modified":1539973807992},{"_id":"themes/nextNew/source/css/_mixins/base.styl","hash":"4e49707c99c8bbcfa0a607dfdaff0fbb7dffd2a3","modified":1539973807992},{"_id":"themes/nextNew/source/css/_variables/Mist.styl","hash":"9f8791860cc1ca724d2dfe609e8cd6abc44d6926","modified":1539973807993},{"_id":"themes/nextNew/source/css/_variables/base.styl","hash":"f532d6b0f961a8f3867c06e132233286f110180d","modified":1539973807993},{"_id":"themes/nextNew/source/css/_variables/default.styl","hash":"8ec3307fe42d738b1bbda4b6419d0995f5560222","modified":1539973807993},{"_id":"themes/nextNew/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1539973808001},{"_id":"themes/nextNew/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1539973808002},{"_id":"themes/nextNew/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1539973808002},{"_id":"themes/nextNew/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1539973808002},{"_id":"themes/nextNew/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1539973808004},{"_id":"themes/nextNew/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1539973808004},{"_id":"themes/nextNew/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1539973808004},{"_id":"themes/nextNew/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1539973808004},{"_id":"themes/nextNew/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1539973808004},{"_id":"themes/nextNew/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1539973808010},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1539973808011},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1539973808011},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1539973808011},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1539973808011},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1539973808011},{"_id":"themes/nextNew/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1539973808011},{"_id":"themes/nextNew/source/vendors/notie/notie.min.css","hash":"733b7ccbb83d1a318c8e2b0af9c7d8a303ec5e48","modified":1539973808011},{"_id":"themes/nextNew/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1539973808012},{"_id":"themes/nextNew/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1539973808012},{"_id":"themes/nextNew/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1539973808014},{"_id":"themes/nextNew/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1539973808014},{"_id":"themes/nextNew/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1539973808014},{"_id":"themes/nextNew/source/css/_common/_page/home.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1539973807991},{"_id":"themes/nextNew/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1539973808011},{"_id":"themes/nextNew/source/css/_common/_component/back-to-top.styl","hash":"88cd66910260006aa8e9e795df4948d4b67bfa11","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/buttons.styl","hash":"81063e0979f04a0f9af37f321d7321dda9abf593","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/duoshuo.styl","hash":"2d2da815ab0981b219ea1973a4aedede48801411","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/group-pictures.styl","hash":"1ee40743000173495728855f734081eb2b6167cc","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/jiathis.styl","hash":"66b83202c709a6afeaf0175251e3ac6dd9b44414","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/posts-collapse.styl","hash":"6750b61236eb359028da8f2c4765f7c89b03dc9a","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/posts-expand.styl","hash":"9ff9ba8c449f68900442a89915c69d263f9b1a33","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/posts-type.styl","hash":"40b593134bf96d1d6095b3439d47820659d7f10b","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/posts.styl","hash":"abc635f5097865147fc3b0e2eeb67df510e1c632","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_component/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_core/base.styl","hash":"388aa7c69c97728c64941db01e0f29a88837120c","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_core/helpers.styl","hash":"d339d114e52a9abbc797ec236a8a770c29e288a6","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_core/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_core/scaffolding.styl","hash":"1f8acb3331300eec696a09e7859e11f191e16d7f","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_core/tables.styl","hash":"5f766cf26f966dbf9dcfe681f40ab9032e3e8a08","modified":1539973807990},{"_id":"themes/nextNew/source/css/_common/_fonts/icon-default.styl","hash":"8b809aef383bebaeb3f282b47675f3a364ce3569","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_fonts/icon-feather.styl","hash":"80413afacfa656322100ce1900fed1ebcd8f8f44","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_fonts/icon-fifty-shades.styl","hash":"249f75bafa26b99d272352c0646e7497ea680b39","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_fonts/icon-font.styl","hash":"ec3f86739bede393cafcd3e31052c01115ae20d6","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_fonts/icon-linecons.styl","hash":"9cdbedb3627ac941cfb063b152abe5a75c3c699a","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_page/archive.styl","hash":"dff879f55ca65fa79c07e9098719e53eeea7ac88","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_page/categories.styl","hash":"4f696a2eaeee2f214adcf273eab25c62a398077a","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_page/post-detail.styl","hash":"5b1bbc4fcac64aa3dc87c378c8080af4585e6627","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_section/body.styl","hash":"ca1a4766cbe25baac757c6b47a4858d221afdc40","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_section/footer.styl","hash":"c3b64a1d040c0e2ad5a657c9b617dd1a3dafc9f5","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_section/header.styl","hash":"a6aa8a56f9f645ae5a76a1034f79adf73b053aa0","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_section/layout.styl","hash":"06036251905613a9cfeef3d150121dd9466a1c5d","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_section/media.styl","hash":"fa9809d2ecc753cf32f70803c1d0821c405211f4","modified":1539973807991},{"_id":"themes/nextNew/source/css/_common/_section/sidebar.styl","hash":"bc106c3e759cd752c2b4c53ac27bc5ef5e3b18ea","modified":1539973807991},{"_id":"themes/nextNew/source/css/_schemes/Mist/_base.styl","hash":"d50c2a9ae363d26ed2e9bc226a9dc7abeb9ace1b","modified":1539973807992},{"_id":"themes/nextNew/source/css/_schemes/Mist/_header.styl","hash":"1631a430655eadb485574d1a9bedd49460988b11","modified":1539973807992},{"_id":"themes/nextNew/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1539973807992},{"_id":"themes/nextNew/source/css/_schemes/Mist/_menu.styl","hash":"5a8036fc61207ca0fe38c9782ed2f686fbf764be","modified":1539973807992},{"_id":"themes/nextNew/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1539973807992},{"_id":"themes/nextNew/source/css/_schemes/Mist/index.styl","hash":"fc7d96b897290dbd93bc8c515a2058fc4c374ea7","modified":1539973807992},{"_id":"themes/nextNew/source/css/_schemes/default/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1539973807993},{"_id":"themes/nextNew/source/css/_schemes/default/_menu.styl","hash":"4bba29cece65ffc5122f4e052063dea4439fe4ae","modified":1539973807993},{"_id":"themes/nextNew/source/css/_schemes/default/_search.styl","hash":"c524bccdc554349106d1c8be9c3f275d4c0d4281","modified":1539973807993},{"_id":"themes/nextNew/source/css/_schemes/default/index.styl","hash":"159464cb8a7e01e32db9ec70dec391ec70a72f9c","modified":1539973807993},{"_id":"themes/nextNew/source/vendors/bootstrap/css/bootstrap-theme.min.css","hash":"bcb96e31a2b8fed5575995fa0c58293e64972116","modified":1539973807996},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1539973807997},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1539973807998},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1539973807999},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1539973807999},{"_id":"themes/nextNew/source/vendors/bootstrap/js/bootstrap.min.js","hash":"791aa054a026bddc0de92bad6cf7a1c6e73713d5","modified":1539973807999},{"_id":"themes/nextNew/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1539973807999},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1539973808001},{"_id":"themes/nextNew/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1539973808001},{"_id":"themes/nextNew/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1539973808001},{"_id":"themes/nextNew/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1539973808002},{"_id":"themes/nextNew/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1539973808002},{"_id":"themes/nextNew/source/vendors/firebase/firebase.js","hash":"3369433c203ddd1b3b8768103155783b6f12083c","modified":1539973808003},{"_id":"themes/nextNew/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1539973808004},{"_id":"themes/nextNew/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1539973808004},{"_id":"themes/nextNew/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1539973808004},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1539973808010},{"_id":"themes/nextNew/source/vendors/bootstrap/css/bootstrap.min.css","hash":"8eb176c70b9cfa6871b76d6dc98fb526e7e9b3de","modified":1539973807997},{"_id":"themes/nextNew/source/vendors/bootstrap/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1539973807998},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1539973808005},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1539973808006},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1539973808010},{"_id":"themes/nextNew/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1539973808013},{"_id":"themes/nextNew/source/css/_common/_vendor/highlight/highlight.styl","hash":"6242be4307a3b3dafc14e556f51c8875c41a1ddd","modified":1539973807992},{"_id":"themes/nextNew/source/css/_common/_vendor/highlight/theme.styl","hash":"ae19721ceee5ba460e131cb2427dae3c1ff39d6f","modified":1539973807992},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1539973808000},{"_id":"themes/nextNew/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1539973808001},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1539973808010},{"_id":"themes/nextNew/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1539973808008},{"_id":"public/capture_demo.html","hash":"e02586a28430e07dd10f2afee54b112a69bce550","modified":1540107067584},{"_id":"public/js/custom.js","hash":"f971a4aeea2820f29d5fb5b62e43a78e9420797f","modified":1540107067586},{"_id":"public/rss2.xml","hash":"ffb66c18c1b24539c7a64583d3fc734afff8bc90","modified":1540107067868},{"_id":"public/sitemap.xml","hash":"89061614ea097c93b3463406b65376bd86f6da4b","modified":1540107067869},{"_id":"public/categories/index.html","hash":"9906795a1fbe377bc68c8cc715f19dd61b7b00b3","modified":1540107068012},{"_id":"public/archives/2015/08/index.html","hash":"ec3ac42cbcf3626811d5c2d23f14acc81c873cea","modified":1540107068013},{"_id":"public/archives/2015/09/index.html","hash":"612077a16c14f450aa7681ab716bc5805fe1cf0f","modified":1540107068013},{"_id":"public/archives/2016/01/index.html","hash":"7c54eb3dc9fa1b60447fc6b96fbf43f2c25234d3","modified":1540107068013},{"_id":"public/archives/2016/04/index.html","hash":"52832dbcf006e408b1e055767ec09bbf4e071877","modified":1540107068013},{"_id":"public/archives/2016/05/index.html","hash":"33a65b0f134e562b1611342b2ca43a78ac0fa551","modified":1540107068013},{"_id":"public/archives/2016/07/index.html","hash":"e75ed4cd28ead0752555197c9775382772484f3b","modified":1540107068013},{"_id":"public/archives/2016/09/index.html","hash":"acf990649a9d170e7bc4ee748d470dabe27e8ae9","modified":1540107068013},{"_id":"public/archives/2016/12/index.html","hash":"1df9d1aaf9418a62736c843708e1a7f74e01c9aa","modified":1540107068013},{"_id":"public/archives/2017/page/2/index.html","hash":"64a737221baaf0b6df8033f9b785ee3b51943a0b","modified":1540107068013},{"_id":"public/archives/2017/01/index.html","hash":"6fd08f9052a8a8a3178f35130e410490459c9ad3","modified":1540107068014},{"_id":"public/archives/2017/02/index.html","hash":"221ad6c510ce96bb89a2f63bd55635252c52321f","modified":1540107068014},{"_id":"public/archives/2017/03/index.html","hash":"c4306752c01991583e0806875638b6639dad52ac","modified":1540107068014},{"_id":"public/archives/2017/06/index.html","hash":"f37b3e526136ae1ff83eda68c45ba62f1a619626","modified":1540107068014},{"_id":"public/archives/2017/07/index.html","hash":"346b55cc64a1f6302f7ac71d2d7620c02236d487","modified":1540107068014},{"_id":"public/archives/2017/08/index.html","hash":"ed36cb8179cd3903ead41adc3be79733efbb328f","modified":1540107068014},{"_id":"public/archives/2017/10/index.html","hash":"758f13a8f9b8ee9c92a4bec7c868b945c9c465f7","modified":1540107068014},{"_id":"public/archives/2018/02/index.html","hash":"817feac5de3c2b151ae11c937ffb6a9dcb8f8031","modified":1540107068014},{"_id":"public/archives/2018/06/index.html","hash":"59a183470d6cc5a6e897243e440fcf1199d82a8d","modified":1540107068015},{"_id":"public/archives/2018/07/index.html","hash":"28e3f63007167c9bc59305fdf3b71d8d9c97d6f5","modified":1540107068015},{"_id":"public/categories/心情杂感/index.html","hash":"93957011eab20af370594ec81987289b4c6b203a","modified":1540107068015},{"_id":"public/categories/图片廊/index.html","hash":"b1efd17ab8c28da167eae060a1c8e279141be7b1","modified":1540107068015},{"_id":"public/categories/阅历/index.html","hash":"0ddcdcf8a6a2905b991a68603f648f4d460e4025","modified":1540107068016},{"_id":"public/tags/HTML5/index.html","hash":"70941e5c6dbdc8ddf5fac014980eafbf7948a95b","modified":1540107068016},{"_id":"public/tags/FormData/index.html","hash":"79d68e2f48c669147f137b798743357d3f6d1a52","modified":1540107068016},{"_id":"public/tags/上传文件/index.html","hash":"ee6ba8d00c0b1d0b0521268ce9fca1830249dc96","modified":1540107068016},{"_id":"public/tags/算法，字符串/index.html","hash":"e968f238421124ed03427bb15ab22b5f60d2c8a9","modified":1540107068016},{"_id":"public/tags/freecodecamp/index.html","hash":"9d004ede358bdf0959968fc52d6367f5c903325b","modified":1540107068016},{"_id":"public/tags/react/index.html","hash":"f4cab2415aa426221ae699f26efc91fb7427a415","modified":1540107068016},{"_id":"public/tags/ant-design/index.html","hash":"641f31e87f1ce3e40da02f4ce9d510d019a2ccd0","modified":1540107068016},{"_id":"public/tags/select/index.html","hash":"8e12c5a175da4b7e383c806e197c53d1b8dacadf","modified":1540107068016},{"_id":"public/tags/onSelect/index.html","hash":"4ce9e6df9915b9d6cf877ddadadf699abdd99aaa","modified":1540107068017},{"_id":"public/tags/aria2/index.html","hash":"d47a2817274ef3e403b3cc61f95a2242b1acdf01","modified":1540107068017},{"_id":"public/tags/transmission/index.html","hash":"3f6669415dbfc462b9e308640f8c7d6aaa19fe4c","modified":1540107068017},{"_id":"public/tags/树莓派/index.html","hash":"a66c64d646a916a1bc74c161b7d11ec82b9fffc9","modified":1540107068017},{"_id":"public/tags/awk/index.html","hash":"502ab3ea42d3e7c3cec998342f446f511f61a130","modified":1540107068017},{"_id":"public/tags/awk求和/index.html","hash":"c872d65f778f6ab1440f01bb0405cf8b0618d38b","modified":1540107068017},{"_id":"public/tags/awk-BEGIN/index.html","hash":"f9dac339f57fa36165609c3113d58f36eba0d4c2","modified":1540107068017},{"_id":"public/tags/awk-END/index.html","hash":"e9e8bf7be1a095d8ce65544f79fd46b6526655aa","modified":1540107068017},{"_id":"public/tags/aws/index.html","hash":"14a7092f5986e51b4b6056d07a248d09de8a593d","modified":1540107068017},{"_id":"public/tags/mongodb/index.html","hash":"a838ffdec76fe5d0d16c7a70ca6741921efd8cb6","modified":1540107068018},{"_id":"public/tags/备份/index.html","hash":"c675fa02840dc04ced869beb837229f94829b334","modified":1540107068018},{"_id":"public/tags/安全防护/index.html","hash":"1e5be22cba77bf1c5f64f46559443b069783d74a","modified":1540107068018},{"_id":"public/tags/开篇/index.html","hash":"8863f5f93df80ad5d0c88d9de957f9f6b50e492e","modified":1540107068018},{"_id":"public/tags/心情/index.html","hash":"c0005bceb920469dda74ace69f58c14138a80abe","modified":1540107068018},{"_id":"public/tags/备案/index.html","hash":"b78647b7ec54b0e69573c5954226e02c7d8d5001","modified":1540107068018},{"_id":"public/tags/轮播/index.html","hash":"9ee96390233884979b4eb2cafa18827542015e5b","modified":1540107068018},{"_id":"public/tags/js/index.html","hash":"2fb0bd4835a4f343c2291b8fb2e327f536bdfde7","modified":1540107068018},{"_id":"public/tags/组件化/index.html","hash":"bd2f136a0a03f3ec7d415347475daed10a8366a2","modified":1540107068019},{"_id":"public/tags/Charles/index.html","hash":"321c60db9f4b01693db5aa1fbb7692e3eed695fe","modified":1540107068019},{"_id":"public/tags/代理/index.html","hash":"d07d5653515564f42f6c1907124c4ea0888b47af","modified":1540107068019},{"_id":"public/tags/抓包/index.html","hash":"91991219ebd7050814f9901f47a01406a017d3ac","modified":1540107068019},{"_id":"public/tags/去广告/index.html","hash":"63d17b69d3947f5e94e1c99703c28b26099c2f51","modified":1540107068019},{"_id":"public/tags/Chrome插件/index.html","hash":"97dbc8958e912ff2c5f460580291ddf3e5dd70e7","modified":1540107068019},{"_id":"public/tags/CSS，转载/index.html","hash":"28c273301fc3ca60bee474b5869fb328f2241386","modified":1540107068019},{"_id":"public/tags/csv/index.html","hash":"9a14e01d6c45beff77b805c063baea0e9c2653e8","modified":1540107068019},{"_id":"public/tags/oss/index.html","hash":"fe16918f1d4196c606905b794976d3bbf1fb5a81","modified":1540107068020},{"_id":"public/tags/utf8/index.html","hash":"75f1e2f23a6257f527d89b419f79adae69b52a75","modified":1540107068020},{"_id":"public/tags/bom/index.html","hash":"534707a74b0c8af45f60a46a754d28042c4c638d","modified":1540107068020},{"_id":"public/tags/filewatchers/index.html","hash":"955441575b0ecebb4c7c116b58aeea0c904b7bf7","modified":1540107068020},{"_id":"public/tags/find/index.html","hash":"455d00e2d7a43b4c5fc4df0be286599b2e224c84","modified":1540107068020},{"_id":"public/tags/xargs/index.html","hash":"01377db295956f8dfbc86c62142682c9a3a237bb","modified":1540107068020},{"_id":"public/tags/cp/index.html","hash":"2003f881ffc16c73b894e4312dd6c3d39582984f","modified":1540107068020},{"_id":"public/tags/翻墙/index.html","hash":"5c68b5828f10ebf85291b545aecad1146362a4da","modified":1540107068020},{"_id":"public/tags/squid/index.html","hash":"b2ca5eb5dc0ff69ff204f43a545277d16d72491d","modified":1540107068020},{"_id":"public/tags/stunnel/index.html","hash":"c041c1a27acb384354f2f2c6892166d397387604","modified":1540107068021},{"_id":"public/tags/vpn代理/index.html","hash":"9c9c05c7af5c821c5beddb1e18c87cae1e07c69d","modified":1540107068021},{"_id":"public/tags/gitcafe-pages/index.html","hash":"eee7d87c4df18a66c5b648815bf192b7037162d1","modified":1540107068021},{"_id":"public/tags/gitcafe-dns/index.html","hash":"98a7893c511534bd97b175ad812701f54006206e","modified":1540107068021},{"_id":"public/tags/gitcafe-域名解析/index.html","hash":"57b45e41e9ea47666949039771fab83d3229c015","modified":1540107068021},{"_id":"public/tags/page-build-warning/index.html","hash":"c8229ab527befb1122d46da74cdaf912f51a700e","modified":1540107068021},{"_id":"public/tags/github/index.html","hash":"d02dde6d043168cb66a69391ad3d337ae70e9732","modified":1540107068022},{"_id":"public/tags/gitpages-warning/index.html","hash":"a7c2e980e49a0cdaf365090708918b0969833126","modified":1540107068022},{"_id":"public/tags/hexo/index.html","hash":"22ff57f6dae75863c0a795ae60f90ff1eee23580","modified":1540107068022},{"_id":"public/tags/dns/index.html","hash":"f71a7d0c0519d5f9bdb8e32f9f65a2412ee4c571","modified":1540107068022},{"_id":"public/tags/gulp/index.html","hash":"69e8e0c3943ca6e4b72680c67d0c170f5501e35f","modified":1540107068022},{"_id":"public/tags/代码压缩/index.html","hash":"888f04b8e913f642377cdfbc7397839accc8c397","modified":1540107068022},{"_id":"public/tags/minify/index.html","hash":"7b7b80025e1016d3540c7ba7d979712ffbcf1ecd","modified":1540107068023},{"_id":"public/tags/代码精简/index.html","hash":"777b810f50ee41445d101bbb8ed2126f596066d1","modified":1540107068023},{"_id":"public/tags/Hexo博客优化/index.html","hash":"785d721da70dea83548e19e8aab7422c377440c2","modified":1540107068023},{"_id":"public/tags/压缩/index.html","hash":"7c3cf15eeead03ebcf0c188c6d97673db6059d6b","modified":1540107068024},{"_id":"public/tags/访问统计/index.html","hash":"46a8f68a75223550f5d3d3688fe0d1038a92cfb8","modified":1540107068024},{"_id":"public/tags/阅读量，文章浏览统计/index.html","hash":"ada45d0fd070350c9ee0589878c700e37051c293","modified":1540107068024},{"_id":"public/tags/html5-摄像头/index.html","hash":"1ba9680d14e3319ce2d3aa6b8afd6714f1605ff7","modified":1540107068024},{"_id":"public/tags/idea/index.html","hash":"474e046bbe5306780bed1611de19094c37d1f1e6","modified":1540107068024},{"_id":"public/tags/jvm/index.html","hash":"34bc919538920ce6ed00083ed3cef6278e435e7d","modified":1540107068024},{"_id":"public/tags/远程调试/index.html","hash":"bc97f9828b5980c5bc77af2343409c6c8e56c1ba","modified":1540107068024},{"_id":"public/tags/请柬/index.html","hash":"9d49c6f9f3e5c372d956f4e57552285040f7cddc","modified":1540107068025},{"_id":"public/tags/iptables/index.html","hash":"52835466cac206e4690b77e1ceb9be00c7076fdd","modified":1540107068025},{"_id":"public/tags/端口转发/index.html","hash":"5fec72190685011f8912680b1acf1a2fb595a670","modified":1540107068025},{"_id":"public/tags/jenkins/index.html","hash":"4186c56503f70c10dc33b93138fc0e48fca44b31","modified":1540107068025},{"_id":"public/tags/java/index.html","hash":"ed0cd4415debfde1046832bbacac028c7af7a844","modified":1540107068025},{"_id":"public/tags/精度丢失/index.html","hash":"72e9974278604b7daa37d122880a4d3ca1323416","modified":1540107068025},{"_id":"public/tags/数值/index.html","hash":"63b19f531db96022e46c794a57528a91f0f75692","modified":1540107068025},{"_id":"public/tags/区分访问设备/index.html","hash":"e094118640a48e9f3b955cdbf69a21ffd60004bc","modified":1540107068025},{"_id":"public/tags/获取访问设备/index.html","hash":"ad1362f5987d5731c18d8da91b4c62a841835e70","modified":1540107068026},{"_id":"public/tags/encode/index.html","hash":"71e3364d14b8ecdd89fe177f5f255fa43aaded2a","modified":1540107068026},{"_id":"public/tags/for-in/index.html","hash":"90bf77daaa20b41c7745d3876122c6685aa9c193","modified":1540107068026},{"_id":"public/tags/JS库/index.html","hash":"44b2343b051777f3390c22b102c5fde71b46fdda","modified":1540107068026},{"_id":"public/tags/整型/index.html","hash":"e69f6bcc9ac08f29ee8c59bdbdd7ddc60938ff3a","modified":1540107068026},{"_id":"public/tags/养老/index.html","hash":"6ef01699628e34eb47f3a7dd0d355ce6cf6c772b","modified":1540107068026},{"_id":"public/tags/空巢老人/index.html","hash":"44efe5b27c00a4d3dd5c71f51ad6ceb30522bb3b","modified":1540107068026},{"_id":"public/tags/口才/index.html","hash":"c61aa38fb403a4e441a294f7af64448c8ed4fa9a","modified":1540107068026},{"_id":"public/tags/懒加载/index.html","hash":"01d3f88b83138f6bf48e27b3c4ac4ca247d6ffaf","modified":1540107068027},{"_id":"public/tags/延迟加载/index.html","hash":"eca984980a670ea71fcf08ce839cdc97f718ee88","modified":1540107068027},{"_id":"public/tags/jquery/index.html","hash":"7718c4ebcdf5b955a407f931706bae2a5dfad188","modified":1540107068027},{"_id":"public/tags/lazyload/index.html","hash":"3ec0224485424962272a78f41432a6596297164b","modified":1540107068027},{"_id":"public/tags/mysql/index.html","hash":"a826cb97699ecbf629ad6c605936c4e8f028c3c6","modified":1540107068027},{"_id":"public/tags/天气API/index.html","hash":"a9ec06f4945ca7ce9bbe78946521886eb629dab0","modified":1540107068027},{"_id":"public/tags/城市定位/index.html","hash":"a858b8f9467d7a375691842b4fe3e73d7adaa204","modified":1540107068028},{"_id":"public/tags/markdown/index.html","hash":"cb7350d267005db24f90cd2be8637b4e015b9b56","modified":1540107068028},{"_id":"public/tags/maven/index.html","hash":"611bae9dc3ba40bc5c74e13880d3a9f041cd3bca","modified":1540107068028},{"_id":"public/tags/锤子/index.html","hash":"15e8dbdcacf33b6704a6ed847784cd96fc6885c5","modified":1540107068028},{"_id":"public/tags/短信/index.html","hash":"2f8d6bee2c07dd05d6b88bb3b832202dedfad7e3","modified":1540107068028},{"_id":"public/tags/恢复/index.html","hash":"a6ff8be005187d42500fccda5db8ec73996737ef","modified":1540107068028},{"_id":"public/tags/mongoose/index.html","hash":"af933f8be543c062ff5861937ff81d0556559b97","modified":1540107068028},{"_id":"public/tags/update-all/index.html","hash":"030ec4bb32245813b1568cb81848e3e4b981ba66","modified":1540107068028},{"_id":"public/tags/阅读/index.html","hash":"c4b0d59588320480bd2fbd2e4e2dbf41b5e075db","modified":1540107068028},{"_id":"public/tags/case-when/index.html","hash":"076e8e5c2cf9accf8b8b5f6c21f7e6ecde5d9d90","modified":1540107068029},{"_id":"public/tags/in/index.html","hash":"db4340a412b4fa8de28f2945fe21fa0eff7e9c07","modified":1540107068029},{"_id":"public/tags/find-in-set/index.html","hash":"9821fcdc87132ae7fd4e02a966c5759e1644d1f3","modified":1540107068029},{"_id":"public/tags/nodejs/index.html","hash":"3c1b98588e842489d37cb358e4354056400a271e","modified":1540107068029},{"_id":"public/tags/session/index.html","hash":"9d05dcc46d727669b69216c708bd74163ff27ee0","modified":1540107068029},{"_id":"public/tags/cookie/index.html","hash":"cbc96802f6228c2a296d4ad67250696c942a5d34","modified":1540107068029},{"_id":"public/tags/登录验证/index.html","hash":"955935322bcc1371c350c943175b80b89babdd9c","modified":1540107068029},{"_id":"public/tags/crypto/index.html","hash":"e29279b5721f905946cd8a7c03372a7ad7296d6c","modified":1540107068030},{"_id":"public/tags/加密/index.html","hash":"392194724825a66f013744c85c0876199801c0da","modified":1540107068030},{"_id":"public/tags/解密/index.html","hash":"5e4199f21dc01d1294405d21f705035c2c828038","modified":1540107068030},{"_id":"public/tags/node/index.html","hash":"f5bd3f505a1c1cb28b8d2e4d54d9179d1af36e67","modified":1540107068030},{"_id":"public/tags/ssh/index.html","hash":"bb0755bd87abdc28b94282fac065fc4db6739505","modified":1540107068030},{"_id":"public/tags/shell/index.html","hash":"c433a0247e12992997cab586db49290bbf5e4b8f","modified":1540107068030},{"_id":"public/tags/远程执行/index.html","hash":"0b976ca30d0dbc92fcb00311f3097c39ff4a35f0","modified":1540107068030},{"_id":"public/tags/raspberry/index.html","hash":"1c4866904aac9f44ad9972879c99527804895d74","modified":1540107068031},{"_id":"public/tags/sendEmail/index.html","hash":"5b5759afff7cf273e1dbb3a7b3907fa77788dc20","modified":1540107068031},{"_id":"public/tags/发送邮件/index.html","hash":"c1f1bde92f7d1bdc19e47106d45b79611762d76f","modified":1540107068031},{"_id":"public/tags/中文乱码/index.html","hash":"c1531e032f073ff1608700d28ee8863456549495","modified":1540107068031},{"_id":"public/tags/年终总结/index.html","hash":"b017648c882eb8b2b833a7625554ca0f821f8662","modified":1540107068031},{"_id":"public/tags/开年寄语/index.html","hash":"f60791821ea61502069fbec4438885e9036d66ce","modified":1540107068031},{"_id":"public/tags/翻译/index.html","hash":"c6791529b411e342751802255fec4edbd98317e1","modified":1540107068031},{"_id":"public/tags/Java/index.html","hash":"728a36d945e8f0adc1e8b5683df0108d490ce266","modified":1540107068031},{"_id":"public/tags/volatile/index.html","hash":"2440c2f2f497fa5ff1618f9956860dde070a0cc9","modified":1540107068031},{"_id":"public/tags/结婚照/index.html","hash":"7986da3cdffede78c9e17765ba4c7ffb8810ba25","modified":1540107068032},{"_id":"public/tags/爬虫/index.html","hash":"d8523d651445873ae5d5eeb2e5450448f7912a5b","modified":1540107068032},{"_id":"public/tags/tumblr/index.html","hash":"7f1c45cef45ce443871868e0102d5c4a4dafb292","modified":1540107068032},{"_id":"public/tags/自己动手写爬虫/index.html","hash":"6e468b37b1db2c084472bc4e0ae41a996af0b089","modified":1540107068032},{"_id":"public/tags/xz/index.html","hash":"e30b8a6fd74b7da684ae7adbbd25b8d8aa0fa365","modified":1540107068032},{"_id":"public/tags/解压/index.html","hash":"df4dc6f75b315cacb1dc43a59f92b01adbe1ebf7","modified":1540107068033},{"_id":"public/tags/知乎/index.html","hash":"7ed89c36ace937b3895d5fbf24a1fa98d846d5e2","modified":1540107068033},{"_id":"public/tags/写作/index.html","hash":"a1ad27c42f71261b9dcd5020eae426f694559e9f","modified":1540107068034},{"_id":"public/invite.html","hash":"3eee3c4a55915e52a0592ebce5f9504f328cb3d3","modified":1540107068034},{"_id":"public/结婚照.html","hash":"8c1210e3a6291b11e1d771aaa8b8a45b5a676491","modified":1540107068034},{"_id":"public/404/index.html","hash":"965f8747574ce3927e91c17d2fcf4c00f0fc2c47","modified":1540107068034},{"_id":"public/about/index.html","hash":"3a250e9c078c07c5df9450dbf2514d7e94b2b097","modified":1540107068034},{"_id":"public/issue/index.html","hash":"838b0c584b67aa28d86e536589838dc65a8ae90e","modified":1540107068034},{"_id":"public/tags/index.html","hash":"ca83753307152b59dd40eeb639bc9d02cfe0cb06","modified":1540107068035},{"_id":"public/2018/07/01/js-lib-share3/index.html","hash":"ca7c22b78c31f6b118c5a9479e5748c9de2f0ccd","modified":1540107068035},{"_id":"public/2018/06/18/js-lib-share2/index.html","hash":"e9f2221a21b5d7afcb7e3ce37b883a3cb26f48a1","modified":1540107068035},{"_id":"public/2018/06/05/translate_github_acquire/index.html","hash":"01ad488e14625a9aa771ce44cc5bade7d2027956","modified":1540107068035},{"_id":"public/2018/06/03/mysql-in-find_in_set/index.html","hash":"dfcf3401e9649070090d36a02648832d9e6695cd","modified":1540107068035},{"_id":"public/2018/05/27/js-lib-share/index.html","hash":"4ec90823bf353352dabc9f9b61fffa8659a5cbc5","modified":1540107068035},{"_id":"public/2018/05/20/mysql-case-when/index.html","hash":"21f73a85b8830410b3ef1e3b0f1376b81c58a8eb","modified":1540107068036},{"_id":"public/2018/05/13/filewatchers/index.html","hash":"158e8e54fcfc21e595c8f1e6b8eac5cffcf1f065","modified":1540107068036},{"_id":"public/2018/05/06/write-comment4/index.html","hash":"57ea8dc5a1fb28f62ba0cb3c5637378f7b29843f","modified":1540107068036},{"_id":"public/2018/04/30/write-comment3/index.html","hash":"9ba9c0424e06e0c2e5692a7c66fbedabcf0e620b","modified":1540107068036},{"_id":"public/2018/04/22/write-comment2/index.html","hash":"22ecfe61a44ba6d87c5e6b4f061d51f045b2c0cd","modified":1540107068036},{"_id":"public/2018/04/15/write-comment/index.html","hash":"50bca235a2b298d985a1ec005ad8d259ace87361","modified":1540107068036},{"_id":"public/2018/04/08/kcxl-3/index.html","hash":"20809a4704021b57aab6944eba2efabec0cdf120","modified":1540107068037},{"_id":"public/2018/03/30/kcxl-2/index.html","hash":"cb4cec057dcc79a00079e4bc9c4f79a892de058a","modified":1540107068037},{"_id":"public/2018/03/24/kcxl/index.html","hash":"eba6bfffe88fa65c3a6a5f9afb83f8dbcf793efb","modified":1540107068037},{"_id":"public/2018/03/19/kclr/index.html","hash":"8a454a0022ca7d5e92c9abae3151f004943574db","modified":1540107068038},{"_id":"public/2018/03/11/charles/index.html","hash":"ecc1a0bd08efe69120071e17eb3785856a739473","modified":1540107068038},{"_id":"public/2018/03/09/myreading-2018/index.html","hash":"37501f0181443034135e0fe25204529da5cb0152","modified":1540107068039},{"_id":"public/2018/03/03/maven-repo/index.html","hash":"69a4e807e61a0e0112f243a1c7ce365928b984f3","modified":1540107068039},{"_id":"public/2018/02/22/summary17/index.html","hash":"0c207f0f059cb5d932e552bf1f3a192b55526783","modified":1540107068039},{"_id":"public/2017/10/11/csv-encoding-bom/index.html","hash":"1a67df1135f6392fdd12d26893bc6b5658c24293","modified":1540107068039},{"_id":"public/2017/08/26/volatile/index.html","hash":"f9a196f4c9a3e73ba7f8de44f8f9cf20f83f5064","modified":1540107068039},{"_id":"public/2017/07/31/raspberry-autoplay/index.html","hash":"ebf12628e8a0e33e348596afb47a119473d6c245","modified":1540107068039},{"_id":"public/2017/07/31/raspberry-init/index.html","hash":"8345d2628586bbc3967e0778ba03b8c28e4d5d70","modified":1540107068040},{"_id":"public/2017/07/05/js-big-number/index.html","hash":"22852b28f416e568143d71ae46d9b1ea5b4b648c","modified":1540107068040},{"_id":"public/2017/06/06/js-max-number/index.html","hash":"ad90d07198bf4feaf4841ee6ac978d506c722887","modified":1540107068040},{"_id":"public/2017/03/21/written-crawler/index.html","hash":"ffac9a30289991b51dd00f138563b12ccc807c77","modified":1540107068040},{"_id":"public/2017/03/14/shell-run-mysql/index.html","hash":"b07c37b90c482ef98254e6a3544ae9aa14af59b1","modified":1540107068041},{"_id":"public/2017/03/14/linux-install-mysql/index.html","hash":"a68c67ed102b9aed4f19ab3a82ea040b11ba092c","modified":1540107068041},{"_id":"public/2017/02/23/myreading-2017/index.html","hash":"d1786d1b29237e0b72e159ff24fc3acddead9e44","modified":1540107068041},{"_id":"public/2017/02/04/aws-mongo-protect/index.html","hash":"8a2d57abe3524b85ce97630b0e5ccabc4a4ce3b0","modified":1540107068042},{"_id":"public/2017/01/01/ant-design的select组件onSelect事件简析/index.html","hash":"69f8a8a463e8c6b352eb57b581a62a9d9bc6352f","modified":1540107068042},{"_id":"public/2016/12/22/error-commit/index.html","hash":"572dcb4cd5989bbd2e37fe1fcd924dbf0f2ce666","modified":1540107068042},{"_id":"public/2016/12/15/idea-remote-debug/index.html","hash":"6e94c8c34b9e0bcce07769e5b1c42b442515a8df","modified":1540107068042},{"_id":"public/2016/12/08/idea-jvm/index.html","hash":"c92f8d57bb66618295c8611e36468f4d1bce2ca6","modified":1540107068042},{"_id":"public/2016/09/14/carousel/index.html","hash":"7dca8304736e29f06255dc2a6a9dc43f0ea783cd","modified":1540107068043},{"_id":"public/2016/08/31/message-restore/index.html","hash":"2bbd4c4613e8732ec4aefb07b640bd2795953179","modified":1540107068043},{"_id":"public/2016/08/16/sendEmail/index.html","hash":"635dbbdda9309232830165d0080a95f278c82954","modified":1540107068043},{"_id":"public/2016/08/05/node-ssh-shell/index.html","hash":"27f7a98d95a596794c6f5fba2f1b4328e07e1c92","modified":1540107068043},{"_id":"public/2016/08/04/xz-decompress/index.html","hash":"841ccb1d7058c5be8cf214149c98b8a0a8c1371d","modified":1540107068044},{"_id":"public/2016/07/19/find-xargs-cp/index.html","hash":"b9010befda7edd69e07790ca7ff3cc491c4ed433","modified":1540107068044},{"_id":"public/2016/06/17/node-crypto/index.html","hash":"0c80948000eb16ba906a705e7b92ffe53810af2e","modified":1540107068044},{"_id":"public/2016/06/16/myreading-2016/index.html","hash":"fa40b5570241b89032dc8becf331e2bc9e7cb6de","modified":1540107068044},{"_id":"public/2016/06/08/node-authority/index.html","hash":"12a777c27c66f4322624e045999d2a9faf1512ab","modified":1540107068044},{"_id":"public/2016/06/08/mongodb-back-restore/index.html","hash":"83c95015dd7334780c30c71cf37f775b45cbc017","modified":1540107068044},{"_id":"public/2016/05/21/aria2-transmission/index.html","hash":"232a37c1a9d19b92befb37e406d6e8a673944a4f","modified":1540107068045},{"_id":"public/2016/04/12/hexo-visit-analytics-md/index.html","hash":"40fa3fe22c417c3027650b52f016aacc91c82319","modified":1540107068045},{"_id":"public/2016/03/23/Intermediate-Algorithm-Scripting-2/index.html","hash":"42bccb57927e9651cea3921b453ecaf1f8b34552","modified":1540107068045},{"_id":"public/2016/03/23/Intermediate-Algorithm-Scripting/index.html","hash":"2eaa3fbe2ebfbdbd4696f34a4da1fe087716f8b0","modified":1540107068045},{"_id":"public/2016/03/05/jenkins-autobuild/index.html","hash":"b78fa1c025d2123e36799840442cdbed3a50256e","modified":1540107068045},{"_id":"public/2016/03/04/css-learning/index.html","hash":"26380d2c7fcc62cc5c559de82959546e714f47bb","modified":1540107068046},{"_id":"public/2016/02/28/freecodecamp-Basic-Algorithm-Scripting/index.html","hash":"c6e28f0aa4f4cabcc646201dd1ec63527b499382","modified":1540107068046},{"_id":"public/2016/02/21/FormData/index.html","hash":"512000fef042a53f49ae2cc732541e5e8a774d8e","modified":1540107068046},{"_id":"public/2016/02/19/gulp-minify-blog/index.html","hash":"cdc6d8c77c9e531805693a76b00729e7ad35f111","modified":1540107068046},{"_id":"public/2016/02/19/gulp-learning/index.html","hash":"fea2ef4bbf2daa33f6139025687e53e9507deb18","modified":1540107068046},{"_id":"public/2016/01/28/lazy-load/index.html","hash":"cf6a56deb42e2efa00cd061529f70c7a81697c29","modified":1540107068047},{"_id":"public/2016/01/08/beian/index.html","hash":"bd07874c53a2abd379859fe186afc1987143573a","modified":1540107068047},{"_id":"public/2015/12/28/myreading-2015/index.html","hash":"14109ddd533b3aa0645787e2f12d17478c912046","modified":1540107068047},{"_id":"public/2015/12/24/local-weather/index.html","hash":"9782bb7fbef6e0b4940847d86dd08a6590d96b63","modified":1540107068047},{"_id":"public/2015/12/21/mongoose-update-all/index.html","hash":"5a3fb527f3515fb6d9492ffa6015420960345d88","modified":1540107068047},{"_id":"public/2015/12/17/gitcafe-dns/index.html","hash":"1ddca227bc5c9e59abf9c7dcb979fbbccbe30e74","modified":1540107068047},{"_id":"public/2015/12/14/awk-calc/index.html","hash":"aa23e39a359d30a0c9333961f0a566ec19a37d37","modified":1540107068048},{"_id":"public/2015/12/11/gitpages-warning/index.html","hash":"dc81f17d7e0c096f88984a2da8bf1b349b66ee73","modified":1540107068048},{"_id":"public/2015/12/10/js-device/index.html","hash":"c9415e6e973ffeda20fcac506879704ff271b38b","modified":1540107068048},{"_id":"public/2015/12/09/wedding/index.html","hash":"fa736977d17aafe2fdc7fa1f525cca12ab301f47","modified":1540107068048},{"_id":"public/2015/12/01/invite/index.html","hash":"7e5049589c7822f19c7cc689b986e84abff2ca7f","modified":1540107068048},{"_id":"public/2015/09/15/chrome-extension-learning/index.html","hash":"80bb3f98256d2aa9e652fe8f7cd746606637ca9b","modified":1540107068049},{"_id":"public/2015/08/20/html5-camera/index.html","hash":"958ea54e096c5ec3a8627126a666ad93e36782e9","modified":1540107068049},{"_id":"public/2015/08/03/js-encode/index.html","hash":"250b00f8a2b9a6bcdb9c7b44ee6c226a47dec17e","modified":1540107068049},{"_id":"public/2015/07/24/git-learning-3/index.html","hash":"d32f5e23489e5df9fd03ebd5c693fcb8cfd22fdf","modified":1540107068049},{"_id":"public/2015/07/17/gfw-squid-stunnel/index.html","hash":"bf4cf86c1ed454cfca97b4a4d187628205ca74c1","modified":1540107068049},{"_id":"public/2015/07/14/iptables/index.html","hash":"c2e4503bf4371e21fe207d39c3d3a24b939df80e","modified":1540107068049},{"_id":"public/2015/07/13/js-for-in/index.html","hash":"97fcd1bdf8673423b033354b3bd5884270d1ded9","modified":1540107068050},{"_id":"public/2015/07/10/git-learning-2/index.html","hash":"ec1885b2406d247e4c1143ae2557f2d99c5e3a5f","modified":1540107068050},{"_id":"public/2015/07/07/git-learning-1/index.html","hash":"52db30d7e415f48b5f019eca813b7f7749059b86","modified":1540107068050},{"_id":"public/2015/07/03/zhihu-node/index.html","hash":"1c6d1aba055e3751a948699af0deadfafd026d93","modified":1540107068050},{"_id":"public/2015/07/02/zhihu-writing/index.html","hash":"5ffc3b3b8c662fb4fab7a97fd3ea233c677fae1d","modified":1540107068053},{"_id":"public/2015/06/30/Git-push-HTTP-request-failed-403-fatal问题解决/index.html","hash":"aa8d1c29935504a8e995a86868c36977c570087a","modified":1540107068053},{"_id":"public/2015/06/29/markdown-learning/index.html","hash":"30d42629d23f4112c829edd4d2ed23f054c25abc","modified":1540107068053},{"_id":"public/2015/06/26/beginning/index.html","hash":"16ba2a565be7501ac6780216114b4dedbd246148","modified":1540107068053},{"_id":"public/2015/06/25/hello-world/index.html","hash":"601642c11584557340ae816820ada0b6c23a4c66","modified":1540107068053},{"_id":"public/archives/index.html","hash":"8e568684f8790da973d537101dd21031537e2004","modified":1540107068053},{"_id":"public/archives/page/2/index.html","hash":"b118498585a121463e4d41d917673ae0492def34","modified":1540107068053},{"_id":"public/archives/page/3/index.html","hash":"777a88855538309f295dae30e08cee676aa71311","modified":1540107068054},{"_id":"public/archives/page/4/index.html","hash":"68562c766dd3bc9bde678c5a4eb9ca21ab318bfe","modified":1540107068054},{"_id":"public/archives/page/5/index.html","hash":"8f3afa05ba54f63f3834fc662f7506aec5f8929b","modified":1540107068054},{"_id":"public/archives/page/6/index.html","hash":"e3c36ddab2c15896374f36389e97958b777bec04","modified":1540107068054},{"_id":"public/archives/page/7/index.html","hash":"cadca58d2d694b517100cc87d1503de4a728453d","modified":1540107068054},{"_id":"public/archives/page/8/index.html","hash":"142136f313546549e8e3f8355edda118a425cf82","modified":1540107068054},{"_id":"public/archives/2015/index.html","hash":"d2ff74c279287c4a078fd505217887aca1857f2c","modified":1540107068054},{"_id":"public/archives/2015/page/2/index.html","hash":"a9a2829b6ac79c52b830b31bcccbba7c717b346f","modified":1540107068055},{"_id":"public/archives/2015/page/3/index.html","hash":"2a0c2a57405629d00e432655ccdc8b5e67088340","modified":1540107068055},{"_id":"public/archives/2015/06/index.html","hash":"3d23e519e172d53402278c7e3a936dbdeb921c19","modified":1540107068055},{"_id":"public/archives/2015/07/index.html","hash":"1046b22e9177665f106bc8d52e71ca7f7f93f95e","modified":1540107068055},{"_id":"public/archives/2015/12/index.html","hash":"13389c10c451dae6a63f704527a411ba2c702981","modified":1540107068055},{"_id":"public/archives/2016/index.html","hash":"7cf8ddb744ab353dc60097ad6a09ded93cbb93fd","modified":1540107068055},{"_id":"public/archives/2016/page/2/index.html","hash":"f2632b5ac3b4e79285efbac02851160190e85166","modified":1540107068055},{"_id":"public/archives/2016/page/3/index.html","hash":"0b82b8d5e801251f0ec32c59ae2563b15e4c21f3","modified":1540107068055},{"_id":"public/archives/2016/02/index.html","hash":"3f4bb4cd54c193f3949906cfe2d15c5713ec7d5d","modified":1540107068055},{"_id":"public/archives/2016/03/index.html","hash":"d11bf1b0c59b7baa0a7d8dbaf2119745bcf55131","modified":1540107068056},{"_id":"public/archives/2016/06/index.html","hash":"d6b3d68804ba45e4b96b92cf633fbca5aa4a0f23","modified":1540107068056},{"_id":"public/archives/2016/08/index.html","hash":"23344b3dd9cd8e9dc2df7afb1b11e771e3d87c7a","modified":1540107068056},{"_id":"public/archives/2017/index.html","hash":"a037d42c06a51cb3bd0aaaa1481da31ecf4f31a1","modified":1540107068056},{"_id":"public/archives/2018/index.html","hash":"fdb8fba23187ba980c7cc39457e4460deb446288","modified":1540107068056},{"_id":"public/archives/2018/page/2/index.html","hash":"22e1554bc419c41358f77ec19782405ccedb2d2f","modified":1540107068056},{"_id":"public/archives/2018/03/index.html","hash":"59ba630dea055842e67a0ce85baf774e53236d5c","modified":1540107068056},{"_id":"public/archives/2018/04/index.html","hash":"a15c1bb0bca48cddd60d674116b7fffdd5b1fc95","modified":1540107068057},{"_id":"public/archives/2018/05/index.html","hash":"b59f67fbf24680176c09c05b82411dfdbd551067","modified":1540107068057},{"_id":"public/categories/技术人生/index.html","hash":"5033a2acdb38ca0d9ba854813a9f0ded17359c1c","modified":1540107068057},{"_id":"public/categories/技术人生/page/2/index.html","hash":"ed6e7c43d0ab6199f05f2e8473ab80eef0b82375","modified":1540107068057},{"_id":"public/categories/技术人生/page/3/index.html","hash":"49c1b565f816d308281da4bc6bef0ceb9df6fe01","modified":1540107068057},{"_id":"public/categories/技术人生/page/4/index.html","hash":"451f3cfc881b0ab8ad3568490d1841478cce2ae8","modified":1540107068057},{"_id":"public/categories/技术人生/page/5/index.html","hash":"325d635028fddc8f97839219cea53f81c0bceecc","modified":1540107068057},{"_id":"public/categories/技术人生/page/6/index.html","hash":"4d5647222cd1fe501649c52b0ae4585f4375d5cc","modified":1540107068058},{"_id":"public/categories/技术人生/page/7/index.html","hash":"819c7cbef078cebe03ca3d9013fc60ae536301e2","modified":1540107068058},{"_id":"public/categories/文摘采撷/index.html","hash":"f0321113c18fa6d26992646eb9e69fc3da469405","modified":1540107068058},{"_id":"public/index.html","hash":"2f130e563998d04ec0c6634369bd24a0cf1dd4e3","modified":1540107068058},{"_id":"public/page/2/index.html","hash":"d2b9fdc098d6e4e9447ecb198346782e5b168b62","modified":1540107068058},{"_id":"public/page/3/index.html","hash":"2353a80be1d3529cd56ec1cc05a6c12dcba2f68d","modified":1540107068058},{"_id":"public/page/4/index.html","hash":"2012370f482da542b84b2970dccb1d5421c58978","modified":1540107068060},{"_id":"public/page/5/index.html","hash":"c42a7d20d9bbe8e1c5a116dfcab79ad4edaa837d","modified":1540107068060},{"_id":"public/page/6/index.html","hash":"e80bf101649d203dfab50e574a1c19df03237630","modified":1540107068060},{"_id":"public/page/7/index.html","hash":"e6b9333e49bd01ecf4d93208a2819d43ca0215a7","modified":1540107068060},{"_id":"public/page/8/index.html","hash":"a18cab80c451c9d9e938c35bd141193159a3d6c0","modified":1540107068061},{"_id":"public/tags/git/index.html","hash":"669bb4d1a2084ab257db809c6f30bb26b4168c5b","modified":1540107068061},{"_id":"public/tags/javascript/index.html","hash":"4ab33d2b50a3c7f3e823b0e7e337dcfbdfff1c8d","modified":1540107068061},{"_id":"public/tags/留言板/index.html","hash":"e7b6838024d45ad70fa7280d3ac998952e0391cf","modified":1540107068061},{"_id":"public/tags/评论/index.html","hash":"46df2467013643cee047716faac7408a2ddd0671","modified":1540107068061},{"_id":"public/favicon.ico","hash":"7f383b3d26dc99997f6eb3abdb5b83ba65246e95","modified":1540107068090},{"_id":"public/jd_root.txt","hash":"5b4effd6a64bdc34f64b1144df315b050c9a0665","modified":1540107068090},{"_id":"public/wechat.JPG","hash":"d6f0d651600c79cce770291b665e497e1128d985","modified":1540107068090},{"_id":"public/404/404.jpg","hash":"5f6ac0a5c50ea257ff6d25230c89944f25ff461f","modified":1540107068090},{"_id":"public/search/index.html","hash":"d4c5737e4b5a544e17d41f0cb9e23f90cd1c7be0","modified":1540107068090},{"_id":"public/CNAME","hash":"8145b088f322daf1ef57edabc73dd27e6b820756","modified":1540107068090},{"_id":"public/robots.txt","hash":"7feff226a9ab21c7749d607fa77e6fba5856c2d7","modified":1540107068090},{"_id":"public/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1540107068091},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1540107068091},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1540107068091},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1540107068091},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1540107068091},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1540107068091},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1540107068091},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1540107068091},{"_id":"public/images/default_avatar.jpg","hash":"6d4235b839250a2bc2c972668e7cb1178b903c69","modified":1540107068091},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1540107068091},{"_id":"public/images/logo.png","hash":"f0dcbba74e583a6cc2ae3c63a8d00322a5aed0df","modified":1540107068092},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1540107068092},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1540107068092},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1540107068092},{"_id":"public/images/search.png","hash":"1a28aef8399bac23a443b0263bad24c9aeb1d083","modified":1540107068092},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1540107068092},{"_id":"public/images/zfb.png","hash":"80d680972e24608c9b8fd542210720a0c4410884","modified":1540107068092},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1540107068092},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1540107068092},{"_id":"public/vendors/bootstrap/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1540107068093},{"_id":"public/vendors/bootstrap/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1540107068093},{"_id":"public/vendors/bootstrap/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1540107068093},{"_id":"public/vendors/bootstrap/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1540107068093},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1540107068093},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1540107068093},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1540107068093},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1540107068093},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1540107068093},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1540107068093},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1540107068094},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1540107068094},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1540107068094},{"_id":"public/vendors/bootstrap/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1540107068790},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1540107068803},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1540107068805},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1540107068805},{"_id":"public/css/search.css","hash":"d78f123c2a15f28ad9ecd069d2962fb0c7b95b61","modified":1540107068831},{"_id":"public/js/bootstrap.js","hash":"f9b637b6d064f728d7dc2b6b5058a006a4454299","modified":1540107068831},{"_id":"public/js/bootstrap.scrollspy.js","hash":"ae7bdce88b515aade4eea8bf7407eec458bcd625","modified":1540107068831},{"_id":"public/js/fancy-box.js","hash":"b5fa638ed371b5f658b0826ec4afee25d9986ef2","modified":1540107068831},{"_id":"public/js/helpers.js","hash":"c15216ef897334362789ba37464298948b2eef95","modified":1540107068831},{"_id":"public/js/hook-duoshuo.js","hash":"eedaf52377991728f1e3e94f2bc4bf23ec41ecea","modified":1540107068831},{"_id":"public/js/motion.js","hash":"b4132517fe499538ad725094593fb7ead8c04bf7","modified":1540107068832},{"_id":"public/js/search.js","hash":"8b32ca118b705e3886d6c3f45290e4619dc5b835","modified":1540107068832},{"_id":"public/js/ua-parser.min.js","hash":"1148fa2bcb8b2e40c31e5f597bf794a57369a2e6","modified":1540107068832},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1540107068832},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1540107068832},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1540107068832},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1540107068832},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1540107068832},{"_id":"public/vendors/notie/notie.min.css","hash":"733b7ccbb83d1a318c8e2b0af9c7d8a303ec5e48","modified":1540107068832},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1540107068832},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1540107068833},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1540107068833},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1540107068833},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1540107068833},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1540107068833},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1540107068833},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1540107068833},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1540107068834},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1540107068834},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1540107068834},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1540107068834},{"_id":"public/css/main.css","hash":"cf78a005cafb27a3aa079b23fa449765f3ef8bda","modified":1540107068834},{"_id":"public/js/jiathis.js","hash":"26c827c23976973fe877f6e477a008c8a72f9d00","modified":1540107068834},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1540107068834},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1540107068834},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1540107068835},{"_id":"public/vendors/bootstrap/css/bootstrap-theme.min.css","hash":"bcb96e31a2b8fed5575995fa0c58293e64972116","modified":1540107068835},{"_id":"public/vendors/bootstrap/js/bootstrap.min.js","hash":"791aa054a026bddc0de92bad6cf7a1c6e73713d5","modified":1540107068835},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1540107068835},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1540107068835},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1540107068835},{"_id":"public/vendors/firebase/firebase.js","hash":"3369433c203ddd1b3b8768103155783b6f12083c","modified":1540107068835},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1540107068836},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1540107068836},{"_id":"public/vendors/bootstrap/css/bootstrap.min.css","hash":"8eb176c70b9cfa6871b76d6dc98fb526e7e9b3de","modified":1540107068836},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1540107068836},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1540107068837},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1540107068959}],"Category":[{"name":"技术人生","_id":"cjnijyzsc0007fnpv2ml1spa2"},{"name":"心情杂感","_id":"cjnijyztb000vfnpvaegrtluy"},{"name":"图片廊","_id":"cjnijyzv60030fnpvt53yyx46"},{"name":"文摘采撷","_id":"cjnijyzvy0040fnpv4mme0xp2"},{"name":"阅历","_id":"cjnijyzww004xfnpvw116wd49"}],"Data":[],"Page":[{"layout":"false","_content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta author=\"jihong.zjh\">\n\t<title>HTML5控制摄像头</title>\n</head>\n<body>\n\t<video id=\"video\" autoplay>\n\t</video>\n\t<button id=\"snap\">拍摄</button>\n\t<canvas id=\"canvas\" style=\"border:2px solid #000099\" width=\"640\" height=\"480\">\n\t\tno canvas availabel\n\t</canvas>\n</body>\n<script type=\"text/javascript\">\n\tvar canvas = document.getElementById(\"canvas\"),\n\t\tcontext = canvas.getContext(\"2d\"),\n\t\tvideo = document.getElementById(\"video\"),\n\t\tvideoObj = {\"video\":true};\n\tvar errcb = function(e){\n\t\tconsole.log(\"error:\",e);\n\t}\n\tif(navigator.getUserMedia){\n\t\tnavigator.getUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = stream;\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}else if(navigator.webkitGetUserMedia){\n\t\tnavigator.webkitGetUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = window.webkitURL.createObjectURL(stream);\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}else if(navigator.mozGetUserMedia){\n\t\tnavigator.mozGetUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = window.URL.createObjectURL(stream);\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}\n\tdocument.getElementById(\"snap\").addEventListener(\"click\",function(){\n\t\tcontext.drawImage(video,0,0,640,480);\n\t})\n</script>\n</html>\n","source":"capture_demo.html","raw":"layout: false\n--------\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<meta author=\"jihong.zjh\">\n\t<title>HTML5控制摄像头</title>\n</head>\n<body>\n\t<video id=\"video\" autoplay>\n\t</video>\n\t<button id=\"snap\">拍摄</button>\n\t<canvas id=\"canvas\" style=\"border:2px solid #000099\" width=\"640\" height=\"480\">\n\t\tno canvas availabel\n\t</canvas>\n</body>\n<script type=\"text/javascript\">\n\tvar canvas = document.getElementById(\"canvas\"),\n\t\tcontext = canvas.getContext(\"2d\"),\n\t\tvideo = document.getElementById(\"video\"),\n\t\tvideoObj = {\"video\":true};\n\tvar errcb = function(e){\n\t\tconsole.log(\"error:\",e);\n\t}\n\tif(navigator.getUserMedia){\n\t\tnavigator.getUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = stream;\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}else if(navigator.webkitGetUserMedia){\n\t\tnavigator.webkitGetUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = window.webkitURL.createObjectURL(stream);\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}else if(navigator.mozGetUserMedia){\n\t\tnavigator.mozGetUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = window.URL.createObjectURL(stream);\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}\n\tdocument.getElementById(\"snap\").addEventListener(\"click\",function(){\n\t\tcontext.drawImage(video,0,0,640,480);\n\t})\n</script>\n</html>\n","date":"2018-10-19T18:30:07.983Z","updated":"2018-10-19T18:30:07.983Z","path":"capture_demo.html","title":"","comments":1,"_id":"cjnijyzjj0000fnpvno1klfp0","content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta charset=\"UTF-8\">\n\t<meta author=\"jihong.zjh\">\n\t<title>HTML5控制摄像头</title>\n</head>\n<body>\n\t<video id=\"video\" autoplay>\n\t</video>\n\t<button id=\"snap\">拍摄</button>\n\t<canvas id=\"canvas\" style=\"border:2px solid #000099\" width=\"640\" height=\"480\">\n\t\tno canvas availabel\n\t</canvas>\n</body>\n<script type=\"text/javascript\">\n\tvar canvas = document.getElementById(\"canvas\"),\n\t\tcontext = canvas.getContext(\"2d\"),\n\t\tvideo = document.getElementById(\"video\"),\n\t\tvideoObj = {\"video\":true};\n\tvar errcb = function(e){\n\t\tconsole.log(\"error:\",e);\n\t}\n\tif(navigator.getUserMedia){\n\t\tnavigator.getUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = stream;\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}else if(navigator.webkitGetUserMedia){\n\t\tnavigator.webkitGetUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = window.webkitURL.createObjectURL(stream);\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}else if(navigator.mozGetUserMedia){\n\t\tnavigator.mozGetUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = window.URL.createObjectURL(stream);\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}\n\tdocument.getElementById(\"snap\").addEventListener(\"click\",function(){\n\t\tcontext.drawImage(video,0,0,640,480);\n\t})\n</script>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"en\">\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta charset=\"UTF-8\">\n\t<meta author=\"jihong.zjh\">\n\t<title>HTML5控制摄像头</title>\n</head>\n<body>\n\t<video id=\"video\" autoplay>\n\t</video>\n\t<button id=\"snap\">拍摄</button>\n\t<canvas id=\"canvas\" style=\"border:2px solid #000099\" width=\"640\" height=\"480\">\n\t\tno canvas availabel\n\t</canvas>\n</body>\n<script type=\"text/javascript\">\n\tvar canvas = document.getElementById(\"canvas\"),\n\t\tcontext = canvas.getContext(\"2d\"),\n\t\tvideo = document.getElementById(\"video\"),\n\t\tvideoObj = {\"video\":true};\n\tvar errcb = function(e){\n\t\tconsole.log(\"error:\",e);\n\t}\n\tif(navigator.getUserMedia){\n\t\tnavigator.getUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = stream;\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}else if(navigator.webkitGetUserMedia){\n\t\tnavigator.webkitGetUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = window.webkitURL.createObjectURL(stream);\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}else if(navigator.mozGetUserMedia){\n\t\tnavigator.mozGetUserMedia(videoObj,function(stream){\n\t\t\tvideo.src = window.URL.createObjectURL(stream);\n\t\t\tvideo.play();\n\t\t},errcb);\n\t}\n\tdocument.getElementById(\"snap\").addEventListener(\"click\",function(){\n\t\tcontext.drawImage(video,0,0,640,480);\n\t})\n</script>\n</html>\n"},{"title":"Welcome to our wedding!","categories":"图片廊","date":"2018-10-19T18:30:07.984Z","tags":"请柬","show":false,"_content":"<html>\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n\t<title>Welcome to our wedding!</title>\n\t<style type=\"text/css\">\n\t\tbody, html{\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin:0;\n\t\t\tfont-family:\"微软雅黑\";\n\t\t}\n\t\t#l-map{\n\t\t\theight:300px;\n\t\t\twidth:100%;\n/*\t\t\tmargin-left: 15%;\n\t\t\tmargin-top: 5%;*/\n\t\t}\n\t\t#r-result,#r-result table{\n\t\t\twidth:100%;\n\t\t\tfont-size:12px;\n\t\t\t/*margin-left: 15%;*/\n\t\t}\n\t\t#cover {\n\t\t\tmargin-left: -5%;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\n\t\t.pic {\n\t\t\tmargin: 10px;\n\t\t}\n\n\t\t/*#r-result table {\n\t\t\tmargin-left: 0;\n\t\t}*/\n\n\t</style>\n\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=E577a29e33bc8df7619f6c364501fd09\"></script>\n\t<title>展示公交换乘的结果面板</title>\n</head>\n<body>\n\t<div>\n\t\t<div id=\"cover\">\n\t\t\t<ul>\n\t\t\t\t<li><a href=\"#invitation\">请柬</a></li>\n\t\t\t\t<li><a href=\"#l-map\">地图</a></li>\n\t\t\t\t<li><a href=\"#pics\">图片Show</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<h2>请柬：</h2>\n\t\t<div id=\"invitation\">\n\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eykb39k8ekj20rh0gtq7b.jpg\" style=\"width: 100%\">\n\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyletlnzxlg20sg0i7n1v.gif\" style=\"width: 100%\">\n\t\t\t<p>\n\t\t\t\t关键词再次强调：<b>2016年1月1日 南京市江宁区唐老鸭大酒店 中午12点 </b>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t路线信息请下拉。\n\t\t\t</p>\n\t\t</div>\n\t\t<h2>地图：</h2>\n\t\t<p>\n\t\t\t下述地图起点从南京南站起，s1机场线到翔宇南路下，地铁口3,4号口出，转861路到横溪站下往前步行150米左右即达。（遇十字路口左转）耗时大概在45分钟左右。\n\t\t</p>\n\t\t<p>\n\t\t\ts1线运营时间：<b>6：00 - 22:00</b> ；861路运营时间：<b>6:00 - 21:20</b>\n\t\t</p>\n\t\t<div id=\"l-map\" name=\"map\"></div>\n\t\t<div id=\"r-result\"></div>\n\t\t<h2>图片Show：</h2>\n\t\t<p>没有PS过的哦</p>\n\t\t<div id=\"pics\">\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eylcdzl2qmj24c02w07wt.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eylcdvcfk6j22u04907wr.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eylfvm5m2pj22rj45a1l3.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t</div>\n\t\t<li><a href=\"#cover\">返回顶部</a></li>\n\t</div>\n\n\t<hr />\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\" >\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n</div>\n\n</body>\n\t<script type=\"text/javascript\">\n\t\t// 百度地图API功能\n\t\tvar map = new BMap.Map(\"l-map\");\n\t\tmap.centerAndZoom(new BMap.Point(118.804381,31.976318), 12);\n\n\t\tvar transit = new BMap.TransitRoute(map, {\n\t\t\trenderOptions: {map: map, panel: \"r-result\"}\n\t\t});\n\t\ttransit.search(\"南京南站\", \"南京市江宁区唐老鸭大酒店\");\n\t</script>\n\t\n</html>\n","source":"invite.html","raw":"title: Welcome to our wedding!\ncategories: 图片廊\ndate: \ntags: 请柬\nshow: false\n---\n<html>\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n\t<title>Welcome to our wedding!</title>\n\t<style type=\"text/css\">\n\t\tbody, html{\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin:0;\n\t\t\tfont-family:\"微软雅黑\";\n\t\t}\n\t\t#l-map{\n\t\t\theight:300px;\n\t\t\twidth:100%;\n/*\t\t\tmargin-left: 15%;\n\t\t\tmargin-top: 5%;*/\n\t\t}\n\t\t#r-result,#r-result table{\n\t\t\twidth:100%;\n\t\t\tfont-size:12px;\n\t\t\t/*margin-left: 15%;*/\n\t\t}\n\t\t#cover {\n\t\t\tmargin-left: -5%;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\n\t\t.pic {\n\t\t\tmargin: 10px;\n\t\t}\n\n\t\t/*#r-result table {\n\t\t\tmargin-left: 0;\n\t\t}*/\n\n\t</style>\n\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=E577a29e33bc8df7619f6c364501fd09\"></script>\n\t<title>展示公交换乘的结果面板</title>\n</head>\n<body>\n\t<div>\n\t\t<div id=\"cover\">\n\t\t\t<ul>\n\t\t\t\t<li><a href=\"#invitation\">请柬</a></li>\n\t\t\t\t<li><a href=\"#l-map\">地图</a></li>\n\t\t\t\t<li><a href=\"#pics\">图片Show</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<h2>请柬：</h2>\n\t\t<div id=\"invitation\">\n\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eykb39k8ekj20rh0gtq7b.jpg\" style=\"width: 100%\">\n\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyletlnzxlg20sg0i7n1v.gif\" style=\"width: 100%\">\n\t\t\t<p>\n\t\t\t\t关键词再次强调：<b>2016年1月1日 南京市江宁区唐老鸭大酒店 中午12点 </b>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t路线信息请下拉。\n\t\t\t</p>\n\t\t</div>\n\t\t<h2>地图：</h2>\n\t\t<p>\n\t\t\t下述地图起点从南京南站起，s1机场线到翔宇南路下，地铁口3,4号口出，转861路到横溪站下往前步行150米左右即达。（遇十字路口左转）耗时大概在45分钟左右。\n\t\t</p>\n\t\t<p>\n\t\t\ts1线运营时间：<b>6：00 - 22:00</b> ；861路运营时间：<b>6:00 - 21:20</b>\n\t\t</p>\n\t\t<div id=\"l-map\" name=\"map\"></div>\n\t\t<div id=\"r-result\"></div>\n\t\t<h2>图片Show：</h2>\n\t\t<p>没有PS过的哦</p>\n\t\t<div id=\"pics\">\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eylcdzl2qmj24c02w07wt.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eylcdvcfk6j22u04907wr.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eylfvm5m2pj22rj45a1l3.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t</div>\n\t\t<li><a href=\"#cover\">返回顶部</a></li>\n\t</div>\n\n\t<hr />\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\" >\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n</div>\n\n</body>\n\t<script type=\"text/javascript\">\n\t\t// 百度地图API功能\n\t\tvar map = new BMap.Map(\"l-map\");\n\t\tmap.centerAndZoom(new BMap.Point(118.804381,31.976318), 12);\n\n\t\tvar transit = new BMap.TransitRoute(map, {\n\t\t\trenderOptions: {map: map, panel: \"r-result\"}\n\t\t});\n\t\ttransit.search(\"南京南站\", \"南京市江宁区唐老鸭大酒店\");\n\t</script>\n\t\n</html>\n","updated":"2018-10-19T18:30:07.984Z","path":"invite.html","comments":1,"layout":"page","_id":"cjnijyzjn0001fnpvk2oef5ly","content":"<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n\t<title>Welcome to our wedding!</title>\n\t<style type=\"text/css\">\n\t\tbody, html{\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin:0;\n\t\t\tfont-family:\"微软雅黑\";\n\t\t}\n\t\t#l-map{\n\t\t\theight:300px;\n\t\t\twidth:100%;\n/*\t\t\tmargin-left: 15%;\n\t\t\tmargin-top: 5%;*/\n\t\t}\n\t\t#r-result,#r-result table{\n\t\t\twidth:100%;\n\t\t\tfont-size:12px;\n\t\t\t/*margin-left: 15%;*/\n\t\t}\n\t\t#cover {\n\t\t\tmargin-left: -5%;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\n\t\t.pic {\n\t\t\tmargin: 10px;\n\t\t}\n\n\t\t/*#r-result table {\n\t\t\tmargin-left: 0;\n\t\t}*/\n\n\t</style>\n\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=E577a29e33bc8df7619f6c364501fd09\"></script>\n\t<title>展示公交换乘的结果面板</title>\n</head>\n<body>\n\t<div>\n\t\t<div id=\"cover\">\n\t\t\t<ul>\n\t\t\t\t<li><a href=\"#invitation\">请柬</a></li>\n\t\t\t\t<li><a href=\"#l-map\">地图</a></li>\n\t\t\t\t<li><a href=\"#pics\">图片Show</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<h2>请柬：</h2>\n\t\t<div id=\"invitation\">\n\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eykb39k8ekj20rh0gtq7b.jpg\" style=\"width: 100%\">\n\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyletlnzxlg20sg0i7n1v.gif\" style=\"width: 100%\">\n\t\t\t<p>\n\t\t\t\t关键词再次强调：<b>2016年1月1日 南京市江宁区唐老鸭大酒店 中午12点 </b>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t路线信息请下拉。\n\t\t\t</p>\n\t\t</div>\n\t\t<h2>地图：</h2>\n\t\t<p>\n\t\t\t下述地图起点从南京南站起，s1机场线到翔宇南路下，地铁口3,4号口出，转861路到横溪站下往前步行150米左右即达。（遇十字路口左转）耗时大概在45分钟左右。\n\t\t</p>\n\t\t<p>\n\t\t\ts1线运营时间：<b>6：00 - 22:00</b> ；861路运营时间：<b>6:00 - 21:20</b>\n\t\t</p>\n\t\t<div id=\"l-map\" name=\"map\"></div>\n\t\t<div id=\"r-result\"></div>\n\t\t<h2>图片Show：</h2>\n\t\t<p>没有PS过的哦</p>\n\t\t<div id=\"pics\">\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eylcdzl2qmj24c02w07wt.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eylcdvcfk6j22u04907wr.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eylfvm5m2pj22rj45a1l3.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t</div>\n\t\t<li><a href=\"#cover\">返回顶部</a></li>\n\t</div>\n\n\t<hr>\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\n</body>\n\t<script type=\"text/javascript\">\n\t\t// 百度地图API功能\n\t\tvar map = new BMap.Map(\"l-map\");\n\t\tmap.centerAndZoom(new BMap.Point(118.804381,31.976318), 12);\n\n\t\tvar transit = new BMap.TransitRoute(map, {\n\t\t\trenderOptions: {map: map, panel: \"r-result\"}\n\t\t});\n\t\ttransit.search(\"南京南站\", \"南京市江宁区唐老鸭大酒店\");\n\t</script>\n\t\n</html>\n","site":{"data":{}},"excerpt":"","more":"<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n\t<title>Welcome to our wedding!</title>\n\t<style type=\"text/css\">\n\t\tbody, html{\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin:0;\n\t\t\tfont-family:\"微软雅黑\";\n\t\t}\n\t\t#l-map{\n\t\t\theight:300px;\n\t\t\twidth:100%;\n/*\t\t\tmargin-left: 15%;\n\t\t\tmargin-top: 5%;*/\n\t\t}\n\t\t#r-result,#r-result table{\n\t\t\twidth:100%;\n\t\t\tfont-size:12px;\n\t\t\t/*margin-left: 15%;*/\n\t\t}\n\t\t#cover {\n\t\t\tmargin-left: -5%;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\n\t\t.pic {\n\t\t\tmargin: 10px;\n\t\t}\n\n\t\t/*#r-result table {\n\t\t\tmargin-left: 0;\n\t\t}*/\n\n\t</style>\n\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=E577a29e33bc8df7619f6c364501fd09\"></script>\n\t<title>展示公交换乘的结果面板</title>\n</head>\n<body>\n\t<div>\n\t\t<div id=\"cover\">\n\t\t\t<ul>\n\t\t\t\t<li><a href=\"#invitation\">请柬</a></li>\n\t\t\t\t<li><a href=\"#l-map\">地图</a></li>\n\t\t\t\t<li><a href=\"#pics\">图片Show</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<h2>请柬：</h2>\n\t\t<div id=\"invitation\">\n\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eykb39k8ekj20rh0gtq7b.jpg\" style=\"width: 100%\">\n\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyletlnzxlg20sg0i7n1v.gif\" style=\"width: 100%\">\n\t\t\t<p>\n\t\t\t\t关键词再次强调：<b>2016年1月1日 南京市江宁区唐老鸭大酒店 中午12点 </b>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t路线信息请下拉。\n\t\t\t</p>\n\t\t</div>\n\t\t<h2>地图：</h2>\n\t\t<p>\n\t\t\t下述地图起点从南京南站起，s1机场线到翔宇南路下，地铁口3,4号口出，转861路到横溪站下往前步行150米左右即达。（遇十字路口左转）耗时大概在45分钟左右。\n\t\t</p>\n\t\t<p>\n\t\t\ts1线运营时间：<b>6：00 - 22:00</b> ；861路运营时间：<b>6:00 - 21:20</b>\n\t\t</p>\n\t\t<div id=\"l-map\" name=\"map\"></div>\n\t\t<div id=\"r-result\"></div>\n\t\t<h2>图片Show：</h2>\n\t\t<p>没有PS过的哦</p>\n\t\t<div id=\"pics\">\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eylcdzl2qmj24c02w07wt.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eylcdvcfk6j22u04907wr.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eylfvm5m2pj22rj45a1l3.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t</div>\n\t\t<li><a href=\"#cover\">返回顶部</a></li>\n\t</div>\n\n\t<hr>\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\n</body>\n\t<script type=\"text/javascript\">\n\t\t// 百度地图API功能\n\t\tvar map = new BMap.Map(\"l-map\");\n\t\tmap.centerAndZoom(new BMap.Point(118.804381,31.976318), 12);\n\n\t\tvar transit = new BMap.TransitRoute(map, {\n\t\t\trenderOptions: {map: map, panel: \"r-result\"}\n\t\t});\n\t\ttransit.search(\"南京南站\", \"南京市江宁区唐老鸭大酒店\");\n\t</script>\n\t\n</html>\n"},{"title":"结婚照","categories":"图片廊","date":"2015-12-09T02:13:38.000Z","tags":"结婚照","show":false,"_content":"<!DOCTYPE html>\n<html>\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n\t<title>结婚照</title>\n\t<style type=\"text/css\">\n\t\timg {\n\t\t\twidth: 33%;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.fancybox-skin {\n\t\t\tpadding: 5px !important;\n\t\t}\n\t</style>\n\t<script src=\"http://libs.baidu.com/jquery/1.9.1/jquery.min.js\"></script>\n</head>\n\n<body>\n\t<div>\n\t\t<ul>\n\t\t\t<li><a href=\"#male\">新郎篇</a></li>\n\t\t\t<li><a href=\"#female\">新娘篇</a></li>\n\t\t\t<li><a href=\"#couple\">合照篇</a></li>\n\t\t<ul>\n\t</div>\n\n\t<div id=\"male\">\n\t\t<h2>新郎篇</h2>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysm0namv0j24c02w0qve.jpg\" />\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm1af7uwj24c02w0he0.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslmjwg2wj24c02w0b2g.jpg\" />\n\t</div>\n\n\t<div id=\"female\">\n\t\t<h2>新娘篇</h2>\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysljojf6gj24yo2w0he7.jpg\" style=\"height: 154px;\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslhqc6woj24c02w0b2i.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslh8ngqqj24c02w0qvd.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslfm204hj22w04c07wr.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eyslfec4luj22sr475u12.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysln7llobj22w04c07wr.jpg\" />\n\t</div>\n\t<div id=\"couple\">\n\t\t<h2>合照篇</h2>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eyslembq30j24c02w0he1.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslp8ss3zj24c02w0e8c.jpg\" />\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmh26kdpj24c02w07ws.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysmiu28m4j22w04c0e8c.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysm1nugatj24pc4pbkjy.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslte9gslj22w04c0u13.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmmiam6cj24c02w0x6x.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslvh2pqhj24c02w0x6x.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslwrr4eqj24c02w01l6.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysn47owlfj24c02w01l6.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysmks1m5zj24c02w01l7.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysls4lg7jj24c02w0u12.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm0l9o2tj24c02w01l7.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysn208g2tj24c02w0he4.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyt8eta7xzj24c02w07wt.jpg\" />\n\t</div>\n\n\t<hr />\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\" >\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\t<script>\n\t\t//根据不同的用户设备显示\n\t\tfunction isPc(){\n\t\t\tvar userAgentInfo = navigator.userAgent;\n\t\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\t\tvar flag = true;\n\t\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn flag;\n\t\t}\n\t\tif(!isPc()){\n\t\t\tconsole.log(\"移动设备访问.\");\n\t\t\t$(\"img\").removeAttr(\"style\");\n\t\t\t$(\"img\").css({\"width\": \"100%\"});\n\t\t}\n\t</script>\n</body>\n</html>\n","source":"结婚照.html","raw":"title: 结婚照\ncategories: 图片廊\ndate: 2015-12-09 10:13:38\ntags: 结婚照\nshow: false\n---\n<!DOCTYPE html>\n<html>\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n\t<title>结婚照</title>\n\t<style type=\"text/css\">\n\t\timg {\n\t\t\twidth: 33%;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.fancybox-skin {\n\t\t\tpadding: 5px !important;\n\t\t}\n\t</style>\n\t<script src=\"http://libs.baidu.com/jquery/1.9.1/jquery.min.js\"></script>\n</head>\n\n<body>\n\t<div>\n\t\t<ul>\n\t\t\t<li><a href=\"#male\">新郎篇</a></li>\n\t\t\t<li><a href=\"#female\">新娘篇</a></li>\n\t\t\t<li><a href=\"#couple\">合照篇</a></li>\n\t\t<ul>\n\t</div>\n\n\t<div id=\"male\">\n\t\t<h2>新郎篇</h2>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysm0namv0j24c02w0qve.jpg\" />\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm1af7uwj24c02w0he0.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslmjwg2wj24c02w0b2g.jpg\" />\n\t</div>\n\n\t<div id=\"female\">\n\t\t<h2>新娘篇</h2>\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysljojf6gj24yo2w0he7.jpg\" style=\"height: 154px;\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslhqc6woj24c02w0b2i.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslh8ngqqj24c02w0qvd.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslfm204hj22w04c07wr.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eyslfec4luj22sr475u12.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysln7llobj22w04c07wr.jpg\" />\n\t</div>\n\t<div id=\"couple\">\n\t\t<h2>合照篇</h2>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eyslembq30j24c02w0he1.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslp8ss3zj24c02w0e8c.jpg\" />\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmh26kdpj24c02w07ws.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysmiu28m4j22w04c0e8c.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysm1nugatj24pc4pbkjy.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslte9gslj22w04c0u13.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmmiam6cj24c02w0x6x.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslvh2pqhj24c02w0x6x.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslwrr4eqj24c02w01l6.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysn47owlfj24c02w01l6.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysmks1m5zj24c02w01l7.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysls4lg7jj24c02w0u12.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm0l9o2tj24c02w01l7.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysn208g2tj24c02w0he4.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyt8eta7xzj24c02w07wt.jpg\" />\n\t</div>\n\n\t<hr />\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\" >\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\t<script>\n\t\t//根据不同的用户设备显示\n\t\tfunction isPc(){\n\t\t\tvar userAgentInfo = navigator.userAgent;\n\t\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\t\tvar flag = true;\n\t\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn flag;\n\t\t}\n\t\tif(!isPc()){\n\t\t\tconsole.log(\"移动设备访问.\");\n\t\t\t$(\"img\").removeAttr(\"style\");\n\t\t\t$(\"img\").css({\"width\": \"100%\"});\n\t\t}\n\t</script>\n</body>\n</html>\n","updated":"2018-10-19T18:30:07.984Z","path":"结婚照.html","comments":1,"layout":"page","_id":"cjnijyzjo0002fnpvl1ypk8ta","content":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n\t<title>结婚照</title>\n\t<style type=\"text/css\">\n\t\timg {\n\t\t\twidth: 33%;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.fancybox-skin {\n\t\t\tpadding: 5px !important;\n\t\t}\n\t</style>\n\t<script src=\"http://libs.baidu.com/jquery/1.9.1/jquery.min.js\"></script>\n</head>\n\n<body>\n\t<div>\n\t\t<ul>\n\t\t\t<li><a href=\"#male\">新郎篇</a></li>\n\t\t\t<li><a href=\"#female\">新娘篇</a></li>\n\t\t\t<li><a href=\"#couple\">合照篇</a></li>\n\t\t<ul>\n\t</ul></ul></div>\n\n\t<div id=\"male\">\n\t\t<h2>新郎篇</h2>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysm0namv0j24c02w0qve.jpg\">\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm1af7uwj24c02w0he0.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslmjwg2wj24c02w0b2g.jpg\">\n\t</div>\n\n\t<div id=\"female\">\n\t\t<h2>新娘篇</h2>\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysljojf6gj24yo2w0he7.jpg\" style=\"height: 154px;\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslhqc6woj24c02w0b2i.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslh8ngqqj24c02w0qvd.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslfm204hj22w04c07wr.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eyslfec4luj22sr475u12.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysln7llobj22w04c07wr.jpg\">\n\t</div>\n\t<div id=\"couple\">\n\t\t<h2>合照篇</h2>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eyslembq30j24c02w0he1.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslp8ss3zj24c02w0e8c.jpg\">\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmh26kdpj24c02w07ws.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysmiu28m4j22w04c0e8c.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysm1nugatj24pc4pbkjy.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslte9gslj22w04c0u13.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmmiam6cj24c02w0x6x.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslvh2pqhj24c02w0x6x.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslwrr4eqj24c02w01l6.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysn47owlfj24c02w01l6.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysmks1m5zj24c02w01l7.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysls4lg7jj24c02w0u12.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm0l9o2tj24c02w01l7.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysn208g2tj24c02w0he4.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyt8eta7xzj24c02w07wt.jpg\">\n\t</div>\n\n\t<hr>\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\t<script>\n\t\t//根据不同的用户设备显示\n\t\tfunction isPc(){\n\t\t\tvar userAgentInfo = navigator.userAgent;\n\t\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\t\tvar flag = true;\n\t\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn flag;\n\t\t}\n\t\tif(!isPc()){\n\t\t\tconsole.log(\"移动设备访问.\");\n\t\t\t$(\"img\").removeAttr(\"style\");\n\t\t\t$(\"img\").css({\"width\": \"100%\"});\n\t\t}\n\t</script>\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n\t<title>结婚照</title>\n\t<style type=\"text/css\">\n\t\timg {\n\t\t\twidth: 33%;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.fancybox-skin {\n\t\t\tpadding: 5px !important;\n\t\t}\n\t</style>\n\t<script src=\"http://libs.baidu.com/jquery/1.9.1/jquery.min.js\"></script>\n</head>\n\n<body>\n\t<div>\n\t\t<ul>\n\t\t\t<li><a href=\"#male\">新郎篇</a></li>\n\t\t\t<li><a href=\"#female\">新娘篇</a></li>\n\t\t\t<li><a href=\"#couple\">合照篇</a></li>\n\t\t<ul>\n\t</ul></ul></div>\n\n\t<div id=\"male\">\n\t\t<h2>新郎篇</h2>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysm0namv0j24c02w0qve.jpg\">\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm1af7uwj24c02w0he0.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslmjwg2wj24c02w0b2g.jpg\">\n\t</div>\n\n\t<div id=\"female\">\n\t\t<h2>新娘篇</h2>\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysljojf6gj24yo2w0he7.jpg\" style=\"height: 154px;\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslhqc6woj24c02w0b2i.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslh8ngqqj24c02w0qvd.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslfm204hj22w04c07wr.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eyslfec4luj22sr475u12.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysln7llobj22w04c07wr.jpg\">\n\t</div>\n\t<div id=\"couple\">\n\t\t<h2>合照篇</h2>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eyslembq30j24c02w0he1.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslp8ss3zj24c02w0e8c.jpg\">\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmh26kdpj24c02w07ws.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysmiu28m4j22w04c0e8c.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysm1nugatj24pc4pbkjy.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslte9gslj22w04c0u13.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmmiam6cj24c02w0x6x.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslvh2pqhj24c02w0x6x.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslwrr4eqj24c02w01l6.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysn47owlfj24c02w01l6.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysmks1m5zj24c02w01l7.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysls4lg7jj24c02w0u12.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm0l9o2tj24c02w01l7.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysn208g2tj24c02w0he4.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyt8eta7xzj24c02w07wt.jpg\">\n\t</div>\n\n\t<hr>\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\t<script>\n\t\t//根据不同的用户设备显示\n\t\tfunction isPc(){\n\t\t\tvar userAgentInfo = navigator.userAgent;\n\t\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\t\tvar flag = true;\n\t\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn flag;\n\t\t}\n\t\tif(!isPc()){\n\t\t\tconsole.log(\"移动设备访问.\");\n\t\t\t$(\"img\").removeAttr(\"style\");\n\t\t\t$(\"img\").css({\"width\": \"100%\"});\n\t\t}\n\t</script>\n</body>\n</html>\n"},{"title":"公益404","_content":"<img src=\"/404.jpg\" />\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://zhangjh.me\" homePageName=\"回到主页\">\n</script>\n","source":"404/index.html","raw":"title: 公益404\n---\n<img src=\"/404.jpg\" />\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://zhangjh.me\" homePageName=\"回到主页\">\n</script>\n","date":"2018-10-19T18:30:07.976Z","updated":"2018-10-19T18:30:07.976Z","path":"404/index.html","comments":1,"layout":"page","_id":"cjnijyzry0003fnpvekbh67t3","content":"<img src=\"/404.jpg\">\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://zhangjh.me\" homepagename=\"回到主页\">\n</script>\n","site":{"data":{}},"excerpt":"","more":"<img src=\"/404.jpg\">\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://zhangjh.me\" homepagename=\"回到主页\">\n</script>\n"},{"title":"关于","date":"2015-09-23T06:27:34.000Z","_content":"# 个人信息\n![](/images/default_avatar.jpg)\n张基宏 男 86年处女座一枚 骄傲的大蓝鲸人\n一个伪文青 一个Low Geek\n**个人邮箱**：<a href=\"mailto:njhxzhangjihong@126.com\" target=\"_self\">njhxzhangjihong@126.com</a>\n**毕业时间**：2012.4\n**学　　历**：计算机硕士\n**Github**： https://github.com/zhangjh\n**CSDN**：http://blog.csdn.net/zhang_j_h （学生期间写过一些，已经废弃不更新）\n\n# 职业经历\n- 2012.4 ~ 2014.4　　百度在线网络技术有限公司 　　高级测试开发工程师\n- 2014.5 ~ 2016.9　　阿里巴巴网络技术有限公司 　　高级测试开发工程师\n- 2016.9 ~ 至今      阿里巴巴网络技术有限公司     高级开发工程师\n\n# 技能清单\n- #### 前端\nHTML/CSS/Javascript,bootstrap,jQuery,requirejs,Vue.js,React\n\n- #### 后端 & 脚本\nnodejs,bash shell,awk/sed,Hadoop mapreduce,Java\n\n- #### 数据库\nmongodb,mysql\n\n- #### 自动化测试领域\ncasperjs,ruby+watir框架\n\n- #### 代码管理及流程工具\ngit/svn,gulp,webpack\n\n# 工具&平台 (公司内部项目未开源,内部可访问)\n- [宙斯盾-Issue/缺陷管理平台](http://defect.alibaba-inc.com),React + java + mysql,前端React全部 + Java部分\n- [塔普-casperjs自动化测试准入平台](http://tab.alibaba.net),nodejs全端实现\n- [光年-搜索广告工具集平台](http://guang.alibaba.net/index.htm)的前端工作\n- [特斯拉-组内对外的统一服务平台](http://tesla.alibaba.net)的前端工作\n- 阿里巴巴搜索产品评测系统Chrome插件实现（提供用户反馈产品召回质量的入口，收集用户反馈信息）\n- 阿里巴巴搜索页产品重复检查Chrome插件\n- 自动修改url添加实验参数Chrome插件\n\n# 业余项目\n- [云书CEO管理系统](http://ceo.qess.me/cloudBook/index.html)\n- 若干Chrome插件\n    1. [自动去广告插件](https://github.com/zhangjh/chromeExt/tree/master/%E5%8E%BB%E5%B9%BF%E5%91%8A)\n\t2. [无良黑心骗子莆田系医院检测器](https://github.com/zhangjh/chromeExt/tree/master/%E8%8E%86%E7%94%B0%E7%B3%BB%E5%8C%BB%E9%99%A2%E6%A3%80%E6%B5%8B%E5%99%A8)\n- [网盘、电子书搜索](/search)，基于谷歌自定义搜索，需要科学上网\n- [天气预报](/local-weather/index.html)\n- [本技术博客](/)\n- [**网址收藏导航站-藏经阁**](http://favlink.cn)(支持完全的个性化定制)]\n- [岛国丽人](https://github.com/zhangjh/islandBeauty),一个基于Node编写的种子文件下载爬虫\n- [汤不热爬虫](https://github.com/zhangjh/node_tumblr_spider),一个专门爬取tumblr资源的爬虫项目\n- [React前端组件库](https://github.com/zhangjh/FE_Components),一个基于[ant-design](http://ant.design)编写的React组件库\n- [mongodb连接客户端mongoose-client](https://www.npmjs.com/package/mongoose-client),一个用来简化MongoDB增删改查使用的客户端中间件\n- [树莓派项目:定点播报时间和天气](https://github.com/zhangjh/raspberry_autoPlay)\n- 小程序：今天你减肥了吗\n<img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fl2sdk6dioj209k09kq4d.jpg\" style=\"width:200px\" />\n- 微信公众号：悖论爱好者\n<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1f3x0w08t3qj20760763yz.jpg\" style=\"width:200px;\" />\n","source":"about/index.md","raw":"title: 关于\ndate: 2015-09-23 14:27:34\n---\n# 个人信息\n![](/images/default_avatar.jpg)\n张基宏 男 86年处女座一枚 骄傲的大蓝鲸人\n一个伪文青 一个Low Geek\n**个人邮箱**：<a href=\"mailto:njhxzhangjihong@126.com\" target=\"_self\">njhxzhangjihong@126.com</a>\n**毕业时间**：2012.4\n**学　　历**：计算机硕士\n**Github**： https://github.com/zhangjh\n**CSDN**：http://blog.csdn.net/zhang_j_h （学生期间写过一些，已经废弃不更新）\n\n# 职业经历\n- 2012.4 ~ 2014.4　　百度在线网络技术有限公司 　　高级测试开发工程师\n- 2014.5 ~ 2016.9　　阿里巴巴网络技术有限公司 　　高级测试开发工程师\n- 2016.9 ~ 至今      阿里巴巴网络技术有限公司     高级开发工程师\n\n# 技能清单\n- #### 前端\nHTML/CSS/Javascript,bootstrap,jQuery,requirejs,Vue.js,React\n\n- #### 后端 & 脚本\nnodejs,bash shell,awk/sed,Hadoop mapreduce,Java\n\n- #### 数据库\nmongodb,mysql\n\n- #### 自动化测试领域\ncasperjs,ruby+watir框架\n\n- #### 代码管理及流程工具\ngit/svn,gulp,webpack\n\n# 工具&平台 (公司内部项目未开源,内部可访问)\n- [宙斯盾-Issue/缺陷管理平台](http://defect.alibaba-inc.com),React + java + mysql,前端React全部 + Java部分\n- [塔普-casperjs自动化测试准入平台](http://tab.alibaba.net),nodejs全端实现\n- [光年-搜索广告工具集平台](http://guang.alibaba.net/index.htm)的前端工作\n- [特斯拉-组内对外的统一服务平台](http://tesla.alibaba.net)的前端工作\n- 阿里巴巴搜索产品评测系统Chrome插件实现（提供用户反馈产品召回质量的入口，收集用户反馈信息）\n- 阿里巴巴搜索页产品重复检查Chrome插件\n- 自动修改url添加实验参数Chrome插件\n\n# 业余项目\n- [云书CEO管理系统](http://ceo.qess.me/cloudBook/index.html)\n- 若干Chrome插件\n    1. [自动去广告插件](https://github.com/zhangjh/chromeExt/tree/master/%E5%8E%BB%E5%B9%BF%E5%91%8A)\n\t2. [无良黑心骗子莆田系医院检测器](https://github.com/zhangjh/chromeExt/tree/master/%E8%8E%86%E7%94%B0%E7%B3%BB%E5%8C%BB%E9%99%A2%E6%A3%80%E6%B5%8B%E5%99%A8)\n- [网盘、电子书搜索](/search)，基于谷歌自定义搜索，需要科学上网\n- [天气预报](/local-weather/index.html)\n- [本技术博客](/)\n- [**网址收藏导航站-藏经阁**](http://favlink.cn)(支持完全的个性化定制)]\n- [岛国丽人](https://github.com/zhangjh/islandBeauty),一个基于Node编写的种子文件下载爬虫\n- [汤不热爬虫](https://github.com/zhangjh/node_tumblr_spider),一个专门爬取tumblr资源的爬虫项目\n- [React前端组件库](https://github.com/zhangjh/FE_Components),一个基于[ant-design](http://ant.design)编写的React组件库\n- [mongodb连接客户端mongoose-client](https://www.npmjs.com/package/mongoose-client),一个用来简化MongoDB增删改查使用的客户端中间件\n- [树莓派项目:定点播报时间和天气](https://github.com/zhangjh/raspberry_autoPlay)\n- 小程序：今天你减肥了吗\n<img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fl2sdk6dioj209k09kq4d.jpg\" style=\"width:200px\" />\n- 微信公众号：悖论爱好者\n<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1f3x0w08t3qj20760763yz.jpg\" style=\"width:200px;\" />\n","updated":"2018-10-19T18:30:07.983Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjnijyzs60005fnpvq8vnd9if","content":"<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><p><img src=\"/images/default_avatar.jpg\" alt=\"\"><br>张基宏 男 86年处女座一枚 骄傲的大蓝鲸人<br>一个伪文青 一个Low Geek<br><strong>个人邮箱</strong>：<a href=\"mailto:njhxzhangjihong@126.com\" target=\"_self\">njhxzhangjihong@126.com</a><br><strong>毕业时间</strong>：2012.4<br><strong>学　　历</strong>：计算机硕士<br><strong>Github</strong>： <a href=\"https://github.com/zhangjh\" target=\"_blank\" rel=\"noopener\">https://github.com/zhangjh</a><br><strong>CSDN</strong>：<a href=\"http://blog.csdn.net/zhang_j_h\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/zhang_j_h</a> （学生期间写过一些，已经废弃不更新）</p>\n<h1 id=\"职业经历\"><a href=\"#职业经历\" class=\"headerlink\" title=\"职业经历\"></a>职业经历</h1><ul>\n<li>2012.4 ~ 2014.4　　百度在线网络技术有限公司 　　高级测试开发工程师</li>\n<li>2014.5 ~ 2016.9　　阿里巴巴网络技术有限公司 　　高级测试开发工程师</li>\n<li>2016.9 ~ 至今      阿里巴巴网络技术有限公司     高级开发工程师</li>\n</ul>\n<h1 id=\"技能清单\"><a href=\"#技能清单\" class=\"headerlink\" title=\"技能清单\"></a>技能清单</h1><ul>\n<li><h4 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h4><p>HTML/CSS/Javascript,bootstrap,jQuery,requirejs,Vue.js,React</p>\n</li>\n<li><h4 id=\"后端-amp-脚本\"><a href=\"#后端-amp-脚本\" class=\"headerlink\" title=\"后端 &amp; 脚本\"></a>后端 &amp; 脚本</h4><p>nodejs,bash shell,awk/sed,Hadoop mapreduce,Java</p>\n</li>\n<li><h4 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h4><p>mongodb,mysql</p>\n</li>\n<li><h4 id=\"自动化测试领域\"><a href=\"#自动化测试领域\" class=\"headerlink\" title=\"自动化测试领域\"></a>自动化测试领域</h4><p>casperjs,ruby+watir框架</p>\n</li>\n<li><h4 id=\"代码管理及流程工具\"><a href=\"#代码管理及流程工具\" class=\"headerlink\" title=\"代码管理及流程工具\"></a>代码管理及流程工具</h4><p>git/svn,gulp,webpack</p>\n</li>\n</ul>\n<h1 id=\"工具-amp-平台-公司内部项目未开源-内部可访问\"><a href=\"#工具-amp-平台-公司内部项目未开源-内部可访问\" class=\"headerlink\" title=\"工具&amp;平台 (公司内部项目未开源,内部可访问)\"></a>工具&amp;平台 (公司内部项目未开源,内部可访问)</h1><ul>\n<li><a href=\"http://defect.alibaba-inc.com\" target=\"_blank\" rel=\"noopener\">宙斯盾-Issue/缺陷管理平台</a>,React + java + mysql,前端React全部 + Java部分</li>\n<li><a href=\"http://tab.alibaba.net\" target=\"_blank\" rel=\"noopener\">塔普-casperjs自动化测试准入平台</a>,nodejs全端实现</li>\n<li><a href=\"http://guang.alibaba.net/index.htm\" target=\"_blank\" rel=\"noopener\">光年-搜索广告工具集平台</a>的前端工作</li>\n<li><a href=\"http://tesla.alibaba.net\" target=\"_blank\" rel=\"noopener\">特斯拉-组内对外的统一服务平台</a>的前端工作</li>\n<li>阿里巴巴搜索产品评测系统Chrome插件实现（提供用户反馈产品召回质量的入口，收集用户反馈信息）</li>\n<li>阿里巴巴搜索页产品重复检查Chrome插件</li>\n<li>自动修改url添加实验参数Chrome插件</li>\n</ul>\n<h1 id=\"业余项目\"><a href=\"#业余项目\" class=\"headerlink\" title=\"业余项目\"></a>业余项目</h1><ul>\n<li><a href=\"http://ceo.qess.me/cloudBook/index.html\" target=\"_blank\" rel=\"noopener\">云书CEO管理系统</a></li>\n<li>若干Chrome插件<ol>\n<li><a href=\"https://github.com/zhangjh/chromeExt/tree/master/%E5%8E%BB%E5%B9%BF%E5%91%8A\" target=\"_blank\" rel=\"noopener\">自动去广告插件</a></li>\n<li><a href=\"https://github.com/zhangjh/chromeExt/tree/master/%E8%8E%86%E7%94%B0%E7%B3%BB%E5%8C%BB%E9%99%A2%E6%A3%80%E6%B5%8B%E5%99%A8\" target=\"_blank\" rel=\"noopener\">无良黑心骗子莆田系医院检测器</a></li>\n</ol>\n</li>\n<li><a href=\"/search\">网盘、电子书搜索</a>，基于谷歌自定义搜索，需要科学上网</li>\n<li><a href=\"/local-weather/index.html\">天气预报</a></li>\n<li><a href=\"/\">本技术博客</a></li>\n<li><a href=\"http://favlink.cn\" target=\"_blank\" rel=\"noopener\"><strong>网址收藏导航站-藏经阁</strong></a>(支持完全的个性化定制)]</li>\n<li><a href=\"https://github.com/zhangjh/islandBeauty\" target=\"_blank\" rel=\"noopener\">岛国丽人</a>,一个基于Node编写的种子文件下载爬虫</li>\n<li><a href=\"https://github.com/zhangjh/node_tumblr_spider\" target=\"_blank\" rel=\"noopener\">汤不热爬虫</a>,一个专门爬取tumblr资源的爬虫项目</li>\n<li><a href=\"https://github.com/zhangjh/FE_Components\" target=\"_blank\" rel=\"noopener\">React前端组件库</a>,一个基于<a href=\"http://ant.design\" target=\"_blank\" rel=\"noopener\">ant-design</a>编写的React组件库</li>\n<li><a href=\"https://www.npmjs.com/package/mongoose-client\" target=\"_blank\" rel=\"noopener\">mongodb连接客户端mongoose-client</a>,一个用来简化MongoDB增删改查使用的客户端中间件</li>\n<li><a href=\"https://github.com/zhangjh/raspberry_autoPlay\" target=\"_blank\" rel=\"noopener\">树莓派项目:定点播报时间和天气</a></li>\n<li>小程序：今天你减肥了吗<br><img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fl2sdk6dioj209k09kq4d.jpg\" style=\"width:200px\"></li>\n<li>微信公众号：悖论爱好者<br><img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1f3x0w08t3qj20760763yz.jpg\" style=\"width:200px;\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><p><img src=\"/images/default_avatar.jpg\" alt=\"\"><br>张基宏 男 86年处女座一枚 骄傲的大蓝鲸人<br>一个伪文青 一个Low Geek<br><strong>个人邮箱</strong>：<a href=\"mailto:njhxzhangjihong@126.com\" target=\"_self\">njhxzhangjihong@126.com</a><br><strong>毕业时间</strong>：2012.4<br><strong>学　　历</strong>：计算机硕士<br><strong>Github</strong>： <a href=\"https://github.com/zhangjh\" target=\"_blank\" rel=\"noopener\">https://github.com/zhangjh</a><br><strong>CSDN</strong>：<a href=\"http://blog.csdn.net/zhang_j_h\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/zhang_j_h</a> （学生期间写过一些，已经废弃不更新）</p>\n<h1 id=\"职业经历\"><a href=\"#职业经历\" class=\"headerlink\" title=\"职业经历\"></a>职业经历</h1><ul>\n<li>2012.4 ~ 2014.4　　百度在线网络技术有限公司 　　高级测试开发工程师</li>\n<li>2014.5 ~ 2016.9　　阿里巴巴网络技术有限公司 　　高级测试开发工程师</li>\n<li>2016.9 ~ 至今      阿里巴巴网络技术有限公司     高级开发工程师</li>\n</ul>\n<h1 id=\"技能清单\"><a href=\"#技能清单\" class=\"headerlink\" title=\"技能清单\"></a>技能清单</h1><ul>\n<li><h4 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h4><p>HTML/CSS/Javascript,bootstrap,jQuery,requirejs,Vue.js,React</p>\n</li>\n<li><h4 id=\"后端-amp-脚本\"><a href=\"#后端-amp-脚本\" class=\"headerlink\" title=\"后端 &amp; 脚本\"></a>后端 &amp; 脚本</h4><p>nodejs,bash shell,awk/sed,Hadoop mapreduce,Java</p>\n</li>\n<li><h4 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h4><p>mongodb,mysql</p>\n</li>\n<li><h4 id=\"自动化测试领域\"><a href=\"#自动化测试领域\" class=\"headerlink\" title=\"自动化测试领域\"></a>自动化测试领域</h4><p>casperjs,ruby+watir框架</p>\n</li>\n<li><h4 id=\"代码管理及流程工具\"><a href=\"#代码管理及流程工具\" class=\"headerlink\" title=\"代码管理及流程工具\"></a>代码管理及流程工具</h4><p>git/svn,gulp,webpack</p>\n</li>\n</ul>\n<h1 id=\"工具-amp-平台-公司内部项目未开源-内部可访问\"><a href=\"#工具-amp-平台-公司内部项目未开源-内部可访问\" class=\"headerlink\" title=\"工具&amp;平台 (公司内部项目未开源,内部可访问)\"></a>工具&amp;平台 (公司内部项目未开源,内部可访问)</h1><ul>\n<li><a href=\"http://defect.alibaba-inc.com\" target=\"_blank\" rel=\"noopener\">宙斯盾-Issue/缺陷管理平台</a>,React + java + mysql,前端React全部 + Java部分</li>\n<li><a href=\"http://tab.alibaba.net\" target=\"_blank\" rel=\"noopener\">塔普-casperjs自动化测试准入平台</a>,nodejs全端实现</li>\n<li><a href=\"http://guang.alibaba.net/index.htm\" target=\"_blank\" rel=\"noopener\">光年-搜索广告工具集平台</a>的前端工作</li>\n<li><a href=\"http://tesla.alibaba.net\" target=\"_blank\" rel=\"noopener\">特斯拉-组内对外的统一服务平台</a>的前端工作</li>\n<li>阿里巴巴搜索产品评测系统Chrome插件实现（提供用户反馈产品召回质量的入口，收集用户反馈信息）</li>\n<li>阿里巴巴搜索页产品重复检查Chrome插件</li>\n<li>自动修改url添加实验参数Chrome插件</li>\n</ul>\n<h1 id=\"业余项目\"><a href=\"#业余项目\" class=\"headerlink\" title=\"业余项目\"></a>业余项目</h1><ul>\n<li><a href=\"http://ceo.qess.me/cloudBook/index.html\" target=\"_blank\" rel=\"noopener\">云书CEO管理系统</a></li>\n<li>若干Chrome插件<ol>\n<li><a href=\"https://github.com/zhangjh/chromeExt/tree/master/%E5%8E%BB%E5%B9%BF%E5%91%8A\" target=\"_blank\" rel=\"noopener\">自动去广告插件</a></li>\n<li><a href=\"https://github.com/zhangjh/chromeExt/tree/master/%E8%8E%86%E7%94%B0%E7%B3%BB%E5%8C%BB%E9%99%A2%E6%A3%80%E6%B5%8B%E5%99%A8\" target=\"_blank\" rel=\"noopener\">无良黑心骗子莆田系医院检测器</a></li>\n</ol>\n</li>\n<li><a href=\"/search\">网盘、电子书搜索</a>，基于谷歌自定义搜索，需要科学上网</li>\n<li><a href=\"/local-weather/index.html\">天气预报</a></li>\n<li><a href=\"/\">本技术博客</a></li>\n<li><a href=\"http://favlink.cn\" target=\"_blank\" rel=\"noopener\"><strong>网址收藏导航站-藏经阁</strong></a>(支持完全的个性化定制)]</li>\n<li><a href=\"https://github.com/zhangjh/islandBeauty\" target=\"_blank\" rel=\"noopener\">岛国丽人</a>,一个基于Node编写的种子文件下载爬虫</li>\n<li><a href=\"https://github.com/zhangjh/node_tumblr_spider\" target=\"_blank\" rel=\"noopener\">汤不热爬虫</a>,一个专门爬取tumblr资源的爬虫项目</li>\n<li><a href=\"https://github.com/zhangjh/FE_Components\" target=\"_blank\" rel=\"noopener\">React前端组件库</a>,一个基于<a href=\"http://ant.design\" target=\"_blank\" rel=\"noopener\">ant-design</a>编写的React组件库</li>\n<li><a href=\"https://www.npmjs.com/package/mongoose-client\" target=\"_blank\" rel=\"noopener\">mongodb连接客户端mongoose-client</a>,一个用来简化MongoDB增删改查使用的客户端中间件</li>\n<li><a href=\"https://github.com/zhangjh/raspberry_autoPlay\" target=\"_blank\" rel=\"noopener\">树莓派项目:定点播报时间和天气</a></li>\n<li>小程序：今天你减肥了吗<br><img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fl2sdk6dioj209k09kq4d.jpg\" style=\"width:200px\"></li>\n<li>微信公众号：悖论爱好者<br><img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1f3x0w08t3qj20760763yz.jpg\" style=\"width:200px;\"></li>\n</ul>\n"},{"title":"分类","type":"categories","comments":0,"date":"2015-06-30T04:07:50.000Z","_content":"","source":"categories/index.md","raw":"title: 分类\ntype: \"categories\"\ncomments: false\ndate: 2015-06-30 12:07:50\n---\n","updated":"2018-10-19T18:30:07.983Z","path":"categories/index.html","layout":"page","_id":"cjnijyzsg0009fnpvgk9xn1i6","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"网站大事记","show":true,"date":"2017-07-25T08:45:33.000Z","_content":"# 网站大事记\n- 2015.06.25　　网站建立，建立在Hexo基础上\n- 2015.06.26　　[第一篇博客](/2015/06/26/beginning/)\n- 2015.08.07　　增加站内搜索功能\n- 2015.12.02　　增加公益404\n- 2015.12.15　　百度首次收录\n- 2016.01.08　　域名** 5941740.cn ** [备案通过](2016/01/08/beian/)\n- 2016.04.12　　增加访问统计\n- 2016.05.25　　增加电子书搜索功能\n- 2016.07.31　　谷歌首次收录\n- 2016.06.17　　增加打赏功能\n- 2017.03.22　　评论系统由多说切换至畅言\n- 2017.07.21　　正式启用新域名** zhangjh.me **，旧域名访问正常\n- 2017.11.28　　站内搜索从swifttype切换至百度\n- 2018.02.22    文章阅读统计次数从firebase切换至自有数据库，解决firebase国内被墙问题，除网站总pv外文章次数清零\n- 2018.03.09\t增加RSS订阅\n- 2018.04.03    博客[自研评论系统](https://github.com/zhangjh/comment)上线，替代畅言\n- 2018.05.06    jiathis分享下线，更换为百度分享\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"issue/index.md","raw":"title: 网站大事记\nshow: true\ndate: 2017-07-25 16:45:33\n---\n# 网站大事记\n- 2015.06.25　　网站建立，建立在Hexo基础上\n- 2015.06.26　　[第一篇博客](/2015/06/26/beginning/)\n- 2015.08.07　　增加站内搜索功能\n- 2015.12.02　　增加公益404\n- 2015.12.15　　百度首次收录\n- 2016.01.08　　域名** 5941740.cn ** [备案通过](2016/01/08/beian/)\n- 2016.04.12　　增加访问统计\n- 2016.05.25　　增加电子书搜索功能\n- 2016.07.31　　谷歌首次收录\n- 2016.06.17　　增加打赏功能\n- 2017.03.22　　评论系统由多说切换至畅言\n- 2017.07.21　　正式启用新域名** zhangjh.me **，旧域名访问正常\n- 2017.11.28　　站内搜索从swifttype切换至百度\n- 2018.02.22    文章阅读统计次数从firebase切换至自有数据库，解决firebase国内被墙问题，除网站总pv外文章次数清零\n- 2018.03.09\t增加RSS订阅\n- 2018.04.03    博客[自研评论系统](https://github.com/zhangjh/comment)上线，替代畅言\n- 2018.05.06    jiathis分享下线，更换为百度分享\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","updated":"2018-10-19T18:30:07.984Z","path":"issue/index.html","comments":1,"layout":"page","_id":"cjnijyzsr000bfnpvdrmo2lmx","content":"<h1 id=\"网站大事记\"><a href=\"#网站大事记\" class=\"headerlink\" title=\"网站大事记\"></a>网站大事记</h1><ul>\n<li>2015.06.25　　网站建立，建立在Hexo基础上</li>\n<li>2015.06.26　　<a href=\"/2015/06/26/beginning/\">第一篇博客</a></li>\n<li>2015.08.07　　增加站内搜索功能</li>\n<li>2015.12.02　　增加公益404</li>\n<li>2015.12.15　　百度首次收录</li>\n<li>2016.01.08　　域名<strong> 5941740.cn </strong> <a href=\"2016/01/08/beian/\">备案通过</a></li>\n<li>2016.04.12　　增加访问统计</li>\n<li>2016.05.25　　增加电子书搜索功能</li>\n<li>2016.07.31　　谷歌首次收录</li>\n<li>2016.06.17　　增加打赏功能</li>\n<li>2017.03.22　　评论系统由多说切换至畅言</li>\n<li>2017.07.21　　正式启用新域名<strong> zhangjh.me </strong>，旧域名访问正常</li>\n<li>2017.11.28　　站内搜索从swifttype切换至百度</li>\n<li>2018.02.22    文章阅读统计次数从firebase切换至自有数据库，解决firebase国内被墙问题，除网站总pv外文章次数清零</li>\n<li>2018.03.09    增加RSS订阅</li>\n<li>2018.04.03    博客<a href=\"https://github.com/zhangjh/comment\" target=\"_blank\" rel=\"noopener\">自研评论系统</a>上线，替代畅言</li>\n<li>2018.05.06    jiathis分享下线，更换为百度分享</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"网站大事记\"><a href=\"#网站大事记\" class=\"headerlink\" title=\"网站大事记\"></a>网站大事记</h1><ul>\n<li>2015.06.25　　网站建立，建立在Hexo基础上</li>\n<li>2015.06.26　　<a href=\"/2015/06/26/beginning/\">第一篇博客</a></li>\n<li>2015.08.07　　增加站内搜索功能</li>\n<li>2015.12.02　　增加公益404</li>\n<li>2015.12.15　　百度首次收录</li>\n<li>2016.01.08　　域名<strong> 5941740.cn </strong> <a href=\"2016/01/08/beian/\">备案通过</a></li>\n<li>2016.04.12　　增加访问统计</li>\n<li>2016.05.25　　增加电子书搜索功能</li>\n<li>2016.07.31　　谷歌首次收录</li>\n<li>2016.06.17　　增加打赏功能</li>\n<li>2017.03.22　　评论系统由多说切换至畅言</li>\n<li>2017.07.21　　正式启用新域名<strong> zhangjh.me </strong>，旧域名访问正常</li>\n<li>2017.11.28　　站内搜索从swifttype切换至百度</li>\n<li>2018.02.22    文章阅读统计次数从firebase切换至自有数据库，解决firebase国内被墙问题，除网站总pv外文章次数清零</li>\n<li>2018.03.09    增加RSS订阅</li>\n<li>2018.04.03    博客<a href=\"https://github.com/zhangjh/comment\" target=\"_blank\" rel=\"noopener\">自研评论系统</a>上线，替代畅言</li>\n<li>2018.05.06    jiathis分享下线，更换为百度分享</li>\n</ul>\n"},{"_content":"/*\n * Des：用户自定义js脚本\n * Author：njhxzhangjihong@126.com\n * Date：6/17 2016\n*/\n//打赏\n(function(){\n\t$(\"#rewardTip\").click(function(){\n\t\t$(\"#dsWrapper\").toggle(\"slow\");\n\t});\n})();\n\n// 域名切换\n(function(){\n    var html = '<div style=\"width:600px;text-align:center;position:absolute;top:50%;left:50%;margin-left:-300px;margin-top:-300px;border:1px solid darkblue;border-radius:6px;padding:20px\"><div>本站域名后续将切换为<a href=\"http://zhangjh.me\"><span style=\"color:red;font-weight:bold;font-size:1.2em;font-style:oblique;\">zhangjh.me</span></a></div>' + \n               '<div><span id=\"timer\">3</span>秒后自动跳转</div></div>';\n\n    var location = window.location.host;\n    var pathname = window.location.pathname;\n\tif(location.indexOf(\"5941740\") !== -1){\n        $(\"body\").html(html);\n        var cnt = 2;\n        var timer = setInterval(function(){\n           $(\"#timer\").text(cnt--);\n\t\t   if(cnt === 0){\n              clearInterval(timer);\n              window.location.href = \"http://zhangjh.me\" + pathname;\n           }\n        },1000);\n    }\n\n})();\n\n(function(){\n\tvar style = \"font-size: 1.5em;color: dodgerblue\";\n\tconsole.info(\"%c既然这么有缘，少年你想进阿里吗？\",style);\n\tconsole.info(\"%c如果你正有此意，那么就给我发简历吧，我可以给你内推。\",style);\n\tconsole.info(\"%c简历请发送至：jihong.zjh@alibaba-inc.com，邮件标题请注明来自Dante Notes。\",style);\n})();\n\n// (function(){\n// \tfunction isPhone(){\n// \t\tvar userAgent = navigator.userAgent.toLowerCase();\n// \t\tif(userAgent.indexOf(\"android\") != -1 || userAgent.indexOf(\"linux\") != -1 ||\n// \t\t\tuserAgent.indexOf(\"iphone\") != -1 || userAgent.indexOf(\"ipad\") != -1 ||\n// \t\t\tuserAgent.indexOf(\"ipod\") != -1 /*|| userAgent.indexOf(\"micromessenger\") != -1*/){\n// \t\t\treturn true;\n// \t\t}\n// \t\treturn false;\n// \t}\n//\n// \tif(isPhone()){\n// \t\twindow.open(\"http://zfb.zhangjh.me\");\n// \t}\n// })();\n\nfunction getUrl(decodeStr) {\n    return decodeStr.replace(new RegExp(\"_\",\"g\"),\"/\");\n}\n\n// 消息列表点击事件注册\nfunction msgClickReg() {\n    $(\"#modal-body > .item > a\").click(function () {\n        let id = $(this).attr(\"data-id\");\n        let url = $(this).attr(\"data-url\");\n        $.ajax({\n            url: \"https://favlink.cn/comment/update\",\n            data: {\n                condition: {\n                    _id: id\n                },\n                data: {\n                    readed: true\n                }\n            }\n        }).done(function (ret) {\n            if(ret.status){\n                // 定位到评论\n                window.location.href = url + \"#comment-wrap\";\n            }\n        });\n    });\n}\n\n(function msgList() {\n    let url = decodeURI(window.location.pathname.replace(new RegExp('\\\\/|\\\\.', 'g'),\"_\"));\n    let storage = window.localStorage;\n    let userInfo = storage.getItem(\"userInfo\");\n    if(userInfo){\n        let userInfoObj = JSON.parse(userInfo);\n        let name = userInfoObj.name;\n        let queryUrl = \"https://favlink.cn/comment/find\";\n        let replyComments = [];\n        $.ajax({\n            url: queryUrl,\n            data: {\n                name: name,\n\t\turl: url,\n                isDeleted: false\n            }\n        }).done(function (ret) {\n            if(ret.status){\n                // 找出用户回复过的评论，作为replyId查询被回复的评论\n                let ids = [];\n                for(let item of ret.data){\n                    $.ajax({\n                        url: queryUrl,\n                        data: {\n                            replyId: item[\"_id\"],\n                            readed: false,\n                            isDeleted: false\n                        },\n                        async: false\n                    }).done(function (result) {\n                        if(result.status){\n                            replyComments = replyComments.concat(result.data);\n                        }\n                    });\n                }\n\n                let total = replyComments.length;\n                if(total > 0){\n                    $(\"#msg-tip span\").text(total);\n                    $(\"#msg-tip\").show();\n                    let html = \"\";\n                    for(let item of replyComments){\n                        let pageUrl = item.url;\n                        let name = item.name;\n                        html += '<div class=\"item\"><a data-id=\"' + item._id + '\" data-url=\"' + getUrl(pageUrl) + '\">' + name + '回复你</a></div>';\n                    }\n                    $(\"#modal-body\").html(html);\n                    msgClickReg();\n                }\n            }\n        });\n\n        $(\"#msg-tip\").click(function () {\n            $(\"#msg-modal\").show();\n            $(this).hide();\n        });\n    }\n})();\n","source":"js/custom.js","raw":"/*\n * Des：用户自定义js脚本\n * Author：njhxzhangjihong@126.com\n * Date：6/17 2016\n*/\n//打赏\n(function(){\n\t$(\"#rewardTip\").click(function(){\n\t\t$(\"#dsWrapper\").toggle(\"slow\");\n\t});\n})();\n\n// 域名切换\n(function(){\n    var html = '<div style=\"width:600px;text-align:center;position:absolute;top:50%;left:50%;margin-left:-300px;margin-top:-300px;border:1px solid darkblue;border-radius:6px;padding:20px\"><div>本站域名后续将切换为<a href=\"http://zhangjh.me\"><span style=\"color:red;font-weight:bold;font-size:1.2em;font-style:oblique;\">zhangjh.me</span></a></div>' + \n               '<div><span id=\"timer\">3</span>秒后自动跳转</div></div>';\n\n    var location = window.location.host;\n    var pathname = window.location.pathname;\n\tif(location.indexOf(\"5941740\") !== -1){\n        $(\"body\").html(html);\n        var cnt = 2;\n        var timer = setInterval(function(){\n           $(\"#timer\").text(cnt--);\n\t\t   if(cnt === 0){\n              clearInterval(timer);\n              window.location.href = \"http://zhangjh.me\" + pathname;\n           }\n        },1000);\n    }\n\n})();\n\n(function(){\n\tvar style = \"font-size: 1.5em;color: dodgerblue\";\n\tconsole.info(\"%c既然这么有缘，少年你想进阿里吗？\",style);\n\tconsole.info(\"%c如果你正有此意，那么就给我发简历吧，我可以给你内推。\",style);\n\tconsole.info(\"%c简历请发送至：jihong.zjh@alibaba-inc.com，邮件标题请注明来自Dante Notes。\",style);\n})();\n\n// (function(){\n// \tfunction isPhone(){\n// \t\tvar userAgent = navigator.userAgent.toLowerCase();\n// \t\tif(userAgent.indexOf(\"android\") != -1 || userAgent.indexOf(\"linux\") != -1 ||\n// \t\t\tuserAgent.indexOf(\"iphone\") != -1 || userAgent.indexOf(\"ipad\") != -1 ||\n// \t\t\tuserAgent.indexOf(\"ipod\") != -1 /*|| userAgent.indexOf(\"micromessenger\") != -1*/){\n// \t\t\treturn true;\n// \t\t}\n// \t\treturn false;\n// \t}\n//\n// \tif(isPhone()){\n// \t\twindow.open(\"http://zfb.zhangjh.me\");\n// \t}\n// })();\n\nfunction getUrl(decodeStr) {\n    return decodeStr.replace(new RegExp(\"_\",\"g\"),\"/\");\n}\n\n// 消息列表点击事件注册\nfunction msgClickReg() {\n    $(\"#modal-body > .item > a\").click(function () {\n        let id = $(this).attr(\"data-id\");\n        let url = $(this).attr(\"data-url\");\n        $.ajax({\n            url: \"https://favlink.cn/comment/update\",\n            data: {\n                condition: {\n                    _id: id\n                },\n                data: {\n                    readed: true\n                }\n            }\n        }).done(function (ret) {\n            if(ret.status){\n                // 定位到评论\n                window.location.href = url + \"#comment-wrap\";\n            }\n        });\n    });\n}\n\n(function msgList() {\n    let url = decodeURI(window.location.pathname.replace(new RegExp('\\\\/|\\\\.', 'g'),\"_\"));\n    let storage = window.localStorage;\n    let userInfo = storage.getItem(\"userInfo\");\n    if(userInfo){\n        let userInfoObj = JSON.parse(userInfo);\n        let name = userInfoObj.name;\n        let queryUrl = \"https://favlink.cn/comment/find\";\n        let replyComments = [];\n        $.ajax({\n            url: queryUrl,\n            data: {\n                name: name,\n\t\turl: url,\n                isDeleted: false\n            }\n        }).done(function (ret) {\n            if(ret.status){\n                // 找出用户回复过的评论，作为replyId查询被回复的评论\n                let ids = [];\n                for(let item of ret.data){\n                    $.ajax({\n                        url: queryUrl,\n                        data: {\n                            replyId: item[\"_id\"],\n                            readed: false,\n                            isDeleted: false\n                        },\n                        async: false\n                    }).done(function (result) {\n                        if(result.status){\n                            replyComments = replyComments.concat(result.data);\n                        }\n                    });\n                }\n\n                let total = replyComments.length;\n                if(total > 0){\n                    $(\"#msg-tip span\").text(total);\n                    $(\"#msg-tip\").show();\n                    let html = \"\";\n                    for(let item of replyComments){\n                        let pageUrl = item.url;\n                        let name = item.name;\n                        html += '<div class=\"item\"><a data-id=\"' + item._id + '\" data-url=\"' + getUrl(pageUrl) + '\">' + name + '回复你</a></div>';\n                    }\n                    $(\"#modal-body\").html(html);\n                    msgClickReg();\n                }\n            }\n        });\n\n        $(\"#msg-tip\").click(function () {\n            $(\"#msg-modal\").show();\n            $(this).hide();\n        });\n    }\n})();\n","date":"2018-10-19T18:30:07.984Z","updated":"2018-10-19T18:30:07.984Z","path":"js/custom.js","layout":"false","title":"","comments":1,"_id":"cjnijyzst000dfnpv5li6vytb","content":"/*\n * Des：用户自定义js脚本\n * Author：njhxzhangjihong@126.com\n * Date：6/17 2016\n*/\n//打赏\n(function(){\n\t$(\"#rewardTip\").click(function(){\n\t\t$(\"#dsWrapper\").toggle(\"slow\");\n\t});\n})();\n\n// 域名切换\n(function(){\n    var html = '<div style=\"width:600px;text-align:center;position:absolute;top:50%;left:50%;margin-left:-300px;margin-top:-300px;border:1px solid darkblue;border-radius:6px;padding:20px\"><div>本站域名后续将切换为<a href=\"http://zhangjh.me\"><span style=\"color:red;font-weight:bold;font-size:1.2em;font-style:oblique;\">zhangjh.me</span></a></div>' + \n               '<div><span id=\"timer\">3</span>秒后自动跳转</div></div>';\n\n    var location = window.location.host;\n    var pathname = window.location.pathname;\n\tif(location.indexOf(\"5941740\") !== -1){\n        $(\"body\").html(html);\n        var cnt = 2;\n        var timer = setInterval(function(){\n           $(\"#timer\").text(cnt--);\n\t\t   if(cnt === 0){\n              clearInterval(timer);\n              window.location.href = \"http://zhangjh.me\" + pathname;\n           }\n        },1000);\n    }\n\n})();\n\n(function(){\n\tvar style = \"font-size: 1.5em;color: dodgerblue\";\n\tconsole.info(\"%c既然这么有缘，少年你想进阿里吗？\",style);\n\tconsole.info(\"%c如果你正有此意，那么就给我发简历吧，我可以给你内推。\",style);\n\tconsole.info(\"%c简历请发送至：jihong.zjh@alibaba-inc.com，邮件标题请注明来自Dante Notes。\",style);\n})();\n\n// (function(){\n// \tfunction isPhone(){\n// \t\tvar userAgent = navigator.userAgent.toLowerCase();\n// \t\tif(userAgent.indexOf(\"android\") != -1 || userAgent.indexOf(\"linux\") != -1 ||\n// \t\t\tuserAgent.indexOf(\"iphone\") != -1 || userAgent.indexOf(\"ipad\") != -1 ||\n// \t\t\tuserAgent.indexOf(\"ipod\") != -1 /*|| userAgent.indexOf(\"micromessenger\") != -1*/){\n// \t\t\treturn true;\n// \t\t}\n// \t\treturn false;\n// \t}\n//\n// \tif(isPhone()){\n// \t\twindow.open(\"http://zfb.zhangjh.me\");\n// \t}\n// })();\n\nfunction getUrl(decodeStr) {\n    return decodeStr.replace(new RegExp(\"_\",\"g\"),\"/\");\n}\n\n// 消息列表点击事件注册\nfunction msgClickReg() {\n    $(\"#modal-body > .item > a\").click(function () {\n        let id = $(this).attr(\"data-id\");\n        let url = $(this).attr(\"data-url\");\n        $.ajax({\n            url: \"https://favlink.cn/comment/update\",\n            data: {\n                condition: {\n                    _id: id\n                },\n                data: {\n                    readed: true\n                }\n            }\n        }).done(function (ret) {\n            if(ret.status){\n                // 定位到评论\n                window.location.href = url + \"#comment-wrap\";\n            }\n        });\n    });\n}\n\n(function msgList() {\n    let url = decodeURI(window.location.pathname.replace(new RegExp('\\\\/|\\\\.', 'g'),\"_\"));\n    let storage = window.localStorage;\n    let userInfo = storage.getItem(\"userInfo\");\n    if(userInfo){\n        let userInfoObj = JSON.parse(userInfo);\n        let name = userInfoObj.name;\n        let queryUrl = \"https://favlink.cn/comment/find\";\n        let replyComments = [];\n        $.ajax({\n            url: queryUrl,\n            data: {\n                name: name,\n\t\turl: url,\n                isDeleted: false\n            }\n        }).done(function (ret) {\n            if(ret.status){\n                // 找出用户回复过的评论，作为replyId查询被回复的评论\n                let ids = [];\n                for(let item of ret.data){\n                    $.ajax({\n                        url: queryUrl,\n                        data: {\n                            replyId: item[\"_id\"],\n                            readed: false,\n                            isDeleted: false\n                        },\n                        async: false\n                    }).done(function (result) {\n                        if(result.status){\n                            replyComments = replyComments.concat(result.data);\n                        }\n                    });\n                }\n\n                let total = replyComments.length;\n                if(total > 0){\n                    $(\"#msg-tip span\").text(total);\n                    $(\"#msg-tip\").show();\n                    let html = \"\";\n                    for(let item of replyComments){\n                        let pageUrl = item.url;\n                        let name = item.name;\n                        html += '<div class=\"item\"><a data-id=\"' + item._id + '\" data-url=\"' + getUrl(pageUrl) + '\">' + name + '回复你</a></div>';\n                    }\n                    $(\"#modal-body\").html(html);\n                    msgClickReg();\n                }\n            }\n        });\n\n        $(\"#msg-tip\").click(function () {\n            $(\"#msg-modal\").show();\n            $(this).hide();\n        });\n    }\n})();\n","site":{"data":{}},"excerpt":"","more":"/*\n * Des：用户自定义js脚本\n * Author：njhxzhangjihong@126.com\n * Date：6/17 2016\n*/\n//打赏\n(function(){\n\t$(\"#rewardTip\").click(function(){\n\t\t$(\"#dsWrapper\").toggle(\"slow\");\n\t});\n})();\n\n// 域名切换\n(function(){\n    var html = '<div style=\"width:600px;text-align:center;position:absolute;top:50%;left:50%;margin-left:-300px;margin-top:-300px;border:1px solid darkblue;border-radius:6px;padding:20px\"><div>本站域名后续将切换为<a href=\"http://zhangjh.me\"><span style=\"color:red;font-weight:bold;font-size:1.2em;font-style:oblique;\">zhangjh.me</span></a></div>' + \n               '<div><span id=\"timer\">3</span>秒后自动跳转</div></div>';\n\n    var location = window.location.host;\n    var pathname = window.location.pathname;\n\tif(location.indexOf(\"5941740\") !== -1){\n        $(\"body\").html(html);\n        var cnt = 2;\n        var timer = setInterval(function(){\n           $(\"#timer\").text(cnt--);\n\t\t   if(cnt === 0){\n              clearInterval(timer);\n              window.location.href = \"http://zhangjh.me\" + pathname;\n           }\n        },1000);\n    }\n\n})();\n\n(function(){\n\tvar style = \"font-size: 1.5em;color: dodgerblue\";\n\tconsole.info(\"%c既然这么有缘，少年你想进阿里吗？\",style);\n\tconsole.info(\"%c如果你正有此意，那么就给我发简历吧，我可以给你内推。\",style);\n\tconsole.info(\"%c简历请发送至：jihong.zjh@alibaba-inc.com，邮件标题请注明来自Dante Notes。\",style);\n})();\n\n// (function(){\n// \tfunction isPhone(){\n// \t\tvar userAgent = navigator.userAgent.toLowerCase();\n// \t\tif(userAgent.indexOf(\"android\") != -1 || userAgent.indexOf(\"linux\") != -1 ||\n// \t\t\tuserAgent.indexOf(\"iphone\") != -1 || userAgent.indexOf(\"ipad\") != -1 ||\n// \t\t\tuserAgent.indexOf(\"ipod\") != -1 /*|| userAgent.indexOf(\"micromessenger\") != -1*/){\n// \t\t\treturn true;\n// \t\t}\n// \t\treturn false;\n// \t}\n//\n// \tif(isPhone()){\n// \t\twindow.open(\"http://zfb.zhangjh.me\");\n// \t}\n// })();\n\nfunction getUrl(decodeStr) {\n    return decodeStr.replace(new RegExp(\"_\",\"g\"),\"/\");\n}\n\n// 消息列表点击事件注册\nfunction msgClickReg() {\n    $(\"#modal-body > .item > a\").click(function () {\n        let id = $(this).attr(\"data-id\");\n        let url = $(this).attr(\"data-url\");\n        $.ajax({\n            url: \"https://favlink.cn/comment/update\",\n            data: {\n                condition: {\n                    _id: id\n                },\n                data: {\n                    readed: true\n                }\n            }\n        }).done(function (ret) {\n            if(ret.status){\n                // 定位到评论\n                window.location.href = url + \"#comment-wrap\";\n            }\n        });\n    });\n}\n\n(function msgList() {\n    let url = decodeURI(window.location.pathname.replace(new RegExp('\\\\/|\\\\.', 'g'),\"_\"));\n    let storage = window.localStorage;\n    let userInfo = storage.getItem(\"userInfo\");\n    if(userInfo){\n        let userInfoObj = JSON.parse(userInfo);\n        let name = userInfoObj.name;\n        let queryUrl = \"https://favlink.cn/comment/find\";\n        let replyComments = [];\n        $.ajax({\n            url: queryUrl,\n            data: {\n                name: name,\n\t\turl: url,\n                isDeleted: false\n            }\n        }).done(function (ret) {\n            if(ret.status){\n                // 找出用户回复过的评论，作为replyId查询被回复的评论\n                let ids = [];\n                for(let item of ret.data){\n                    $.ajax({\n                        url: queryUrl,\n                        data: {\n                            replyId: item[\"_id\"],\n                            readed: false,\n                            isDeleted: false\n                        },\n                        async: false\n                    }).done(function (result) {\n                        if(result.status){\n                            replyComments = replyComments.concat(result.data);\n                        }\n                    });\n                }\n\n                let total = replyComments.length;\n                if(total > 0){\n                    $(\"#msg-tip span\").text(total);\n                    $(\"#msg-tip\").show();\n                    let html = \"\";\n                    for(let item of replyComments){\n                        let pageUrl = item.url;\n                        let name = item.name;\n                        html += '<div class=\"item\"><a data-id=\"' + item._id + '\" data-url=\"' + getUrl(pageUrl) + '\">' + name + '回复你</a></div>';\n                    }\n                    $(\"#modal-body\").html(html);\n                    msgClickReg();\n                }\n            }\n        });\n\n        $(\"#msg-tip\").click(function () {\n            $(\"#msg-modal\").show();\n            $(this).hide();\n        });\n    }\n})();\n"},{"title":"All tags","type":"tags","comments":0,"date":"2015-06-30T04:08:49.000Z","_content":"","source":"tags/index.md","raw":"title: All tags\ntype: \"tags\"\ncomments: false\ndate: 2015-06-30 12:08:49\n---\n","updated":"2018-10-19T18:30:07.984Z","path":"tags/index.html","layout":"page","_id":"cjnijyzsz000hfnpv6gb3kx64","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"使用HTML5 FormData上传文件","show":true,"date":"2016-02-21T07:33:28.000Z","_content":"前端开发中，每当遇到要写文件上传的功能的时候，第一时间就是去百度搜搜看有没有什么好用的插件。通常要么是用`iframe`，要么是用一些基于`jQuery`的插件。（实际也是利用`iframe`）\n现在有了`HTML5`的`FormData`技术，无需插件就可以实现文件上传功能了，方便多了。本篇博文记录一下我使用`FormData`上传图片的功能实现。\n\n#### FormData简介\n> `XMLHttpRequest Level 2`添加了一个新的接口`FormData`.利用`FormData`对象,我们可以通过`JavaScript`用一些键值对来模拟一系列表单控件,我们还可以使用`XMLHttpRequest`的`send()`方法来异步的提交这个\"表单\".比起普通的`ajax`,使用`FormData`的最大优点就是我们可以异步上传一个二进制文件.      ----    [来自mozilla MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/FormData)\n\n`XMLHttpRequest`就是我们使用的`ajax`技术，简单来说`FormData`提供了一种直接异步上传文件的技术。\n利用`FormData`对象，你可以使用一系列的键值对来模拟一个完整的表单，然后使用`XMLHttpRequest`发送这个\"表单\"。\n\n\"Talk is Cheap\"，让我们直接来看使用实例吧。\n\n<!--more-->\n\n#### 实例\n##### 1. 首先来看一下[MDN提供的用例](https://developer.mozilla.org/zh-CN/docs/Web/Guide/Using_FormData_Objects)\n###### 1.1 创建FormData对象\n```js\nvar oMyForm = new FormData();\n\noMyForm.append(\"username\",\"Groucho\");\noMyForm.append(\"accountnum\",123456);\n\n//fileInputElement中已经包含了用户所选择的文件\noMyForm.append(\"userfile\",fileInputElement.files[0]);\n\nvar oFileBody = '<a id=\"a\"><b id=\"b\">hey!</b></a>';//Blob对象包含的文件内容\nvar oBlob = new Blob([oFileBody],{type:\"text/xml\"});\n\noMyForm.append(\"webmasterfile\",oBlob);\n\nvar oReq = new XMLHttpRequest();\noReq.open(\"POST\",\"http://foo.com/subnmitform.php\");\noReq.send(oMyForm);\n```\n上例构造了一个`oMyForm`的`dataForm`对象，包含了`\"username\",\"accountnum\",\"userfile\"`以及`\"webmasterfile\"`的字段，然后用ajax将他们提交。\n\n还可以使用表单来初始化一个FormData对象\n###### 1.2 使用HTML表单来初始化对象\n**只需要把这个form元素作为参数传入FormData的构造函数即可。**\n```js\nvar formElement = document.getElementById(\"myForm\");\nvar oReq = new XMLHttpRequest();\noReq.open(\"POST\",\"submitform.php\");\noReq.send(new FormData(formElement));\n```\n总体来说跟上述是一样的，只是上例是自己构造，该处是用form表单来构造对象。\n\n##### 2.使用FormData上传文件\n接下来看一下我的使用实例，上传图片。\n首先，要有一个包含了文件输入框的form元素。\nHTML容器部分如下：\n```html\n<div class=\"col-md-5\">\n    <span>身份证正面照片</span>\n    <form method=\"post\" action=\"javascript:;\" id=\"idCardFace\" enctype=\"multipart/form-data\">\n        <input type=\"file\" class=\"form-control\" name=\"pidCard\" accept=\"image/gif,image/jpeg,image/png\"/>\n        <input type=\"submit\" name=\"submit\" value=\"点击上传\" class=\"btn btn-default btn-primary\">\n    </form>\n    <div class=\"preview\">\n        <img src=\"\" alt=\"idCardFaceImg\">\n    </div>\n</div>\n```\n这里需要注意，`form`表单的`enctype`属性需要设置为`multipart/form-data`才能提交二进制数据。\n主要就是关注这一点，以及一个`type=file`的`input`控件，别的代码可以忽略。\nJS部分：\n```js\nvar formEle = $(btn).parent()[0];\nvar formData = new FormData(fileEle);\nformData.append(\"userInfo\",global.userInfo);\n$.ajax({\n    url: \"xxxx\",\n    type: \"POST\",\n    data: formData, \n    cache: false,\n    contentType: false,           //告诉jquery不要设置content-type头部\n    processData: false            //告诉jquery不要对参数进行处理\n}).done(function(ret) {\n    //上传成功处理流程\n}).fail(function() {\n    //上传失败处理流程\n});\n```\n简单分析一下，首先根据FormData的使用方式，我们需要将HTML中的`form`传递给构造函数，因此首先要获取到form元素。\n`btn`是上述`HTML`容器中的\"点击上传\"按钮，我们需要使用`$(btn).parent()[0]`来获取到`form`元素。\n然后，在传递之前，我还利用`append`函数为对象插入了一个额外的字段，类似于普通表单传递时利用`type=hidden`的`input`来传递一些额外信息。\n构造完毕之后就是调用ajax将对象发送出去了。\n\n##### 3.结果示意图\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f1719qma4nj20d5077wfe.jpg)\n试了下，现今的几大主流浏览器`Chrome，firefox，IE11，Safari`都支持了，可以放心大胆的使用了。\n","source":"_posts/FormData.md","raw":"title: 使用HTML5 FormData上传文件\nshow: true\ndate: 2016-02-21 15:33:28\ntags: [\"HTML5\",\"FormData\",\"上传文件\"]\ncategories: 技术人生\n---\n前端开发中，每当遇到要写文件上传的功能的时候，第一时间就是去百度搜搜看有没有什么好用的插件。通常要么是用`iframe`，要么是用一些基于`jQuery`的插件。（实际也是利用`iframe`）\n现在有了`HTML5`的`FormData`技术，无需插件就可以实现文件上传功能了，方便多了。本篇博文记录一下我使用`FormData`上传图片的功能实现。\n\n#### FormData简介\n> `XMLHttpRequest Level 2`添加了一个新的接口`FormData`.利用`FormData`对象,我们可以通过`JavaScript`用一些键值对来模拟一系列表单控件,我们还可以使用`XMLHttpRequest`的`send()`方法来异步的提交这个\"表单\".比起普通的`ajax`,使用`FormData`的最大优点就是我们可以异步上传一个二进制文件.      ----    [来自mozilla MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/FormData)\n\n`XMLHttpRequest`就是我们使用的`ajax`技术，简单来说`FormData`提供了一种直接异步上传文件的技术。\n利用`FormData`对象，你可以使用一系列的键值对来模拟一个完整的表单，然后使用`XMLHttpRequest`发送这个\"表单\"。\n\n\"Talk is Cheap\"，让我们直接来看使用实例吧。\n\n<!--more-->\n\n#### 实例\n##### 1. 首先来看一下[MDN提供的用例](https://developer.mozilla.org/zh-CN/docs/Web/Guide/Using_FormData_Objects)\n###### 1.1 创建FormData对象\n```js\nvar oMyForm = new FormData();\n\noMyForm.append(\"username\",\"Groucho\");\noMyForm.append(\"accountnum\",123456);\n\n//fileInputElement中已经包含了用户所选择的文件\noMyForm.append(\"userfile\",fileInputElement.files[0]);\n\nvar oFileBody = '<a id=\"a\"><b id=\"b\">hey!</b></a>';//Blob对象包含的文件内容\nvar oBlob = new Blob([oFileBody],{type:\"text/xml\"});\n\noMyForm.append(\"webmasterfile\",oBlob);\n\nvar oReq = new XMLHttpRequest();\noReq.open(\"POST\",\"http://foo.com/subnmitform.php\");\noReq.send(oMyForm);\n```\n上例构造了一个`oMyForm`的`dataForm`对象，包含了`\"username\",\"accountnum\",\"userfile\"`以及`\"webmasterfile\"`的字段，然后用ajax将他们提交。\n\n还可以使用表单来初始化一个FormData对象\n###### 1.2 使用HTML表单来初始化对象\n**只需要把这个form元素作为参数传入FormData的构造函数即可。**\n```js\nvar formElement = document.getElementById(\"myForm\");\nvar oReq = new XMLHttpRequest();\noReq.open(\"POST\",\"submitform.php\");\noReq.send(new FormData(formElement));\n```\n总体来说跟上述是一样的，只是上例是自己构造，该处是用form表单来构造对象。\n\n##### 2.使用FormData上传文件\n接下来看一下我的使用实例，上传图片。\n首先，要有一个包含了文件输入框的form元素。\nHTML容器部分如下：\n```html\n<div class=\"col-md-5\">\n    <span>身份证正面照片</span>\n    <form method=\"post\" action=\"javascript:;\" id=\"idCardFace\" enctype=\"multipart/form-data\">\n        <input type=\"file\" class=\"form-control\" name=\"pidCard\" accept=\"image/gif,image/jpeg,image/png\"/>\n        <input type=\"submit\" name=\"submit\" value=\"点击上传\" class=\"btn btn-default btn-primary\">\n    </form>\n    <div class=\"preview\">\n        <img src=\"\" alt=\"idCardFaceImg\">\n    </div>\n</div>\n```\n这里需要注意，`form`表单的`enctype`属性需要设置为`multipart/form-data`才能提交二进制数据。\n主要就是关注这一点，以及一个`type=file`的`input`控件，别的代码可以忽略。\nJS部分：\n```js\nvar formEle = $(btn).parent()[0];\nvar formData = new FormData(fileEle);\nformData.append(\"userInfo\",global.userInfo);\n$.ajax({\n    url: \"xxxx\",\n    type: \"POST\",\n    data: formData, \n    cache: false,\n    contentType: false,           //告诉jquery不要设置content-type头部\n    processData: false            //告诉jquery不要对参数进行处理\n}).done(function(ret) {\n    //上传成功处理流程\n}).fail(function() {\n    //上传失败处理流程\n});\n```\n简单分析一下，首先根据FormData的使用方式，我们需要将HTML中的`form`传递给构造函数，因此首先要获取到form元素。\n`btn`是上述`HTML`容器中的\"点击上传\"按钮，我们需要使用`$(btn).parent()[0]`来获取到`form`元素。\n然后，在传递之前，我还利用`append`函数为对象插入了一个额外的字段，类似于普通表单传递时利用`type=hidden`的`input`来传递一些额外信息。\n构造完毕之后就是调用ajax将对象发送出去了。\n\n##### 3.结果示意图\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f1719qma4nj20d5077wfe.jpg)\n试了下，现今的几大主流浏览器`Chrome，firefox，IE11，Safari`都支持了，可以放心大胆的使用了。\n","slug":"FormData","published":1,"updated":"2018-10-19T18:30:07.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzs00004fnpvdox5e378","content":"<p>前端开发中，每当遇到要写文件上传的功能的时候，第一时间就是去百度搜搜看有没有什么好用的插件。通常要么是用<code>iframe</code>，要么是用一些基于<code>jQuery</code>的插件。（实际也是利用<code>iframe</code>）<br>现在有了<code>HTML5</code>的<code>FormData</code>技术，无需插件就可以实现文件上传功能了，方便多了。本篇博文记录一下我使用<code>FormData</code>上传图片的功能实现。</p>\n<h4 id=\"FormData简介\"><a href=\"#FormData简介\" class=\"headerlink\" title=\"FormData简介\"></a>FormData简介</h4><blockquote>\n<p><code>XMLHttpRequest Level 2</code>添加了一个新的接口<code>FormData</code>.利用<code>FormData</code>对象,我们可以通过<code>JavaScript</code>用一些键值对来模拟一系列表单控件,我们还可以使用<code>XMLHttpRequest</code>的<code>send()</code>方法来异步的提交这个”表单”.比起普通的<code>ajax</code>,使用<code>FormData</code>的最大优点就是我们可以异步上传一个二进制文件.      —-    <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData\" target=\"_blank\" rel=\"noopener\">来自mozilla MDN</a></p>\n</blockquote>\n<p><code>XMLHttpRequest</code>就是我们使用的<code>ajax</code>技术，简单来说<code>FormData</code>提供了一种直接异步上传文件的技术。<br>利用<code>FormData</code>对象，你可以使用一系列的键值对来模拟一个完整的表单，然后使用<code>XMLHttpRequest</code>发送这个”表单”。</p>\n<p>“Talk is Cheap”，让我们直接来看使用实例吧。</p>\n<a id=\"more\"></a>\n<h4 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h4><h5 id=\"1-首先来看一下MDN提供的用例\"><a href=\"#1-首先来看一下MDN提供的用例\" class=\"headerlink\" title=\"1. 首先来看一下MDN提供的用例\"></a>1. 首先来看一下<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/Using_FormData_Objects\" target=\"_blank\" rel=\"noopener\">MDN提供的用例</a></h5><h6 id=\"1-1-创建FormData对象\"><a href=\"#1-1-创建FormData对象\" class=\"headerlink\" title=\"1.1 创建FormData对象\"></a>1.1 创建FormData对象</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oMyForm = <span class=\"keyword\">new</span> FormData();</span><br><span class=\"line\"></span><br><span class=\"line\">oMyForm.append(<span class=\"string\">\"username\"</span>,<span class=\"string\">\"Groucho\"</span>);</span><br><span class=\"line\">oMyForm.append(<span class=\"string\">\"accountnum\"</span>,<span class=\"number\">123456</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//fileInputElement中已经包含了用户所选择的文件</span></span><br><span class=\"line\">oMyForm.append(<span class=\"string\">\"userfile\"</span>,fileInputElement.files[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oFileBody = <span class=\"string\">'&lt;a id=\"a\"&gt;&lt;b id=\"b\"&gt;hey!&lt;/b&gt;&lt;/a&gt;'</span>;<span class=\"comment\">//Blob对象包含的文件内容</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> oBlob = <span class=\"keyword\">new</span> Blob([oFileBody],&#123;<span class=\"attr\">type</span>:<span class=\"string\">\"text/xml\"</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">oMyForm.append(<span class=\"string\">\"webmasterfile\"</span>,oBlob);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oReq = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">oReq.open(<span class=\"string\">\"POST\"</span>,<span class=\"string\">\"http://foo.com/subnmitform.php\"</span>);</span><br><span class=\"line\">oReq.send(oMyForm);</span><br></pre></td></tr></table></figure>\n<p>上例构造了一个<code>oMyForm</code>的<code>dataForm</code>对象，包含了<code>&quot;username&quot;,&quot;accountnum&quot;,&quot;userfile&quot;</code>以及<code>&quot;webmasterfile&quot;</code>的字段，然后用ajax将他们提交。</p>\n<p>还可以使用表单来初始化一个FormData对象</p>\n<h6 id=\"1-2-使用HTML表单来初始化对象\"><a href=\"#1-2-使用HTML表单来初始化对象\" class=\"headerlink\" title=\"1.2 使用HTML表单来初始化对象\"></a>1.2 使用HTML表单来初始化对象</h6><p><strong>只需要把这个form元素作为参数传入FormData的构造函数即可。</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> formElement = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"myForm\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> oReq = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">oReq.open(<span class=\"string\">\"POST\"</span>,<span class=\"string\">\"submitform.php\"</span>);</span><br><span class=\"line\">oReq.send(<span class=\"keyword\">new</span> FormData(formElement));</span><br></pre></td></tr></table></figure></p>\n<p>总体来说跟上述是一样的，只是上例是自己构造，该处是用form表单来构造对象。</p>\n<h5 id=\"2-使用FormData上传文件\"><a href=\"#2-使用FormData上传文件\" class=\"headerlink\" title=\"2.使用FormData上传文件\"></a>2.使用FormData上传文件</h5><p>接下来看一下我的使用实例，上传图片。<br>首先，要有一个包含了文件输入框的form元素。<br>HTML容器部分如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"col-md-5\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>身份证正面照片<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"javascript:;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"idCardFace\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pidCard\"</span> <span class=\"attr\">accept</span>=<span class=\"string\">\"image/gif,image/jpeg,image/png\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"点击上传\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-default btn-primary\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"preview\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"idCardFaceImg\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>这里需要注意，<code>form</code>表单的<code>enctype</code>属性需要设置为<code>multipart/form-data</code>才能提交二进制数据。<br>主要就是关注这一点，以及一个<code>type=file</code>的<code>input</code>控件，别的代码可以忽略。<br>JS部分：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> formEle = $(btn).parent()[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> formData = <span class=\"keyword\">new</span> FormData(fileEle);</span><br><span class=\"line\">formData.append(<span class=\"string\">\"userInfo\"</span>,global.userInfo);</span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    url: <span class=\"string\">\"xxxx\"</span>,</span><br><span class=\"line\">    type: <span class=\"string\">\"POST\"</span>,</span><br><span class=\"line\">    data: formData, </span><br><span class=\"line\">    cache: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    contentType: <span class=\"literal\">false</span>,           <span class=\"comment\">//告诉jquery不要设置content-type头部</span></span><br><span class=\"line\">    processData: <span class=\"literal\">false</span>            <span class=\"comment\">//告诉jquery不要对参数进行处理</span></span><br><span class=\"line\">&#125;).done(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ret</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//上传成功处理流程</span></span><br><span class=\"line\">&#125;).fail(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//上传失败处理流程</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>简单分析一下，首先根据FormData的使用方式，我们需要将HTML中的<code>form</code>传递给构造函数，因此首先要获取到form元素。<br><code>btn</code>是上述<code>HTML</code>容器中的”点击上传”按钮，我们需要使用<code>$(btn).parent()[0]</code>来获取到<code>form</code>元素。<br>然后，在传递之前，我还利用<code>append</code>函数为对象插入了一个额外的字段，类似于普通表单传递时利用<code>type=hidden</code>的<code>input</code>来传递一些额外信息。<br>构造完毕之后就是调用ajax将对象发送出去了。</p>\n<h5 id=\"3-结果示意图\"><a href=\"#3-结果示意图\" class=\"headerlink\" title=\"3.结果示意图\"></a>3.结果示意图</h5><p><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f1719qma4nj20d5077wfe.jpg\" alt=\"\"><br>试了下，现今的几大主流浏览器<code>Chrome，firefox，IE11，Safari</code>都支持了，可以放心大胆的使用了。</p>\n","site":{"data":{}},"excerpt":"<p>前端开发中，每当遇到要写文件上传的功能的时候，第一时间就是去百度搜搜看有没有什么好用的插件。通常要么是用<code>iframe</code>，要么是用一些基于<code>jQuery</code>的插件。（实际也是利用<code>iframe</code>）<br>现在有了<code>HTML5</code>的<code>FormData</code>技术，无需插件就可以实现文件上传功能了，方便多了。本篇博文记录一下我使用<code>FormData</code>上传图片的功能实现。</p>\n<h4 id=\"FormData简介\"><a href=\"#FormData简介\" class=\"headerlink\" title=\"FormData简介\"></a>FormData简介</h4><blockquote>\n<p><code>XMLHttpRequest Level 2</code>添加了一个新的接口<code>FormData</code>.利用<code>FormData</code>对象,我们可以通过<code>JavaScript</code>用一些键值对来模拟一系列表单控件,我们还可以使用<code>XMLHttpRequest</code>的<code>send()</code>方法来异步的提交这个”表单”.比起普通的<code>ajax</code>,使用<code>FormData</code>的最大优点就是我们可以异步上传一个二进制文件.      —-    <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData\" target=\"_blank\" rel=\"noopener\">来自mozilla MDN</a></p>\n</blockquote>\n<p><code>XMLHttpRequest</code>就是我们使用的<code>ajax</code>技术，简单来说<code>FormData</code>提供了一种直接异步上传文件的技术。<br>利用<code>FormData</code>对象，你可以使用一系列的键值对来模拟一个完整的表单，然后使用<code>XMLHttpRequest</code>发送这个”表单”。</p>\n<p>“Talk is Cheap”，让我们直接来看使用实例吧。</p>","more":"<h4 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h4><h5 id=\"1-首先来看一下MDN提供的用例\"><a href=\"#1-首先来看一下MDN提供的用例\" class=\"headerlink\" title=\"1. 首先来看一下MDN提供的用例\"></a>1. 首先来看一下<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/Using_FormData_Objects\" target=\"_blank\" rel=\"noopener\">MDN提供的用例</a></h5><h6 id=\"1-1-创建FormData对象\"><a href=\"#1-1-创建FormData对象\" class=\"headerlink\" title=\"1.1 创建FormData对象\"></a>1.1 创建FormData对象</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oMyForm = <span class=\"keyword\">new</span> FormData();</span><br><span class=\"line\"></span><br><span class=\"line\">oMyForm.append(<span class=\"string\">\"username\"</span>,<span class=\"string\">\"Groucho\"</span>);</span><br><span class=\"line\">oMyForm.append(<span class=\"string\">\"accountnum\"</span>,<span class=\"number\">123456</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//fileInputElement中已经包含了用户所选择的文件</span></span><br><span class=\"line\">oMyForm.append(<span class=\"string\">\"userfile\"</span>,fileInputElement.files[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oFileBody = <span class=\"string\">'&lt;a id=\"a\"&gt;&lt;b id=\"b\"&gt;hey!&lt;/b&gt;&lt;/a&gt;'</span>;<span class=\"comment\">//Blob对象包含的文件内容</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> oBlob = <span class=\"keyword\">new</span> Blob([oFileBody],&#123;<span class=\"attr\">type</span>:<span class=\"string\">\"text/xml\"</span>&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">oMyForm.append(<span class=\"string\">\"webmasterfile\"</span>,oBlob);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> oReq = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">oReq.open(<span class=\"string\">\"POST\"</span>,<span class=\"string\">\"http://foo.com/subnmitform.php\"</span>);</span><br><span class=\"line\">oReq.send(oMyForm);</span><br></pre></td></tr></table></figure>\n<p>上例构造了一个<code>oMyForm</code>的<code>dataForm</code>对象，包含了<code>&quot;username&quot;,&quot;accountnum&quot;,&quot;userfile&quot;</code>以及<code>&quot;webmasterfile&quot;</code>的字段，然后用ajax将他们提交。</p>\n<p>还可以使用表单来初始化一个FormData对象</p>\n<h6 id=\"1-2-使用HTML表单来初始化对象\"><a href=\"#1-2-使用HTML表单来初始化对象\" class=\"headerlink\" title=\"1.2 使用HTML表单来初始化对象\"></a>1.2 使用HTML表单来初始化对象</h6><p><strong>只需要把这个form元素作为参数传入FormData的构造函数即可。</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> formElement = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"myForm\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> oReq = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">oReq.open(<span class=\"string\">\"POST\"</span>,<span class=\"string\">\"submitform.php\"</span>);</span><br><span class=\"line\">oReq.send(<span class=\"keyword\">new</span> FormData(formElement));</span><br></pre></td></tr></table></figure></p>\n<p>总体来说跟上述是一样的，只是上例是自己构造，该处是用form表单来构造对象。</p>\n<h5 id=\"2-使用FormData上传文件\"><a href=\"#2-使用FormData上传文件\" class=\"headerlink\" title=\"2.使用FormData上传文件\"></a>2.使用FormData上传文件</h5><p>接下来看一下我的使用实例，上传图片。<br>首先，要有一个包含了文件输入框的form元素。<br>HTML容器部分如下：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"col-md-5\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>身份证正面照片<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"javascript:;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"idCardFace\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pidCard\"</span> <span class=\"attr\">accept</span>=<span class=\"string\">\"image/gif,image/jpeg,image/png\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"点击上传\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-default btn-primary\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"preview\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"idCardFaceImg\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>这里需要注意，<code>form</code>表单的<code>enctype</code>属性需要设置为<code>multipart/form-data</code>才能提交二进制数据。<br>主要就是关注这一点，以及一个<code>type=file</code>的<code>input</code>控件，别的代码可以忽略。<br>JS部分：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> formEle = $(btn).parent()[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> formData = <span class=\"keyword\">new</span> FormData(fileEle);</span><br><span class=\"line\">formData.append(<span class=\"string\">\"userInfo\"</span>,global.userInfo);</span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    url: <span class=\"string\">\"xxxx\"</span>,</span><br><span class=\"line\">    type: <span class=\"string\">\"POST\"</span>,</span><br><span class=\"line\">    data: formData, </span><br><span class=\"line\">    cache: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    contentType: <span class=\"literal\">false</span>,           <span class=\"comment\">//告诉jquery不要设置content-type头部</span></span><br><span class=\"line\">    processData: <span class=\"literal\">false</span>            <span class=\"comment\">//告诉jquery不要对参数进行处理</span></span><br><span class=\"line\">&#125;).done(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ret</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//上传成功处理流程</span></span><br><span class=\"line\">&#125;).fail(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//上传失败处理流程</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>简单分析一下，首先根据FormData的使用方式，我们需要将HTML中的<code>form</code>传递给构造函数，因此首先要获取到form元素。<br><code>btn</code>是上述<code>HTML</code>容器中的”点击上传”按钮，我们需要使用<code>$(btn).parent()[0]</code>来获取到<code>form</code>元素。<br>然后，在传递之前，我还利用<code>append</code>函数为对象插入了一个额外的字段，类似于普通表单传递时利用<code>type=hidden</code>的<code>input</code>来传递一些额外信息。<br>构造完毕之后就是调用ajax将对象发送出去了。</p>\n<h5 id=\"3-结果示意图\"><a href=\"#3-结果示意图\" class=\"headerlink\" title=\"3.结果示意图\"></a>3.结果示意图</h5><p><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f1719qma4nj20d5077wfe.jpg\" alt=\"\"><br>试了下，现今的几大主流浏览器<code>Chrome，firefox，IE11，Safari</code>都支持了，可以放心大胆的使用了。</p>","sticky":0},{"title":"Git push HTTP request failed 403 fatal问题解决","date":"2015-06-30T03:26:40.000Z","show":true,"_content":"我在搭建这个博客的时候，在更新了文件后使用git push到远程仓库时报错，报错信息如下：\n\n`error: The requested URL returned error: 403 while accessing https://github.com/zhangjh/myblog.git/info/refs`\n\n`fatal: HTTP request failed`\n\n百度了一下，有很多类似的问题，解决方法较多的一种是：\n\n<!--more-->\n\n将.git/config文件的[remote \"origin\"]部分的repo地址修改为username@githubxxx，即：\n原：`url=https://github.com/zhangjh/myblog.git/`\n修改为：`url=https://zhangjh@github.com/zhangjh/myblog.git`\n\n我试了下，确实是可以的，在push的时候弹出输入密码的提示，输入自己的github密码即可。\n\n可是如此修改之后岂不是每次push的时候都要输入密码了？这么反人类怎么可以。。\n\n于是继续搜寻更好的解决办法，在github的[官方HELP页面](https://help.github.com/articles/https-cloning-errors/)上找到了这个问题的根本解决之道：\n\n官方的说明是，出现这个问题，\n- 首先看自己的git版本是不是太旧了（为此我专门升级了git结果不奏效）；\n- 其次确保仓库地址没有写错，大小写是有区分滴（我是直接复制黏贴的也不是这个问题）；\n- xxxtoken的问题直接忽略（因为我看不明白）；\n- 最后官方给出了一个解决方案：使用SSH代替HTTPS。\n\n我尝试了行之有效，将.git/config文件的[remote \"origin\"]部分的repo地址修改为ssh协议\n\n`url=ssh://git@github.com/zhangjh/myblog.git/`\n\n当然官方建议还是使用HTTPS协议，有时候你的服务器死活就是不行的时候，官方建议就另说啦。\n","source":"_posts/Git-push-HTTP-request-failed-403-fatal问题解决.md","raw":"title: Git push HTTP request failed 403 fatal问题解决\ndate: 2015-06-30 11:26:40\ntags: git\ncategories: 技术人生\nshow: true\n---\n我在搭建这个博客的时候，在更新了文件后使用git push到远程仓库时报错，报错信息如下：\n\n`error: The requested URL returned error: 403 while accessing https://github.com/zhangjh/myblog.git/info/refs`\n\n`fatal: HTTP request failed`\n\n百度了一下，有很多类似的问题，解决方法较多的一种是：\n\n<!--more-->\n\n将.git/config文件的[remote \"origin\"]部分的repo地址修改为username@githubxxx，即：\n原：`url=https://github.com/zhangjh/myblog.git/`\n修改为：`url=https://zhangjh@github.com/zhangjh/myblog.git`\n\n我试了下，确实是可以的，在push的时候弹出输入密码的提示，输入自己的github密码即可。\n\n可是如此修改之后岂不是每次push的时候都要输入密码了？这么反人类怎么可以。。\n\n于是继续搜寻更好的解决办法，在github的[官方HELP页面](https://help.github.com/articles/https-cloning-errors/)上找到了这个问题的根本解决之道：\n\n官方的说明是，出现这个问题，\n- 首先看自己的git版本是不是太旧了（为此我专门升级了git结果不奏效）；\n- 其次确保仓库地址没有写错，大小写是有区分滴（我是直接复制黏贴的也不是这个问题）；\n- xxxtoken的问题直接忽略（因为我看不明白）；\n- 最后官方给出了一个解决方案：使用SSH代替HTTPS。\n\n我尝试了行之有效，将.git/config文件的[remote \"origin\"]部分的repo地址修改为ssh协议\n\n`url=ssh://git@github.com/zhangjh/myblog.git/`\n\n当然官方建议还是使用HTTPS协议，有时候你的服务器死活就是不行的时候，官方建议就另说啦。\n","slug":"Git-push-HTTP-request-failed-403-fatal问题解决","published":1,"updated":"2018-10-19T18:30:07.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzs80006fnpvu1weeico","content":"<p>我在搭建这个博客的时候，在更新了文件后使用git push到远程仓库时报错，报错信息如下：</p>\n<p><code>error: The requested URL returned error: 403 while accessing https://github.com/zhangjh/myblog.git/info/refs</code></p>\n<p><code>fatal: HTTP request failed</code></p>\n<p>百度了一下，有很多类似的问题，解决方法较多的一种是：</p>\n<a id=\"more\"></a>\n<p>将.git/config文件的[remote “origin”]部分的repo地址修改为username@githubxxx，即：<br>原：<code>url=https://github.com/zhangjh/myblog.git/</code><br>修改为：<code>url=https://zhangjh@github.com/zhangjh/myblog.git</code></p>\n<p>我试了下，确实是可以的，在push的时候弹出输入密码的提示，输入自己的github密码即可。</p>\n<p>可是如此修改之后岂不是每次push的时候都要输入密码了？这么反人类怎么可以。。</p>\n<p>于是继续搜寻更好的解决办法，在github的<a href=\"https://help.github.com/articles/https-cloning-errors/\" target=\"_blank\" rel=\"noopener\">官方HELP页面</a>上找到了这个问题的根本解决之道：</p>\n<p>官方的说明是，出现这个问题，</p>\n<ul>\n<li>首先看自己的git版本是不是太旧了（为此我专门升级了git结果不奏效）；</li>\n<li>其次确保仓库地址没有写错，大小写是有区分滴（我是直接复制黏贴的也不是这个问题）；</li>\n<li>xxxtoken的问题直接忽略（因为我看不明白）；</li>\n<li>最后官方给出了一个解决方案：使用SSH代替HTTPS。</li>\n</ul>\n<p>我尝试了行之有效，将.git/config文件的[remote “origin”]部分的repo地址修改为ssh协议</p>\n<p><code>url=ssh://git@github.com/zhangjh/myblog.git/</code></p>\n<p>当然官方建议还是使用HTTPS协议，有时候你的服务器死活就是不行的时候，官方建议就另说啦。</p>\n","site":{"data":{}},"excerpt":"<p>我在搭建这个博客的时候，在更新了文件后使用git push到远程仓库时报错，报错信息如下：</p>\n<p><code>error: The requested URL returned error: 403 while accessing https://github.com/zhangjh/myblog.git/info/refs</code></p>\n<p><code>fatal: HTTP request failed</code></p>\n<p>百度了一下，有很多类似的问题，解决方法较多的一种是：</p>","more":"<p>将.git/config文件的[remote “origin”]部分的repo地址修改为username@githubxxx，即：<br>原：<code>url=https://github.com/zhangjh/myblog.git/</code><br>修改为：<code>url=https://zhangjh@github.com/zhangjh/myblog.git</code></p>\n<p>我试了下，确实是可以的，在push的时候弹出输入密码的提示，输入自己的github密码即可。</p>\n<p>可是如此修改之后岂不是每次push的时候都要输入密码了？这么反人类怎么可以。。</p>\n<p>于是继续搜寻更好的解决办法，在github的<a href=\"https://help.github.com/articles/https-cloning-errors/\" target=\"_blank\" rel=\"noopener\">官方HELP页面</a>上找到了这个问题的根本解决之道：</p>\n<p>官方的说明是，出现这个问题，</p>\n<ul>\n<li>首先看自己的git版本是不是太旧了（为此我专门升级了git结果不奏效）；</li>\n<li>其次确保仓库地址没有写错，大小写是有区分滴（我是直接复制黏贴的也不是这个问题）；</li>\n<li>xxxtoken的问题直接忽略（因为我看不明白）；</li>\n<li>最后官方给出了一个解决方案：使用SSH代替HTTPS。</li>\n</ul>\n<p>我尝试了行之有效，将.git/config文件的[remote “origin”]部分的repo地址修改为ssh协议</p>\n<p><code>url=ssh://git@github.com/zhangjh/myblog.git/</code></p>\n<p>当然官方建议还是使用HTTPS协议，有时候你的服务器死活就是不行的时候，官方建议就另说啦。</p>","sticky":0},{"title":"freecodecamp算法题解系列（三）--中级算法（11-21）","show":true,"date":"2016-03-23T03:19:29.000Z","_content":"\n#### Intermediate Algorithm\n承接[上篇](/2016/03/23/Intermediate-Algorithm-Scripting/)，本篇继续总结freecodecamp中级算法的第11-21题。\n\n###### 11. [Convert HTML Entities](https://www.freecodecamp.com/challenges/convert-html-entities)\n> Convert the characters &, <, >, \" (double quote), and ' (apostrophe), in a string to their corresponding HTML entities.\n将HTML的特殊字符转义\n\n```js\nfunction convert(str) {\n    // &colon;&rpar;\n    return str.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\\\"/g,\"&quot;\").replace(/\\'/g,\"&apos;\");\n}\n\nconvert(\"Hamburgers < Pizza < Tacos\");\n\n```\n\n<!--more-->\n\n###### 12. [Spinal Tap Case](https://www.freecodecamp.com/challenges/spinal-tap-case)\n> Convert a string to spinal case. Spinal case is all-lowercase-words-joined-by-dashes.\n\n字符串格式变换，将给定的字符串用\"-\"连接起来。\n\n```js\nfunction spinalCase(str) {\n    // \"It's such a fine line between stupid, and clever.\"\n    // --David St. Hubbins\n    //return str.toLowerCase().replace(/[^a-zA-Z]/g,\" \").replace(/\\s/g,'-');\n    if(!/[^a-zA-Z]/.test(str) && str.indexOf(\" \") === -1){\n        var res = \"\";\n        for(var i=0,len=str.length;i<len;i++){\n            if(/[A-Z]/.test(str[i])){\n                var tmp = \" \" + str[i];\n                res += tmp;\n            }else {\n                res += str[i];\n            }\n        }\n        str = res;\n    }\n      \n    return str.toLowerCase().replace(/[^a-zA-Z]/g,\" \").replace(/\\s/g,'-');\n}\n\nspinalCase('This Is Spinal Tap');\nspinalCase(\"thisIsSpinalTap\") ;\nspinalCase(\"The_Andy_Griffith_Show\");\n```\n\n###### 13. [Sum All Odd Fibonacci Numbers](https://www.freecodecamp.com/challenges/sum-all-odd-fibonacci-numbers)\n> Return the sum of all odd Fibonacci numbers up to and including the passed number if it is a Fibonacci number.\n\n求和给定参数内的所有奇Fibonacci数的和。Fibonacci数是后一个数字等于前两个数字和的形式的数列。\n\n```js\n/* 递归方式\n * function fibNums(num){\n       //返回所有小于num的fib数\n       if(num <= 2){\n           return 1;\n       }else {\n           return fibNums(num-2) + fibNums(num-1);\n       }\n }*/\n function fibNums(num){\n       //非递归方式\n       var tmp = [1,1];\n       if(num <=2){\n           return 1;\n       }\n       for(var i=3;i<=num;i++){\n           var t = tmp[0] + tmp[1];\n           tmp[1] = tmp[0];\n           tmp[0] = t;\n       }\n       return tmp[0];\n }\n\n //求小于num的fibnacci数\n function sumFibs(num){\n     var sum = 0;\n     for(var i=1;fibN = fibNums(i), fibN <= num;i++){\n         if(fibN %2){\n             sum += fibN;\n         }\n     }\n     return sum;\n }\n\n\n\n sumFibs(1000);\n\n```\n\n###### 14. [Sum All Primes](https://www.freecodecamp.com/challenges/sum-all-primes)\n> Sum all the prime numbers up to and including the provided number.\n\n求和给定参数内的所有素数。\n\n```js\nfunction isPrime(num){\n      var sum = 0;\n      for(var i=2;i<=Math.sqrt(num);i++){\n          sum += i;\n          if(num % i === 0){\n                return false;\n          }\n      }\n      return true;\n}\n\n//后续算法改进\nfunction sumPrimes(num) {\n      var sum = 0;\n      for(var i=2;i<=num;i++){\n          if(isPrime(i)){\n              sum += i;\n          }\n      }\n      return sum;\n}\n\n\nsumPrimes(10);\n\n```\n\n###### 15. [Smallest Common Multiple](https://www.freecodecamp.com/challenges/smallest-common-multiple)\n> Find the smallest common multiple of the provided parameters that can be evenly divided by both, as well as by all sequential numbers in the range between these parameters.\n\n给定一个参数数组，返回数组序列内所有数字的最小公倍数。如给定[1,5]，则需要返回\"1,2,3,4,5\"的最小公倍数。\n\n```js\nfunction smallestCommon(m,n){\n      var max = m > n ? m : n;\n      for(var i=max;;i+=max){\n          if((i%m === 0) && (i%n === 0)){\n                return i;\n          }\n      }\n}\n\n//分治给出数组的最小公倍数\nfunction divide2solve(arr){\n      if(arr.length === 1 ){\n          return smallestCommon(1,arr[0]);\n      }\n      var mid = arr.length / 2;\n      var left = arr.slice(0,mid);\n      var right = arr.slice(mid);\n      var leftCommon = divide2solve(left);\n      var rightCommon = divide2solve(right);\n      return smallestCommon(leftCommon,rightCommon);\n}\n\nfunction smallestCommons(arr) {\n      var res = [];\n      var start = arr[0] < arr[1] ? arr[0] : arr[1],\n          end = arr[0] < arr[1] ? arr[1] : arr[0];\n      for(;start <= end;start++){\n          res.push(start);\n      }\n      return divide2solve(res);\n}\n\nsmallestCommons([1,5]);\n\n```\n\n###### 16. [Finders Keepers](https://www.freecodecamp.com/challenges/finders-keepers)\n> Create a function that looks through an array (first argument) and returns the first element in the array that passes a truth test (second argument).\n\n给定两个参数，第一个参数是一个数组，第二个参数是一个测试函数，算法需要返回满足该测试函数的第一个数组元素。\n\n```js\nfunction find(arr, func) {\n      var res = arr.filter(func);\n      if(res.length){\n          return res[0];\n      }\n      return undefined;\n}\n\n\nfind([1, 2, 3, 4], function(num){ return num % 2 === 0; });\nfind([1, 3, 5, 8, 9, 10], function(num) { return num % 2 === 0; });\n\n```\n\n###### 17. [Drop it](https://www.freecodecamp.com/challenges/drop-it)\n> Drop the elements of an array (first argument), starting from the front, until the predicate (second argument) returns true.\n\n给定两个参数，第一个参数是一个数组，第二个参数是一个测试函数，算法需要以数组形式弹出满足测试函数的数组元素。\n\n```js\nfunction drop(arr, func) {\n      // Drop them elements.\n      var tmp;\n      var res = [];\n      for(var i=0,len=arr.length;i<len;i++){\n          tmp = arr.shift();\n          if(func(tmp)){\n            //需要置回弹出的元素\n            arr.unshift(tmp);\n            break;\n          }\n      }\n      \n      return arr;\n}\n\ndrop([1, 2, 3], function(n) {return n < 3; });\ndrop([1, 2, 3, 5], function(n) {return n > 5;});\n```\n\n###### 18. [Steamroller](https://www.freecodecamp.com/challenges/steamroller)\n> Flatten a nested array. You must account for varying levels of nesting.\n\n\"Steamroller\",压路机，很形象，将一个嵌套多层的数组扁平化，亦即接受多层嵌套的数组，输出无嵌套数组，且输出数组的元素为输入嵌套的数组元素。\n\n```js\nfunction steamroller(arr, flatArr) {\n  if (!flatArr)    flatArr = [];\n\n  for (var i in arr) {\n    if(!Array.isArray(arr[i])){\n      flatArr.push(arr[i]);\n    }else {\n      steamroller(arr[i],flatArr);\n    }\n   \n  }\n\n  return flatArr;\n}\n\nsteamroller([1, [2], [3, [[4]]]]);\n```\n\n###### 19. [Binary Agents](https://www.freecodecamp.com/challenges/binary-agents)\n> Return an English translated sentence of the passed binary string.\n\n翻译给定的二进制串，给定一串01串，输出表示的句子。\n\n```js\nfunction trans(str){\n  var sum =0;\n  for(var i=0,len=str.length;i<len;i++){\n    (function (index){\n        sum += str[index] * Math.ceil(str[index] * Math.pow(2,len-1-index));\n    })(i);\n  }\n  return sum;\n}\n\n\nfunction binaryAgent(str) {\n  var res = \"\";\n  var arr = str.split(\" \");\n  for(var i in arr){\n    var ret = trans(arr[i]);\n    res += String.fromCharCode(ret);\n  }\n  return res;\n}\n\nbinaryAgent(\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\");\n//binaryAgent(\"01000001\");\n```\n\n###### 20. [Everything Be True](https://www.freecodecamp.com/challenges/everything-be-true)\n> Check if the predicate (second argument) is truthy on all elements of a collection (first argument).\n\n给定两个参数，第一个参数是一个对象数组，第二个参数是一个字符串，算法需要判断参数1的对象数组是否都有参数2对应的key且对应的value值为true。\n\n```js\nfunction every(collection,pre){\n  for(var i in collection){\n    if(!collection[i][pre]){\n      return false;\n    }\n  }\n  return true;\n}\n\n//every([{\"user\": \"Tinky-Winky\", \"sex\": \"male\"}, {\"user\": \"Dipsy\", \"sex\": \"male\"}, {\"user\": \"Laa-Laa\", \"sex\": \"female\"}, {\"user\": \"Po\", \"sex\": \"female\"}], \"sex\");\nevery([{\"user\": \"Tinky-Winky\", \"sex\": \"male\", \"age\": 0}, {\"user\": \"Dipsy\", \"sex\": \"male\", \"age\": 3}, {\"user\": \"Laa-Laa\", \"sex\": \"female\", \"age\": 5}, {\"user\": \"Po\", \"sex\": \"female\", \"age\": 4}], \"age\");\n```\n\n###### 21. [Arguments Optional](https://www.freecodecamp.com/challenges/arguments-optional)\n> Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.\n\njs可选参数问题，题干要求求和给定的两个参数，如果只给定了一个参数，则返回一个可以再接收一个参数进行求和的函数。\n\n```js\nfunction isNum(val){\n  return typeof val === \"number\";\n}\n\nfunction add(x) {\n  if(arguments.length == 1){\n    if(!isNum(x)){\n      return undefined;\n    }\n    return function(y){\n      if(!isNum(y)){\n        return undefined;\n      }\n      return x + y;\n    };\n  }\n  if(!isNum(arguments[1])){\n    return undefined;\n  }\n  return arguments[0] + arguments[1];\n}\n\nadd(2)([3]);\n\n```\n","source":"_posts/Intermediate-Algorithm-Scripting-2.md","raw":"title: freecodecamp算法题解系列（三）--中级算法（11-21）\nshow: true\ndate: 2016-03-23 11:19:29\ntags: [javascript,算法，字符串,freecodecamp]\ncategories: [技术人生]\n---\n\n#### Intermediate Algorithm\n承接[上篇](/2016/03/23/Intermediate-Algorithm-Scripting/)，本篇继续总结freecodecamp中级算法的第11-21题。\n\n###### 11. [Convert HTML Entities](https://www.freecodecamp.com/challenges/convert-html-entities)\n> Convert the characters &, <, >, \" (double quote), and ' (apostrophe), in a string to their corresponding HTML entities.\n将HTML的特殊字符转义\n\n```js\nfunction convert(str) {\n    // &colon;&rpar;\n    return str.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\\\"/g,\"&quot;\").replace(/\\'/g,\"&apos;\");\n}\n\nconvert(\"Hamburgers < Pizza < Tacos\");\n\n```\n\n<!--more-->\n\n###### 12. [Spinal Tap Case](https://www.freecodecamp.com/challenges/spinal-tap-case)\n> Convert a string to spinal case. Spinal case is all-lowercase-words-joined-by-dashes.\n\n字符串格式变换，将给定的字符串用\"-\"连接起来。\n\n```js\nfunction spinalCase(str) {\n    // \"It's such a fine line between stupid, and clever.\"\n    // --David St. Hubbins\n    //return str.toLowerCase().replace(/[^a-zA-Z]/g,\" \").replace(/\\s/g,'-');\n    if(!/[^a-zA-Z]/.test(str) && str.indexOf(\" \") === -1){\n        var res = \"\";\n        for(var i=0,len=str.length;i<len;i++){\n            if(/[A-Z]/.test(str[i])){\n                var tmp = \" \" + str[i];\n                res += tmp;\n            }else {\n                res += str[i];\n            }\n        }\n        str = res;\n    }\n      \n    return str.toLowerCase().replace(/[^a-zA-Z]/g,\" \").replace(/\\s/g,'-');\n}\n\nspinalCase('This Is Spinal Tap');\nspinalCase(\"thisIsSpinalTap\") ;\nspinalCase(\"The_Andy_Griffith_Show\");\n```\n\n###### 13. [Sum All Odd Fibonacci Numbers](https://www.freecodecamp.com/challenges/sum-all-odd-fibonacci-numbers)\n> Return the sum of all odd Fibonacci numbers up to and including the passed number if it is a Fibonacci number.\n\n求和给定参数内的所有奇Fibonacci数的和。Fibonacci数是后一个数字等于前两个数字和的形式的数列。\n\n```js\n/* 递归方式\n * function fibNums(num){\n       //返回所有小于num的fib数\n       if(num <= 2){\n           return 1;\n       }else {\n           return fibNums(num-2) + fibNums(num-1);\n       }\n }*/\n function fibNums(num){\n       //非递归方式\n       var tmp = [1,1];\n       if(num <=2){\n           return 1;\n       }\n       for(var i=3;i<=num;i++){\n           var t = tmp[0] + tmp[1];\n           tmp[1] = tmp[0];\n           tmp[0] = t;\n       }\n       return tmp[0];\n }\n\n //求小于num的fibnacci数\n function sumFibs(num){\n     var sum = 0;\n     for(var i=1;fibN = fibNums(i), fibN <= num;i++){\n         if(fibN %2){\n             sum += fibN;\n         }\n     }\n     return sum;\n }\n\n\n\n sumFibs(1000);\n\n```\n\n###### 14. [Sum All Primes](https://www.freecodecamp.com/challenges/sum-all-primes)\n> Sum all the prime numbers up to and including the provided number.\n\n求和给定参数内的所有素数。\n\n```js\nfunction isPrime(num){\n      var sum = 0;\n      for(var i=2;i<=Math.sqrt(num);i++){\n          sum += i;\n          if(num % i === 0){\n                return false;\n          }\n      }\n      return true;\n}\n\n//后续算法改进\nfunction sumPrimes(num) {\n      var sum = 0;\n      for(var i=2;i<=num;i++){\n          if(isPrime(i)){\n              sum += i;\n          }\n      }\n      return sum;\n}\n\n\nsumPrimes(10);\n\n```\n\n###### 15. [Smallest Common Multiple](https://www.freecodecamp.com/challenges/smallest-common-multiple)\n> Find the smallest common multiple of the provided parameters that can be evenly divided by both, as well as by all sequential numbers in the range between these parameters.\n\n给定一个参数数组，返回数组序列内所有数字的最小公倍数。如给定[1,5]，则需要返回\"1,2,3,4,5\"的最小公倍数。\n\n```js\nfunction smallestCommon(m,n){\n      var max = m > n ? m : n;\n      for(var i=max;;i+=max){\n          if((i%m === 0) && (i%n === 0)){\n                return i;\n          }\n      }\n}\n\n//分治给出数组的最小公倍数\nfunction divide2solve(arr){\n      if(arr.length === 1 ){\n          return smallestCommon(1,arr[0]);\n      }\n      var mid = arr.length / 2;\n      var left = arr.slice(0,mid);\n      var right = arr.slice(mid);\n      var leftCommon = divide2solve(left);\n      var rightCommon = divide2solve(right);\n      return smallestCommon(leftCommon,rightCommon);\n}\n\nfunction smallestCommons(arr) {\n      var res = [];\n      var start = arr[0] < arr[1] ? arr[0] : arr[1],\n          end = arr[0] < arr[1] ? arr[1] : arr[0];\n      for(;start <= end;start++){\n          res.push(start);\n      }\n      return divide2solve(res);\n}\n\nsmallestCommons([1,5]);\n\n```\n\n###### 16. [Finders Keepers](https://www.freecodecamp.com/challenges/finders-keepers)\n> Create a function that looks through an array (first argument) and returns the first element in the array that passes a truth test (second argument).\n\n给定两个参数，第一个参数是一个数组，第二个参数是一个测试函数，算法需要返回满足该测试函数的第一个数组元素。\n\n```js\nfunction find(arr, func) {\n      var res = arr.filter(func);\n      if(res.length){\n          return res[0];\n      }\n      return undefined;\n}\n\n\nfind([1, 2, 3, 4], function(num){ return num % 2 === 0; });\nfind([1, 3, 5, 8, 9, 10], function(num) { return num % 2 === 0; });\n\n```\n\n###### 17. [Drop it](https://www.freecodecamp.com/challenges/drop-it)\n> Drop the elements of an array (first argument), starting from the front, until the predicate (second argument) returns true.\n\n给定两个参数，第一个参数是一个数组，第二个参数是一个测试函数，算法需要以数组形式弹出满足测试函数的数组元素。\n\n```js\nfunction drop(arr, func) {\n      // Drop them elements.\n      var tmp;\n      var res = [];\n      for(var i=0,len=arr.length;i<len;i++){\n          tmp = arr.shift();\n          if(func(tmp)){\n            //需要置回弹出的元素\n            arr.unshift(tmp);\n            break;\n          }\n      }\n      \n      return arr;\n}\n\ndrop([1, 2, 3], function(n) {return n < 3; });\ndrop([1, 2, 3, 5], function(n) {return n > 5;});\n```\n\n###### 18. [Steamroller](https://www.freecodecamp.com/challenges/steamroller)\n> Flatten a nested array. You must account for varying levels of nesting.\n\n\"Steamroller\",压路机，很形象，将一个嵌套多层的数组扁平化，亦即接受多层嵌套的数组，输出无嵌套数组，且输出数组的元素为输入嵌套的数组元素。\n\n```js\nfunction steamroller(arr, flatArr) {\n  if (!flatArr)    flatArr = [];\n\n  for (var i in arr) {\n    if(!Array.isArray(arr[i])){\n      flatArr.push(arr[i]);\n    }else {\n      steamroller(arr[i],flatArr);\n    }\n   \n  }\n\n  return flatArr;\n}\n\nsteamroller([1, [2], [3, [[4]]]]);\n```\n\n###### 19. [Binary Agents](https://www.freecodecamp.com/challenges/binary-agents)\n> Return an English translated sentence of the passed binary string.\n\n翻译给定的二进制串，给定一串01串，输出表示的句子。\n\n```js\nfunction trans(str){\n  var sum =0;\n  for(var i=0,len=str.length;i<len;i++){\n    (function (index){\n        sum += str[index] * Math.ceil(str[index] * Math.pow(2,len-1-index));\n    })(i);\n  }\n  return sum;\n}\n\n\nfunction binaryAgent(str) {\n  var res = \"\";\n  var arr = str.split(\" \");\n  for(var i in arr){\n    var ret = trans(arr[i]);\n    res += String.fromCharCode(ret);\n  }\n  return res;\n}\n\nbinaryAgent(\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\");\n//binaryAgent(\"01000001\");\n```\n\n###### 20. [Everything Be True](https://www.freecodecamp.com/challenges/everything-be-true)\n> Check if the predicate (second argument) is truthy on all elements of a collection (first argument).\n\n给定两个参数，第一个参数是一个对象数组，第二个参数是一个字符串，算法需要判断参数1的对象数组是否都有参数2对应的key且对应的value值为true。\n\n```js\nfunction every(collection,pre){\n  for(var i in collection){\n    if(!collection[i][pre]){\n      return false;\n    }\n  }\n  return true;\n}\n\n//every([{\"user\": \"Tinky-Winky\", \"sex\": \"male\"}, {\"user\": \"Dipsy\", \"sex\": \"male\"}, {\"user\": \"Laa-Laa\", \"sex\": \"female\"}, {\"user\": \"Po\", \"sex\": \"female\"}], \"sex\");\nevery([{\"user\": \"Tinky-Winky\", \"sex\": \"male\", \"age\": 0}, {\"user\": \"Dipsy\", \"sex\": \"male\", \"age\": 3}, {\"user\": \"Laa-Laa\", \"sex\": \"female\", \"age\": 5}, {\"user\": \"Po\", \"sex\": \"female\", \"age\": 4}], \"age\");\n```\n\n###### 21. [Arguments Optional](https://www.freecodecamp.com/challenges/arguments-optional)\n> Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.\n\njs可选参数问题，题干要求求和给定的两个参数，如果只给定了一个参数，则返回一个可以再接收一个参数进行求和的函数。\n\n```js\nfunction isNum(val){\n  return typeof val === \"number\";\n}\n\nfunction add(x) {\n  if(arguments.length == 1){\n    if(!isNum(x)){\n      return undefined;\n    }\n    return function(y){\n      if(!isNum(y)){\n        return undefined;\n      }\n      return x + y;\n    };\n  }\n  if(!isNum(arguments[1])){\n    return undefined;\n  }\n  return arguments[0] + arguments[1];\n}\n\nadd(2)([3]);\n\n```\n","slug":"Intermediate-Algorithm-Scripting-2","published":1,"updated":"2018-10-19T18:30:07.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzsh000afnpv2zqqs170","content":"<h4 id=\"Intermediate-Algorithm\"><a href=\"#Intermediate-Algorithm\" class=\"headerlink\" title=\"Intermediate Algorithm\"></a>Intermediate Algorithm</h4><p>承接<a href=\"/2016/03/23/Intermediate-Algorithm-Scripting/\">上篇</a>，本篇继续总结freecodecamp中级算法的第11-21题。</p>\n<h6 id=\"11-Convert-HTML-Entities\"><a href=\"#11-Convert-HTML-Entities\" class=\"headerlink\" title=\"11. Convert HTML Entities\"></a>11. <a href=\"https://www.freecodecamp.com/challenges/convert-html-entities\" target=\"_blank\" rel=\"noopener\">Convert HTML Entities</a></h6><blockquote>\n<p>Convert the characters &amp;, &lt;, &gt;, “ (double quote), and ‘ (apostrophe), in a string to their corresponding HTML entities.<br>将HTML的特殊字符转义</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">convert</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// &amp;colon;&amp;rpar;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/&amp;/g</span>,<span class=\"string\">\"&amp;amp;\"</span>).replace(<span class=\"regexp\">/&lt;/g</span>,<span class=\"string\">\"&amp;lt;\"</span>).replace(<span class=\"regexp\">/&gt;/g</span>,<span class=\"string\">\"&amp;gt;\"</span>).replace(<span class=\"regexp\">/\\\"/g</span>,<span class=\"string\">\"&amp;quot;\"</span>).replace(<span class=\"regexp\">/\\'/g</span>,<span class=\"string\">\"&amp;apos;\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">convert(<span class=\"string\">\"Hamburgers &lt; Pizza &lt; Tacos\"</span>);</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h6 id=\"12-Spinal-Tap-Case\"><a href=\"#12-Spinal-Tap-Case\" class=\"headerlink\" title=\"12. Spinal Tap Case\"></a>12. <a href=\"https://www.freecodecamp.com/challenges/spinal-tap-case\" target=\"_blank\" rel=\"noopener\">Spinal Tap Case</a></h6><blockquote>\n<p>Convert a string to spinal case. Spinal case is all-lowercase-words-joined-by-dashes.</p>\n</blockquote>\n<p>字符串格式变换，将给定的字符串用”-“连接起来。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">spinalCase</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// \"It's such a fine line between stupid, and clever.\"</span></span><br><span class=\"line\">    <span class=\"comment\">// --David St. Hubbins</span></span><br><span class=\"line\">    <span class=\"comment\">//return str.toLowerCase().replace(/[^a-zA-Z]/g,\" \").replace(/\\s/g,'-');</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"regexp\">/[^a-zA-Z]/</span>.test(str) &amp;&amp; str.indexOf(<span class=\"string\">\" \"</span>) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> res = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"regexp\">/[A-Z]/</span>.test(str[i]))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> tmp = <span class=\"string\">\" \"</span> + str[i];</span><br><span class=\"line\">                res += tmp;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                res += str[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        str = res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.toLowerCase().replace(<span class=\"regexp\">/[^a-zA-Z]/g</span>,<span class=\"string\">\" \"</span>).replace(<span class=\"regexp\">/\\s/g</span>,<span class=\"string\">'-'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">spinalCase(<span class=\"string\">'This Is Spinal Tap'</span>);</span><br><span class=\"line\">spinalCase(<span class=\"string\">\"thisIsSpinalTap\"</span>) ;</span><br><span class=\"line\">spinalCase(<span class=\"string\">\"The_Andy_Griffith_Show\"</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"13-Sum-All-Odd-Fibonacci-Numbers\"><a href=\"#13-Sum-All-Odd-Fibonacci-Numbers\" class=\"headerlink\" title=\"13. Sum All Odd Fibonacci Numbers\"></a>13. <a href=\"https://www.freecodecamp.com/challenges/sum-all-odd-fibonacci-numbers\" target=\"_blank\" rel=\"noopener\">Sum All Odd Fibonacci Numbers</a></h6><blockquote>\n<p>Return the sum of all odd Fibonacci numbers up to and including the passed number if it is a Fibonacci number.</p>\n</blockquote>\n<p>求和给定参数内的所有奇Fibonacci数的和。Fibonacci数是后一个数字等于前两个数字和的形式的数列。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 递归方式</span></span><br><span class=\"line\"><span class=\"comment\"> * function fibNums(num)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">       //返回所有小于num的fib数</span></span><br><span class=\"line\"><span class=\"comment\">       if(num &lt;= 2)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">           return 1;</span></span><br><span class=\"line\"><span class=\"comment\">       &#125;else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">           return fibNums(num-2) + fibNums(num-1);</span></span><br><span class=\"line\"><span class=\"comment\">       &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> &#125;*/</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fibNums</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">//非递归方式</span></span><br><span class=\"line\">       <span class=\"keyword\">var</span> tmp = [<span class=\"number\">1</span>,<span class=\"number\">1</span>];</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(num &lt;=<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">3</span>;i&lt;=num;i++)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">var</span> t = tmp[<span class=\"number\">0</span>] + tmp[<span class=\"number\">1</span>];</span><br><span class=\"line\">           tmp[<span class=\"number\">1</span>] = tmp[<span class=\"number\">0</span>];</span><br><span class=\"line\">           tmp[<span class=\"number\">0</span>] = t;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> tmp[<span class=\"number\">0</span>];</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//求小于num的fibnacci数</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sumFibs</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>;fibN = fibNums(i), fibN &lt;= num;i++)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>(fibN %<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">             sum += fibN;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> sumFibs(<span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"14-Sum-All-Primes\"><a href=\"#14-Sum-All-Primes\" class=\"headerlink\" title=\"14. Sum All Primes\"></a>14. <a href=\"https://www.freecodecamp.com/challenges/sum-all-primes\" target=\"_blank\" rel=\"noopener\">Sum All Primes</a></h6><blockquote>\n<p>Sum all the prime numbers up to and including the provided number.</p>\n</blockquote>\n<p>求和给定参数内的所有素数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPrime</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"built_in\">Math</span>.sqrt(num);i++)&#123;</span><br><span class=\"line\">          sum += i;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(num % i === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//后续算法改进</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sumPrimes</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">2</span>;i&lt;=num;i++)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(isPrime(i))&#123;</span><br><span class=\"line\">              sum += i;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sumPrimes(<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"15-Smallest-Common-Multiple\"><a href=\"#15-Smallest-Common-Multiple\" class=\"headerlink\" title=\"15. Smallest Common Multiple\"></a>15. <a href=\"https://www.freecodecamp.com/challenges/smallest-common-multiple\" target=\"_blank\" rel=\"noopener\">Smallest Common Multiple</a></h6><blockquote>\n<p>Find the smallest common multiple of the provided parameters that can be evenly divided by both, as well as by all sequential numbers in the range between these parameters.</p>\n</blockquote>\n<p>给定一个参数数组，返回数组序列内所有数字的最小公倍数。如给定[1,5]，则需要返回”1,2,3,4,5”的最小公倍数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">smallestCommon</span>(<span class=\"params\">m,n</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> max = m &gt; n ? m : n;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=max;;i+=max)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>((i%m === <span class=\"number\">0</span>) &amp;&amp; (i%n === <span class=\"number\">0</span>))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//分治给出数组的最小公倍数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">divide2solve</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(arr.length === <span class=\"number\">1</span> )&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> smallestCommon(<span class=\"number\">1</span>,arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> mid = arr.length / <span class=\"number\">2</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> left = arr.slice(<span class=\"number\">0</span>,mid);</span><br><span class=\"line\">      <span class=\"keyword\">var</span> right = arr.slice(mid);</span><br><span class=\"line\">      <span class=\"keyword\">var</span> leftCommon = divide2solve(left);</span><br><span class=\"line\">      <span class=\"keyword\">var</span> rightCommon = divide2solve(right);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> smallestCommon(leftCommon,rightCommon);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">smallestCommons</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> res = [];</span><br><span class=\"line\">      <span class=\"keyword\">var</span> start = arr[<span class=\"number\">0</span>] &lt; arr[<span class=\"number\">1</span>] ? arr[<span class=\"number\">0</span>] : arr[<span class=\"number\">1</span>],</span><br><span class=\"line\">          end = arr[<span class=\"number\">0</span>] &lt; arr[<span class=\"number\">1</span>] ? arr[<span class=\"number\">1</span>] : arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(;start &lt;= end;start++)&#123;</span><br><span class=\"line\">          res.push(start);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> divide2solve(res);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">smallestCommons([<span class=\"number\">1</span>,<span class=\"number\">5</span>]);</span><br></pre></td></tr></table></figure>\n<h6 id=\"16-Finders-Keepers\"><a href=\"#16-Finders-Keepers\" class=\"headerlink\" title=\"16. Finders Keepers\"></a>16. <a href=\"https://www.freecodecamp.com/challenges/finders-keepers\" target=\"_blank\" rel=\"noopener\">Finders Keepers</a></h6><blockquote>\n<p>Create a function that looks through an array (first argument) and returns the first element in the array that passes a truth test (second argument).</p>\n</blockquote>\n<p>给定两个参数，第一个参数是一个数组，第二个参数是一个测试函数，算法需要返回满足该测试函数的第一个数组元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">find</span>(<span class=\"params\">arr, func</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> res = arr.filter(func);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(res.length)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> res[<span class=\"number\">0</span>];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">find([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">num</span>)</span>&#123; <span class=\"keyword\">return</span> num % <span class=\"number\">2</span> === <span class=\"number\">0</span>; &#125;);</span><br><span class=\"line\">find([<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">num</span>) </span>&#123; <span class=\"keyword\">return</span> num % <span class=\"number\">2</span> === <span class=\"number\">0</span>; &#125;);</span><br></pre></td></tr></table></figure>\n<h6 id=\"17-Drop-it\"><a href=\"#17-Drop-it\" class=\"headerlink\" title=\"17. Drop it\"></a>17. <a href=\"https://www.freecodecamp.com/challenges/drop-it\" target=\"_blank\" rel=\"noopener\">Drop it</a></h6><blockquote>\n<p>Drop the elements of an array (first argument), starting from the front, until the predicate (second argument) returns true.</p>\n</blockquote>\n<p>给定两个参数，第一个参数是一个数组，第二个参数是一个测试函数，算法需要以数组形式弹出满足测试函数的数组元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drop</span>(<span class=\"params\">arr, func</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// Drop them elements.</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> tmp;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> res = [];</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=arr.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">          tmp = arr.shift();</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(func(tmp))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//需要置回弹出的元素</span></span><br><span class=\"line\">            arr.unshift(tmp);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">drop([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>&#123;<span class=\"keyword\">return</span> n &lt; <span class=\"number\">3</span>; &#125;);</span><br><span class=\"line\">drop([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>&#123;<span class=\"keyword\">return</span> n &gt; <span class=\"number\">5</span>;&#125;);</span><br></pre></td></tr></table></figure>\n<h6 id=\"18-Steamroller\"><a href=\"#18-Steamroller\" class=\"headerlink\" title=\"18. Steamroller\"></a>18. <a href=\"https://www.freecodecamp.com/challenges/steamroller\" target=\"_blank\" rel=\"noopener\">Steamroller</a></h6><blockquote>\n<p>Flatten a nested array. You must account for varying levels of nesting.</p>\n</blockquote>\n<p>“Steamroller”,压路机，很形象，将一个嵌套多层的数组扁平化，亦即接受多层嵌套的数组，输出无嵌套数组，且输出数组的元素为输入嵌套的数组元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">steamroller</span>(<span class=\"params\">arr, flatArr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!flatArr)    flatArr = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> arr) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">Array</span>.isArray(arr[i]))&#123;</span><br><span class=\"line\">      flatArr.push(arr[i]);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      steamroller(arr[i],flatArr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> flatArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">steamroller([<span class=\"number\">1</span>, [<span class=\"number\">2</span>], [<span class=\"number\">3</span>, [[<span class=\"number\">4</span>]]]]);</span><br></pre></td></tr></table></figure>\n<h6 id=\"19-Binary-Agents\"><a href=\"#19-Binary-Agents\" class=\"headerlink\" title=\"19. Binary Agents\"></a>19. <a href=\"https://www.freecodecamp.com/challenges/binary-agents\" target=\"_blank\" rel=\"noopener\">Binary Agents</a></h6><blockquote>\n<p>Return an English translated sentence of the passed binary string.</p>\n</blockquote>\n<p>翻译给定的二进制串，给定一串01串，输出表示的句子。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trans</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum =<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">index</span>)</span>&#123;</span><br><span class=\"line\">        sum += str[index] * <span class=\"built_in\">Math</span>.ceil(str[index] * <span class=\"built_in\">Math</span>.pow(<span class=\"number\">2</span>,len<span class=\"number\">-1</span>-index));</span><br><span class=\"line\">    &#125;)(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binaryAgent</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> res = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> arr)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ret = trans(arr[i]);</span><br><span class=\"line\">    res += <span class=\"built_in\">String</span>.fromCharCode(ret);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">binaryAgent(<span class=\"string\">\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//binaryAgent(\"01000001\");</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"20-Everything-Be-True\"><a href=\"#20-Everything-Be-True\" class=\"headerlink\" title=\"20. Everything Be True\"></a>20. <a href=\"https://www.freecodecamp.com/challenges/everything-be-true\" target=\"_blank\" rel=\"noopener\">Everything Be True</a></h6><blockquote>\n<p>Check if the predicate (second argument) is truthy on all elements of a collection (first argument).</p>\n</blockquote>\n<p>给定两个参数，第一个参数是一个对象数组，第二个参数是一个字符串，算法需要判断参数1的对象数组是否都有参数2对应的key且对应的value值为true。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">every</span>(<span class=\"params\">collection,pre</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> collection)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!collection[i][pre])&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//every([&#123;\"user\": \"Tinky-Winky\", \"sex\": \"male\"&#125;, &#123;\"user\": \"Dipsy\", \"sex\": \"male\"&#125;, &#123;\"user\": \"Laa-Laa\", \"sex\": \"female\"&#125;, &#123;\"user\": \"Po\", \"sex\": \"female\"&#125;], \"sex\");</span></span><br><span class=\"line\">every([&#123;<span class=\"string\">\"user\"</span>: <span class=\"string\">\"Tinky-Winky\"</span>, <span class=\"string\">\"sex\"</span>: <span class=\"string\">\"male\"</span>, <span class=\"string\">\"age\"</span>: <span class=\"number\">0</span>&#125;, &#123;<span class=\"string\">\"user\"</span>: <span class=\"string\">\"Dipsy\"</span>, <span class=\"string\">\"sex\"</span>: <span class=\"string\">\"male\"</span>, <span class=\"string\">\"age\"</span>: <span class=\"number\">3</span>&#125;, &#123;<span class=\"string\">\"user\"</span>: <span class=\"string\">\"Laa-Laa\"</span>, <span class=\"string\">\"sex\"</span>: <span class=\"string\">\"female\"</span>, <span class=\"string\">\"age\"</span>: <span class=\"number\">5</span>&#125;, &#123;<span class=\"string\">\"user\"</span>: <span class=\"string\">\"Po\"</span>, <span class=\"string\">\"sex\"</span>: <span class=\"string\">\"female\"</span>, <span class=\"string\">\"age\"</span>: <span class=\"number\">4</span>&#125;], <span class=\"string\">\"age\"</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"21-Arguments-Optional\"><a href=\"#21-Arguments-Optional\" class=\"headerlink\" title=\"21. Arguments Optional\"></a>21. <a href=\"https://www.freecodecamp.com/challenges/arguments-optional\" target=\"_blank\" rel=\"noopener\">Arguments Optional</a></h6><blockquote>\n<p>Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.</p>\n</blockquote>\n<p>js可选参数问题，题干要求求和给定的两个参数，如果只给定了一个参数，则返回一个可以再接收一个参数进行求和的函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isNum</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> val === <span class=\"string\">\"number\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"built_in\">arguments</span>.length == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!isNum(x))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">y</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!isNum(y))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isNum(<span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>] + <span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">2</span>)([<span class=\"number\">3</span>]);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h4 id=\"Intermediate-Algorithm\"><a href=\"#Intermediate-Algorithm\" class=\"headerlink\" title=\"Intermediate Algorithm\"></a>Intermediate Algorithm</h4><p>承接<a href=\"/2016/03/23/Intermediate-Algorithm-Scripting/\">上篇</a>，本篇继续总结freecodecamp中级算法的第11-21题。</p>\n<h6 id=\"11-Convert-HTML-Entities\"><a href=\"#11-Convert-HTML-Entities\" class=\"headerlink\" title=\"11. Convert HTML Entities\"></a>11. <a href=\"https://www.freecodecamp.com/challenges/convert-html-entities\" target=\"_blank\" rel=\"noopener\">Convert HTML Entities</a></h6><blockquote>\n<p>Convert the characters &amp;, &lt;, &gt;, “ (double quote), and ‘ (apostrophe), in a string to their corresponding HTML entities.<br>将HTML的特殊字符转义</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">convert</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// &amp;colon;&amp;rpar;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/&amp;/g</span>,<span class=\"string\">\"&amp;amp;\"</span>).replace(<span class=\"regexp\">/&lt;/g</span>,<span class=\"string\">\"&amp;lt;\"</span>).replace(<span class=\"regexp\">/&gt;/g</span>,<span class=\"string\">\"&amp;gt;\"</span>).replace(<span class=\"regexp\">/\\\"/g</span>,<span class=\"string\">\"&amp;quot;\"</span>).replace(<span class=\"regexp\">/\\'/g</span>,<span class=\"string\">\"&amp;apos;\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">convert(<span class=\"string\">\"Hamburgers &lt; Pizza &lt; Tacos\"</span>);</span><br></pre></td></tr></table></figure>","more":"<h6 id=\"12-Spinal-Tap-Case\"><a href=\"#12-Spinal-Tap-Case\" class=\"headerlink\" title=\"12. Spinal Tap Case\"></a>12. <a href=\"https://www.freecodecamp.com/challenges/spinal-tap-case\" target=\"_blank\" rel=\"noopener\">Spinal Tap Case</a></h6><blockquote>\n<p>Convert a string to spinal case. Spinal case is all-lowercase-words-joined-by-dashes.</p>\n</blockquote>\n<p>字符串格式变换，将给定的字符串用”-“连接起来。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">spinalCase</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// \"It's such a fine line between stupid, and clever.\"</span></span><br><span class=\"line\">    <span class=\"comment\">// --David St. Hubbins</span></span><br><span class=\"line\">    <span class=\"comment\">//return str.toLowerCase().replace(/[^a-zA-Z]/g,\" \").replace(/\\s/g,'-');</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"regexp\">/[^a-zA-Z]/</span>.test(str) &amp;&amp; str.indexOf(<span class=\"string\">\" \"</span>) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> res = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"regexp\">/[A-Z]/</span>.test(str[i]))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> tmp = <span class=\"string\">\" \"</span> + str[i];</span><br><span class=\"line\">                res += tmp;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                res += str[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        str = res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.toLowerCase().replace(<span class=\"regexp\">/[^a-zA-Z]/g</span>,<span class=\"string\">\" \"</span>).replace(<span class=\"regexp\">/\\s/g</span>,<span class=\"string\">'-'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">spinalCase(<span class=\"string\">'This Is Spinal Tap'</span>);</span><br><span class=\"line\">spinalCase(<span class=\"string\">\"thisIsSpinalTap\"</span>) ;</span><br><span class=\"line\">spinalCase(<span class=\"string\">\"The_Andy_Griffith_Show\"</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"13-Sum-All-Odd-Fibonacci-Numbers\"><a href=\"#13-Sum-All-Odd-Fibonacci-Numbers\" class=\"headerlink\" title=\"13. Sum All Odd Fibonacci Numbers\"></a>13. <a href=\"https://www.freecodecamp.com/challenges/sum-all-odd-fibonacci-numbers\" target=\"_blank\" rel=\"noopener\">Sum All Odd Fibonacci Numbers</a></h6><blockquote>\n<p>Return the sum of all odd Fibonacci numbers up to and including the passed number if it is a Fibonacci number.</p>\n</blockquote>\n<p>求和给定参数内的所有奇Fibonacci数的和。Fibonacci数是后一个数字等于前两个数字和的形式的数列。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 递归方式</span></span><br><span class=\"line\"><span class=\"comment\"> * function fibNums(num)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">       //返回所有小于num的fib数</span></span><br><span class=\"line\"><span class=\"comment\">       if(num &lt;= 2)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">           return 1;</span></span><br><span class=\"line\"><span class=\"comment\">       &#125;else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">           return fibNums(num-2) + fibNums(num-1);</span></span><br><span class=\"line\"><span class=\"comment\">       &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> &#125;*/</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fibNums</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">//非递归方式</span></span><br><span class=\"line\">       <span class=\"keyword\">var</span> tmp = [<span class=\"number\">1</span>,<span class=\"number\">1</span>];</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(num &lt;=<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">3</span>;i&lt;=num;i++)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">var</span> t = tmp[<span class=\"number\">0</span>] + tmp[<span class=\"number\">1</span>];</span><br><span class=\"line\">           tmp[<span class=\"number\">1</span>] = tmp[<span class=\"number\">0</span>];</span><br><span class=\"line\">           tmp[<span class=\"number\">0</span>] = t;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> tmp[<span class=\"number\">0</span>];</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//求小于num的fibnacci数</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sumFibs</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>;fibN = fibNums(i), fibN &lt;= num;i++)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span>(fibN %<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">             sum += fibN;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> sumFibs(<span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"14-Sum-All-Primes\"><a href=\"#14-Sum-All-Primes\" class=\"headerlink\" title=\"14. Sum All Primes\"></a>14. <a href=\"https://www.freecodecamp.com/challenges/sum-all-primes\" target=\"_blank\" rel=\"noopener\">Sum All Primes</a></h6><blockquote>\n<p>Sum all the prime numbers up to and including the provided number.</p>\n</blockquote>\n<p>求和给定参数内的所有素数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPrime</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"built_in\">Math</span>.sqrt(num);i++)&#123;</span><br><span class=\"line\">          sum += i;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(num % i === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//后续算法改进</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sumPrimes</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">2</span>;i&lt;=num;i++)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(isPrime(i))&#123;</span><br><span class=\"line\">              sum += i;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sumPrimes(<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"15-Smallest-Common-Multiple\"><a href=\"#15-Smallest-Common-Multiple\" class=\"headerlink\" title=\"15. Smallest Common Multiple\"></a>15. <a href=\"https://www.freecodecamp.com/challenges/smallest-common-multiple\" target=\"_blank\" rel=\"noopener\">Smallest Common Multiple</a></h6><blockquote>\n<p>Find the smallest common multiple of the provided parameters that can be evenly divided by both, as well as by all sequential numbers in the range between these parameters.</p>\n</blockquote>\n<p>给定一个参数数组，返回数组序列内所有数字的最小公倍数。如给定[1,5]，则需要返回”1,2,3,4,5”的最小公倍数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">smallestCommon</span>(<span class=\"params\">m,n</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> max = m &gt; n ? m : n;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=max;;i+=max)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>((i%m === <span class=\"number\">0</span>) &amp;&amp; (i%n === <span class=\"number\">0</span>))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//分治给出数组的最小公倍数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">divide2solve</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(arr.length === <span class=\"number\">1</span> )&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> smallestCommon(<span class=\"number\">1</span>,arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> mid = arr.length / <span class=\"number\">2</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> left = arr.slice(<span class=\"number\">0</span>,mid);</span><br><span class=\"line\">      <span class=\"keyword\">var</span> right = arr.slice(mid);</span><br><span class=\"line\">      <span class=\"keyword\">var</span> leftCommon = divide2solve(left);</span><br><span class=\"line\">      <span class=\"keyword\">var</span> rightCommon = divide2solve(right);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> smallestCommon(leftCommon,rightCommon);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">smallestCommons</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> res = [];</span><br><span class=\"line\">      <span class=\"keyword\">var</span> start = arr[<span class=\"number\">0</span>] &lt; arr[<span class=\"number\">1</span>] ? arr[<span class=\"number\">0</span>] : arr[<span class=\"number\">1</span>],</span><br><span class=\"line\">          end = arr[<span class=\"number\">0</span>] &lt; arr[<span class=\"number\">1</span>] ? arr[<span class=\"number\">1</span>] : arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(;start &lt;= end;start++)&#123;</span><br><span class=\"line\">          res.push(start);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> divide2solve(res);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">smallestCommons([<span class=\"number\">1</span>,<span class=\"number\">5</span>]);</span><br></pre></td></tr></table></figure>\n<h6 id=\"16-Finders-Keepers\"><a href=\"#16-Finders-Keepers\" class=\"headerlink\" title=\"16. Finders Keepers\"></a>16. <a href=\"https://www.freecodecamp.com/challenges/finders-keepers\" target=\"_blank\" rel=\"noopener\">Finders Keepers</a></h6><blockquote>\n<p>Create a function that looks through an array (first argument) and returns the first element in the array that passes a truth test (second argument).</p>\n</blockquote>\n<p>给定两个参数，第一个参数是一个数组，第二个参数是一个测试函数，算法需要返回满足该测试函数的第一个数组元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">find</span>(<span class=\"params\">arr, func</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> res = arr.filter(func);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(res.length)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> res[<span class=\"number\">0</span>];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">find([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">num</span>)</span>&#123; <span class=\"keyword\">return</span> num % <span class=\"number\">2</span> === <span class=\"number\">0</span>; &#125;);</span><br><span class=\"line\">find([<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">num</span>) </span>&#123; <span class=\"keyword\">return</span> num % <span class=\"number\">2</span> === <span class=\"number\">0</span>; &#125;);</span><br></pre></td></tr></table></figure>\n<h6 id=\"17-Drop-it\"><a href=\"#17-Drop-it\" class=\"headerlink\" title=\"17. Drop it\"></a>17. <a href=\"https://www.freecodecamp.com/challenges/drop-it\" target=\"_blank\" rel=\"noopener\">Drop it</a></h6><blockquote>\n<p>Drop the elements of an array (first argument), starting from the front, until the predicate (second argument) returns true.</p>\n</blockquote>\n<p>给定两个参数，第一个参数是一个数组，第二个参数是一个测试函数，算法需要以数组形式弹出满足测试函数的数组元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drop</span>(<span class=\"params\">arr, func</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// Drop them elements.</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> tmp;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> res = [];</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=arr.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">          tmp = arr.shift();</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(func(tmp))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//需要置回弹出的元素</span></span><br><span class=\"line\">            arr.unshift(tmp);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">drop([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>&#123;<span class=\"keyword\">return</span> n &lt; <span class=\"number\">3</span>; &#125;);</span><br><span class=\"line\">drop([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>&#123;<span class=\"keyword\">return</span> n &gt; <span class=\"number\">5</span>;&#125;);</span><br></pre></td></tr></table></figure>\n<h6 id=\"18-Steamroller\"><a href=\"#18-Steamroller\" class=\"headerlink\" title=\"18. Steamroller\"></a>18. <a href=\"https://www.freecodecamp.com/challenges/steamroller\" target=\"_blank\" rel=\"noopener\">Steamroller</a></h6><blockquote>\n<p>Flatten a nested array. You must account for varying levels of nesting.</p>\n</blockquote>\n<p>“Steamroller”,压路机，很形象，将一个嵌套多层的数组扁平化，亦即接受多层嵌套的数组，输出无嵌套数组，且输出数组的元素为输入嵌套的数组元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">steamroller</span>(<span class=\"params\">arr, flatArr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!flatArr)    flatArr = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> arr) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">Array</span>.isArray(arr[i]))&#123;</span><br><span class=\"line\">      flatArr.push(arr[i]);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      steamroller(arr[i],flatArr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> flatArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">steamroller([<span class=\"number\">1</span>, [<span class=\"number\">2</span>], [<span class=\"number\">3</span>, [[<span class=\"number\">4</span>]]]]);</span><br></pre></td></tr></table></figure>\n<h6 id=\"19-Binary-Agents\"><a href=\"#19-Binary-Agents\" class=\"headerlink\" title=\"19. Binary Agents\"></a>19. <a href=\"https://www.freecodecamp.com/challenges/binary-agents\" target=\"_blank\" rel=\"noopener\">Binary Agents</a></h6><blockquote>\n<p>Return an English translated sentence of the passed binary string.</p>\n</blockquote>\n<p>翻译给定的二进制串，给定一串01串，输出表示的句子。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trans</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum =<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">index</span>)</span>&#123;</span><br><span class=\"line\">        sum += str[index] * <span class=\"built_in\">Math</span>.ceil(str[index] * <span class=\"built_in\">Math</span>.pow(<span class=\"number\">2</span>,len<span class=\"number\">-1</span>-index));</span><br><span class=\"line\">    &#125;)(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">binaryAgent</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> res = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> arr)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ret = trans(arr[i]);</span><br><span class=\"line\">    res += <span class=\"built_in\">String</span>.fromCharCode(ret);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">binaryAgent(<span class=\"string\">\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//binaryAgent(\"01000001\");</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"20-Everything-Be-True\"><a href=\"#20-Everything-Be-True\" class=\"headerlink\" title=\"20. Everything Be True\"></a>20. <a href=\"https://www.freecodecamp.com/challenges/everything-be-true\" target=\"_blank\" rel=\"noopener\">Everything Be True</a></h6><blockquote>\n<p>Check if the predicate (second argument) is truthy on all elements of a collection (first argument).</p>\n</blockquote>\n<p>给定两个参数，第一个参数是一个对象数组，第二个参数是一个字符串，算法需要判断参数1的对象数组是否都有参数2对应的key且对应的value值为true。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">every</span>(<span class=\"params\">collection,pre</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> collection)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!collection[i][pre])&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//every([&#123;\"user\": \"Tinky-Winky\", \"sex\": \"male\"&#125;, &#123;\"user\": \"Dipsy\", \"sex\": \"male\"&#125;, &#123;\"user\": \"Laa-Laa\", \"sex\": \"female\"&#125;, &#123;\"user\": \"Po\", \"sex\": \"female\"&#125;], \"sex\");</span></span><br><span class=\"line\">every([&#123;<span class=\"string\">\"user\"</span>: <span class=\"string\">\"Tinky-Winky\"</span>, <span class=\"string\">\"sex\"</span>: <span class=\"string\">\"male\"</span>, <span class=\"string\">\"age\"</span>: <span class=\"number\">0</span>&#125;, &#123;<span class=\"string\">\"user\"</span>: <span class=\"string\">\"Dipsy\"</span>, <span class=\"string\">\"sex\"</span>: <span class=\"string\">\"male\"</span>, <span class=\"string\">\"age\"</span>: <span class=\"number\">3</span>&#125;, &#123;<span class=\"string\">\"user\"</span>: <span class=\"string\">\"Laa-Laa\"</span>, <span class=\"string\">\"sex\"</span>: <span class=\"string\">\"female\"</span>, <span class=\"string\">\"age\"</span>: <span class=\"number\">5</span>&#125;, &#123;<span class=\"string\">\"user\"</span>: <span class=\"string\">\"Po\"</span>, <span class=\"string\">\"sex\"</span>: <span class=\"string\">\"female\"</span>, <span class=\"string\">\"age\"</span>: <span class=\"number\">4</span>&#125;], <span class=\"string\">\"age\"</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"21-Arguments-Optional\"><a href=\"#21-Arguments-Optional\" class=\"headerlink\" title=\"21. Arguments Optional\"></a>21. <a href=\"https://www.freecodecamp.com/challenges/arguments-optional\" target=\"_blank\" rel=\"noopener\">Arguments Optional</a></h6><blockquote>\n<p>Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.</p>\n</blockquote>\n<p>js可选参数问题，题干要求求和给定的两个参数，如果只给定了一个参数，则返回一个可以再接收一个参数进行求和的函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isNum</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> val === <span class=\"string\">\"number\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"built_in\">arguments</span>.length == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!isNum(x))&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">y</span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!isNum(y))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!isNum(<span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>] + <span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">2</span>)([<span class=\"number\">3</span>]);</span><br></pre></td></tr></table></figure>","sticky":0},{"title":"freecodecamp算法题解系列（二）--中级算法（1-10）","show":true,"date":"2016-03-23T02:34:08.000Z","_content":"\n#### Intermediate Algorithm\n[戳此处查看前一篇基础算法](/2016/02/28/freecodecamp%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89-Basic-Algorithm-Scripting/)\n\n###### 1. [Sum All Numbers in a Range](https://www.freecodecamp.com/challenges/sum-all-numbers-in-a-range)\n> We'll pass you an array of two numbers. Return the sum of those two numbers and all numbers between them.\nThe lowest number will not always come first.\n\n求和给定数组约束范围内的所有数字\n\n```javascript\nfunction getMaxMin(arr,op){\n  if(op === \"max\"){\n      return Math.max.apply(null,arr);\n  }else {\n      return Math.min.apply(null,arr);\n  }\n \n}\n\nfunction sumAll(arr) {\n  var sum = 0;\n  var min = getMaxMin(arr,\"min\");\n  var max = getMaxMin(arr,\"max\");\n  for(var i=min;i<=max;i++){\n    sum += i;\n  }\n  return sum;\n}\n\nsumAll([1, 4]);\n```\n\n<!--more-->\n\n###### 2. [Diff Two Arrays](https://www.freecodecamp.com/challenges/diff-two-arrays)\n> Compare two arrays and return a new array with any items only found in one of the two given arrays, but not both. In other words, return the symmetric difference of the two arrays.\n\n求两个给定数组的diff\n```js\nfunction diff(arr1, arr2) {\n  var newArr = [];\n  /*\n    var tmpall = arr1.concat(arr2);\n    for(var i=0,len=tmpall.length;i<len;i++){\n      if(arr1.indexOf(tmpall[i]) != -1){\n        //存在1里不存在2里\n        if(arr2.indexOf(tmpall[i]) == -1){\n          newArr.push(tmpall[i]);\n        }\n      }else {\n        if(arr2.indexOf(tmpall[i]) != -1){\n          newArr.push(tmpall[i]);\n        }\n      }\n    }\n    */\n  \n    arr1.filter(function(val){\n        if(arr2.indexOf(val) == -1){\n          newArr.push(val);\n        }\n    });\n\n    arr2.filter(function(val){\n        if(arr1.indexOf(val) == -1 && newArr.indexOf(val) == -1){\n          newArr.push(val);\n        }\n    });\n  return newArr;\n}\n\ndiff([\"andesite\", \"grass\", \"dirt\", \"pink wool\", \"dead shrub\"], [\"diorite\", \"andesite\", \"grass\", \"dirt\", \"dead shrub\"]);\n//diff([3,4,5],[3,4,5,6]);\n//diff([1, 2, 3, 5], [1, 2, 3, 4, 5]);\n```\n\n###### 3. [Roman Numeral Converter](https://www.freecodecamp.com/challenges/roman-numeral-converter)\n> Convert the given number into a roman numeral.\n\n将给定数字转化为罗马数字\n\n```js\nfunction convert(num){\n        var tmp = num;\n        //按位数做罗马数字-整数的映射\n        var romanNum = [[\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\" ],[ \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\" ],[ \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\" ],[ \"\", \"M\", \"MM\", \"MMM\", \"\", \"\", \"\", \"\", \"\", \"\", \"\" ]];\n        var ret = [];\n        var i = 0;\n        //求总位数\n        while(tmp){\n                i ++;\n                tmp = parseInt(tmp / 10);\n        }\n        var j = 0;\n        while(num && j < i){\n                ret.push(romanNum[j][num % 10]);\n                num = parseInt(num / 10);\n                j++;\n        }\n        return ret.reverse().join(\"\");\n}\nconvert(12);\n```\n\n###### 4. [Where art thou](https://www.freecodecamp.com/challenges/where-art-thou)\n> Make a function that looks through an array of objects (first argument) and returns an array of all objects that have matching property and value pairs (second argument). Each property and value pair of the source object has to be present in the object from the collection if it is to be included in the returned array.\n\n参数1给定一个若干对象构成的数组，参数2给定一个对象，算法需要从参数1中查找匹配参数2对象的所有对象并以数组形式输出。\n```js\nfunction where(collection, source) {\n  var arr = [];\n  // What's in a name?\n  var orikey = \"\",\n      orivalue = \"\";\n  for(var key in source){\n        orikey = key;\n        orivalue = source[key];\n  }\n  for(var i=0,len=collection.length;i<len;i++){\n        for(var key in collection[i]){\n                if(key === orikey && orivalue === collection[i][key]){\n                        arr.push(collection[i]);\n                }\n        }\n  }\n  return arr;\n}\n\n//where([{ first: \"Romeo\", last: \"Montague\" }, { first: \"Mercutio\", last: null }, { first: \"Tybalt\", last: \"Capulet\" }], { last: \"Capulet\" });\n\n\nwhere([{ \"a\": 1 }, { \"a\": 1 }, { \"a\": 1, \"b\": 2 }], { \"a\": 1 });\n```\n\n###### 5. [Search and Replace](https://www.freecodecamp.com/challenges/search-and-replace)\n> Perform a search and replace on the sentence using the arguments provided and return the new sentence.\nFirst argument is the sentence to perform the search and replace on.\nSecond argument is the word that you will be replacing (before).\nThird argument is what you will be replacing the second argument with (after).\n\n执行查找和替换，将句子(参数1)中出现的词(参数2)用另一个(参数3)替换\n\n```js\nfunction isFirstUpper(str){\n  return /^[A-Z]/.test(str);\n}\n\nfunction firstToUpper(str){\n  return str.replace(/^[a-z]/,function(v){\n    return v.toUpperCase();\n  });\n}\n\nfunction myReplace(str, before, after) {\n    //判断待替换的单词是否是首字母大写，如果是则将替换的置为首字母大写\n    if(isFirstUpper(before)){\n      after = firstToUpper(after);\n    }\n    return (str.replace(before,after));\n}\n\nmyReplace(\"He is Sleeping on the couch\", \"Sleeping\", \"sitting\"); \n//myReplace(\"Let us go to the store\", \"store\", \"mall\");\n\n```\n\n###### 6. [Pig Latin](https://www.freecodecamp.com/challenges/pig-latin)\n> Translate the provided string to pig latin.\n将给定字符串翻译成\"pig latin\"形式。pig latin就是一个将单词形变的小游戏：将单词第一个字母移动到最后并添加\"ay\"结尾，如果单词以元音开头，则添加\"way\"结尾。\n\n```js\nfunction translate(str) {\n  //遍历单词字符串，找到第一个元音字符，将其之前的字符暂存\n  //然后将暂存字符搬到字符串最后并加上\"ay\"，如果存串为空，则直接加上\"way\"\n        var vowel = ['a','e','i','o','u'];\n        var tmp = [];\n        for(var i=0,len=str.length;i<len;i++){\n                if(vowel.indexOf(str[i].toLowerCase()) != -1){\n                        break;\n                }else {\n                        tmp.push(str[i]);\n                }\n        }\n        if(i === 0){\n                return (str + \"way\");\n        }else {\n                return(str.substr(i).concat(tmp.join(\"\")) + \"ay\");\n\n        }\n}\n\ntranslate(\"alifornia\");\n\n```\n\n###### 7. [DNA Pairing](https://www.freecodecamp.com/challenges/dna-pairing)\n> The DNA strand is missing the pairing element. Take each character, get its pair, and return the results as a 2d array.\n\nDNA配对，DNA的配对形如\"AT,CG\"模式，亦即出现字母\"A\"则给之以\"T\"配对，以此类推。\n\n```js\nfunction pair(str) {\n  var map = {\n    \"A\": \"T\",\n    \"T\": \"A\",\n    \"C\": \"G\",\n    \"G\": \"C\"\n  };\n  var arr = [];\n  for(var i=0,len=str.length;i<len;i++){\n    var value = map[str[i].toUpperCase()];\n    arr.push([str[i],value]);\n  }\n return arr;\n}\n\npair(\"GCG\");\n```\n\n###### 8. [Missing letters](https://www.freecodecamp.com/challenges/missing-letters)\n> Find the missing letter in the passed letter range and return it.\nIf all letters are present in the range, return undefined.\n\n查找并返回给定字符序列中缺失的字母，如\"bcdef\"应返回\"a\"。\n```js\nfunction fearNotLetter(str) {\n  var arr = [];\n  for(var i=0,len=str.length;i<len;i++){\n    //均先转为小写字母后转为数字，起始为0\n    var tmp = str[i].toLowerCase().charCodeAt(0) - 97;\n    arr.push(tmp);\n  }\n  for(var j=0,len2=arr.length,k=arr[j];j<len2;j++){\n          if(k != arr[j]){\n                //console.log(arr[j]);\n                return String.fromCharCode(arr[j] + 97 -1 );\n          }\n          k++;\n  }\n}\n\n\nfearNotLetter(\"bcd\");\n//fearNotLetter(\"abcdefghjklmno\");\n```\n\n###### 9. [Boo who](https://www.freecodecamp.com/challenges/boo-who)\n> Check if a value is classified as a boolean primitive. Return true or false.\n\n这个不知道为什么会算到中级里来，简直简单的发指。\n\n```js\nfunction boo(bool) {\n  // What is the new fad diet for ghost developers? The Boolean.\n  return typeof bool === \"boolean\";\n}\n\nboo(null);\n\n```\n\n###### 10. [Sorted Union](https://www.freecodecamp.com/challenges/sorted-union)\n> Write a function that takes two or more arrays and returns a new array of unique values in the order of the original provided arrays.\nIn other words, all values present from all arrays should be included in their original order, but with no duplicates in the final array.\nThe unique numbers should be sorted by their original order, but the final array should not be sorted in numerical order.\n\n接收若干数组参数，返回所有不重复的数组元素并按接收参数的顺序排列。\n\n```js\nfunction unite() {\n  if(arguments.length === 1){\n    return arguments[0];\n  }\n  var arr = [],\n      res = [];\n  for(var i=0,len=arguments.length;i<len;i++){\n    arr = arguments[i];\n    for(var j=0;j<arr.length;j++){\n      //如果结果数组中不存在该值则放入数组\n      if(res.indexOf(arr[j]) === -1){\n        res.push(arr[j]);\n      }\n    }\n  }\n  return res;\n}\n\nunite([1, 3, 2], [5, 2, 1, 4], [2, 1]);\n```\n\n中级算法这个系列一共有21道题，为了避免博文篇幅过长，将中级算法系列分成两篇总结，此篇总结1-10题，[下一篇总结11-21题](/2016/03/23/Intermediate-Algorithm-Scripting-2/)。\n欢迎留言探讨，共同学习进步。\n","source":"_posts/Intermediate-Algorithm-Scripting.md","raw":"title: freecodecamp算法题解系列（二）--中级算法（1-10）\nshow: true\ndate: 2016-03-23 10:34:08\ntags: [javascript,算法，字符串,freecodecamp]\ncategories: [技术人生]\n---\n\n#### Intermediate Algorithm\n[戳此处查看前一篇基础算法](/2016/02/28/freecodecamp%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89-Basic-Algorithm-Scripting/)\n\n###### 1. [Sum All Numbers in a Range](https://www.freecodecamp.com/challenges/sum-all-numbers-in-a-range)\n> We'll pass you an array of two numbers. Return the sum of those two numbers and all numbers between them.\nThe lowest number will not always come first.\n\n求和给定数组约束范围内的所有数字\n\n```javascript\nfunction getMaxMin(arr,op){\n  if(op === \"max\"){\n      return Math.max.apply(null,arr);\n  }else {\n      return Math.min.apply(null,arr);\n  }\n \n}\n\nfunction sumAll(arr) {\n  var sum = 0;\n  var min = getMaxMin(arr,\"min\");\n  var max = getMaxMin(arr,\"max\");\n  for(var i=min;i<=max;i++){\n    sum += i;\n  }\n  return sum;\n}\n\nsumAll([1, 4]);\n```\n\n<!--more-->\n\n###### 2. [Diff Two Arrays](https://www.freecodecamp.com/challenges/diff-two-arrays)\n> Compare two arrays and return a new array with any items only found in one of the two given arrays, but not both. In other words, return the symmetric difference of the two arrays.\n\n求两个给定数组的diff\n```js\nfunction diff(arr1, arr2) {\n  var newArr = [];\n  /*\n    var tmpall = arr1.concat(arr2);\n    for(var i=0,len=tmpall.length;i<len;i++){\n      if(arr1.indexOf(tmpall[i]) != -1){\n        //存在1里不存在2里\n        if(arr2.indexOf(tmpall[i]) == -1){\n          newArr.push(tmpall[i]);\n        }\n      }else {\n        if(arr2.indexOf(tmpall[i]) != -1){\n          newArr.push(tmpall[i]);\n        }\n      }\n    }\n    */\n  \n    arr1.filter(function(val){\n        if(arr2.indexOf(val) == -1){\n          newArr.push(val);\n        }\n    });\n\n    arr2.filter(function(val){\n        if(arr1.indexOf(val) == -1 && newArr.indexOf(val) == -1){\n          newArr.push(val);\n        }\n    });\n  return newArr;\n}\n\ndiff([\"andesite\", \"grass\", \"dirt\", \"pink wool\", \"dead shrub\"], [\"diorite\", \"andesite\", \"grass\", \"dirt\", \"dead shrub\"]);\n//diff([3,4,5],[3,4,5,6]);\n//diff([1, 2, 3, 5], [1, 2, 3, 4, 5]);\n```\n\n###### 3. [Roman Numeral Converter](https://www.freecodecamp.com/challenges/roman-numeral-converter)\n> Convert the given number into a roman numeral.\n\n将给定数字转化为罗马数字\n\n```js\nfunction convert(num){\n        var tmp = num;\n        //按位数做罗马数字-整数的映射\n        var romanNum = [[\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\" ],[ \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\" ],[ \"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\" ],[ \"\", \"M\", \"MM\", \"MMM\", \"\", \"\", \"\", \"\", \"\", \"\", \"\" ]];\n        var ret = [];\n        var i = 0;\n        //求总位数\n        while(tmp){\n                i ++;\n                tmp = parseInt(tmp / 10);\n        }\n        var j = 0;\n        while(num && j < i){\n                ret.push(romanNum[j][num % 10]);\n                num = parseInt(num / 10);\n                j++;\n        }\n        return ret.reverse().join(\"\");\n}\nconvert(12);\n```\n\n###### 4. [Where art thou](https://www.freecodecamp.com/challenges/where-art-thou)\n> Make a function that looks through an array of objects (first argument) and returns an array of all objects that have matching property and value pairs (second argument). Each property and value pair of the source object has to be present in the object from the collection if it is to be included in the returned array.\n\n参数1给定一个若干对象构成的数组，参数2给定一个对象，算法需要从参数1中查找匹配参数2对象的所有对象并以数组形式输出。\n```js\nfunction where(collection, source) {\n  var arr = [];\n  // What's in a name?\n  var orikey = \"\",\n      orivalue = \"\";\n  for(var key in source){\n        orikey = key;\n        orivalue = source[key];\n  }\n  for(var i=0,len=collection.length;i<len;i++){\n        for(var key in collection[i]){\n                if(key === orikey && orivalue === collection[i][key]){\n                        arr.push(collection[i]);\n                }\n        }\n  }\n  return arr;\n}\n\n//where([{ first: \"Romeo\", last: \"Montague\" }, { first: \"Mercutio\", last: null }, { first: \"Tybalt\", last: \"Capulet\" }], { last: \"Capulet\" });\n\n\nwhere([{ \"a\": 1 }, { \"a\": 1 }, { \"a\": 1, \"b\": 2 }], { \"a\": 1 });\n```\n\n###### 5. [Search and Replace](https://www.freecodecamp.com/challenges/search-and-replace)\n> Perform a search and replace on the sentence using the arguments provided and return the new sentence.\nFirst argument is the sentence to perform the search and replace on.\nSecond argument is the word that you will be replacing (before).\nThird argument is what you will be replacing the second argument with (after).\n\n执行查找和替换，将句子(参数1)中出现的词(参数2)用另一个(参数3)替换\n\n```js\nfunction isFirstUpper(str){\n  return /^[A-Z]/.test(str);\n}\n\nfunction firstToUpper(str){\n  return str.replace(/^[a-z]/,function(v){\n    return v.toUpperCase();\n  });\n}\n\nfunction myReplace(str, before, after) {\n    //判断待替换的单词是否是首字母大写，如果是则将替换的置为首字母大写\n    if(isFirstUpper(before)){\n      after = firstToUpper(after);\n    }\n    return (str.replace(before,after));\n}\n\nmyReplace(\"He is Sleeping on the couch\", \"Sleeping\", \"sitting\"); \n//myReplace(\"Let us go to the store\", \"store\", \"mall\");\n\n```\n\n###### 6. [Pig Latin](https://www.freecodecamp.com/challenges/pig-latin)\n> Translate the provided string to pig latin.\n将给定字符串翻译成\"pig latin\"形式。pig latin就是一个将单词形变的小游戏：将单词第一个字母移动到最后并添加\"ay\"结尾，如果单词以元音开头，则添加\"way\"结尾。\n\n```js\nfunction translate(str) {\n  //遍历单词字符串，找到第一个元音字符，将其之前的字符暂存\n  //然后将暂存字符搬到字符串最后并加上\"ay\"，如果存串为空，则直接加上\"way\"\n        var vowel = ['a','e','i','o','u'];\n        var tmp = [];\n        for(var i=0,len=str.length;i<len;i++){\n                if(vowel.indexOf(str[i].toLowerCase()) != -1){\n                        break;\n                }else {\n                        tmp.push(str[i]);\n                }\n        }\n        if(i === 0){\n                return (str + \"way\");\n        }else {\n                return(str.substr(i).concat(tmp.join(\"\")) + \"ay\");\n\n        }\n}\n\ntranslate(\"alifornia\");\n\n```\n\n###### 7. [DNA Pairing](https://www.freecodecamp.com/challenges/dna-pairing)\n> The DNA strand is missing the pairing element. Take each character, get its pair, and return the results as a 2d array.\n\nDNA配对，DNA的配对形如\"AT,CG\"模式，亦即出现字母\"A\"则给之以\"T\"配对，以此类推。\n\n```js\nfunction pair(str) {\n  var map = {\n    \"A\": \"T\",\n    \"T\": \"A\",\n    \"C\": \"G\",\n    \"G\": \"C\"\n  };\n  var arr = [];\n  for(var i=0,len=str.length;i<len;i++){\n    var value = map[str[i].toUpperCase()];\n    arr.push([str[i],value]);\n  }\n return arr;\n}\n\npair(\"GCG\");\n```\n\n###### 8. [Missing letters](https://www.freecodecamp.com/challenges/missing-letters)\n> Find the missing letter in the passed letter range and return it.\nIf all letters are present in the range, return undefined.\n\n查找并返回给定字符序列中缺失的字母，如\"bcdef\"应返回\"a\"。\n```js\nfunction fearNotLetter(str) {\n  var arr = [];\n  for(var i=0,len=str.length;i<len;i++){\n    //均先转为小写字母后转为数字，起始为0\n    var tmp = str[i].toLowerCase().charCodeAt(0) - 97;\n    arr.push(tmp);\n  }\n  for(var j=0,len2=arr.length,k=arr[j];j<len2;j++){\n          if(k != arr[j]){\n                //console.log(arr[j]);\n                return String.fromCharCode(arr[j] + 97 -1 );\n          }\n          k++;\n  }\n}\n\n\nfearNotLetter(\"bcd\");\n//fearNotLetter(\"abcdefghjklmno\");\n```\n\n###### 9. [Boo who](https://www.freecodecamp.com/challenges/boo-who)\n> Check if a value is classified as a boolean primitive. Return true or false.\n\n这个不知道为什么会算到中级里来，简直简单的发指。\n\n```js\nfunction boo(bool) {\n  // What is the new fad diet for ghost developers? The Boolean.\n  return typeof bool === \"boolean\";\n}\n\nboo(null);\n\n```\n\n###### 10. [Sorted Union](https://www.freecodecamp.com/challenges/sorted-union)\n> Write a function that takes two or more arrays and returns a new array of unique values in the order of the original provided arrays.\nIn other words, all values present from all arrays should be included in their original order, but with no duplicates in the final array.\nThe unique numbers should be sorted by their original order, but the final array should not be sorted in numerical order.\n\n接收若干数组参数，返回所有不重复的数组元素并按接收参数的顺序排列。\n\n```js\nfunction unite() {\n  if(arguments.length === 1){\n    return arguments[0];\n  }\n  var arr = [],\n      res = [];\n  for(var i=0,len=arguments.length;i<len;i++){\n    arr = arguments[i];\n    for(var j=0;j<arr.length;j++){\n      //如果结果数组中不存在该值则放入数组\n      if(res.indexOf(arr[j]) === -1){\n        res.push(arr[j]);\n      }\n    }\n  }\n  return res;\n}\n\nunite([1, 3, 2], [5, 2, 1, 4], [2, 1]);\n```\n\n中级算法这个系列一共有21道题，为了避免博文篇幅过长，将中级算法系列分成两篇总结，此篇总结1-10题，[下一篇总结11-21题](/2016/03/23/Intermediate-Algorithm-Scripting-2/)。\n欢迎留言探讨，共同学习进步。\n","slug":"Intermediate-Algorithm-Scripting","published":1,"updated":"2018-10-19T18:30:07.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzsr000cfnpvjkqiu29y","content":"<h4 id=\"Intermediate-Algorithm\"><a href=\"#Intermediate-Algorithm\" class=\"headerlink\" title=\"Intermediate Algorithm\"></a>Intermediate Algorithm</h4><p><a href=\"/2016/02/28/freecodecamp%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89-Basic-Algorithm-Scripting/\">戳此处查看前一篇基础算法</a></p>\n<h6 id=\"1-Sum-All-Numbers-in-a-Range\"><a href=\"#1-Sum-All-Numbers-in-a-Range\" class=\"headerlink\" title=\"1. Sum All Numbers in a Range\"></a>1. <a href=\"https://www.freecodecamp.com/challenges/sum-all-numbers-in-a-range\" target=\"_blank\" rel=\"noopener\">Sum All Numbers in a Range</a></h6><blockquote>\n<p>We’ll pass you an array of two numbers. Return the sum of those two numbers and all numbers between them.<br>The lowest number will not always come first.</p>\n</blockquote>\n<p>求和给定数组约束范围内的所有数字</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMaxMin</span>(<span class=\"params\">arr,op</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(op === <span class=\"string\">\"max\"</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.max.apply(<span class=\"literal\">null</span>,arr);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.min.apply(<span class=\"literal\">null</span>,arr);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sumAll</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> min = getMaxMin(arr,<span class=\"string\">\"min\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> max = getMaxMin(arr,<span class=\"string\">\"max\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=min;i&lt;=max;i++)&#123;</span><br><span class=\"line\">    sum += i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sumAll([<span class=\"number\">1</span>, <span class=\"number\">4</span>]);</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h6 id=\"2-Diff-Two-Arrays\"><a href=\"#2-Diff-Two-Arrays\" class=\"headerlink\" title=\"2. Diff Two Arrays\"></a>2. <a href=\"https://www.freecodecamp.com/challenges/diff-two-arrays\" target=\"_blank\" rel=\"noopener\">Diff Two Arrays</a></h6><blockquote>\n<p>Compare two arrays and return a new array with any items only found in one of the two given arrays, but not both. In other words, return the symmetric difference of the two arrays.</p>\n</blockquote>\n<p>求两个给定数组的diff<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">diff</span>(<span class=\"params\">arr1, arr2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    var tmpall = arr1.concat(arr2);</span></span><br><span class=\"line\"><span class=\"comment\">    for(var i=0,len=tmpall.length;i&lt;len;i++)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      if(arr1.indexOf(tmpall[i]) != -1)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        //存在1里不存在2里</span></span><br><span class=\"line\"><span class=\"comment\">        if(arr2.indexOf(tmpall[i]) == -1)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">          newArr.push(tmpall[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        if(arr2.indexOf(tmpall[i]) != -1)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">          newArr.push(tmpall[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    arr1.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr2.indexOf(val) == <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">          newArr.push(val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    arr2.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr1.indexOf(val) == <span class=\"number\">-1</span> &amp;&amp; newArr.indexOf(val) == <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">          newArr.push(val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">diff([<span class=\"string\">\"andesite\"</span>, <span class=\"string\">\"grass\"</span>, <span class=\"string\">\"dirt\"</span>, <span class=\"string\">\"pink wool\"</span>, <span class=\"string\">\"dead shrub\"</span>], [<span class=\"string\">\"diorite\"</span>, <span class=\"string\">\"andesite\"</span>, <span class=\"string\">\"grass\"</span>, <span class=\"string\">\"dirt\"</span>, <span class=\"string\">\"dead shrub\"</span>]);</span><br><span class=\"line\"><span class=\"comment\">//diff([3,4,5],[3,4,5,6]);</span></span><br><span class=\"line\"><span class=\"comment\">//diff([1, 2, 3, 5], [1, 2, 3, 4, 5]);</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3-Roman-Numeral-Converter\"><a href=\"#3-Roman-Numeral-Converter\" class=\"headerlink\" title=\"3. Roman Numeral Converter\"></a>3. <a href=\"https://www.freecodecamp.com/challenges/roman-numeral-converter\" target=\"_blank\" rel=\"noopener\">Roman Numeral Converter</a></h6><blockquote>\n<p>Convert the given number into a roman numeral.</p>\n</blockquote>\n<p>将给定数字转化为罗马数字</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">convert</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> tmp = num;</span><br><span class=\"line\">        <span class=\"comment\">//按位数做罗马数字-整数的映射</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> romanNum = [[<span class=\"string\">\"\"</span>, <span class=\"string\">\"I\"</span>, <span class=\"string\">\"II\"</span>, <span class=\"string\">\"III\"</span>, <span class=\"string\">\"IV\"</span>, <span class=\"string\">\"V\"</span>, <span class=\"string\">\"VI\"</span>, <span class=\"string\">\"VII\"</span>, <span class=\"string\">\"VIII\"</span>, <span class=\"string\">\"IX\"</span> ],[ <span class=\"string\">\"\"</span>, <span class=\"string\">\"X\"</span>, <span class=\"string\">\"XX\"</span>, <span class=\"string\">\"XXX\"</span>, <span class=\"string\">\"XL\"</span>, <span class=\"string\">\"L\"</span>, <span class=\"string\">\"LX\"</span>, <span class=\"string\">\"LXX\"</span>, <span class=\"string\">\"LXXX\"</span>, <span class=\"string\">\"XC\"</span> ],[ <span class=\"string\">\"\"</span>, <span class=\"string\">\"C\"</span>, <span class=\"string\">\"CC\"</span>, <span class=\"string\">\"CCC\"</span>, <span class=\"string\">\"CD\"</span>, <span class=\"string\">\"D\"</span>, <span class=\"string\">\"DC\"</span>, <span class=\"string\">\"DCC\"</span>, <span class=\"string\">\"DCCC\"</span>, <span class=\"string\">\"CM\"</span> ],[ <span class=\"string\">\"\"</span>, <span class=\"string\">\"M\"</span>, <span class=\"string\">\"MM\"</span>, <span class=\"string\">\"MMM\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span> ]];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> ret = [];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//求总位数</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(tmp)&#123;</span><br><span class=\"line\">                i ++;</span><br><span class=\"line\">                tmp = <span class=\"built_in\">parseInt</span>(tmp / <span class=\"number\">10</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(num &amp;&amp; j &lt; i)&#123;</span><br><span class=\"line\">                ret.push(romanNum[j][num % <span class=\"number\">10</span>]);</span><br><span class=\"line\">                num = <span class=\"built_in\">parseInt</span>(num / <span class=\"number\">10</span>);</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret.reverse().join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">convert(<span class=\"number\">12</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"4-Where-art-thou\"><a href=\"#4-Where-art-thou\" class=\"headerlink\" title=\"4. Where art thou\"></a>4. <a href=\"https://www.freecodecamp.com/challenges/where-art-thou\" target=\"_blank\" rel=\"noopener\">Where art thou</a></h6><blockquote>\n<p>Make a function that looks through an array of objects (first argument) and returns an array of all objects that have matching property and value pairs (second argument). Each property and value pair of the source object has to be present in the object from the collection if it is to be included in the returned array.</p>\n</blockquote>\n<p>参数1给定一个若干对象构成的数组，参数2给定一个对象，算法需要从参数1中查找匹配参数2对象的所有对象并以数组形式输出。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">where</span>(<span class=\"params\">collection, source</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">  <span class=\"comment\">// What's in a name?</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> orikey = <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">      orivalue = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source)&#123;</span><br><span class=\"line\">        orikey = key;</span><br><span class=\"line\">        orivalue = source[key];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=collection.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> collection[i])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(key === orikey &amp;&amp; orivalue === collection[i][key])&#123;</span><br><span class=\"line\">                        arr.push(collection[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//where([&#123; first: \"Romeo\", last: \"Montague\" &#125;, &#123; first: \"Mercutio\", last: null &#125;, &#123; first: \"Tybalt\", last: \"Capulet\" &#125;], &#123; last: \"Capulet\" &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">where([&#123; <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">2</span> &#125;], &#123; <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span> &#125;);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"5-Search-and-Replace\"><a href=\"#5-Search-and-Replace\" class=\"headerlink\" title=\"5. Search and Replace\"></a>5. <a href=\"https://www.freecodecamp.com/challenges/search-and-replace\" target=\"_blank\" rel=\"noopener\">Search and Replace</a></h6><blockquote>\n<p>Perform a search and replace on the sentence using the arguments provided and return the new sentence.<br>First argument is the sentence to perform the search and replace on.<br>Second argument is the word that you will be replacing (before).<br>Third argument is what you will be replacing the second argument with (after).</p>\n</blockquote>\n<p>执行查找和替换，将句子(参数1)中出现的词(参数2)用另一个(参数3)替换</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isFirstUpper</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"regexp\">/^[A-Z]/</span>.test(str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">firstToUpper</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/^[a-z]/</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v.toUpperCase();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myReplace</span>(<span class=\"params\">str, before, after</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//判断待替换的单词是否是首字母大写，如果是则将替换的置为首字母大写</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(isFirstUpper(before))&#123;</span><br><span class=\"line\">      after = firstToUpper(after);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (str.replace(before,after));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">myReplace(<span class=\"string\">\"He is Sleeping on the couch\"</span>, <span class=\"string\">\"Sleeping\"</span>, <span class=\"string\">\"sitting\"</span>); </span><br><span class=\"line\"><span class=\"comment\">//myReplace(\"Let us go to the store\", \"store\", \"mall\");</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"6-Pig-Latin\"><a href=\"#6-Pig-Latin\" class=\"headerlink\" title=\"6. Pig Latin\"></a>6. <a href=\"https://www.freecodecamp.com/challenges/pig-latin\" target=\"_blank\" rel=\"noopener\">Pig Latin</a></h6><blockquote>\n<p>Translate the provided string to pig latin.<br>将给定字符串翻译成”pig latin”形式。pig latin就是一个将单词形变的小游戏：将单词第一个字母移动到最后并添加”ay”结尾，如果单词以元音开头，则添加”way”结尾。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">translate</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//遍历单词字符串，找到第一个元音字符，将其之前的字符暂存</span></span><br><span class=\"line\">  <span class=\"comment\">//然后将暂存字符搬到字符串最后并加上\"ay\"，如果存串为空，则直接加上\"way\"</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> vowel = [<span class=\"string\">'a'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'i'</span>,<span class=\"string\">'o'</span>,<span class=\"string\">'u'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> tmp = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(vowel.indexOf(str[i].toLowerCase()) != <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        tmp.push(str[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (str + <span class=\"string\">\"way\"</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>(str.substr(i).concat(tmp.join(<span class=\"string\">\"\"</span>)) + <span class=\"string\">\"ay\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">translate(<span class=\"string\">\"alifornia\"</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"7-DNA-Pairing\"><a href=\"#7-DNA-Pairing\" class=\"headerlink\" title=\"7. DNA Pairing\"></a>7. <a href=\"https://www.freecodecamp.com/challenges/dna-pairing\" target=\"_blank\" rel=\"noopener\">DNA Pairing</a></h6><blockquote>\n<p>The DNA strand is missing the pairing element. Take each character, get its pair, and return the results as a 2d array.</p>\n</blockquote>\n<p>DNA配对，DNA的配对形如”AT,CG”模式，亦即出现字母”A”则给之以”T”配对，以此类推。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pair</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> map = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"A\"</span>: <span class=\"string\">\"T\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"T\"</span>: <span class=\"string\">\"A\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"C\"</span>: <span class=\"string\">\"G\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"G\"</span>: <span class=\"string\">\"C\"</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> value = map[str[i].toUpperCase()];</span><br><span class=\"line\">    arr.push([str[i],value]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">pair(<span class=\"string\">\"GCG\"</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"8-Missing-letters\"><a href=\"#8-Missing-letters\" class=\"headerlink\" title=\"8. Missing letters\"></a>8. <a href=\"https://www.freecodecamp.com/challenges/missing-letters\" target=\"_blank\" rel=\"noopener\">Missing letters</a></h6><blockquote>\n<p>Find the missing letter in the passed letter range and return it.<br>If all letters are present in the range, return undefined.</p>\n</blockquote>\n<p>查找并返回给定字符序列中缺失的字母，如”bcdef”应返回”a”。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fearNotLetter</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//均先转为小写字母后转为数字，起始为0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = str[i].toLowerCase().charCodeAt(<span class=\"number\">0</span>) - <span class=\"number\">97</span>;</span><br><span class=\"line\">    arr.push(tmp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,len2=arr.length,k=arr[j];j&lt;len2;j++)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(k != arr[j])&#123;</span><br><span class=\"line\">                <span class=\"comment\">//console.log(arr[j]);</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">String</span>.fromCharCode(arr[j] + <span class=\"number\">97</span> <span class=\"number\">-1</span> );</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          k++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">fearNotLetter(<span class=\"string\">\"bcd\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//fearNotLetter(\"abcdefghjklmno\");</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"9-Boo-who\"><a href=\"#9-Boo-who\" class=\"headerlink\" title=\"9. Boo who\"></a>9. <a href=\"https://www.freecodecamp.com/challenges/boo-who\" target=\"_blank\" rel=\"noopener\">Boo who</a></h6><blockquote>\n<p>Check if a value is classified as a boolean primitive. Return true or false.</p>\n</blockquote>\n<p>这个不知道为什么会算到中级里来，简直简单的发指。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boo</span>(<span class=\"params\">bool</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// What is the new fad diet for ghost developers? The Boolean.</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> bool === <span class=\"string\">\"boolean\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">boo(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"10-Sorted-Union\"><a href=\"#10-Sorted-Union\" class=\"headerlink\" title=\"10. Sorted Union\"></a>10. <a href=\"https://www.freecodecamp.com/challenges/sorted-union\" target=\"_blank\" rel=\"noopener\">Sorted Union</a></h6><blockquote>\n<p>Write a function that takes two or more arrays and returns a new array of unique values in the order of the original provided arrays.<br>In other words, all values present from all arrays should be included in their original order, but with no duplicates in the final array.<br>The unique numbers should be sorted by their original order, but the final array should not be sorted in numerical order.</p>\n</blockquote>\n<p>接收若干数组参数，返回所有不重复的数组元素并按接收参数的顺序排列。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unite</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"built_in\">arguments</span>.length === <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [],</span><br><span class=\"line\">      res = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=<span class=\"built_in\">arguments</span>.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    arr = <span class=\"built_in\">arguments</span>[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;arr.length;j++)&#123;</span><br><span class=\"line\">      <span class=\"comment\">//如果结果数组中不存在该值则放入数组</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(res.indexOf(arr[j]) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        res.push(arr[j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">unite([<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>], [<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>], [<span class=\"number\">2</span>, <span class=\"number\">1</span>]);</span><br></pre></td></tr></table></figure>\n<p>中级算法这个系列一共有21道题，为了避免博文篇幅过长，将中级算法系列分成两篇总结，此篇总结1-10题，<a href=\"/2016/03/23/Intermediate-Algorithm-Scripting-2/\">下一篇总结11-21题</a>。<br>欢迎留言探讨，共同学习进步。</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"Intermediate-Algorithm\"><a href=\"#Intermediate-Algorithm\" class=\"headerlink\" title=\"Intermediate Algorithm\"></a>Intermediate Algorithm</h4><p><a href=\"/2016/02/28/freecodecamp%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89-Basic-Algorithm-Scripting/\">戳此处查看前一篇基础算法</a></p>\n<h6 id=\"1-Sum-All-Numbers-in-a-Range\"><a href=\"#1-Sum-All-Numbers-in-a-Range\" class=\"headerlink\" title=\"1. Sum All Numbers in a Range\"></a>1. <a href=\"https://www.freecodecamp.com/challenges/sum-all-numbers-in-a-range\" target=\"_blank\" rel=\"noopener\">Sum All Numbers in a Range</a></h6><blockquote>\n<p>We’ll pass you an array of two numbers. Return the sum of those two numbers and all numbers between them.<br>The lowest number will not always come first.</p>\n</blockquote>\n<p>求和给定数组约束范围内的所有数字</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMaxMin</span>(<span class=\"params\">arr,op</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(op === <span class=\"string\">\"max\"</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.max.apply(<span class=\"literal\">null</span>,arr);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.min.apply(<span class=\"literal\">null</span>,arr);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sumAll</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> min = getMaxMin(arr,<span class=\"string\">\"min\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> max = getMaxMin(arr,<span class=\"string\">\"max\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=min;i&lt;=max;i++)&#123;</span><br><span class=\"line\">    sum += i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sumAll([<span class=\"number\">1</span>, <span class=\"number\">4</span>]);</span><br></pre></td></tr></table></figure>","more":"<h6 id=\"2-Diff-Two-Arrays\"><a href=\"#2-Diff-Two-Arrays\" class=\"headerlink\" title=\"2. Diff Two Arrays\"></a>2. <a href=\"https://www.freecodecamp.com/challenges/diff-two-arrays\" target=\"_blank\" rel=\"noopener\">Diff Two Arrays</a></h6><blockquote>\n<p>Compare two arrays and return a new array with any items only found in one of the two given arrays, but not both. In other words, return the symmetric difference of the two arrays.</p>\n</blockquote>\n<p>求两个给定数组的diff<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">diff</span>(<span class=\"params\">arr1, arr2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    var tmpall = arr1.concat(arr2);</span></span><br><span class=\"line\"><span class=\"comment\">    for(var i=0,len=tmpall.length;i&lt;len;i++)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      if(arr1.indexOf(tmpall[i]) != -1)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        //存在1里不存在2里</span></span><br><span class=\"line\"><span class=\"comment\">        if(arr2.indexOf(tmpall[i]) == -1)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">          newArr.push(tmpall[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        if(arr2.indexOf(tmpall[i]) != -1)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">          newArr.push(tmpall[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    arr1.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr2.indexOf(val) == <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">          newArr.push(val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    arr2.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr1.indexOf(val) == <span class=\"number\">-1</span> &amp;&amp; newArr.indexOf(val) == <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">          newArr.push(val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">diff([<span class=\"string\">\"andesite\"</span>, <span class=\"string\">\"grass\"</span>, <span class=\"string\">\"dirt\"</span>, <span class=\"string\">\"pink wool\"</span>, <span class=\"string\">\"dead shrub\"</span>], [<span class=\"string\">\"diorite\"</span>, <span class=\"string\">\"andesite\"</span>, <span class=\"string\">\"grass\"</span>, <span class=\"string\">\"dirt\"</span>, <span class=\"string\">\"dead shrub\"</span>]);</span><br><span class=\"line\"><span class=\"comment\">//diff([3,4,5],[3,4,5,6]);</span></span><br><span class=\"line\"><span class=\"comment\">//diff([1, 2, 3, 5], [1, 2, 3, 4, 5]);</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3-Roman-Numeral-Converter\"><a href=\"#3-Roman-Numeral-Converter\" class=\"headerlink\" title=\"3. Roman Numeral Converter\"></a>3. <a href=\"https://www.freecodecamp.com/challenges/roman-numeral-converter\" target=\"_blank\" rel=\"noopener\">Roman Numeral Converter</a></h6><blockquote>\n<p>Convert the given number into a roman numeral.</p>\n</blockquote>\n<p>将给定数字转化为罗马数字</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">convert</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> tmp = num;</span><br><span class=\"line\">        <span class=\"comment\">//按位数做罗马数字-整数的映射</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> romanNum = [[<span class=\"string\">\"\"</span>, <span class=\"string\">\"I\"</span>, <span class=\"string\">\"II\"</span>, <span class=\"string\">\"III\"</span>, <span class=\"string\">\"IV\"</span>, <span class=\"string\">\"V\"</span>, <span class=\"string\">\"VI\"</span>, <span class=\"string\">\"VII\"</span>, <span class=\"string\">\"VIII\"</span>, <span class=\"string\">\"IX\"</span> ],[ <span class=\"string\">\"\"</span>, <span class=\"string\">\"X\"</span>, <span class=\"string\">\"XX\"</span>, <span class=\"string\">\"XXX\"</span>, <span class=\"string\">\"XL\"</span>, <span class=\"string\">\"L\"</span>, <span class=\"string\">\"LX\"</span>, <span class=\"string\">\"LXX\"</span>, <span class=\"string\">\"LXXX\"</span>, <span class=\"string\">\"XC\"</span> ],[ <span class=\"string\">\"\"</span>, <span class=\"string\">\"C\"</span>, <span class=\"string\">\"CC\"</span>, <span class=\"string\">\"CCC\"</span>, <span class=\"string\">\"CD\"</span>, <span class=\"string\">\"D\"</span>, <span class=\"string\">\"DC\"</span>, <span class=\"string\">\"DCC\"</span>, <span class=\"string\">\"DCCC\"</span>, <span class=\"string\">\"CM\"</span> ],[ <span class=\"string\">\"\"</span>, <span class=\"string\">\"M\"</span>, <span class=\"string\">\"MM\"</span>, <span class=\"string\">\"MMM\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span> ]];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> ret = [];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//求总位数</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(tmp)&#123;</span><br><span class=\"line\">                i ++;</span><br><span class=\"line\">                tmp = <span class=\"built_in\">parseInt</span>(tmp / <span class=\"number\">10</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(num &amp;&amp; j &lt; i)&#123;</span><br><span class=\"line\">                ret.push(romanNum[j][num % <span class=\"number\">10</span>]);</span><br><span class=\"line\">                num = <span class=\"built_in\">parseInt</span>(num / <span class=\"number\">10</span>);</span><br><span class=\"line\">                j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret.reverse().join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">convert(<span class=\"number\">12</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"4-Where-art-thou\"><a href=\"#4-Where-art-thou\" class=\"headerlink\" title=\"4. Where art thou\"></a>4. <a href=\"https://www.freecodecamp.com/challenges/where-art-thou\" target=\"_blank\" rel=\"noopener\">Where art thou</a></h6><blockquote>\n<p>Make a function that looks through an array of objects (first argument) and returns an array of all objects that have matching property and value pairs (second argument). Each property and value pair of the source object has to be present in the object from the collection if it is to be included in the returned array.</p>\n</blockquote>\n<p>参数1给定一个若干对象构成的数组，参数2给定一个对象，算法需要从参数1中查找匹配参数2对象的所有对象并以数组形式输出。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">where</span>(<span class=\"params\">collection, source</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">  <span class=\"comment\">// What's in a name?</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> orikey = <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">      orivalue = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> source)&#123;</span><br><span class=\"line\">        orikey = key;</span><br><span class=\"line\">        orivalue = source[key];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=collection.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> collection[i])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(key === orikey &amp;&amp; orivalue === collection[i][key])&#123;</span><br><span class=\"line\">                        arr.push(collection[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//where([&#123; first: \"Romeo\", last: \"Montague\" &#125;, &#123; first: \"Mercutio\", last: null &#125;, &#123; first: \"Tybalt\", last: \"Capulet\" &#125;], &#123; last: \"Capulet\" &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">where([&#123; <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span>, <span class=\"string\">\"b\"</span>: <span class=\"number\">2</span> &#125;], &#123; <span class=\"string\">\"a\"</span>: <span class=\"number\">1</span> &#125;);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"5-Search-and-Replace\"><a href=\"#5-Search-and-Replace\" class=\"headerlink\" title=\"5. Search and Replace\"></a>5. <a href=\"https://www.freecodecamp.com/challenges/search-and-replace\" target=\"_blank\" rel=\"noopener\">Search and Replace</a></h6><blockquote>\n<p>Perform a search and replace on the sentence using the arguments provided and return the new sentence.<br>First argument is the sentence to perform the search and replace on.<br>Second argument is the word that you will be replacing (before).<br>Third argument is what you will be replacing the second argument with (after).</p>\n</blockquote>\n<p>执行查找和替换，将句子(参数1)中出现的词(参数2)用另一个(参数3)替换</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isFirstUpper</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"regexp\">/^[A-Z]/</span>.test(str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">firstToUpper</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.replace(<span class=\"regexp\">/^[a-z]/</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v.toUpperCase();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myReplace</span>(<span class=\"params\">str, before, after</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//判断待替换的单词是否是首字母大写，如果是则将替换的置为首字母大写</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(isFirstUpper(before))&#123;</span><br><span class=\"line\">      after = firstToUpper(after);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (str.replace(before,after));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">myReplace(<span class=\"string\">\"He is Sleeping on the couch\"</span>, <span class=\"string\">\"Sleeping\"</span>, <span class=\"string\">\"sitting\"</span>); </span><br><span class=\"line\"><span class=\"comment\">//myReplace(\"Let us go to the store\", \"store\", \"mall\");</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"6-Pig-Latin\"><a href=\"#6-Pig-Latin\" class=\"headerlink\" title=\"6. Pig Latin\"></a>6. <a href=\"https://www.freecodecamp.com/challenges/pig-latin\" target=\"_blank\" rel=\"noopener\">Pig Latin</a></h6><blockquote>\n<p>Translate the provided string to pig latin.<br>将给定字符串翻译成”pig latin”形式。pig latin就是一个将单词形变的小游戏：将单词第一个字母移动到最后并添加”ay”结尾，如果单词以元音开头，则添加”way”结尾。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">translate</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//遍历单词字符串，找到第一个元音字符，将其之前的字符暂存</span></span><br><span class=\"line\">  <span class=\"comment\">//然后将暂存字符搬到字符串最后并加上\"ay\"，如果存串为空，则直接加上\"way\"</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> vowel = [<span class=\"string\">'a'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'i'</span>,<span class=\"string\">'o'</span>,<span class=\"string\">'u'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> tmp = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(vowel.indexOf(str[i].toLowerCase()) != <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        tmp.push(str[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> (str + <span class=\"string\">\"way\"</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>(str.substr(i).concat(tmp.join(<span class=\"string\">\"\"</span>)) + <span class=\"string\">\"ay\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">translate(<span class=\"string\">\"alifornia\"</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"7-DNA-Pairing\"><a href=\"#7-DNA-Pairing\" class=\"headerlink\" title=\"7. DNA Pairing\"></a>7. <a href=\"https://www.freecodecamp.com/challenges/dna-pairing\" target=\"_blank\" rel=\"noopener\">DNA Pairing</a></h6><blockquote>\n<p>The DNA strand is missing the pairing element. Take each character, get its pair, and return the results as a 2d array.</p>\n</blockquote>\n<p>DNA配对，DNA的配对形如”AT,CG”模式，亦即出现字母”A”则给之以”T”配对，以此类推。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pair</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> map = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"A\"</span>: <span class=\"string\">\"T\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"T\"</span>: <span class=\"string\">\"A\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"C\"</span>: <span class=\"string\">\"G\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"G\"</span>: <span class=\"string\">\"C\"</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> value = map[str[i].toUpperCase()];</span><br><span class=\"line\">    arr.push([str[i],value]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">pair(<span class=\"string\">\"GCG\"</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"8-Missing-letters\"><a href=\"#8-Missing-letters\" class=\"headerlink\" title=\"8. Missing letters\"></a>8. <a href=\"https://www.freecodecamp.com/challenges/missing-letters\" target=\"_blank\" rel=\"noopener\">Missing letters</a></h6><blockquote>\n<p>Find the missing letter in the passed letter range and return it.<br>If all letters are present in the range, return undefined.</p>\n</blockquote>\n<p>查找并返回给定字符序列中缺失的字母，如”bcdef”应返回”a”。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fearNotLetter</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//均先转为小写字母后转为数字，起始为0</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = str[i].toLowerCase().charCodeAt(<span class=\"number\">0</span>) - <span class=\"number\">97</span>;</span><br><span class=\"line\">    arr.push(tmp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,len2=arr.length,k=arr[j];j&lt;len2;j++)&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(k != arr[j])&#123;</span><br><span class=\"line\">                <span class=\"comment\">//console.log(arr[j]);</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"built_in\">String</span>.fromCharCode(arr[j] + <span class=\"number\">97</span> <span class=\"number\">-1</span> );</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          k++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">fearNotLetter(<span class=\"string\">\"bcd\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//fearNotLetter(\"abcdefghjklmno\");</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"9-Boo-who\"><a href=\"#9-Boo-who\" class=\"headerlink\" title=\"9. Boo who\"></a>9. <a href=\"https://www.freecodecamp.com/challenges/boo-who\" target=\"_blank\" rel=\"noopener\">Boo who</a></h6><blockquote>\n<p>Check if a value is classified as a boolean primitive. Return true or false.</p>\n</blockquote>\n<p>这个不知道为什么会算到中级里来，简直简单的发指。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boo</span>(<span class=\"params\">bool</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// What is the new fad diet for ghost developers? The Boolean.</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">typeof</span> bool === <span class=\"string\">\"boolean\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">boo(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n<h6 id=\"10-Sorted-Union\"><a href=\"#10-Sorted-Union\" class=\"headerlink\" title=\"10. Sorted Union\"></a>10. <a href=\"https://www.freecodecamp.com/challenges/sorted-union\" target=\"_blank\" rel=\"noopener\">Sorted Union</a></h6><blockquote>\n<p>Write a function that takes two or more arrays and returns a new array of unique values in the order of the original provided arrays.<br>In other words, all values present from all arrays should be included in their original order, but with no duplicates in the final array.<br>The unique numbers should be sorted by their original order, but the final array should not be sorted in numerical order.</p>\n</blockquote>\n<p>接收若干数组参数，返回所有不重复的数组元素并按接收参数的顺序排列。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unite</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"built_in\">arguments</span>.length === <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [],</span><br><span class=\"line\">      res = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=<span class=\"built_in\">arguments</span>.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    arr = <span class=\"built_in\">arguments</span>[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;arr.length;j++)&#123;</span><br><span class=\"line\">      <span class=\"comment\">//如果结果数组中不存在该值则放入数组</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(res.indexOf(arr[j]) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        res.push(arr[j]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">unite([<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>], [<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>], [<span class=\"number\">2</span>, <span class=\"number\">1</span>]);</span><br></pre></td></tr></table></figure>\n<p>中级算法这个系列一共有21道题，为了避免博文篇幅过长，将中级算法系列分成两篇总结，此篇总结1-10题，<a href=\"/2016/03/23/Intermediate-Algorithm-Scripting-2/\">下一篇总结11-21题</a>。<br>欢迎留言探讨，共同学习进步。</p>","sticky":0},{"title":"ant-design的select组件onSelect事件简析","show":true,"date":"2017-01-01T09:53:45.000Z","_content":"\n## 背景\n最近刚入react的坑，前端的布局和控件设计用的是阿里的开源框架：[ant-design](http://ant.design)。ant-design不失为一款好用的设计框架，与bootstrap类似，比bootstrap好看，只是必须结合react使用。跟阿里其他的开源工具类似地，存在一个共同的通病，亦或者可以说是所有国有开源软件的通病：文档写的不够细致。\nant-design也是这样，在官方文档中经常有一些说的不够的地方，让使用者看的莫名所以。最典型的要数针对控件的API的事件参数的说明了，在这上面已经踩了很多的坑。有的是不知道参数传入的意义，有的是参数传递的使用方法说的不够具体等。本篇就一个具体的问题：Select选择器的onSelect事件记录一下踩坑的经历。\n\n## 问题\n我在开发中用到了如下代码片段：\n```\nconst options = options.map(d => {\n\treturn <Option key={d.id}>{d.value}</Option>;\n});\n<Select onSelect={this.props.onSelect}>\n\t{options}\n</Select>\n```\n其中key属性是按照react的官方要求，遍历数组元素生成控件时要添加一个唯一的key属性供react的diff算法渲染。\n渲染没有问题，在下拉选择的时候onSelect获取的参数值总是跟预期的不一致，在上例中，onSelect接收的总是key的值，然而官方文档里说：被选中时调用，参数为选中项的value值。\n\n## 探索\n文档除了那一句话外就没多说了，既然文档写的语焉不详，那么只好写测试自己琢磨了。\n\n1. 测试代码1\n\n\t```\n\timport { Select } from 'antd';\n\tconst Option = Select.Option;\n\n\n\tReactDOM.render(\n\t  <Select value=\"test\"\n\t\tonSelect={function(value){alert(value);}}\n\t  >\n\t\t<Option key={1}>\n\t\t  111\n\t\t</Option>\n\t\t<Option key={2}>\n\t\t222\n\t\t</Option>\n\t  </Select>\n\t  , mountNode);\n\t```\n\t运行后发现确实是选择111时弹出1，选择222时弹出2，获取的是key。。。\n\n2. 测试代码2\n\n\t```\n\timport { Select } from 'antd';\n\tconst Option = Select.Option;\n\n\n\tReactDOM.render(\n\t  <Select value=\"test\"\n\t\tonSelect={function(value){alert(value);}}\n\t  >\n\t\t<Option value={1}>\n\t\t  111\n\t\t</Option>\n\t\t<Option value={2}>\n\t\t222\n\t\t</Option>\n\t  </Select>\n\t  , mountNode);\n\t```\n\t怀疑官网说的value不是option的value值而是value属性，于是将key属性换成value。结果果然是选择111时弹出1，选择222的时候弹出2了。\n\n验证了猜想，文档里说的onSelect的参数是被选中项的value属性而不是值，并且可恶的地方在于，没有设置value属性的时候竟然会返回key属性。。。要么说明下，要么按照文档的如实返回，返回key属性这不是挖坑了吗！\n","source":"_posts/ant-design的select组件onSelect事件简析.md","raw":"title: ant-design的select组件onSelect事件简析\nshow: true\ndate: 2017-01-01 17:53:45\ntags: [react,ant-design,select,onSelect]\ncategories: 技术人生\n---\n\n## 背景\n最近刚入react的坑，前端的布局和控件设计用的是阿里的开源框架：[ant-design](http://ant.design)。ant-design不失为一款好用的设计框架，与bootstrap类似，比bootstrap好看，只是必须结合react使用。跟阿里其他的开源工具类似地，存在一个共同的通病，亦或者可以说是所有国有开源软件的通病：文档写的不够细致。\nant-design也是这样，在官方文档中经常有一些说的不够的地方，让使用者看的莫名所以。最典型的要数针对控件的API的事件参数的说明了，在这上面已经踩了很多的坑。有的是不知道参数传入的意义，有的是参数传递的使用方法说的不够具体等。本篇就一个具体的问题：Select选择器的onSelect事件记录一下踩坑的经历。\n\n## 问题\n我在开发中用到了如下代码片段：\n```\nconst options = options.map(d => {\n\treturn <Option key={d.id}>{d.value}</Option>;\n});\n<Select onSelect={this.props.onSelect}>\n\t{options}\n</Select>\n```\n其中key属性是按照react的官方要求，遍历数组元素生成控件时要添加一个唯一的key属性供react的diff算法渲染。\n渲染没有问题，在下拉选择的时候onSelect获取的参数值总是跟预期的不一致，在上例中，onSelect接收的总是key的值，然而官方文档里说：被选中时调用，参数为选中项的value值。\n\n## 探索\n文档除了那一句话外就没多说了，既然文档写的语焉不详，那么只好写测试自己琢磨了。\n\n1. 测试代码1\n\n\t```\n\timport { Select } from 'antd';\n\tconst Option = Select.Option;\n\n\n\tReactDOM.render(\n\t  <Select value=\"test\"\n\t\tonSelect={function(value){alert(value);}}\n\t  >\n\t\t<Option key={1}>\n\t\t  111\n\t\t</Option>\n\t\t<Option key={2}>\n\t\t222\n\t\t</Option>\n\t  </Select>\n\t  , mountNode);\n\t```\n\t运行后发现确实是选择111时弹出1，选择222时弹出2，获取的是key。。。\n\n2. 测试代码2\n\n\t```\n\timport { Select } from 'antd';\n\tconst Option = Select.Option;\n\n\n\tReactDOM.render(\n\t  <Select value=\"test\"\n\t\tonSelect={function(value){alert(value);}}\n\t  >\n\t\t<Option value={1}>\n\t\t  111\n\t\t</Option>\n\t\t<Option value={2}>\n\t\t222\n\t\t</Option>\n\t  </Select>\n\t  , mountNode);\n\t```\n\t怀疑官网说的value不是option的value值而是value属性，于是将key属性换成value。结果果然是选择111时弹出1，选择222的时候弹出2了。\n\n验证了猜想，文档里说的onSelect的参数是被选中项的value属性而不是值，并且可恶的地方在于，没有设置value属性的时候竟然会返回key属性。。。要么说明下，要么按照文档的如实返回，返回key属性这不是挖坑了吗！\n","slug":"ant-design的select组件onSelect事件简析","published":1,"updated":"2018-10-19T18:30:07.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzsu000efnpvf88mmjvm","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近刚入react的坑，前端的布局和控件设计用的是阿里的开源框架：<a href=\"http://ant.design\" target=\"_blank\" rel=\"noopener\">ant-design</a>。ant-design不失为一款好用的设计框架，与bootstrap类似，比bootstrap好看，只是必须结合react使用。跟阿里其他的开源工具类似地，存在一个共同的通病，亦或者可以说是所有国有开源软件的通病：文档写的不够细致。<br>ant-design也是这样，在官方文档中经常有一些说的不够的地方，让使用者看的莫名所以。最典型的要数针对控件的API的事件参数的说明了，在这上面已经踩了很多的坑。有的是不知道参数传入的意义，有的是参数传递的使用方法说的不够具体等。本篇就一个具体的问题：Select选择器的onSelect事件记录一下踩坑的经历。</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>我在开发中用到了如下代码片段：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> options = options.map(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Option</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;d.id&#125;</span>&gt;</span>&#123;d.value&#125;<span class=\"tag\">&lt;/<span class=\"name\">Option</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;Select onSelect=&#123;<span class=\"keyword\">this</span>.props.onSelect&#125;&gt;</span><br><span class=\"line\">\t&#123;options&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/Select&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>其中key属性是按照react的官方要求，遍历数组元素生成控件时要添加一个唯一的key属性供react的diff算法渲染。<br>渲染没有问题，在下拉选择的时候onSelect获取的参数值总是跟预期的不一致，在上例中，onSelect接收的总是key的值，然而官方文档里说：被选中时调用，参数为选中项的value值。</p>\n<h2 id=\"探索\"><a href=\"#探索\" class=\"headerlink\" title=\"探索\"></a>探索</h2><p>文档除了那一句话外就没多说了，既然文档写的语焉不详，那么只好写测试自己琢磨了。</p>\n<ol>\n<li><p>测试代码1</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Select &#125; <span class=\"keyword\">from</span> <span class=\"string\">'antd'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> Option = Select.Option;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render(</span><br><span class=\"line\">  &lt;Select value=<span class=\"string\">\"test\"</span></span><br><span class=\"line\">\tonSelect=&#123;<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>)</span>&#123;alert(value);&#125;&#125;</span><br><span class=\"line\">  &gt;</span><br><span class=\"line\">\t&lt;Option key=&#123;<span class=\"number\">1</span>&#125;&gt;</span><br><span class=\"line\">\t  <span class=\"number\">111</span></span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/Option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;Option key=&#123;2&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t222</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;/</span>Option&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/Select&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  , mountNode);</span></span><br></pre></td></tr></table></figure>\n<p> 运行后发现确实是选择111时弹出1，选择222时弹出2，获取的是key。。。</p>\n</li>\n<li><p>测试代码2</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Select &#125; <span class=\"keyword\">from</span> <span class=\"string\">'antd'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> Option = Select.Option;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render(</span><br><span class=\"line\">  &lt;Select value=<span class=\"string\">\"test\"</span></span><br><span class=\"line\">\tonSelect=&#123;<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>)</span>&#123;alert(value);&#125;&#125;</span><br><span class=\"line\">  &gt;</span><br><span class=\"line\">\t&lt;Option value=&#123;<span class=\"number\">1</span>&#125;&gt;</span><br><span class=\"line\">\t  <span class=\"number\">111</span></span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/Option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;Option value=&#123;2&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t222</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;/</span>Option&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/Select&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  , mountNode);</span></span><br></pre></td></tr></table></figure>\n<p> 怀疑官网说的value不是option的value值而是value属性，于是将key属性换成value。结果果然是选择111时弹出1，选择222的时候弹出2了。</p>\n</li>\n</ol>\n<p>验证了猜想，文档里说的onSelect的参数是被选中项的value属性而不是值，并且可恶的地方在于，没有设置value属性的时候竟然会返回key属性。。。要么说明下，要么按照文档的如实返回，返回key属性这不是挖坑了吗！</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近刚入react的坑，前端的布局和控件设计用的是阿里的开源框架：<a href=\"http://ant.design\" target=\"_blank\" rel=\"noopener\">ant-design</a>。ant-design不失为一款好用的设计框架，与bootstrap类似，比bootstrap好看，只是必须结合react使用。跟阿里其他的开源工具类似地，存在一个共同的通病，亦或者可以说是所有国有开源软件的通病：文档写的不够细致。<br>ant-design也是这样，在官方文档中经常有一些说的不够的地方，让使用者看的莫名所以。最典型的要数针对控件的API的事件参数的说明了，在这上面已经踩了很多的坑。有的是不知道参数传入的意义，有的是参数传递的使用方法说的不够具体等。本篇就一个具体的问题：Select选择器的onSelect事件记录一下踩坑的经历。</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>我在开发中用到了如下代码片段：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> options = options.map(<span class=\"function\"><span class=\"params\">d</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Option</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;d.id&#125;</span>&gt;</span>&#123;d.value&#125;<span class=\"tag\">&lt;/<span class=\"name\">Option</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;Select onSelect=&#123;<span class=\"keyword\">this</span>.props.onSelect&#125;&gt;</span><br><span class=\"line\">\t&#123;options&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/Select&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>其中key属性是按照react的官方要求，遍历数组元素生成控件时要添加一个唯一的key属性供react的diff算法渲染。<br>渲染没有问题，在下拉选择的时候onSelect获取的参数值总是跟预期的不一致，在上例中，onSelect接收的总是key的值，然而官方文档里说：被选中时调用，参数为选中项的value值。</p>\n<h2 id=\"探索\"><a href=\"#探索\" class=\"headerlink\" title=\"探索\"></a>探索</h2><p>文档除了那一句话外就没多说了，既然文档写的语焉不详，那么只好写测试自己琢磨了。</p>\n<ol>\n<li><p>测试代码1</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Select &#125; <span class=\"keyword\">from</span> <span class=\"string\">'antd'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> Option = Select.Option;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render(</span><br><span class=\"line\">  &lt;Select value=<span class=\"string\">\"test\"</span></span><br><span class=\"line\">\tonSelect=&#123;<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>)</span>&#123;alert(value);&#125;&#125;</span><br><span class=\"line\">  &gt;</span><br><span class=\"line\">\t&lt;Option key=&#123;<span class=\"number\">1</span>&#125;&gt;</span><br><span class=\"line\">\t  <span class=\"number\">111</span></span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/Option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;Option key=&#123;2&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t222</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;/</span>Option&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/Select&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  , mountNode);</span></span><br></pre></td></tr></table></figure>\n<p> 运行后发现确实是选择111时弹出1，选择222时弹出2，获取的是key。。。</p>\n</li>\n<li><p>测试代码2</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Select &#125; <span class=\"keyword\">from</span> <span class=\"string\">'antd'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> Option = Select.Option;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render(</span><br><span class=\"line\">  &lt;Select value=<span class=\"string\">\"test\"</span></span><br><span class=\"line\">\tonSelect=&#123;<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>)</span>&#123;alert(value);&#125;&#125;</span><br><span class=\"line\">  &gt;</span><br><span class=\"line\">\t&lt;Option value=&#123;<span class=\"number\">1</span>&#125;&gt;</span><br><span class=\"line\">\t  <span class=\"number\">111</span></span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/Option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;Option value=&#123;2&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t222</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;/</span>Option&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/Select&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  , mountNode);</span></span><br></pre></td></tr></table></figure>\n<p> 怀疑官网说的value不是option的value值而是value属性，于是将key属性换成value。结果果然是选择111时弹出1，选择222的时候弹出2了。</p>\n</li>\n</ol>\n<p>验证了猜想，文档里说的onSelect的参数是被选中项的value属性而不是值，并且可恶的地方在于，没有设置value属性的时候竟然会返回key属性。。。要么说明下，要么按照文档的如实返回，返回key属性这不是挖坑了吗！</p>\n","sticky":0},{"title":"[备忘]下载器aria2 & transmission安装配置以及开启web控制","show":true,"date":"2016-05-21T11:46:41.000Z","_content":"树莓派使用了aria2和transmission来作为下载器，虽然网上已经有很多的相关安装和配置教程，但为了不用需要的时候再上网搜索，此处简单记录下相关的操作。\n\n##### aria2\n1. 安装\n```\nsudo apt-get install aria2\n```\n\n2. 配置\n我的配置供参考\n\n<!--more-->\n\n```\n## '#'开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##\n## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##\n\n## 文件保存相关 ##\n\n# 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置\ndir=/home/pi/share/电影\n# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M\ndisk-cache=32M\n# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc\n# 预分配所需时间: none < falloc ? trunc < prealloc\n# falloc和trunc则需要文件系统和内核支持\n# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项\nfile-allocation=falloc\n# 断点续传\ncontinue=true\n\n## 下载连接相关 ##\n\n# 最大同时下载任务数, 运行时可修改, 默认:5\nmax-concurrent-downloads=20\n# 同一服务器连接数, 添加时可指定, 默认:1\nmax-connection-per-server=5\n# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M\n# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载\nmin-split-size=10M\n# 单个任务最大线程数, 添加时可指定, 默认:5\nsplit=5\n# 整体下载速度限制, 运行时可修改, 默认:0\n#max-overall-download-limit=0\n# 单个任务下载速度限制, 默认:0\n#max-download-limit=0\n# 整体上传速度限制, 运行时可修改, 默认:0\n#max-overall-upload-limit=0\n# 单个任务上传速度限制, 默认:0\n#max-upload-limit=0\n# 禁用IPv6, 默认:false\ndisable-ipv6=true\n\n## 进度保存相关 ##\n\n# 从会话文件中读取下载任务\ninput-file=/etc/aria2/aria2.session\n# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件\nsave-session=/etc/aria2/aria2.session\n# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0\n#save-session-interval=60\n\n## RPC相关设置 ##\n\n# 启用RPC, 默认:false\nenable-rpc=true\n# 允许所有来源, 默认:false\nrpc-allow-origin-all=true\n# 允许非外部访问, 默认:false\nrpc-listen-all=true\n# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同\n#event-poll=select\n# RPC监听端口, 端口被占用时可以修改, 默认:6800\n#rpc-listen-port=6800\n# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项\n#rpc-secret=<TOKEN>\n# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项\n#rpc-user=<USER>\n# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项\n#rpc-passwd=<PASSWD>\n\n## BT/PT下载相关 ##\n\n# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true\nfollow-torrent=true\n# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999\nlisten-port=51413\n# 单个种子最大连接数, 默认:55\n#bt-max-peers=55\n# 打开DHT功能, PT需要禁用, 默认:true\nenable-dht=false\n# 打开IPv6 DHT功能, PT需要禁用\n#enable-dht6=false\n# DHT网络监听端口, 默认:6881-6999\n#dht-listen-port=6881-6999\n# 本地节点查找, PT需要禁用, 默认:false\n#bt-enable-lpd=false\n# 种子交换, PT需要禁用, 默认:true\nenable-peer-exchange=false\n# 每个种子限速, 对少种的PT很有用, 默认:50K\n#bt-request-peer-speed-limit=50K\n# 客户端伪装, PT需要\npeer-id-prefix=-TR2770-\nuser-agent=Transmission/2.77\n# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0\nseed-ratio=0.2\n# 强制保存会话, 即使任务已经完成, 默认:false\n# 较新的版本开启后会在任务完成后依然保留.aria2文件\n#force-save=false\n# BT校验相关, 默认:true\n#bt-hash-check-seed=true\n# 继续之前的BT任务时, 无需再次校验, 默认:false\nbt-seed-unverified=true\n# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false\nbt-save-metadata=true\n\n```\n\n3. 开启web控制\n开启web控制后，即可以通过访问服务所在部署ip访问web控制端\n```\naria2c --enable-rpc --rpc-listen-all=true --rpc-allow-origin-all -c -D\n```\n\n4. 开机启动\n```\nsudo vi /etc/rc.local\naria2c --enable-rpc --rpc-listen-all=true --rpc-allow-origin-all -c -D\n\n```\n\n##### transmission\n1. 安装不赘述\n\n2. 配置\n```\nsudo vi /etc/transmission-daemon/setting.json\n#使用默认配置就好，简单修改以下几处：\ncache-size-md: 32   #默认是4\ndownload-dir: 下载目录\npreallocation: 2  #默认1\nratio-limit: 上传比例\nrpc-bind-address: 绑定ip地址，配合端口访问web控制端\nrpc-port: 端口\nrpc-username: 用户名\nrpc-passwd: 密码，访问web端时需要\n```\n\n3. 启动服务并设置开机启动\n```\nsudo vi /etc/rc.local\nservice transmission-daemon restart\n```\n","source":"_posts/aria2-transmission.md","raw":"title: \"[备忘]下载器aria2 & transmission安装配置以及开启web控制\"\nshow: true\ndate: 2016-05-21 19:46:41\ntags: [aria2,transmission,树莓派]\ncategories: 技术人生\n---\n树莓派使用了aria2和transmission来作为下载器，虽然网上已经有很多的相关安装和配置教程，但为了不用需要的时候再上网搜索，此处简单记录下相关的操作。\n\n##### aria2\n1. 安装\n```\nsudo apt-get install aria2\n```\n\n2. 配置\n我的配置供参考\n\n<!--more-->\n\n```\n## '#'开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##\n## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##\n\n## 文件保存相关 ##\n\n# 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置\ndir=/home/pi/share/电影\n# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M\ndisk-cache=32M\n# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc\n# 预分配所需时间: none < falloc ? trunc < prealloc\n# falloc和trunc则需要文件系统和内核支持\n# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项\nfile-allocation=falloc\n# 断点续传\ncontinue=true\n\n## 下载连接相关 ##\n\n# 最大同时下载任务数, 运行时可修改, 默认:5\nmax-concurrent-downloads=20\n# 同一服务器连接数, 添加时可指定, 默认:1\nmax-connection-per-server=5\n# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M\n# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载\nmin-split-size=10M\n# 单个任务最大线程数, 添加时可指定, 默认:5\nsplit=5\n# 整体下载速度限制, 运行时可修改, 默认:0\n#max-overall-download-limit=0\n# 单个任务下载速度限制, 默认:0\n#max-download-limit=0\n# 整体上传速度限制, 运行时可修改, 默认:0\n#max-overall-upload-limit=0\n# 单个任务上传速度限制, 默认:0\n#max-upload-limit=0\n# 禁用IPv6, 默认:false\ndisable-ipv6=true\n\n## 进度保存相关 ##\n\n# 从会话文件中读取下载任务\ninput-file=/etc/aria2/aria2.session\n# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件\nsave-session=/etc/aria2/aria2.session\n# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0\n#save-session-interval=60\n\n## RPC相关设置 ##\n\n# 启用RPC, 默认:false\nenable-rpc=true\n# 允许所有来源, 默认:false\nrpc-allow-origin-all=true\n# 允许非外部访问, 默认:false\nrpc-listen-all=true\n# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同\n#event-poll=select\n# RPC监听端口, 端口被占用时可以修改, 默认:6800\n#rpc-listen-port=6800\n# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项\n#rpc-secret=<TOKEN>\n# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项\n#rpc-user=<USER>\n# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项\n#rpc-passwd=<PASSWD>\n\n## BT/PT下载相关 ##\n\n# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true\nfollow-torrent=true\n# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999\nlisten-port=51413\n# 单个种子最大连接数, 默认:55\n#bt-max-peers=55\n# 打开DHT功能, PT需要禁用, 默认:true\nenable-dht=false\n# 打开IPv6 DHT功能, PT需要禁用\n#enable-dht6=false\n# DHT网络监听端口, 默认:6881-6999\n#dht-listen-port=6881-6999\n# 本地节点查找, PT需要禁用, 默认:false\n#bt-enable-lpd=false\n# 种子交换, PT需要禁用, 默认:true\nenable-peer-exchange=false\n# 每个种子限速, 对少种的PT很有用, 默认:50K\n#bt-request-peer-speed-limit=50K\n# 客户端伪装, PT需要\npeer-id-prefix=-TR2770-\nuser-agent=Transmission/2.77\n# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0\nseed-ratio=0.2\n# 强制保存会话, 即使任务已经完成, 默认:false\n# 较新的版本开启后会在任务完成后依然保留.aria2文件\n#force-save=false\n# BT校验相关, 默认:true\n#bt-hash-check-seed=true\n# 继续之前的BT任务时, 无需再次校验, 默认:false\nbt-seed-unverified=true\n# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false\nbt-save-metadata=true\n\n```\n\n3. 开启web控制\n开启web控制后，即可以通过访问服务所在部署ip访问web控制端\n```\naria2c --enable-rpc --rpc-listen-all=true --rpc-allow-origin-all -c -D\n```\n\n4. 开机启动\n```\nsudo vi /etc/rc.local\naria2c --enable-rpc --rpc-listen-all=true --rpc-allow-origin-all -c -D\n\n```\n\n##### transmission\n1. 安装不赘述\n\n2. 配置\n```\nsudo vi /etc/transmission-daemon/setting.json\n#使用默认配置就好，简单修改以下几处：\ncache-size-md: 32   #默认是4\ndownload-dir: 下载目录\npreallocation: 2  #默认1\nratio-limit: 上传比例\nrpc-bind-address: 绑定ip地址，配合端口访问web控制端\nrpc-port: 端口\nrpc-username: 用户名\nrpc-passwd: 密码，访问web端时需要\n```\n\n3. 启动服务并设置开机启动\n```\nsudo vi /etc/rc.local\nservice transmission-daemon restart\n```\n","slug":"aria2-transmission","published":1,"updated":"2018-10-19T18:30:07.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzt0000ifnpvyasy93jf","content":"<p>树莓派使用了aria2和transmission来作为下载器，虽然网上已经有很多的相关安装和配置教程，但为了不用需要的时候再上网搜索，此处简单记录下相关的操作。</p>\n<h5 id=\"aria2\"><a href=\"#aria2\" class=\"headerlink\" title=\"aria2\"></a>aria2</h5><ol>\n<li><p>安装</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install aria2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>我的配置供参考</p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">## '#'开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##</span></span><br><span class=\"line\"><span class=\"meta\">## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## 文件保存相关 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span></span><br><span class=\"line\">dir=/home/pi/share/电影</span><br><span class=\"line\"><span class=\"meta\"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span></span><br><span class=\"line\">disk-cache=<span class=\"number\">32</span>M</span><br><span class=\"line\"><span class=\"meta\"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span></span><br><span class=\"line\"><span class=\"meta\"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span></span><br><span class=\"line\"><span class=\"meta\"># falloc和trunc则需要文件系统和内核支持</span></span><br><span class=\"line\"><span class=\"meta\"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span></span><br><span class=\"line\">file-allocation=falloc</span><br><span class=\"line\"><span class=\"meta\"># 断点续传</span></span><br><span class=\"line\">continue=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## 下载连接相关 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 最大同时下载任务数, 运行时可修改, 默认:5</span></span><br><span class=\"line\">max-concurrent-downloads=<span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"meta\"># 同一服务器连接数, 添加时可指定, 默认:1</span></span><br><span class=\"line\">max-connection-per-server=<span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"meta\"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span></span><br><span class=\"line\"><span class=\"meta\"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span></span><br><span class=\"line\">min-split-size=<span class=\"number\">10</span>M</span><br><span class=\"line\"><span class=\"meta\"># 单个任务最大线程数, 添加时可指定, 默认:5</span></span><br><span class=\"line\">split=<span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"meta\"># 整体下载速度限制, 运行时可修改, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#max-overall-download-limit=0</span></span><br><span class=\"line\"><span class=\"meta\"># 单个任务下载速度限制, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#max-download-limit=0</span></span><br><span class=\"line\"><span class=\"meta\"># 整体上传速度限制, 运行时可修改, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#max-overall-upload-limit=0</span></span><br><span class=\"line\"><span class=\"meta\"># 单个任务上传速度限制, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#max-upload-limit=0</span></span><br><span class=\"line\"><span class=\"meta\"># 禁用IPv6, 默认:false</span></span><br><span class=\"line\">disable-ipv6=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## 进度保存相关 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 从会话文件中读取下载任务</span></span><br><span class=\"line\">input-file=/etc/aria2/aria2.session</span><br><span class=\"line\"><span class=\"meta\"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件</span></span><br><span class=\"line\">save-session=/etc/aria2/aria2.session</span><br><span class=\"line\"><span class=\"meta\"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#save-session-interval=60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## RPC相关设置 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 启用RPC, 默认:false</span></span><br><span class=\"line\">enable-rpc=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># 允许所有来源, 默认:false</span></span><br><span class=\"line\">rpc-allow-origin-all=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># 允许非外部访问, 默认:false</span></span><br><span class=\"line\">rpc-listen-all=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span></span><br><span class=\"line\"><span class=\"meta\">#event-poll=select</span></span><br><span class=\"line\"><span class=\"meta\"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span></span><br><span class=\"line\"><span class=\"meta\">#rpc-listen-port=6800</span></span><br><span class=\"line\"><span class=\"meta\"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span></span><br><span class=\"line\"><span class=\"meta\">#rpc-secret=&lt;TOKEN&gt;</span></span><br><span class=\"line\"><span class=\"meta\"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class=\"line\"><span class=\"meta\">#rpc-user=&lt;USER&gt;</span></span><br><span class=\"line\"><span class=\"meta\"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class=\"line\"><span class=\"meta\">#rpc-passwd=&lt;PASSWD&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## BT/PT下载相关 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span></span><br><span class=\"line\">follow-torrent=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span></span><br><span class=\"line\">listen-port=<span class=\"number\">51413</span></span><br><span class=\"line\"><span class=\"meta\"># 单个种子最大连接数, 默认:55</span></span><br><span class=\"line\"><span class=\"meta\">#bt-max-peers=55</span></span><br><span class=\"line\"><span class=\"meta\"># 打开DHT功能, PT需要禁用, 默认:true</span></span><br><span class=\"line\">enable-dht=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\"># 打开IPv6 DHT功能, PT需要禁用</span></span><br><span class=\"line\"><span class=\"meta\">#enable-dht6=false</span></span><br><span class=\"line\"><span class=\"meta\"># DHT网络监听端口, 默认:6881-6999</span></span><br><span class=\"line\"><span class=\"meta\">#dht-listen-port=6881-6999</span></span><br><span class=\"line\"><span class=\"meta\"># 本地节点查找, PT需要禁用, 默认:false</span></span><br><span class=\"line\"><span class=\"meta\">#bt-enable-lpd=false</span></span><br><span class=\"line\"><span class=\"meta\"># 种子交换, PT需要禁用, 默认:true</span></span><br><span class=\"line\">enable-peer-exchange=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\"># 每个种子限速, 对少种的PT很有用, 默认:50K</span></span><br><span class=\"line\"><span class=\"meta\">#bt-request-peer-speed-limit=50K</span></span><br><span class=\"line\"><span class=\"meta\"># 客户端伪装, PT需要</span></span><br><span class=\"line\">peer-id-prefix=-TR2770-</span><br><span class=\"line\">user-agent=Transmission/<span class=\"number\">2.77</span></span><br><span class=\"line\"><span class=\"meta\"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span></span><br><span class=\"line\">seed-ratio=<span class=\"number\">0.2</span></span><br><span class=\"line\"><span class=\"meta\"># 强制保存会话, 即使任务已经完成, 默认:false</span></span><br><span class=\"line\"><span class=\"meta\"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span></span><br><span class=\"line\"><span class=\"meta\">#force-save=false</span></span><br><span class=\"line\"><span class=\"meta\"># BT校验相关, 默认:true</span></span><br><span class=\"line\"><span class=\"meta\">#bt-hash-check-seed=true</span></span><br><span class=\"line\"><span class=\"meta\"># 继续之前的BT任务时, 无需再次校验, 默认:false</span></span><br><span class=\"line\">bt-seed-unverified=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span></span><br><span class=\"line\">bt-save-metadata=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>开启web控制<br>开启web控制后，即可以通过访问服务所在部署ip访问web控制端</p>\n<figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">aria2c</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">rpc</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">rpc</span><span class=\"literal\">-</span><span class=\"comment\">listen</span><span class=\"literal\">-</span><span class=\"comment\">all=true</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">rpc</span><span class=\"literal\">-</span><span class=\"comment\">allow</span><span class=\"literal\">-</span><span class=\"comment\">origin</span><span class=\"literal\">-</span><span class=\"comment\">all</span> <span class=\"literal\">-</span><span class=\"comment\">c</span> <span class=\"literal\">-</span><span class=\"comment\">D</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开机启动</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi <span class=\"string\">/etc/rc.local</span></span><br><span class=\"line\">aria2c <span class=\"params\">--enable-rpc</span> <span class=\"params\">--rpc-listen-all=true</span> <span class=\"params\">--rpc-allow-origin-all</span> -c -D</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"transmission\"><a href=\"#transmission\" class=\"headerlink\" title=\"transmission\"></a>transmission</h5><ol>\n<li><p>安装不赘述</p>\n</li>\n<li><p>配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">vi</span> <span class=\"string\">/etc/transmission-daemon/setting.json</span></span><br><span class=\"line\"><span class=\"comment\">#使用默认配置就好，简单修改以下几处：</span></span><br><span class=\"line\"><span class=\"attr\">cache-size-md:</span> <span class=\"number\">32</span>   <span class=\"comment\">#默认是4</span></span><br><span class=\"line\"><span class=\"attr\">download-dir:</span> <span class=\"string\">下载目录</span></span><br><span class=\"line\"><span class=\"attr\">preallocation:</span> <span class=\"number\">2</span>  <span class=\"comment\">#默认1</span></span><br><span class=\"line\"><span class=\"attr\">ratio-limit:</span> <span class=\"string\">上传比例</span></span><br><span class=\"line\"><span class=\"attr\">rpc-bind-address:</span> <span class=\"string\">绑定ip地址，配合端口访问web控制端</span></span><br><span class=\"line\"><span class=\"attr\">rpc-port:</span> <span class=\"string\">端口</span></span><br><span class=\"line\"><span class=\"attr\">rpc-username:</span> <span class=\"string\">用户名</span></span><br><span class=\"line\"><span class=\"attr\">rpc-passwd:</span> <span class=\"string\">密码，访问web端时需要</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动服务并设置开机启动</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/rc.local</span><br><span class=\"line\">service transmission-daemon restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>树莓派使用了aria2和transmission来作为下载器，虽然网上已经有很多的相关安装和配置教程，但为了不用需要的时候再上网搜索，此处简单记录下相关的操作。</p>\n<h5 id=\"aria2\"><a href=\"#aria2\" class=\"headerlink\" title=\"aria2\"></a>aria2</h5><ol>\n<li><p>安装</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install aria2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>我的配置供参考</p>\n</li>\n</ol>","more":"<figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">## '#'开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##</span></span><br><span class=\"line\"><span class=\"meta\">## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## 文件保存相关 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</span></span><br><span class=\"line\">dir=/home/pi/share/电影</span><br><span class=\"line\"><span class=\"meta\"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span></span><br><span class=\"line\">disk-cache=<span class=\"number\">32</span>M</span><br><span class=\"line\"><span class=\"meta\"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span></span><br><span class=\"line\"><span class=\"meta\"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span></span><br><span class=\"line\"><span class=\"meta\"># falloc和trunc则需要文件系统和内核支持</span></span><br><span class=\"line\"><span class=\"meta\"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span></span><br><span class=\"line\">file-allocation=falloc</span><br><span class=\"line\"><span class=\"meta\"># 断点续传</span></span><br><span class=\"line\">continue=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## 下载连接相关 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 最大同时下载任务数, 运行时可修改, 默认:5</span></span><br><span class=\"line\">max-concurrent-downloads=<span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"meta\"># 同一服务器连接数, 添加时可指定, 默认:1</span></span><br><span class=\"line\">max-connection-per-server=<span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"meta\"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span></span><br><span class=\"line\"><span class=\"meta\"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span></span><br><span class=\"line\">min-split-size=<span class=\"number\">10</span>M</span><br><span class=\"line\"><span class=\"meta\"># 单个任务最大线程数, 添加时可指定, 默认:5</span></span><br><span class=\"line\">split=<span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"meta\"># 整体下载速度限制, 运行时可修改, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#max-overall-download-limit=0</span></span><br><span class=\"line\"><span class=\"meta\"># 单个任务下载速度限制, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#max-download-limit=0</span></span><br><span class=\"line\"><span class=\"meta\"># 整体上传速度限制, 运行时可修改, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#max-overall-upload-limit=0</span></span><br><span class=\"line\"><span class=\"meta\"># 单个任务上传速度限制, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#max-upload-limit=0</span></span><br><span class=\"line\"><span class=\"meta\"># 禁用IPv6, 默认:false</span></span><br><span class=\"line\">disable-ipv6=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## 进度保存相关 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 从会话文件中读取下载任务</span></span><br><span class=\"line\">input-file=/etc/aria2/aria2.session</span><br><span class=\"line\"><span class=\"meta\"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件</span></span><br><span class=\"line\">save-session=/etc/aria2/aria2.session</span><br><span class=\"line\"><span class=\"meta\"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span></span><br><span class=\"line\"><span class=\"meta\">#save-session-interval=60</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## RPC相关设置 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 启用RPC, 默认:false</span></span><br><span class=\"line\">enable-rpc=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># 允许所有来源, 默认:false</span></span><br><span class=\"line\">rpc-allow-origin-all=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># 允许非外部访问, 默认:false</span></span><br><span class=\"line\">rpc-listen-all=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</span></span><br><span class=\"line\"><span class=\"meta\">#event-poll=select</span></span><br><span class=\"line\"><span class=\"meta\"># RPC监听端口, 端口被占用时可以修改, 默认:6800</span></span><br><span class=\"line\"><span class=\"meta\">#rpc-listen-port=6800</span></span><br><span class=\"line\"><span class=\"meta\"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span></span><br><span class=\"line\"><span class=\"meta\">#rpc-secret=&lt;TOKEN&gt;</span></span><br><span class=\"line\"><span class=\"meta\"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class=\"line\"><span class=\"meta\">#rpc-user=&lt;USER&gt;</span></span><br><span class=\"line\"><span class=\"meta\"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</span></span><br><span class=\"line\"><span class=\"meta\">#rpc-passwd=&lt;PASSWD&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">## BT/PT下载相关 ##</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span></span><br><span class=\"line\">follow-torrent=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</span></span><br><span class=\"line\">listen-port=<span class=\"number\">51413</span></span><br><span class=\"line\"><span class=\"meta\"># 单个种子最大连接数, 默认:55</span></span><br><span class=\"line\"><span class=\"meta\">#bt-max-peers=55</span></span><br><span class=\"line\"><span class=\"meta\"># 打开DHT功能, PT需要禁用, 默认:true</span></span><br><span class=\"line\">enable-dht=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\"># 打开IPv6 DHT功能, PT需要禁用</span></span><br><span class=\"line\"><span class=\"meta\">#enable-dht6=false</span></span><br><span class=\"line\"><span class=\"meta\"># DHT网络监听端口, 默认:6881-6999</span></span><br><span class=\"line\"><span class=\"meta\">#dht-listen-port=6881-6999</span></span><br><span class=\"line\"><span class=\"meta\"># 本地节点查找, PT需要禁用, 默认:false</span></span><br><span class=\"line\"><span class=\"meta\">#bt-enable-lpd=false</span></span><br><span class=\"line\"><span class=\"meta\"># 种子交换, PT需要禁用, 默认:true</span></span><br><span class=\"line\">enable-peer-exchange=<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\"># 每个种子限速, 对少种的PT很有用, 默认:50K</span></span><br><span class=\"line\"><span class=\"meta\">#bt-request-peer-speed-limit=50K</span></span><br><span class=\"line\"><span class=\"meta\"># 客户端伪装, PT需要</span></span><br><span class=\"line\">peer-id-prefix=-TR2770-</span><br><span class=\"line\">user-agent=Transmission/<span class=\"number\">2.77</span></span><br><span class=\"line\"><span class=\"meta\"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</span></span><br><span class=\"line\">seed-ratio=<span class=\"number\">0.2</span></span><br><span class=\"line\"><span class=\"meta\"># 强制保存会话, 即使任务已经完成, 默认:false</span></span><br><span class=\"line\"><span class=\"meta\"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span></span><br><span class=\"line\"><span class=\"meta\">#force-save=false</span></span><br><span class=\"line\"><span class=\"meta\"># BT校验相关, 默认:true</span></span><br><span class=\"line\"><span class=\"meta\">#bt-hash-check-seed=true</span></span><br><span class=\"line\"><span class=\"meta\"># 继续之前的BT任务时, 无需再次校验, 默认:false</span></span><br><span class=\"line\">bt-seed-unverified=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span></span><br><span class=\"line\">bt-save-metadata=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>开启web控制<br>开启web控制后，即可以通过访问服务所在部署ip访问web控制端</p>\n<figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">aria2c</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">enable</span><span class=\"literal\">-</span><span class=\"comment\">rpc</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">rpc</span><span class=\"literal\">-</span><span class=\"comment\">listen</span><span class=\"literal\">-</span><span class=\"comment\">all=true</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">rpc</span><span class=\"literal\">-</span><span class=\"comment\">allow</span><span class=\"literal\">-</span><span class=\"comment\">origin</span><span class=\"literal\">-</span><span class=\"comment\">all</span> <span class=\"literal\">-</span><span class=\"comment\">c</span> <span class=\"literal\">-</span><span class=\"comment\">D</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>开机启动</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi <span class=\"string\">/etc/rc.local</span></span><br><span class=\"line\">aria2c <span class=\"params\">--enable-rpc</span> <span class=\"params\">--rpc-listen-all=true</span> <span class=\"params\">--rpc-allow-origin-all</span> -c -D</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"transmission\"><a href=\"#transmission\" class=\"headerlink\" title=\"transmission\"></a>transmission</h5><ol>\n<li><p>安装不赘述</p>\n</li>\n<li><p>配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">sudo</span> <span class=\"string\">vi</span> <span class=\"string\">/etc/transmission-daemon/setting.json</span></span><br><span class=\"line\"><span class=\"comment\">#使用默认配置就好，简单修改以下几处：</span></span><br><span class=\"line\"><span class=\"attr\">cache-size-md:</span> <span class=\"number\">32</span>   <span class=\"comment\">#默认是4</span></span><br><span class=\"line\"><span class=\"attr\">download-dir:</span> <span class=\"string\">下载目录</span></span><br><span class=\"line\"><span class=\"attr\">preallocation:</span> <span class=\"number\">2</span>  <span class=\"comment\">#默认1</span></span><br><span class=\"line\"><span class=\"attr\">ratio-limit:</span> <span class=\"string\">上传比例</span></span><br><span class=\"line\"><span class=\"attr\">rpc-bind-address:</span> <span class=\"string\">绑定ip地址，配合端口访问web控制端</span></span><br><span class=\"line\"><span class=\"attr\">rpc-port:</span> <span class=\"string\">端口</span></span><br><span class=\"line\"><span class=\"attr\">rpc-username:</span> <span class=\"string\">用户名</span></span><br><span class=\"line\"><span class=\"attr\">rpc-passwd:</span> <span class=\"string\">密码，访问web端时需要</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动服务并设置开机启动</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/rc.local</span><br><span class=\"line\">service transmission-daemon restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>","sticky":0},{"title":"使用awk BEGIN、END统计文件求和","show":true,"date":"2015-12-14T03:04:43.000Z","_content":"#### 背景\n我在处理一个自动化报告时，需要统计其中成功的用例个数和失败的用例个数，报告文件的格式类似：\n>......\nFAIL 2 tests executed in 5.622s, 1 passed, 1 failed, 0 dubious, 0 skipped.\n......\nPASS 55 tests executed in 54.976s, 55 passed, 0 failed, 0 dubious, 0 skipped.\n......\nPASS 15 tests executed in 20.642s, 15 passed, 0 failed, 0 dubious, 0 skipped.\n\n#### 使用awk统计\n在Linux下进行文本处理，没什么比sed/AWK更强大了。于是乎直接想到了用awk将报告中的\"PASS\"，\"FAIL\"数目统计一下即可。\n代码示例如下：\n<!--more-->\n\n```js\nPASS数目:\ngrep -o \".*tests executed in\" reportName | awk 'BEGIN{sum=0}{if($1 ~ /PASS/)sum+=$2}END{print sum}'\n\nFAIL数目：\ngrep -o \".*tests executed in\" reportName | awk 'BEGIN{sum=0}{if($1 ~ /FAIL/)sum+=$2}END{print sum}'\n```\n\n首先从报告文件中，取出匹配的最终运行概述信息，然后再用awk统计对应的条目。\n此处用到了awk的BEGIN和END，顺便记录一下BEGIN和END的用法。\n\n#### BEGIN和END\nBEGIN和END顾名思义，在awk中，BEGIN只在开始处理之前运行一次，END只在结束处理之后运行一次，其余正常的文本行处理过程不运行。\n非常适合用在做一些前置操作时使用，通常求和类初始化值、设定分隔符等经常会用。\n\n语法：\n```js\nawk '[BEGIN]{..}{..}[END{..}]' file\n```\n形式均为'{}'样，其中BEGIN和END语句块均可省略。\n\nexamples：\n以统计数字文本（文本内容每行均为数字）为例\n```js\n//1. 求和\nawk 'BEGIN{sum=0}{sum+=$1}END{print sum}' file\n\n//2. 求均值\nawk 'BEGIN{sum=0}{sum+=$1}END{print sum/NR}' file\nNR为总记录数\n\n//3. 求最大值\nawk 'BEGIN{max=0}{if($1 > max)max = $1}END{print max}'\n\n```\n\n配合grep、正则表达式以及条件表达式等使用，效果更佳。\n","source":"_posts/awk-calc.md","raw":"title: 使用awk BEGIN、END统计文件求和\nshow: true\ndate: 2015-12-14 11:04:43\ntags: [awk,awk求和,awk BEGIN,awk END]\ncategories: 技术人生\n---\n#### 背景\n我在处理一个自动化报告时，需要统计其中成功的用例个数和失败的用例个数，报告文件的格式类似：\n>......\nFAIL 2 tests executed in 5.622s, 1 passed, 1 failed, 0 dubious, 0 skipped.\n......\nPASS 55 tests executed in 54.976s, 55 passed, 0 failed, 0 dubious, 0 skipped.\n......\nPASS 15 tests executed in 20.642s, 15 passed, 0 failed, 0 dubious, 0 skipped.\n\n#### 使用awk统计\n在Linux下进行文本处理，没什么比sed/AWK更强大了。于是乎直接想到了用awk将报告中的\"PASS\"，\"FAIL\"数目统计一下即可。\n代码示例如下：\n<!--more-->\n\n```js\nPASS数目:\ngrep -o \".*tests executed in\" reportName | awk 'BEGIN{sum=0}{if($1 ~ /PASS/)sum+=$2}END{print sum}'\n\nFAIL数目：\ngrep -o \".*tests executed in\" reportName | awk 'BEGIN{sum=0}{if($1 ~ /FAIL/)sum+=$2}END{print sum}'\n```\n\n首先从报告文件中，取出匹配的最终运行概述信息，然后再用awk统计对应的条目。\n此处用到了awk的BEGIN和END，顺便记录一下BEGIN和END的用法。\n\n#### BEGIN和END\nBEGIN和END顾名思义，在awk中，BEGIN只在开始处理之前运行一次，END只在结束处理之后运行一次，其余正常的文本行处理过程不运行。\n非常适合用在做一些前置操作时使用，通常求和类初始化值、设定分隔符等经常会用。\n\n语法：\n```js\nawk '[BEGIN]{..}{..}[END{..}]' file\n```\n形式均为'{}'样，其中BEGIN和END语句块均可省略。\n\nexamples：\n以统计数字文本（文本内容每行均为数字）为例\n```js\n//1. 求和\nawk 'BEGIN{sum=0}{sum+=$1}END{print sum}' file\n\n//2. 求均值\nawk 'BEGIN{sum=0}{sum+=$1}END{print sum/NR}' file\nNR为总记录数\n\n//3. 求最大值\nawk 'BEGIN{max=0}{if($1 > max)max = $1}END{print max}'\n\n```\n\n配合grep、正则表达式以及条件表达式等使用，效果更佳。\n","slug":"awk-calc","published":1,"updated":"2018-10-19T18:30:07.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzt2000jfnpvde36lvfm","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>我在处理一个自动化报告时，需要统计其中成功的用例个数和失败的用例个数，报告文件的格式类似：</p>\n<blockquote>\n<p>……<br>FAIL 2 tests executed in 5.622s, 1 passed, 1 failed, 0 dubious, 0 skipped.<br>……<br>PASS 55 tests executed in 54.976s, 55 passed, 0 failed, 0 dubious, 0 skipped.<br>……<br>PASS 15 tests executed in 20.642s, 15 passed, 0 failed, 0 dubious, 0 skipped.</p>\n</blockquote>\n<h4 id=\"使用awk统计\"><a href=\"#使用awk统计\" class=\"headerlink\" title=\"使用awk统计\"></a>使用awk统计</h4><p>在Linux下进行文本处理，没什么比sed/AWK更强大了。于是乎直接想到了用awk将报告中的”PASS”，”FAIL”数目统计一下即可。<br>代码示例如下：<br><a id=\"more\"></a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PASS数目:</span><br><span class=\"line\">grep -o <span class=\"string\">\".*tests executed in\"</span> reportName | awk <span class=\"string\">'BEGIN&#123;sum=0&#125;&#123;if($1 ~ /PASS/)sum+=$2&#125;END&#123;print sum&#125;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">FAIL数目：</span><br><span class=\"line\">grep -o <span class=\"string\">\".*tests executed in\"</span> reportName | awk <span class=\"string\">'BEGIN&#123;sum=0&#125;&#123;if($1 ~ /FAIL/)sum+=$2&#125;END&#123;print sum&#125;'</span></span><br></pre></td></tr></table></figure>\n<p>首先从报告文件中，取出匹配的最终运行概述信息，然后再用awk统计对应的条目。<br>此处用到了awk的BEGIN和END，顺便记录一下BEGIN和END的用法。</p>\n<h4 id=\"BEGIN和END\"><a href=\"#BEGIN和END\" class=\"headerlink\" title=\"BEGIN和END\"></a>BEGIN和END</h4><p>BEGIN和END顾名思义，在awk中，BEGIN只在开始处理之前运行一次，END只在结束处理之后运行一次，其余正常的文本行处理过程不运行。<br>非常适合用在做一些前置操作时使用，通常求和类初始化值、设定分隔符等经常会用。</p>\n<p>语法：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk <span class=\"string\">'[BEGIN]&#123;..&#125;&#123;..&#125;[END&#123;..&#125;]'</span> file</span><br></pre></td></tr></table></figure></p>\n<p>形式均为’{}’样，其中BEGIN和END语句块均可省略。</p>\n<p>examples：<br>以统计数字文本（文本内容每行均为数字）为例<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 求和</span></span><br><span class=\"line\">awk <span class=\"string\">'BEGIN&#123;sum=0&#125;&#123;sum+=$1&#125;END&#123;print sum&#125;'</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2. 求均值</span></span><br><span class=\"line\">awk <span class=\"string\">'BEGIN&#123;sum=0&#125;&#123;sum+=$1&#125;END&#123;print sum/NR&#125;'</span> file</span><br><span class=\"line\">NR为总记录数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3. 求最大值</span></span><br><span class=\"line\">awk <span class=\"string\">'BEGIN&#123;max=0&#125;&#123;if($1 &gt; max)max = $1&#125;END&#123;print max&#125;'</span></span><br></pre></td></tr></table></figure></p>\n<p>配合grep、正则表达式以及条件表达式等使用，效果更佳。</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>我在处理一个自动化报告时，需要统计其中成功的用例个数和失败的用例个数，报告文件的格式类似：</p>\n<blockquote>\n<p>……<br>FAIL 2 tests executed in 5.622s, 1 passed, 1 failed, 0 dubious, 0 skipped.<br>……<br>PASS 55 tests executed in 54.976s, 55 passed, 0 failed, 0 dubious, 0 skipped.<br>……<br>PASS 15 tests executed in 20.642s, 15 passed, 0 failed, 0 dubious, 0 skipped.</p>\n</blockquote>\n<h4 id=\"使用awk统计\"><a href=\"#使用awk统计\" class=\"headerlink\" title=\"使用awk统计\"></a>使用awk统计</h4><p>在Linux下进行文本处理，没什么比sed/AWK更强大了。于是乎直接想到了用awk将报告中的”PASS”，”FAIL”数目统计一下即可。<br>代码示例如下：<br>","more":"</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PASS数目:</span><br><span class=\"line\">grep -o <span class=\"string\">\".*tests executed in\"</span> reportName | awk <span class=\"string\">'BEGIN&#123;sum=0&#125;&#123;if($1 ~ /PASS/)sum+=$2&#125;END&#123;print sum&#125;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">FAIL数目：</span><br><span class=\"line\">grep -o <span class=\"string\">\".*tests executed in\"</span> reportName | awk <span class=\"string\">'BEGIN&#123;sum=0&#125;&#123;if($1 ~ /FAIL/)sum+=$2&#125;END&#123;print sum&#125;'</span></span><br></pre></td></tr></table></figure>\n<p>首先从报告文件中，取出匹配的最终运行概述信息，然后再用awk统计对应的条目。<br>此处用到了awk的BEGIN和END，顺便记录一下BEGIN和END的用法。</p>\n<h4 id=\"BEGIN和END\"><a href=\"#BEGIN和END\" class=\"headerlink\" title=\"BEGIN和END\"></a>BEGIN和END</h4><p>BEGIN和END顾名思义，在awk中，BEGIN只在开始处理之前运行一次，END只在结束处理之后运行一次，其余正常的文本行处理过程不运行。<br>非常适合用在做一些前置操作时使用，通常求和类初始化值、设定分隔符等经常会用。</p>\n<p>语法：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk <span class=\"string\">'[BEGIN]&#123;..&#125;&#123;..&#125;[END&#123;..&#125;]'</span> file</span><br></pre></td></tr></table></figure></p>\n<p>形式均为’{}’样，其中BEGIN和END语句块均可省略。</p>\n<p>examples：<br>以统计数字文本（文本内容每行均为数字）为例<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 求和</span></span><br><span class=\"line\">awk <span class=\"string\">'BEGIN&#123;sum=0&#125;&#123;sum+=$1&#125;END&#123;print sum&#125;'</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2. 求均值</span></span><br><span class=\"line\">awk <span class=\"string\">'BEGIN&#123;sum=0&#125;&#123;sum+=$1&#125;END&#123;print sum/NR&#125;'</span> file</span><br><span class=\"line\">NR为总记录数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3. 求最大值</span></span><br><span class=\"line\">awk <span class=\"string\">'BEGIN&#123;max=0&#125;&#123;if($1 &gt; max)max = $1&#125;END&#123;print max&#125;'</span></span><br></pre></td></tr></table></figure></p>\n<p>配合grep、正则表达式以及条件表达式等使用，效果更佳。</p>","sticky":0},{"title":"记一次aws虚机mongodb数据库被黑及后续处理","show":true,"date":"2017-02-04T07:49:09.000Z","_content":"# 1. 背景\n\n我的[藏经阁网站](http://favlink.me)是部署在aws的虚拟机上的，年前一次访问的时候发现被黑掉了，数据全丢了不说，还被注入了勒索比特币的信息。\n逗比的是，年前一直没来及处理，年后过来准备处理时，发现原来被黑过一遍的数据库又被黑了第二遍！勒索比特币数值也从0.1变成了0.2。。\n![](http://wx3.sinaimg.cn/mw1024/62d95157gy1fcdi9hiv0jj212d0753z7.jpg)\n\n比特币勒索病毒现在非常嚣张，由于比特币交易网络的特殊性，基本上查处不到犯罪分子，中了基本上只能认栽。\n\n# 2. 安全防护\n\n布置在外网上的服务器，如果不进行安全防护，基本就是暴露于危险环境下的肉鸡。之前购买的搬瓦工虚拟主机也是几次被用来发送恶意邮件。\n经过这次数据被黑的惨痛教训，急需补上相应的安全防护。几点简单的防护，可以提升我们的服务免于黑客的攻击。\n\n<!-- more -->\n\n### 1. 修改SSH端口\n```\ncd /etc/ssh/\nvi sshd_config\n//修改其中的Port字段，重启ssh服务\n/etc/init.d/sshd restart\n```\n针对aws主机，由于aws的登录都需要指定的`key.pem`文件，基本上是不存在这种被恶意远程登录的问题。\n\n### 2. 数据库防护\n这里只说下mongodb数据库的防护。\n```\n//以绑定ip并且修改默认端口的方式启动\n./mongod --port xxx --bind_ip 127.0.0.1 [其他参数]\n```\n这种启动方式指定了mongodb只能本机连接，并且修改了默认端口号，防止恶意连接。\n缺点就是我们想通过图形客户端去连接mongodb也不行了，如果有固定ip的话可以在bind_ip中增加可信ip以逗号分隔。\n\n### 3. 安全组设置\n针对aws主机特有的，需要设置一下安全组。\n在aws控制台找到安全组设置，修改设置只开启提供对外服务的端口，封禁其他一切端口。\n如，开放80端口的http流量，443的https的流量，ssh服务对应的端口，ftp对应的端口等。其他不在服的端口封禁掉，可以极大地防止恶意连接。\n\n# 3. 备份机制\n\n除了上述防护工作，线上数据库的备份恢复机制也要相应的建立起来。\n以我的藏经阁网站来说，现在的数据量还不多，可以考虑每周做一次全量备份。\n以下是基本的备份恢复脚本命令：\n```\n#!/bin/bash\n## 定期备份mongodb数据库\n## mongodb启动命令： ./mongod -h xx --port xx --bind_ip xxx --dbpath xx --logpath xx\n\nMODE=$1\nif [ \"X$MODE\" == \"X\" ];then\n  MODE=\"bak\"\nfi\n\nMONGO_DIR=\"/home/`whoami`/mongodb\"\nDB_NAME=\"xx\"\nDB_PORT=\"xxx\"\nBAK_BASE=\"xxx\"\nCURTIME=`date +%Y%m%d`\nBAK_NAME=${BAK_BASE}${CURTIME}\n\nif [ \"$MODE\" == \"bak\" ];then\n  echo \"开始备份...\"\n  cd ${MONGO_DIR}/bin\n  ./mongodump --port ${DB_PORT} -d ${DB_NAME} -o ${BAK_NAME}\n  if [ $? -ne 0 ];then\n    echo \"备份失败\"\n    exit 1\n  fi\n  echo \"备份成功\"\n  exit 0\nfi\n\nif [ \"$MODE\" == \"restore\" ];then\n  echo \"开始恢复...\"\n  cd ${MONGO_DIR}/bin\n  ./mongorestore --port ${DB_PORT} -d ${DB_NAME} --directoryperdb $2\n  if [ $? -ne 0 ];then\n    echo \"恢复失败\"\n    exit 1\n  fi\n  echo \"恢复成功\"\n  exit 0\nfi\n```\n设置定时任务：\n```\n0 1 * * mon cd /home/ubuntu/favlinks/ && sh -x bak_restore.sh  \n//每周一1点运行备份任务\n```\n\n当数据量变大以后，可以考虑使用[mongobackup](http://dl.nosqldb.org/mongobackup_user_guide_zh_CN.pdf)进行增量备份。\n","source":"_posts/aws-mongo-protect.md","raw":"title: 记一次aws虚机mongodb数据库被黑及后续处理\nshow: true\ndate: 2017-02-04 15:49:09\ntags: [aws,mongodb,备份,安全防护]\ncategories: 技术人生\n---\n# 1. 背景\n\n我的[藏经阁网站](http://favlink.me)是部署在aws的虚拟机上的，年前一次访问的时候发现被黑掉了，数据全丢了不说，还被注入了勒索比特币的信息。\n逗比的是，年前一直没来及处理，年后过来准备处理时，发现原来被黑过一遍的数据库又被黑了第二遍！勒索比特币数值也从0.1变成了0.2。。\n![](http://wx3.sinaimg.cn/mw1024/62d95157gy1fcdi9hiv0jj212d0753z7.jpg)\n\n比特币勒索病毒现在非常嚣张，由于比特币交易网络的特殊性，基本上查处不到犯罪分子，中了基本上只能认栽。\n\n# 2. 安全防护\n\n布置在外网上的服务器，如果不进行安全防护，基本就是暴露于危险环境下的肉鸡。之前购买的搬瓦工虚拟主机也是几次被用来发送恶意邮件。\n经过这次数据被黑的惨痛教训，急需补上相应的安全防护。几点简单的防护，可以提升我们的服务免于黑客的攻击。\n\n<!-- more -->\n\n### 1. 修改SSH端口\n```\ncd /etc/ssh/\nvi sshd_config\n//修改其中的Port字段，重启ssh服务\n/etc/init.d/sshd restart\n```\n针对aws主机，由于aws的登录都需要指定的`key.pem`文件，基本上是不存在这种被恶意远程登录的问题。\n\n### 2. 数据库防护\n这里只说下mongodb数据库的防护。\n```\n//以绑定ip并且修改默认端口的方式启动\n./mongod --port xxx --bind_ip 127.0.0.1 [其他参数]\n```\n这种启动方式指定了mongodb只能本机连接，并且修改了默认端口号，防止恶意连接。\n缺点就是我们想通过图形客户端去连接mongodb也不行了，如果有固定ip的话可以在bind_ip中增加可信ip以逗号分隔。\n\n### 3. 安全组设置\n针对aws主机特有的，需要设置一下安全组。\n在aws控制台找到安全组设置，修改设置只开启提供对外服务的端口，封禁其他一切端口。\n如，开放80端口的http流量，443的https的流量，ssh服务对应的端口，ftp对应的端口等。其他不在服的端口封禁掉，可以极大地防止恶意连接。\n\n# 3. 备份机制\n\n除了上述防护工作，线上数据库的备份恢复机制也要相应的建立起来。\n以我的藏经阁网站来说，现在的数据量还不多，可以考虑每周做一次全量备份。\n以下是基本的备份恢复脚本命令：\n```\n#!/bin/bash\n## 定期备份mongodb数据库\n## mongodb启动命令： ./mongod -h xx --port xx --bind_ip xxx --dbpath xx --logpath xx\n\nMODE=$1\nif [ \"X$MODE\" == \"X\" ];then\n  MODE=\"bak\"\nfi\n\nMONGO_DIR=\"/home/`whoami`/mongodb\"\nDB_NAME=\"xx\"\nDB_PORT=\"xxx\"\nBAK_BASE=\"xxx\"\nCURTIME=`date +%Y%m%d`\nBAK_NAME=${BAK_BASE}${CURTIME}\n\nif [ \"$MODE\" == \"bak\" ];then\n  echo \"开始备份...\"\n  cd ${MONGO_DIR}/bin\n  ./mongodump --port ${DB_PORT} -d ${DB_NAME} -o ${BAK_NAME}\n  if [ $? -ne 0 ];then\n    echo \"备份失败\"\n    exit 1\n  fi\n  echo \"备份成功\"\n  exit 0\nfi\n\nif [ \"$MODE\" == \"restore\" ];then\n  echo \"开始恢复...\"\n  cd ${MONGO_DIR}/bin\n  ./mongorestore --port ${DB_PORT} -d ${DB_NAME} --directoryperdb $2\n  if [ $? -ne 0 ];then\n    echo \"恢复失败\"\n    exit 1\n  fi\n  echo \"恢复成功\"\n  exit 0\nfi\n```\n设置定时任务：\n```\n0 1 * * mon cd /home/ubuntu/favlinks/ && sh -x bak_restore.sh  \n//每周一1点运行备份任务\n```\n\n当数据量变大以后，可以考虑使用[mongobackup](http://dl.nosqldb.org/mongobackup_user_guide_zh_CN.pdf)进行增量备份。\n","slug":"aws-mongo-protect","published":1,"updated":"2018-10-19T18:30:07.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzt5000nfnpvoe9anvyn","content":"<h1 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1. 背景\"></a>1. 背景</h1><p>我的<a href=\"http://favlink.me\" target=\"_blank\" rel=\"noopener\">藏经阁网站</a>是部署在aws的虚拟机上的，年前一次访问的时候发现被黑掉了，数据全丢了不说，还被注入了勒索比特币的信息。<br>逗比的是，年前一直没来及处理，年后过来准备处理时，发现原来被黑过一遍的数据库又被黑了第二遍！勒索比特币数值也从0.1变成了0.2。。<br><img src=\"http://wx3.sinaimg.cn/mw1024/62d95157gy1fcdi9hiv0jj212d0753z7.jpg\" alt=\"\"></p>\n<p>比特币勒索病毒现在非常嚣张，由于比特币交易网络的特殊性，基本上查处不到犯罪分子，中了基本上只能认栽。</p>\n<h1 id=\"2-安全防护\"><a href=\"#2-安全防护\" class=\"headerlink\" title=\"2. 安全防护\"></a>2. 安全防护</h1><p>布置在外网上的服务器，如果不进行安全防护，基本就是暴露于危险环境下的肉鸡。之前购买的搬瓦工虚拟主机也是几次被用来发送恶意邮件。<br>经过这次数据被黑的惨痛教训，急需补上相应的安全防护。几点简单的防护，可以提升我们的服务免于黑客的攻击。</p>\n<a id=\"more\"></a>\n<h3 id=\"1-修改SSH端口\"><a href=\"#1-修改SSH端口\" class=\"headerlink\" title=\"1. 修改SSH端口\"></a>1. 修改SSH端口</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/etc/ssh/</span></span><br><span class=\"line\">vi sshd_config</span><br><span class=\"line\"><span class=\"string\">//</span>修改其中的Port字段，重启ssh服务</span><br><span class=\"line\"><span class=\"string\">/etc/init.d/sshd</span> restart</span><br></pre></td></tr></table></figure>\n<p>针对aws主机，由于aws的登录都需要指定的<code>key.pem</code>文件，基本上是不存在这种被恶意远程登录的问题。</p>\n<h3 id=\"2-数据库防护\"><a href=\"#2-数据库防护\" class=\"headerlink\" title=\"2. 数据库防护\"></a>2. 数据库防护</h3><p>这里只说下mongodb数据库的防护。<br><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">//</span>以绑定ip并且修改默认端口的方式启动</span><br><span class=\"line\"><span class=\"string\">./mongod</span> <span class=\"params\">--port</span> xxx <span class=\"params\">--bind_ip</span> 127.0.0.1 [其他参数]</span><br></pre></td></tr></table></figure></p>\n<p>这种启动方式指定了mongodb只能本机连接，并且修改了默认端口号，防止恶意连接。<br>缺点就是我们想通过图形客户端去连接mongodb也不行了，如果有固定ip的话可以在bind_ip中增加可信ip以逗号分隔。</p>\n<h3 id=\"3-安全组设置\"><a href=\"#3-安全组设置\" class=\"headerlink\" title=\"3. 安全组设置\"></a>3. 安全组设置</h3><p>针对aws主机特有的，需要设置一下安全组。<br>在aws控制台找到安全组设置，修改设置只开启提供对外服务的端口，封禁其他一切端口。<br>如，开放80端口的http流量，443的https的流量，ssh服务对应的端口，ftp对应的端口等。其他不在服的端口封禁掉，可以极大地防止恶意连接。</p>\n<h1 id=\"3-备份机制\"><a href=\"#3-备份机制\" class=\"headerlink\" title=\"3. 备份机制\"></a>3. 备份机制</h1><p>除了上述防护工作，线上数据库的备份恢复机制也要相应的建立起来。<br>以我的藏经阁网站来说，现在的数据量还不多，可以考虑每周做一次全量备份。<br>以下是基本的备份恢复脚本命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">## 定期备份mongodb数据库</span></span><br><span class=\"line\"><span class=\"comment\">## mongodb启动命令： ./mongod -h xx --port xx --bind_ip xxx --dbpath xx --logpath xx</span></span><br><span class=\"line\"></span><br><span class=\"line\">MODE=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"X<span class=\"variable\">$MODE</span>\"</span> == <span class=\"string\">\"X\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">  MODE=<span class=\"string\">\"bak\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">MONGO_DIR=<span class=\"string\">\"/home/`whoami`/mongodb\"</span></span><br><span class=\"line\">DB_NAME=<span class=\"string\">\"xx\"</span></span><br><span class=\"line\">DB_PORT=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">BAK_BASE=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">CURTIME=`date +%Y%m%d`</span><br><span class=\"line\">BAK_NAME=<span class=\"variable\">$&#123;BAK_BASE&#125;</span><span class=\"variable\">$&#123;CURTIME&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$MODE</span>\"</span> == <span class=\"string\">\"bak\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"开始备份...\"</span></span><br><span class=\"line\">  <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;MONGO_DIR&#125;</span>/bin</span><br><span class=\"line\">  ./mongodump --port <span class=\"variable\">$&#123;DB_PORT&#125;</span> -d <span class=\"variable\">$&#123;DB_NAME&#125;</span> -o <span class=\"variable\">$&#123;BAK_NAME&#125;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"备份失败\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"备份成功\"</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$MODE</span>\"</span> == <span class=\"string\">\"restore\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"开始恢复...\"</span></span><br><span class=\"line\">  <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;MONGO_DIR&#125;</span>/bin</span><br><span class=\"line\">  ./mongorestore --port <span class=\"variable\">$&#123;DB_PORT&#125;</span> -d <span class=\"variable\">$&#123;DB_NAME&#125;</span> --directoryperdb <span class=\"variable\">$2</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"恢复失败\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"恢复成功\"</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></p>\n<p>设置定时任务：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 1 * * mon <span class=\"keyword\">cd</span> /home/ubuntu/favlinks/ &amp;&amp; <span class=\"keyword\">sh</span> -x bak_restore.<span class=\"keyword\">sh</span>  </span><br><span class=\"line\"><span class=\"comment\">//每周一1点运行备份任务</span></span><br></pre></td></tr></table></figure></p>\n<p>当数据量变大以后，可以考虑使用<a href=\"http://dl.nosqldb.org/mongobackup_user_guide_zh_CN.pdf\" target=\"_blank\" rel=\"noopener\">mongobackup</a>进行增量备份。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1. 背景\"></a>1. 背景</h1><p>我的<a href=\"http://favlink.me\" target=\"_blank\" rel=\"noopener\">藏经阁网站</a>是部署在aws的虚拟机上的，年前一次访问的时候发现被黑掉了，数据全丢了不说，还被注入了勒索比特币的信息。<br>逗比的是，年前一直没来及处理，年后过来准备处理时，发现原来被黑过一遍的数据库又被黑了第二遍！勒索比特币数值也从0.1变成了0.2。。<br><img src=\"http://wx3.sinaimg.cn/mw1024/62d95157gy1fcdi9hiv0jj212d0753z7.jpg\" alt=\"\"></p>\n<p>比特币勒索病毒现在非常嚣张，由于比特币交易网络的特殊性，基本上查处不到犯罪分子，中了基本上只能认栽。</p>\n<h1 id=\"2-安全防护\"><a href=\"#2-安全防护\" class=\"headerlink\" title=\"2. 安全防护\"></a>2. 安全防护</h1><p>布置在外网上的服务器，如果不进行安全防护，基本就是暴露于危险环境下的肉鸡。之前购买的搬瓦工虚拟主机也是几次被用来发送恶意邮件。<br>经过这次数据被黑的惨痛教训，急需补上相应的安全防护。几点简单的防护，可以提升我们的服务免于黑客的攻击。</p>","more":"<h3 id=\"1-修改SSH端口\"><a href=\"#1-修改SSH端口\" class=\"headerlink\" title=\"1. 修改SSH端口\"></a>1. 修改SSH端口</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/etc/ssh/</span></span><br><span class=\"line\">vi sshd_config</span><br><span class=\"line\"><span class=\"string\">//</span>修改其中的Port字段，重启ssh服务</span><br><span class=\"line\"><span class=\"string\">/etc/init.d/sshd</span> restart</span><br></pre></td></tr></table></figure>\n<p>针对aws主机，由于aws的登录都需要指定的<code>key.pem</code>文件，基本上是不存在这种被恶意远程登录的问题。</p>\n<h3 id=\"2-数据库防护\"><a href=\"#2-数据库防护\" class=\"headerlink\" title=\"2. 数据库防护\"></a>2. 数据库防护</h3><p>这里只说下mongodb数据库的防护。<br><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">//</span>以绑定ip并且修改默认端口的方式启动</span><br><span class=\"line\"><span class=\"string\">./mongod</span> <span class=\"params\">--port</span> xxx <span class=\"params\">--bind_ip</span> 127.0.0.1 [其他参数]</span><br></pre></td></tr></table></figure></p>\n<p>这种启动方式指定了mongodb只能本机连接，并且修改了默认端口号，防止恶意连接。<br>缺点就是我们想通过图形客户端去连接mongodb也不行了，如果有固定ip的话可以在bind_ip中增加可信ip以逗号分隔。</p>\n<h3 id=\"3-安全组设置\"><a href=\"#3-安全组设置\" class=\"headerlink\" title=\"3. 安全组设置\"></a>3. 安全组设置</h3><p>针对aws主机特有的，需要设置一下安全组。<br>在aws控制台找到安全组设置，修改设置只开启提供对外服务的端口，封禁其他一切端口。<br>如，开放80端口的http流量，443的https的流量，ssh服务对应的端口，ftp对应的端口等。其他不在服的端口封禁掉，可以极大地防止恶意连接。</p>\n<h1 id=\"3-备份机制\"><a href=\"#3-备份机制\" class=\"headerlink\" title=\"3. 备份机制\"></a>3. 备份机制</h1><p>除了上述防护工作，线上数据库的备份恢复机制也要相应的建立起来。<br>以我的藏经阁网站来说，现在的数据量还不多，可以考虑每周做一次全量备份。<br>以下是基本的备份恢复脚本命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">## 定期备份mongodb数据库</span></span><br><span class=\"line\"><span class=\"comment\">## mongodb启动命令： ./mongod -h xx --port xx --bind_ip xxx --dbpath xx --logpath xx</span></span><br><span class=\"line\"></span><br><span class=\"line\">MODE=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"X<span class=\"variable\">$MODE</span>\"</span> == <span class=\"string\">\"X\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">  MODE=<span class=\"string\">\"bak\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">MONGO_DIR=<span class=\"string\">\"/home/`whoami`/mongodb\"</span></span><br><span class=\"line\">DB_NAME=<span class=\"string\">\"xx\"</span></span><br><span class=\"line\">DB_PORT=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">BAK_BASE=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">CURTIME=`date +%Y%m%d`</span><br><span class=\"line\">BAK_NAME=<span class=\"variable\">$&#123;BAK_BASE&#125;</span><span class=\"variable\">$&#123;CURTIME&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$MODE</span>\"</span> == <span class=\"string\">\"bak\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"开始备份...\"</span></span><br><span class=\"line\">  <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;MONGO_DIR&#125;</span>/bin</span><br><span class=\"line\">  ./mongodump --port <span class=\"variable\">$&#123;DB_PORT&#125;</span> -d <span class=\"variable\">$&#123;DB_NAME&#125;</span> -o <span class=\"variable\">$&#123;BAK_NAME&#125;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"备份失败\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"备份成功\"</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$MODE</span>\"</span> == <span class=\"string\">\"restore\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"开始恢复...\"</span></span><br><span class=\"line\">  <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;MONGO_DIR&#125;</span>/bin</span><br><span class=\"line\">  ./mongorestore --port <span class=\"variable\">$&#123;DB_PORT&#125;</span> -d <span class=\"variable\">$&#123;DB_NAME&#125;</span> --directoryperdb <span class=\"variable\">$2</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"恢复失败\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"恢复成功\"</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></p>\n<p>设置定时任务：<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 1 * * mon <span class=\"keyword\">cd</span> /home/ubuntu/favlinks/ &amp;&amp; <span class=\"keyword\">sh</span> -x bak_restore.<span class=\"keyword\">sh</span>  </span><br><span class=\"line\"><span class=\"comment\">//每周一1点运行备份任务</span></span><br></pre></td></tr></table></figure></p>\n<p>当数据量变大以后，可以考虑使用<a href=\"http://dl.nosqldb.org/mongobackup_user_guide_zh_CN.pdf\" target=\"_blank\" rel=\"noopener\">mongobackup</a>进行增量备份。</p>","sticky":0},{"title":"开篇","date":"2015-06-26T14:39:00.000Z","show":true,"_content":"每在一个网站安家，第一篇\"Hello world\"必然是《开篇》，这回有点不太一样，这回是在自己的网站上了。\n\n# 絮叨\n这个博客是使用[Hexo技术](https://hexo.io/)搭建的，因此第一篇日志也保留了自动生成的\"Hello world\"，算是一种鸣谢，也可以作为自己日后继续折腾Hexo时的一个查看document的便捷入口。\n<!--more-->\n刚开始时只是纯粹的想练习下nodejs建站的水平，自从来了阿里后，接触到了nodejs的东西，就被nodejs迷的不行了，工作中使用nodejs搭建了平台，于是也想到要不自己也搞一个属于自己的网站练练手吧。怎奈工作繁忙下班只想呼呼，念头刚生的时候就调研了阿里云、BAE等虚拟主机，当阿里云短信提醒我订购的虚拟主机即将到期时我在服务器上的node环境还没有安装好。。。\n想了想，要完全自己写一个可用的网站，数据库不可少吧，评论留言不可少吧，现如今移动互联时代移动端响应式不可少吧。。。这么一来，交了一年的服务器钱网站估计还没写出来呢。。于是放弃了那个自以为是的想法，学习nodejs还是工作的时候折腾好了。一个偶然的机会（在github上看到octopress，一个类似WordPress的博客系统），了解到Hexo是一个基于nodejs的博客系统，比octopress还要简单易用，正好又是nodejs的，于是决定选择Hexo来搭建一个属于我自己的博客网站。\n\n# 关于动机\n记得在研二的时候自己在115模板的基础上折腾了一个网址导航网站，那个时候多半是觉得\"有一个属于自己的网站是件很牛逼的事情\"，现在想想不免嘴角微翘：在现在这个互联网时代，有个网站算个什么事儿啊。\n这么些年来尝试过在很多网站上写过东西，人人网的日志、CSDN的技术博客、写过一些情感纠结的野生百度贴吧、记述观感的豆瓣影评、小众而优雅的Lofter、新浪微博的长微博，甚至微信的段子，无一例外，这些都没能很长久的坚持下去。一部分原因是因为自己的懒惰，一部分也由社交网络的人气转移导致，再一个很大的一点，这些网站在商业化的过程中充斥了越来越多的广告，而社交网络里，那些充斥我信息流的美景、美食、美女们中间我突然穿插那么一段文字，看起来让人觉得很二逼很装逼。在满屏的转载里我找不到在这些网站的归属感，那么干脆搞个自己的网站吧。为自己的网站丰富内容，应该还是会坚持下去吧。\n# 关于域名\n为什么会取一个一串数字的域名？[5941740](http://www.5941740.cn)这串数字来源于我对中国互联网审查制度的痛恨。\n5941740谐音是\"我就是要气死你\"，大家都知道如果在中国要搞个网站是必须要备案的，以前在上学时搞的那个导航网站，为了不备案（主要是没钱买空间），采用了国外的免费虚拟空间，然后在网站的底部赤裸裸的调戏工信部：\"本网站空间来自国外，无需备案请勿跨省追捕。\"这个博客网站本来是准备部署在阿里云主机上，我已经做好了屈服的准备，备案手续已经办的差不多了，结果没想到的是最后的步骤还要去xx特定地方去做信息采集，照相什么。。我为了折腾一下自己的小玩具用得着费这么大劲吗？我身份证、家庭地址什么的都告诉你了，还有什么不放心的呢？官老爷们你们牛，我还是乖乖不备案用免费空间去吧。得，其实是\"我被您气死了呢\"~ \n# 关于博客\n关于这个博客，我希望它能督促我持续不断的记录下去。在长时间混迹社交网络之后，现在的我想个超过140字的句子总是显得很费力，有的时候满腹千言无从下笔，我想你们也是，想曾经我也是写过中篇长文的呢，呵呵。\n好记性不如烂笔头，希望在长时间的积累后，能找到点思考以及行文的能力，也将日常工作中值得记录的内容记录在案，方便查找以及温故知新。\n写博客跟写日记一样，明明是只写给自己，但写的时候仿佛又是期待别人来看。真是矛盾的呢。。\n我的计划，大概会分几个类目，一个是技术人生，专门记录日常工作中的一些与技术相关的内容，一个是读书笔记，相当于取代豆瓣的功能，简短记录每年所看的书目，一个是心情杂感，随便扯点有的没的，毕竟我感性那是自己都害怕，一个是文青空间，有可能不会存在的类目，以目前的文笔来看，基本写不出个什么狗屎来了，还一个就是图片墙，用来专门晒图，还一个就是文摘采撷，摘录一些觉得有用的内容。\n以上是为记。\n","source":"_posts/beginning.md","raw":"title: 开篇\ndate: 2015-06-26 22:39:00\ntags: [开篇,心情]\ncategories: 心情杂感\nshow: true\n---\n每在一个网站安家，第一篇\"Hello world\"必然是《开篇》，这回有点不太一样，这回是在自己的网站上了。\n\n# 絮叨\n这个博客是使用[Hexo技术](https://hexo.io/)搭建的，因此第一篇日志也保留了自动生成的\"Hello world\"，算是一种鸣谢，也可以作为自己日后继续折腾Hexo时的一个查看document的便捷入口。\n<!--more-->\n刚开始时只是纯粹的想练习下nodejs建站的水平，自从来了阿里后，接触到了nodejs的东西，就被nodejs迷的不行了，工作中使用nodejs搭建了平台，于是也想到要不自己也搞一个属于自己的网站练练手吧。怎奈工作繁忙下班只想呼呼，念头刚生的时候就调研了阿里云、BAE等虚拟主机，当阿里云短信提醒我订购的虚拟主机即将到期时我在服务器上的node环境还没有安装好。。。\n想了想，要完全自己写一个可用的网站，数据库不可少吧，评论留言不可少吧，现如今移动互联时代移动端响应式不可少吧。。。这么一来，交了一年的服务器钱网站估计还没写出来呢。。于是放弃了那个自以为是的想法，学习nodejs还是工作的时候折腾好了。一个偶然的机会（在github上看到octopress，一个类似WordPress的博客系统），了解到Hexo是一个基于nodejs的博客系统，比octopress还要简单易用，正好又是nodejs的，于是决定选择Hexo来搭建一个属于我自己的博客网站。\n\n# 关于动机\n记得在研二的时候自己在115模板的基础上折腾了一个网址导航网站，那个时候多半是觉得\"有一个属于自己的网站是件很牛逼的事情\"，现在想想不免嘴角微翘：在现在这个互联网时代，有个网站算个什么事儿啊。\n这么些年来尝试过在很多网站上写过东西，人人网的日志、CSDN的技术博客、写过一些情感纠结的野生百度贴吧、记述观感的豆瓣影评、小众而优雅的Lofter、新浪微博的长微博，甚至微信的段子，无一例外，这些都没能很长久的坚持下去。一部分原因是因为自己的懒惰，一部分也由社交网络的人气转移导致，再一个很大的一点，这些网站在商业化的过程中充斥了越来越多的广告，而社交网络里，那些充斥我信息流的美景、美食、美女们中间我突然穿插那么一段文字，看起来让人觉得很二逼很装逼。在满屏的转载里我找不到在这些网站的归属感，那么干脆搞个自己的网站吧。为自己的网站丰富内容，应该还是会坚持下去吧。\n# 关于域名\n为什么会取一个一串数字的域名？[5941740](http://www.5941740.cn)这串数字来源于我对中国互联网审查制度的痛恨。\n5941740谐音是\"我就是要气死你\"，大家都知道如果在中国要搞个网站是必须要备案的，以前在上学时搞的那个导航网站，为了不备案（主要是没钱买空间），采用了国外的免费虚拟空间，然后在网站的底部赤裸裸的调戏工信部：\"本网站空间来自国外，无需备案请勿跨省追捕。\"这个博客网站本来是准备部署在阿里云主机上，我已经做好了屈服的准备，备案手续已经办的差不多了，结果没想到的是最后的步骤还要去xx特定地方去做信息采集，照相什么。。我为了折腾一下自己的小玩具用得着费这么大劲吗？我身份证、家庭地址什么的都告诉你了，还有什么不放心的呢？官老爷们你们牛，我还是乖乖不备案用免费空间去吧。得，其实是\"我被您气死了呢\"~ \n# 关于博客\n关于这个博客，我希望它能督促我持续不断的记录下去。在长时间混迹社交网络之后，现在的我想个超过140字的句子总是显得很费力，有的时候满腹千言无从下笔，我想你们也是，想曾经我也是写过中篇长文的呢，呵呵。\n好记性不如烂笔头，希望在长时间的积累后，能找到点思考以及行文的能力，也将日常工作中值得记录的内容记录在案，方便查找以及温故知新。\n写博客跟写日记一样，明明是只写给自己，但写的时候仿佛又是期待别人来看。真是矛盾的呢。。\n我的计划，大概会分几个类目，一个是技术人生，专门记录日常工作中的一些与技术相关的内容，一个是读书笔记，相当于取代豆瓣的功能，简短记录每年所看的书目，一个是心情杂感，随便扯点有的没的，毕竟我感性那是自己都害怕，一个是文青空间，有可能不会存在的类目，以目前的文笔来看，基本写不出个什么狗屎来了，还一个就是图片墙，用来专门晒图，还一个就是文摘采撷，摘录一些觉得有用的内容。\n以上是为记。\n","slug":"beginning","published":1,"updated":"2018-10-19T18:30:07.976Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzt7000pfnpv00xu7dst","content":"<p>每在一个网站安家，第一篇”Hello world”必然是《开篇》，这回有点不太一样，这回是在自己的网站上了。</p>\n<h1 id=\"絮叨\"><a href=\"#絮叨\" class=\"headerlink\" title=\"絮叨\"></a>絮叨</h1><p>这个博客是使用<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo技术</a>搭建的，因此第一篇日志也保留了自动生成的”Hello world”，算是一种鸣谢，也可以作为自己日后继续折腾Hexo时的一个查看document的便捷入口。<br><a id=\"more\"></a><br>刚开始时只是纯粹的想练习下nodejs建站的水平，自从来了阿里后，接触到了nodejs的东西，就被nodejs迷的不行了，工作中使用nodejs搭建了平台，于是也想到要不自己也搞一个属于自己的网站练练手吧。怎奈工作繁忙下班只想呼呼，念头刚生的时候就调研了阿里云、BAE等虚拟主机，当阿里云短信提醒我订购的虚拟主机即将到期时我在服务器上的node环境还没有安装好。。。<br>想了想，要完全自己写一个可用的网站，数据库不可少吧，评论留言不可少吧，现如今移动互联时代移动端响应式不可少吧。。。这么一来，交了一年的服务器钱网站估计还没写出来呢。。于是放弃了那个自以为是的想法，学习nodejs还是工作的时候折腾好了。一个偶然的机会（在github上看到octopress，一个类似WordPress的博客系统），了解到Hexo是一个基于nodejs的博客系统，比octopress还要简单易用，正好又是nodejs的，于是决定选择Hexo来搭建一个属于我自己的博客网站。</p>\n<h1 id=\"关于动机\"><a href=\"#关于动机\" class=\"headerlink\" title=\"关于动机\"></a>关于动机</h1><p>记得在研二的时候自己在115模板的基础上折腾了一个网址导航网站，那个时候多半是觉得”有一个属于自己的网站是件很牛逼的事情”，现在想想不免嘴角微翘：在现在这个互联网时代，有个网站算个什么事儿啊。<br>这么些年来尝试过在很多网站上写过东西，人人网的日志、CSDN的技术博客、写过一些情感纠结的野生百度贴吧、记述观感的豆瓣影评、小众而优雅的Lofter、新浪微博的长微博，甚至微信的段子，无一例外，这些都没能很长久的坚持下去。一部分原因是因为自己的懒惰，一部分也由社交网络的人气转移导致，再一个很大的一点，这些网站在商业化的过程中充斥了越来越多的广告，而社交网络里，那些充斥我信息流的美景、美食、美女们中间我突然穿插那么一段文字，看起来让人觉得很二逼很装逼。在满屏的转载里我找不到在这些网站的归属感，那么干脆搞个自己的网站吧。为自己的网站丰富内容，应该还是会坚持下去吧。</p>\n<h1 id=\"关于域名\"><a href=\"#关于域名\" class=\"headerlink\" title=\"关于域名\"></a>关于域名</h1><p>为什么会取一个一串数字的域名？<a href=\"http://www.5941740.cn\" target=\"_blank\" rel=\"noopener\">5941740</a>这串数字来源于我对中国互联网审查制度的痛恨。<br>5941740谐音是”我就是要气死你”，大家都知道如果在中国要搞个网站是必须要备案的，以前在上学时搞的那个导航网站，为了不备案（主要是没钱买空间），采用了国外的免费虚拟空间，然后在网站的底部赤裸裸的调戏工信部：”本网站空间来自国外，无需备案请勿跨省追捕。”这个博客网站本来是准备部署在阿里云主机上，我已经做好了屈服的准备，备案手续已经办的差不多了，结果没想到的是最后的步骤还要去xx特定地方去做信息采集，照相什么。。我为了折腾一下自己的小玩具用得着费这么大劲吗？我身份证、家庭地址什么的都告诉你了，还有什么不放心的呢？官老爷们你们牛，我还是乖乖不备案用免费空间去吧。得，其实是”我被您气死了呢”~ </p>\n<h1 id=\"关于博客\"><a href=\"#关于博客\" class=\"headerlink\" title=\"关于博客\"></a>关于博客</h1><p>关于这个博客，我希望它能督促我持续不断的记录下去。在长时间混迹社交网络之后，现在的我想个超过140字的句子总是显得很费力，有的时候满腹千言无从下笔，我想你们也是，想曾经我也是写过中篇长文的呢，呵呵。<br>好记性不如烂笔头，希望在长时间的积累后，能找到点思考以及行文的能力，也将日常工作中值得记录的内容记录在案，方便查找以及温故知新。<br>写博客跟写日记一样，明明是只写给自己，但写的时候仿佛又是期待别人来看。真是矛盾的呢。。<br>我的计划，大概会分几个类目，一个是技术人生，专门记录日常工作中的一些与技术相关的内容，一个是读书笔记，相当于取代豆瓣的功能，简短记录每年所看的书目，一个是心情杂感，随便扯点有的没的，毕竟我感性那是自己都害怕，一个是文青空间，有可能不会存在的类目，以目前的文笔来看，基本写不出个什么狗屎来了，还一个就是图片墙，用来专门晒图，还一个就是文摘采撷，摘录一些觉得有用的内容。<br>以上是为记。</p>\n","site":{"data":{}},"excerpt":"<p>每在一个网站安家，第一篇”Hello world”必然是《开篇》，这回有点不太一样，这回是在自己的网站上了。</p>\n<h1 id=\"絮叨\"><a href=\"#絮叨\" class=\"headerlink\" title=\"絮叨\"></a>絮叨</h1><p>这个博客是使用<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo技术</a>搭建的，因此第一篇日志也保留了自动生成的”Hello world”，算是一种鸣谢，也可以作为自己日后继续折腾Hexo时的一个查看document的便捷入口。<br>","more":"<br>刚开始时只是纯粹的想练习下nodejs建站的水平，自从来了阿里后，接触到了nodejs的东西，就被nodejs迷的不行了，工作中使用nodejs搭建了平台，于是也想到要不自己也搞一个属于自己的网站练练手吧。怎奈工作繁忙下班只想呼呼，念头刚生的时候就调研了阿里云、BAE等虚拟主机，当阿里云短信提醒我订购的虚拟主机即将到期时我在服务器上的node环境还没有安装好。。。<br>想了想，要完全自己写一个可用的网站，数据库不可少吧，评论留言不可少吧，现如今移动互联时代移动端响应式不可少吧。。。这么一来，交了一年的服务器钱网站估计还没写出来呢。。于是放弃了那个自以为是的想法，学习nodejs还是工作的时候折腾好了。一个偶然的机会（在github上看到octopress，一个类似WordPress的博客系统），了解到Hexo是一个基于nodejs的博客系统，比octopress还要简单易用，正好又是nodejs的，于是决定选择Hexo来搭建一个属于我自己的博客网站。</p>\n<h1 id=\"关于动机\"><a href=\"#关于动机\" class=\"headerlink\" title=\"关于动机\"></a>关于动机</h1><p>记得在研二的时候自己在115模板的基础上折腾了一个网址导航网站，那个时候多半是觉得”有一个属于自己的网站是件很牛逼的事情”，现在想想不免嘴角微翘：在现在这个互联网时代，有个网站算个什么事儿啊。<br>这么些年来尝试过在很多网站上写过东西，人人网的日志、CSDN的技术博客、写过一些情感纠结的野生百度贴吧、记述观感的豆瓣影评、小众而优雅的Lofter、新浪微博的长微博，甚至微信的段子，无一例外，这些都没能很长久的坚持下去。一部分原因是因为自己的懒惰，一部分也由社交网络的人气转移导致，再一个很大的一点，这些网站在商业化的过程中充斥了越来越多的广告，而社交网络里，那些充斥我信息流的美景、美食、美女们中间我突然穿插那么一段文字，看起来让人觉得很二逼很装逼。在满屏的转载里我找不到在这些网站的归属感，那么干脆搞个自己的网站吧。为自己的网站丰富内容，应该还是会坚持下去吧。</p>\n<h1 id=\"关于域名\"><a href=\"#关于域名\" class=\"headerlink\" title=\"关于域名\"></a>关于域名</h1><p>为什么会取一个一串数字的域名？<a href=\"http://www.5941740.cn\" target=\"_blank\" rel=\"noopener\">5941740</a>这串数字来源于我对中国互联网审查制度的痛恨。<br>5941740谐音是”我就是要气死你”，大家都知道如果在中国要搞个网站是必须要备案的，以前在上学时搞的那个导航网站，为了不备案（主要是没钱买空间），采用了国外的免费虚拟空间，然后在网站的底部赤裸裸的调戏工信部：”本网站空间来自国外，无需备案请勿跨省追捕。”这个博客网站本来是准备部署在阿里云主机上，我已经做好了屈服的准备，备案手续已经办的差不多了，结果没想到的是最后的步骤还要去xx特定地方去做信息采集，照相什么。。我为了折腾一下自己的小玩具用得着费这么大劲吗？我身份证、家庭地址什么的都告诉你了，还有什么不放心的呢？官老爷们你们牛，我还是乖乖不备案用免费空间去吧。得，其实是”我被您气死了呢”~ </p>\n<h1 id=\"关于博客\"><a href=\"#关于博客\" class=\"headerlink\" title=\"关于博客\"></a>关于博客</h1><p>关于这个博客，我希望它能督促我持续不断的记录下去。在长时间混迹社交网络之后，现在的我想个超过140字的句子总是显得很费力，有的时候满腹千言无从下笔，我想你们也是，想曾经我也是写过中篇长文的呢，呵呵。<br>好记性不如烂笔头，希望在长时间的积累后，能找到点思考以及行文的能力，也将日常工作中值得记录的内容记录在案，方便查找以及温故知新。<br>写博客跟写日记一样，明明是只写给自己，但写的时候仿佛又是期待别人来看。真是矛盾的呢。。<br>我的计划，大概会分几个类目，一个是技术人生，专门记录日常工作中的一些与技术相关的内容，一个是读书笔记，相当于取代豆瓣的功能，简短记录每年所看的书目，一个是心情杂感，随便扯点有的没的，毕竟我感性那是自己都害怕，一个是文青空间，有可能不会存在的类目，以目前的文笔来看，基本写不出个什么狗屎来了，还一个就是图片墙，用来专门晒图，还一个就是文摘采撷，摘录一些觉得有用的内容。<br>以上是为记。</p>","sticky":0},{"title":"备案那点小事","show":true,"date":"2016-01-08T07:43:07.000Z","_content":"时隔9天，小破站关站9天之后重开，官老爷的一条备案通过短信终于宣告我这小站终于迎来了合法身份，再也不是一个法外黑户。也宣告我那份小小的倔强与骄傲终究向现实妥协。\n\n我本可以继续选择不备案，但是在现实情况下，不备案意味着很多不便：\n1. 免费的cdn加速基本都需要备案first\n2. 万网的域名解析显性URL或者隐型URL跳转需要备案first\n3. 加入国内的广告联盟需要备案first\n4. 甚至不备案cn域名都不能解析\n5. ......\n\n为了能用上上述功能，最终还是决定备案。我曾YY过，备案过后，一旦我发表点什么发动言论，那把悬在头顶的\"达摩克里斯之剑\"就会掉下来，公安开始上门抓人。。。哈哈，备案在我看来更多的是\"防君子不防小人\"，阻拦的都是没什么做恶之心的人，真想做恶的人管你刀山火海上天入地。就像GFW，想翻墙的人想尽办法也会翻，不想翻的没有墙也不会去看。无非多了一个恶心人的东西。什么时候针对\"麻烦事儿\"不是一味去堵，而是去设法疏导就好了，我仅一介布衣，键盘侠一名，吐吐槽差不多是我能做的为数不多的事了。\n\n<!--more-->\n\n在开始准备备案之前做了一些准备工作，因为预期到要关站一段时间，如果网站不可访问，那么必定会被百度、谷歌K站。好在域名解析里提供了搜索引擎专线，可以针对搜索引擎做专门的解析。于是我取巧了一下：\n1. 修改了网站，提供了两个版本，一个版本给人看(网站正在备案维护...)，一个版本给搜索引擎看(正常的内容)\n2. 修改域名解析，默认解析到备案维护版本，搜索引擎解析到正常版本\n\n31号那天傍晚时候，阿里云客服电话我说准备提交备案信息，需要关站。那时候我已经回家准备结婚了。。于是速度手机上了下网，把准备好的解析打开生效，手机测试了几下访问的是备案版本了。之后就是漫长的等待，原本以为元旦三天就可以搞定了，结果一直到今天才审核通过。\n\n关于域名，5941740本来是\"我就是要气死你\"的谐音，寓意坚持不备案，甚至有一点点\"挑衅\"的调皮意味。如今倔强落地，骄傲不在，是时候该再重新择域名一枚了。\n\n以上是为记，庆贺首次备案。\n","source":"_posts/beian.md","raw":"title: 备案那点小事\nshow: true\ndate: 2016-01-08 15:43:07\ntags: 备案\ncategories: 心情杂感\n---\n时隔9天，小破站关站9天之后重开，官老爷的一条备案通过短信终于宣告我这小站终于迎来了合法身份，再也不是一个法外黑户。也宣告我那份小小的倔强与骄傲终究向现实妥协。\n\n我本可以继续选择不备案，但是在现实情况下，不备案意味着很多不便：\n1. 免费的cdn加速基本都需要备案first\n2. 万网的域名解析显性URL或者隐型URL跳转需要备案first\n3. 加入国内的广告联盟需要备案first\n4. 甚至不备案cn域名都不能解析\n5. ......\n\n为了能用上上述功能，最终还是决定备案。我曾YY过，备案过后，一旦我发表点什么发动言论，那把悬在头顶的\"达摩克里斯之剑\"就会掉下来，公安开始上门抓人。。。哈哈，备案在我看来更多的是\"防君子不防小人\"，阻拦的都是没什么做恶之心的人，真想做恶的人管你刀山火海上天入地。就像GFW，想翻墙的人想尽办法也会翻，不想翻的没有墙也不会去看。无非多了一个恶心人的东西。什么时候针对\"麻烦事儿\"不是一味去堵，而是去设法疏导就好了，我仅一介布衣，键盘侠一名，吐吐槽差不多是我能做的为数不多的事了。\n\n<!--more-->\n\n在开始准备备案之前做了一些准备工作，因为预期到要关站一段时间，如果网站不可访问，那么必定会被百度、谷歌K站。好在域名解析里提供了搜索引擎专线，可以针对搜索引擎做专门的解析。于是我取巧了一下：\n1. 修改了网站，提供了两个版本，一个版本给人看(网站正在备案维护...)，一个版本给搜索引擎看(正常的内容)\n2. 修改域名解析，默认解析到备案维护版本，搜索引擎解析到正常版本\n\n31号那天傍晚时候，阿里云客服电话我说准备提交备案信息，需要关站。那时候我已经回家准备结婚了。。于是速度手机上了下网，把准备好的解析打开生效，手机测试了几下访问的是备案版本了。之后就是漫长的等待，原本以为元旦三天就可以搞定了，结果一直到今天才审核通过。\n\n关于域名，5941740本来是\"我就是要气死你\"的谐音，寓意坚持不备案，甚至有一点点\"挑衅\"的调皮意味。如今倔强落地，骄傲不在，是时候该再重新择域名一枚了。\n\n以上是为记，庆贺首次备案。\n","slug":"beian","published":1,"updated":"2018-10-19T18:30:07.977Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzta000sfnpvxtwuamx2","content":"<p>时隔9天，小破站关站9天之后重开，官老爷的一条备案通过短信终于宣告我这小站终于迎来了合法身份，再也不是一个法外黑户。也宣告我那份小小的倔强与骄傲终究向现实妥协。</p>\n<p>我本可以继续选择不备案，但是在现实情况下，不备案意味着很多不便：</p>\n<ol>\n<li>免费的cdn加速基本都需要备案first</li>\n<li>万网的域名解析显性URL或者隐型URL跳转需要备案first</li>\n<li>加入国内的广告联盟需要备案first</li>\n<li>甚至不备案cn域名都不能解析</li>\n<li>……</li>\n</ol>\n<p>为了能用上上述功能，最终还是决定备案。我曾YY过，备案过后，一旦我发表点什么发动言论，那把悬在头顶的”达摩克里斯之剑”就会掉下来，公安开始上门抓人。。。哈哈，备案在我看来更多的是”防君子不防小人”，阻拦的都是没什么做恶之心的人，真想做恶的人管你刀山火海上天入地。就像GFW，想翻墙的人想尽办法也会翻，不想翻的没有墙也不会去看。无非多了一个恶心人的东西。什么时候针对”麻烦事儿”不是一味去堵，而是去设法疏导就好了，我仅一介布衣，键盘侠一名，吐吐槽差不多是我能做的为数不多的事了。</p>\n<a id=\"more\"></a>\n<p>在开始准备备案之前做了一些准备工作，因为预期到要关站一段时间，如果网站不可访问，那么必定会被百度、谷歌K站。好在域名解析里提供了搜索引擎专线，可以针对搜索引擎做专门的解析。于是我取巧了一下：</p>\n<ol>\n<li>修改了网站，提供了两个版本，一个版本给人看(网站正在备案维护…)，一个版本给搜索引擎看(正常的内容)</li>\n<li>修改域名解析，默认解析到备案维护版本，搜索引擎解析到正常版本</li>\n</ol>\n<p>31号那天傍晚时候，阿里云客服电话我说准备提交备案信息，需要关站。那时候我已经回家准备结婚了。。于是速度手机上了下网，把准备好的解析打开生效，手机测试了几下访问的是备案版本了。之后就是漫长的等待，原本以为元旦三天就可以搞定了，结果一直到今天才审核通过。</p>\n<p>关于域名，5941740本来是”我就是要气死你”的谐音，寓意坚持不备案，甚至有一点点”挑衅”的调皮意味。如今倔强落地，骄傲不在，是时候该再重新择域名一枚了。</p>\n<p>以上是为记，庆贺首次备案。</p>\n","site":{"data":{}},"excerpt":"<p>时隔9天，小破站关站9天之后重开，官老爷的一条备案通过短信终于宣告我这小站终于迎来了合法身份，再也不是一个法外黑户。也宣告我那份小小的倔强与骄傲终究向现实妥协。</p>\n<p>我本可以继续选择不备案，但是在现实情况下，不备案意味着很多不便：</p>\n<ol>\n<li>免费的cdn加速基本都需要备案first</li>\n<li>万网的域名解析显性URL或者隐型URL跳转需要备案first</li>\n<li>加入国内的广告联盟需要备案first</li>\n<li>甚至不备案cn域名都不能解析</li>\n<li>……</li>\n</ol>\n<p>为了能用上上述功能，最终还是决定备案。我曾YY过，备案过后，一旦我发表点什么发动言论，那把悬在头顶的”达摩克里斯之剑”就会掉下来，公安开始上门抓人。。。哈哈，备案在我看来更多的是”防君子不防小人”，阻拦的都是没什么做恶之心的人，真想做恶的人管你刀山火海上天入地。就像GFW，想翻墙的人想尽办法也会翻，不想翻的没有墙也不会去看。无非多了一个恶心人的东西。什么时候针对”麻烦事儿”不是一味去堵，而是去设法疏导就好了，我仅一介布衣，键盘侠一名，吐吐槽差不多是我能做的为数不多的事了。</p>","more":"<p>在开始准备备案之前做了一些准备工作，因为预期到要关站一段时间，如果网站不可访问，那么必定会被百度、谷歌K站。好在域名解析里提供了搜索引擎专线，可以针对搜索引擎做专门的解析。于是我取巧了一下：</p>\n<ol>\n<li>修改了网站，提供了两个版本，一个版本给人看(网站正在备案维护…)，一个版本给搜索引擎看(正常的内容)</li>\n<li>修改域名解析，默认解析到备案维护版本，搜索引擎解析到正常版本</li>\n</ol>\n<p>31号那天傍晚时候，阿里云客服电话我说准备提交备案信息，需要关站。那时候我已经回家准备结婚了。。于是速度手机上了下网，把准备好的解析打开生效，手机测试了几下访问的是备案版本了。之后就是漫长的等待，原本以为元旦三天就可以搞定了，结果一直到今天才审核通过。</p>\n<p>关于域名，5941740本来是”我就是要气死你”的谐音，寓意坚持不备案，甚至有一点点”挑衅”的调皮意味。如今倔强落地，骄傲不在，是时候该再重新择域名一枚了。</p>\n<p>以上是为记，庆贺首次备案。</p>","sticky":0},{"title":"手写组件化轮播","show":true,"date":"2016-09-14T03:41:12.000Z","photos":["https://camo.githubusercontent.com/603242775b598fb96d1b9da9c5a9e54d8fd686c7/687474703a2f2f7777312e73696e61696d672e636e2f6d773639302f3632643935313537677731663773787a6c32326a7a6a32306a32306171676d372e6a7067"],"_content":"## 背景\n轮播效果在web开发中使用很频繁，之前一直是使用网上找来的插件，今天研究了一下自己实现了一下，没多大难度，还是很简单的，顺便再组件化了一把，以后再有需要就使用自己的了不用再用第三方插件了。知其然知其所以然，本篇博文对此做一分享。\n\n## 实现原理\n让我们先来看一下轮播的实现原理。\n轮播其实很类似于我们小时候玩的抽卡片的小玩意儿：底下一层是绘制好的图案，上面一层开了一个窗口，通过转动上层的窗口来展示底层不同的图案。\n轮播也是这样，我们可以理解为：底层排列好了要轮播的图片，上层的窗口每次只展示一个图片，每点击一次窗口就滑动一次。\n\n<!-- more -->\n\n## 需求\n我们来写一个轮播插件，需要满足以下几个功能：\n1. 支持左右翻页\n2. 图片上显示小圆点，点击小圆点也可以翻页\n3. 翻页后点亮相应的小圆点\n4. 自动翻页\n5. 鼠标hover到图片上后自动翻页停止，移开后恢复自动翻页\n\n## 实现\n以下讲解主要部分，完整代码见：[**组件化轮播**](https://github.com/zhangjh/practice/blob/master/轮播)\n#### HTML容器\n\n```\n<div class=\"container\">\n\t<ul id=\"c1\">\n\t\t<li index=1><img src=\"\" alt=\"\"></li>\n\t\t<li index=2><img src=\"\" alt=\"\"></li>\n\t\t... ...\n\t</ul>\n\t<a class=\"pre arrow\"><</a>\n\t<a class=\"next arrow\">></a>\n\t<div id=\"nav\">\n\t\t<span class=\"on\" index=1></span>\n\t\t<span index=2></span>\n\t\t... ...\n\t</div>\n</div>\n```\n没什么好说的，样式里需要将图片显示在一行，整个容器的宽度定义为单张图片的宽度*图片张数即可。\n```\nli {\n\tdisplay: inline-block;\n\tfloat:left;\n}\n.container {\n\tposition: relative;\n\twidth: xx;  \t\t/*跟单张图片同宽高*/\n\theight: xx;\n\toverflow: hidden;   /*溢出部分隐藏*/\n}\n```\n\n#### js逻辑\n\n1. 左右翻页\n  点击一次next，窗口向右滑动一次，由于窗口固定，等同于底层向左滑动一次，于是我们可以得到：\n点击next时，包裹图片的容器left偏移量需要减去一个图片宽度，反之点击prev时，包裹图片的容器left偏移量要加上一个图片宽度。\n代码实现如下：\n```\nvar $next = $(\".next\");\nvar $pre = $(\".pre\");\nvar $ul = $(\"ul\");\t\nvar imgW = $(\"img\").width();\n$next.on(\"click\",function(){\n\tvar curLeft = $ul.offset().left;\n\tvar left = curLeft - imgW;\n\t$ul.animate({\n\t\tleft: left\n\t},1000);\n});\n\n$pre.on(\"click\",function(){\n\tvar curLeft = $ul.offset().left;\n\tvar left = curLeft + imgW;\n\t$ul.animate({\n\t\tleft: left\n\t},1000);\n});\n```\n  以上代码有个问题，当next翻到最后一张或者prev翻到第一张时，继续翻页就不能正常工作了。因为我们没有设置边界条件。\n  当翻到最后一张时，再次点击next，left值需要置回0，表示展示第一张图。\n  当翻到第一张时，再次点击prev，left值需置回最后一张图的left偏移。因此我们可以在代码中加上边界设置条件。\n\n\t```\n\tvar imgSize = $(\"img\").length;\n\t...\n\t//到达最后一张\n\tif(curLeft === (0 - imgW * (imgSize - 1))){\n\t\tleft = 0;\n\t}\n\t$ul.animate(...);\n\n\t//到达第一张\n\tif(curLeft === 0){\n\t\tleft = 0 - (imgW * (imgSize - 1));\n\t}\n\t```\n\n2. 小圆点翻页\n  其实实现了左右翻页后，我们就知道，翻页的功能是类似的，只要计算出点击后对应的left偏移量即可。\n  点击任意小圆点后，相应的偏移量为当前第几个位置减去1之后个图片宽度。(第一个位置偏移为0)\n```\nvar $span = $(\"span\");\n$span.on(\"click\",function(){\n\tvar curLeft = $ul.offset().left;\n\tvar left = 0 - ($(this).attr(\"index\") - 1) * imgW;\n\t$ul.animate(...);\n});\n```\n\n3. 翻页后点亮对应的小圆点\n  这个功能很简单，给当前图片对应的小圆点位置设置一个样式即可。我们要做的即是翻页后将对应的小圆点置为有效状态。\n  如何判断当前哪个小圆点应该置为有效呢？可以通过偏移量来判断。通过之前的分析我们可以看出，偏移量跟位置很有关系，当知道了偏移量后当前是第一张图片也顺应得知了。\n\t```\n\tvar index = Math.abs(curLeft) / imgW + 1;\n\t$span.find(\".on\").removeAttr(\"class\");\n\t$span.find(\"span:nth-child(\" + index + \")\").attr(\"class\",\"on\");\n\t```\n\n4. 自动翻页\n  在实现了左右翻页功能后，自动翻页功能也很好实现了。其就是相当于设置了一个定时器，然后自动点击next按钮。于是代码实现如下：\n\t```\n\tsetInterval(function(){\n\t\t$next.click();\n\t},3000);\n\t```\n\n5. hover停止滚动\n  当鼠标hover到图片上后，我们需要停止自动滚动。这意味着我们将定时器清除掉即可，为此我们需要给上一步的定时器一个名字，如timer。鼠标移开之后再次恢复自动点击即可。\n  \n\t```\n\t$img.hover(function(){\n\t\tclearInterval(timer);\n\t},function(){\n\t\t//恢复\n\t\t$next.click();\n\t});\n\t```\n\n至此，我们主要的功能都已经实现了。但明显地存在几个问题：\n- 重复代码多\n- 代码不好复用\n- 扩展性不够，如果有多个轮播，改造成本大\n\n如果只是一次性的用用是没问题的，但若是想以后重用，减少改造成本的话就需要继续改造下了。我们来看下如何将其改造成组件化的版本。\n\n## 组件化\n\n首先我们将公共的部分抽取出来，如滑动的操作、自动滚动的操作，然后将各个步骤封装，如展示后一张、展示前一张、点亮小圆点等，在文件最后我们将接口导出供外部引入使用。\n在前述代码的基础上，我们直接看下组件化版本的代码实现：\n\n```\nvar Carousel = {\n\t//传入容器\n\tinit: function($carousel){\n\t\tthis.$carousel = $carousel;\n\t\tconsole.log(this.$carousel);\n\t\tthis.$pre = $carousel.siblings(\".pre\");\n\t\tthis.$next = $carousel.siblings(\".next\");\n\t\tthis.$nav = $carousel.siblings(\"#nav\");\n\t\tthis.$span = this.$nav.find(\"span\");\n\t\tthis.$img = $carousel.find(\"img\");\n\t\tthis.imgWidth = $carousel.find(\"img\").width();\n\t\tthis.imgSize = $carousel.find(\"img\").length;\n\t\t//设置容器宽度\n\t\tthis.$carousel.css(\"width\",this.imgWidth * this.imgSize);\n\t\t//设置滚动点居中\n\t\tthis.$nav.css(\"left\",this.imgWidth / 2);\n\t\tthis.$nav.css(\"marginLeft\",0 - this.$nav.width() / 2);\n\n\t\tthis.bind();\n\t\tthis.autoSlider();\n\t},\n\tbind: function(){\n\t\t//hover停止滚动\n\t\tvar that = this;\n\t\tthis.$img.hover(function(){\n\t\t\tclearInterval(that.timer);\n\t\t},function(){\n\t\t\tthat.autoSlider();\n\t\t});\n\t\tthis.$pre.on(\"click\",function(){\n\t\t\tthat.showPre(that.$pre);\n\t\t});\n\t\tthis.$next.on(\"click\",function(){\n\t\t\tthat.showNext(that.$next);\n\t\t});\n\t\tthis.$span.on(\"click\", function (e) {\n\t\t\tthat.showAnyOne($(e.target));\n\t\t});\n\t},\n\tshowPre: function($ele){\n\t\tvar that = this;\n\t\t//防止多次点击\n\t\tvar curLeft = this.$carousel.offset().left;\n\t\tvar left = curLeft + this.imgWidth;\n\n\t\tif($ele === this.$pre){\n\t\t\t//到达头部置0\n\t\t\tif(curLeft === 0){\n\t\t\t\tleft = 0 - (this.imgWidth * (this.imgSize - 1));\n\t\t\t}\n\t\t}else {\n\t\t\tleft = ($ele.attr(\"index\") - 1) * this.imgWidth;\n\t\t}\n\t\tthis.doSlide(left);\n\t},\n\tshowNext: function($ele){\n\t\tvar that = this;\n\t\t//防止多次点击\n\t\tvar curLeft = this.$carousel.offset().left;\n\t\tvar left = curLeft - this.imgWidth;\n\n\t\tif($ele === this.$next){\n\t\t\t//到达尾部置0\n\t\t\tif(curLeft === (0 - this.imgWidth * (this.imgSize - 1))){\n\t\t\t\tleft = 0;\n\t\t\t}\n\t\t}else {\n\t\t\tleft = ($ele.attr(\"index\") - 1) * this.imgWidth;\n\t\t}\n\t\tthis.doSlide(left);\n\t},\n\tshowAnyOne: function ($ele) {\n\t\tvar curLeft = this.$carousel.offset().left;\n\t\tvar left = 0 - ($ele.attr(\"index\") - 1) * this.imgWidth;\n\t\tthis.doSlide(left);\n\t},\n\tautoSlider: function(){\n\t\tvar that = this;\n\t\tthis.timer = setInterval(function(){\n\t\t\tthat.$next.click();\n\t\t},3000)\n\t},\n\tsetActive: function(left){\n\t\tvar index = Math.abs(left) / this.imgWidth + 1;\n\t\tthis.$nav.find(\".on\").removeAttr(\"class\");\n\t\tthis.$nav.find(\"span:nth-child(\" + index + \")\").attr(\"class\",\"on\");\n\t},\n\tdoSlide: function (left) {\n\t\tvar that = this;\n\t\tif(!window.processing){\n\t\t\twindow.processing = true;\n\t\t\tthis.setActive(left);\n\t\t\tthis.$carousel.animate({\n\t\t\t\tleft: left\n\t\t\t},1000,function(){\n\t\t\t\twindow.processing = false;\n\t\t\t});\n\t\t}\n\t}\n};\n\nvar exports = function ($container) {\n\t return Carousel.init($container);\n}\n\nwindow.exports = exports;\n\n//Usage:\n//Carousel.init($(\"#c1\"));\n```\n","source":"_posts/carousel.md","raw":"title: 手写组件化轮播\nshow: true\ndate: 2016-09-14 11:41:12\ntags: [轮播,js,组件化]\ncategories: 技术人生\nphotos: \n- https://camo.githubusercontent.com/603242775b598fb96d1b9da9c5a9e54d8fd686c7/687474703a2f2f7777312e73696e61696d672e636e2f6d773639302f3632643935313537677731663773787a6c32326a7a6a32306a32306171676d372e6a7067\n---\n## 背景\n轮播效果在web开发中使用很频繁，之前一直是使用网上找来的插件，今天研究了一下自己实现了一下，没多大难度，还是很简单的，顺便再组件化了一把，以后再有需要就使用自己的了不用再用第三方插件了。知其然知其所以然，本篇博文对此做一分享。\n\n## 实现原理\n让我们先来看一下轮播的实现原理。\n轮播其实很类似于我们小时候玩的抽卡片的小玩意儿：底下一层是绘制好的图案，上面一层开了一个窗口，通过转动上层的窗口来展示底层不同的图案。\n轮播也是这样，我们可以理解为：底层排列好了要轮播的图片，上层的窗口每次只展示一个图片，每点击一次窗口就滑动一次。\n\n<!-- more -->\n\n## 需求\n我们来写一个轮播插件，需要满足以下几个功能：\n1. 支持左右翻页\n2. 图片上显示小圆点，点击小圆点也可以翻页\n3. 翻页后点亮相应的小圆点\n4. 自动翻页\n5. 鼠标hover到图片上后自动翻页停止，移开后恢复自动翻页\n\n## 实现\n以下讲解主要部分，完整代码见：[**组件化轮播**](https://github.com/zhangjh/practice/blob/master/轮播)\n#### HTML容器\n\n```\n<div class=\"container\">\n\t<ul id=\"c1\">\n\t\t<li index=1><img src=\"\" alt=\"\"></li>\n\t\t<li index=2><img src=\"\" alt=\"\"></li>\n\t\t... ...\n\t</ul>\n\t<a class=\"pre arrow\"><</a>\n\t<a class=\"next arrow\">></a>\n\t<div id=\"nav\">\n\t\t<span class=\"on\" index=1></span>\n\t\t<span index=2></span>\n\t\t... ...\n\t</div>\n</div>\n```\n没什么好说的，样式里需要将图片显示在一行，整个容器的宽度定义为单张图片的宽度*图片张数即可。\n```\nli {\n\tdisplay: inline-block;\n\tfloat:left;\n}\n.container {\n\tposition: relative;\n\twidth: xx;  \t\t/*跟单张图片同宽高*/\n\theight: xx;\n\toverflow: hidden;   /*溢出部分隐藏*/\n}\n```\n\n#### js逻辑\n\n1. 左右翻页\n  点击一次next，窗口向右滑动一次，由于窗口固定，等同于底层向左滑动一次，于是我们可以得到：\n点击next时，包裹图片的容器left偏移量需要减去一个图片宽度，反之点击prev时，包裹图片的容器left偏移量要加上一个图片宽度。\n代码实现如下：\n```\nvar $next = $(\".next\");\nvar $pre = $(\".pre\");\nvar $ul = $(\"ul\");\t\nvar imgW = $(\"img\").width();\n$next.on(\"click\",function(){\n\tvar curLeft = $ul.offset().left;\n\tvar left = curLeft - imgW;\n\t$ul.animate({\n\t\tleft: left\n\t},1000);\n});\n\n$pre.on(\"click\",function(){\n\tvar curLeft = $ul.offset().left;\n\tvar left = curLeft + imgW;\n\t$ul.animate({\n\t\tleft: left\n\t},1000);\n});\n```\n  以上代码有个问题，当next翻到最后一张或者prev翻到第一张时，继续翻页就不能正常工作了。因为我们没有设置边界条件。\n  当翻到最后一张时，再次点击next，left值需要置回0，表示展示第一张图。\n  当翻到第一张时，再次点击prev，left值需置回最后一张图的left偏移。因此我们可以在代码中加上边界设置条件。\n\n\t```\n\tvar imgSize = $(\"img\").length;\n\t...\n\t//到达最后一张\n\tif(curLeft === (0 - imgW * (imgSize - 1))){\n\t\tleft = 0;\n\t}\n\t$ul.animate(...);\n\n\t//到达第一张\n\tif(curLeft === 0){\n\t\tleft = 0 - (imgW * (imgSize - 1));\n\t}\n\t```\n\n2. 小圆点翻页\n  其实实现了左右翻页后，我们就知道，翻页的功能是类似的，只要计算出点击后对应的left偏移量即可。\n  点击任意小圆点后，相应的偏移量为当前第几个位置减去1之后个图片宽度。(第一个位置偏移为0)\n```\nvar $span = $(\"span\");\n$span.on(\"click\",function(){\n\tvar curLeft = $ul.offset().left;\n\tvar left = 0 - ($(this).attr(\"index\") - 1) * imgW;\n\t$ul.animate(...);\n});\n```\n\n3. 翻页后点亮对应的小圆点\n  这个功能很简单，给当前图片对应的小圆点位置设置一个样式即可。我们要做的即是翻页后将对应的小圆点置为有效状态。\n  如何判断当前哪个小圆点应该置为有效呢？可以通过偏移量来判断。通过之前的分析我们可以看出，偏移量跟位置很有关系，当知道了偏移量后当前是第一张图片也顺应得知了。\n\t```\n\tvar index = Math.abs(curLeft) / imgW + 1;\n\t$span.find(\".on\").removeAttr(\"class\");\n\t$span.find(\"span:nth-child(\" + index + \")\").attr(\"class\",\"on\");\n\t```\n\n4. 自动翻页\n  在实现了左右翻页功能后，自动翻页功能也很好实现了。其就是相当于设置了一个定时器，然后自动点击next按钮。于是代码实现如下：\n\t```\n\tsetInterval(function(){\n\t\t$next.click();\n\t},3000);\n\t```\n\n5. hover停止滚动\n  当鼠标hover到图片上后，我们需要停止自动滚动。这意味着我们将定时器清除掉即可，为此我们需要给上一步的定时器一个名字，如timer。鼠标移开之后再次恢复自动点击即可。\n  \n\t```\n\t$img.hover(function(){\n\t\tclearInterval(timer);\n\t},function(){\n\t\t//恢复\n\t\t$next.click();\n\t});\n\t```\n\n至此，我们主要的功能都已经实现了。但明显地存在几个问题：\n- 重复代码多\n- 代码不好复用\n- 扩展性不够，如果有多个轮播，改造成本大\n\n如果只是一次性的用用是没问题的，但若是想以后重用，减少改造成本的话就需要继续改造下了。我们来看下如何将其改造成组件化的版本。\n\n## 组件化\n\n首先我们将公共的部分抽取出来，如滑动的操作、自动滚动的操作，然后将各个步骤封装，如展示后一张、展示前一张、点亮小圆点等，在文件最后我们将接口导出供外部引入使用。\n在前述代码的基础上，我们直接看下组件化版本的代码实现：\n\n```\nvar Carousel = {\n\t//传入容器\n\tinit: function($carousel){\n\t\tthis.$carousel = $carousel;\n\t\tconsole.log(this.$carousel);\n\t\tthis.$pre = $carousel.siblings(\".pre\");\n\t\tthis.$next = $carousel.siblings(\".next\");\n\t\tthis.$nav = $carousel.siblings(\"#nav\");\n\t\tthis.$span = this.$nav.find(\"span\");\n\t\tthis.$img = $carousel.find(\"img\");\n\t\tthis.imgWidth = $carousel.find(\"img\").width();\n\t\tthis.imgSize = $carousel.find(\"img\").length;\n\t\t//设置容器宽度\n\t\tthis.$carousel.css(\"width\",this.imgWidth * this.imgSize);\n\t\t//设置滚动点居中\n\t\tthis.$nav.css(\"left\",this.imgWidth / 2);\n\t\tthis.$nav.css(\"marginLeft\",0 - this.$nav.width() / 2);\n\n\t\tthis.bind();\n\t\tthis.autoSlider();\n\t},\n\tbind: function(){\n\t\t//hover停止滚动\n\t\tvar that = this;\n\t\tthis.$img.hover(function(){\n\t\t\tclearInterval(that.timer);\n\t\t},function(){\n\t\t\tthat.autoSlider();\n\t\t});\n\t\tthis.$pre.on(\"click\",function(){\n\t\t\tthat.showPre(that.$pre);\n\t\t});\n\t\tthis.$next.on(\"click\",function(){\n\t\t\tthat.showNext(that.$next);\n\t\t});\n\t\tthis.$span.on(\"click\", function (e) {\n\t\t\tthat.showAnyOne($(e.target));\n\t\t});\n\t},\n\tshowPre: function($ele){\n\t\tvar that = this;\n\t\t//防止多次点击\n\t\tvar curLeft = this.$carousel.offset().left;\n\t\tvar left = curLeft + this.imgWidth;\n\n\t\tif($ele === this.$pre){\n\t\t\t//到达头部置0\n\t\t\tif(curLeft === 0){\n\t\t\t\tleft = 0 - (this.imgWidth * (this.imgSize - 1));\n\t\t\t}\n\t\t}else {\n\t\t\tleft = ($ele.attr(\"index\") - 1) * this.imgWidth;\n\t\t}\n\t\tthis.doSlide(left);\n\t},\n\tshowNext: function($ele){\n\t\tvar that = this;\n\t\t//防止多次点击\n\t\tvar curLeft = this.$carousel.offset().left;\n\t\tvar left = curLeft - this.imgWidth;\n\n\t\tif($ele === this.$next){\n\t\t\t//到达尾部置0\n\t\t\tif(curLeft === (0 - this.imgWidth * (this.imgSize - 1))){\n\t\t\t\tleft = 0;\n\t\t\t}\n\t\t}else {\n\t\t\tleft = ($ele.attr(\"index\") - 1) * this.imgWidth;\n\t\t}\n\t\tthis.doSlide(left);\n\t},\n\tshowAnyOne: function ($ele) {\n\t\tvar curLeft = this.$carousel.offset().left;\n\t\tvar left = 0 - ($ele.attr(\"index\") - 1) * this.imgWidth;\n\t\tthis.doSlide(left);\n\t},\n\tautoSlider: function(){\n\t\tvar that = this;\n\t\tthis.timer = setInterval(function(){\n\t\t\tthat.$next.click();\n\t\t},3000)\n\t},\n\tsetActive: function(left){\n\t\tvar index = Math.abs(left) / this.imgWidth + 1;\n\t\tthis.$nav.find(\".on\").removeAttr(\"class\");\n\t\tthis.$nav.find(\"span:nth-child(\" + index + \")\").attr(\"class\",\"on\");\n\t},\n\tdoSlide: function (left) {\n\t\tvar that = this;\n\t\tif(!window.processing){\n\t\t\twindow.processing = true;\n\t\t\tthis.setActive(left);\n\t\t\tthis.$carousel.animate({\n\t\t\t\tleft: left\n\t\t\t},1000,function(){\n\t\t\t\twindow.processing = false;\n\t\t\t});\n\t\t}\n\t}\n};\n\nvar exports = function ($container) {\n\t return Carousel.init($container);\n}\n\nwindow.exports = exports;\n\n//Usage:\n//Carousel.init($(\"#c1\"));\n```\n","slug":"carousel","published":1,"updated":"2018-10-19T18:30:07.977Z","comments":1,"layout":"post","link":"","_id":"cjnijyztc000wfnpvm1xmh17n","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>轮播效果在web开发中使用很频繁，之前一直是使用网上找来的插件，今天研究了一下自己实现了一下，没多大难度，还是很简单的，顺便再组件化了一把，以后再有需要就使用自己的了不用再用第三方插件了。知其然知其所以然，本篇博文对此做一分享。</p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><p>让我们先来看一下轮播的实现原理。<br>轮播其实很类似于我们小时候玩的抽卡片的小玩意儿：底下一层是绘制好的图案，上面一层开了一个窗口，通过转动上层的窗口来展示底层不同的图案。<br>轮播也是这样，我们可以理解为：底层排列好了要轮播的图片，上层的窗口每次只展示一个图片，每点击一次窗口就滑动一次。</p>\n<a id=\"more\"></a>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>我们来写一个轮播插件，需要满足以下几个功能：</p>\n<ol>\n<li>支持左右翻页</li>\n<li>图片上显示小圆点，点击小圆点也可以翻页</li>\n<li>翻页后点亮相应的小圆点</li>\n<li>自动翻页</li>\n<li>鼠标hover到图片上后自动翻页停止，移开后恢复自动翻页</li>\n</ol>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>以下讲解主要部分，完整代码见：<a href=\"https://github.com/zhangjh/practice/blob/master/轮播\" target=\"_blank\" rel=\"noopener\"><strong>组件化轮播</strong></a></p>\n<h4 id=\"HTML容器\"><a href=\"#HTML容器\" class=\"headerlink\" title=\"HTML容器\"></a>HTML容器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"container\"</span>&gt;</span><br><span class=\"line\">\t&lt;ul id=<span class=\"string\">\"c1\"</span>&gt;</span><br><span class=\"line\">\t\t&lt;li index=<span class=\"number\">1</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">\t\t&lt;li index=<span class=\"number\">2</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">\t\t... ...</span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;a class=\"pre arrow\"&gt;&lt;&lt;/</span>a&gt;</span><br><span class=\"line\">\t&lt;a <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"next arrow\"</span>&gt;&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\">\t&lt;div id=<span class=\"string\">\"nav\"</span>&gt;</span><br><span class=\"line\">\t\t&lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"on\"</span> index=<span class=\"number\">1</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">\t\t&lt;span index=<span class=\"number\">2</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">\t\t... ...</span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>\n<p>没什么好说的，样式里需要将图片显示在一行，整个容器的宽度定义为单张图片的宽度*图片张数即可。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">\t<span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: xx;  \t\t<span class=\"comment\">/*跟单张图片同宽高*/</span></span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: xx;</span><br><span class=\"line\">\t<span class=\"attribute\">overflow</span>: hidden;   <span class=\"comment\">/*溢出部分隐藏*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"js逻辑\"><a href=\"#js逻辑\" class=\"headerlink\" title=\"js逻辑\"></a>js逻辑</h4><ol>\n<li><p>左右翻页<br>点击一次next，窗口向右滑动一次，由于窗口固定，等同于底层向左滑动一次，于是我们可以得到：<br>点击next时，包裹图片的容器left偏移量需要减去一个图片宽度，反之点击prev时，包裹图片的容器left偏移量要加上一个图片宽度。<br>代码实现如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> $next = $(<span class=\"string\">\".next\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> $pre = $(<span class=\"string\">\".pre\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> $ul = $(<span class=\"string\">\"ul\"</span>);\t</span><br><span class=\"line\"><span class=\"keyword\">var</span> imgW = $(<span class=\"string\">\"img\"</span>).width();</span><br><span class=\"line\">$next.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> curLeft = $ul.offset().left;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> left = curLeft - imgW;</span><br><span class=\"line\">\t$ul.animate(&#123;</span><br><span class=\"line\">\t\tleft: left</span><br><span class=\"line\">\t&#125;,<span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$pre.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> curLeft = $ul.offset().left;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> left = curLeft + imgW;</span><br><span class=\"line\">\t$ul.animate(&#123;</span><br><span class=\"line\">\t\tleft: left</span><br><span class=\"line\">\t&#125;,<span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上代码有个问题，当next翻到最后一张或者prev翻到第一张时，继续翻页就不能正常工作了。因为我们没有设置边界条件。<br>当翻到最后一张时，再次点击next，left值需要置回0，表示展示第一张图。<br>当翻到第一张时，再次点击prev，left值需置回最后一张图的left偏移。因此我们可以在代码中加上边界设置条件。</p>\n <figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> imgSize = $(<span class=\"string\">\"img\"</span>).length;</span><br><span class=\"line\"><span class=\"params\">...</span></span><br><span class=\"line\"><span class=\"comment\">//到达最后一张</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(curLeft === (<span class=\"number\">0</span> - imgW * (imgSize - <span class=\"number\">1</span>)))&#123;</span><br><span class=\"line\">\tleft = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$ul.animate(<span class=\"params\">...</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//到达第一张</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(curLeft === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\tleft = <span class=\"number\">0</span> - (imgW * (imgSize - <span class=\"number\">1</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>小圆点翻页<br>其实实现了左右翻页后，我们就知道，翻页的功能是类似的，只要计算出点击后对应的left偏移量即可。<br>点击任意小圆点后，相应的偏移量为当前第几个位置减去1之后个图片宽度。(第一个位置偏移为0)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> $span = $(<span class=\"string\">\"span\"</span>);</span><br><span class=\"line\">$span.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> curLeft = $ul.offset().left;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> left = <span class=\"number\">0</span> - ($(this).attr(<span class=\"string\">\"index\"</span>) - <span class=\"number\">1</span>) * imgW;</span><br><span class=\"line\">\t$ul.animate(...);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>翻页后点亮对应的小圆点<br>这个功能很简单，给当前图片对应的小圆点位置设置一个样式即可。我们要做的即是翻页后将对应的小圆点置为有效状态。<br>如何判断当前哪个小圆点应该置为有效呢？可以通过偏移量来判断。通过之前的分析我们可以看出，偏移量跟位置很有关系，当知道了偏移量后当前是第一张图片也顺应得知了。</p>\n <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var index = Math.abs(curLeft) / imgW + 1;</span><br><span class=\"line\"><span class=\"variable\">$span</span>.<span class=\"builtin-name\">find</span>(<span class=\"string\">\".on\"</span>).removeAttr(<span class=\"string\">\"class\"</span>);</span><br><span class=\"line\"><span class=\"variable\">$span</span>.<span class=\"builtin-name\">find</span>(<span class=\"string\">\"span:nth-child(\"</span> + index + <span class=\"string\">\")\"</span>).attr(<span class=\"string\">\"class\"</span>,<span class=\"string\">\"on\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>自动翻页<br>在实现了左右翻页功能后，自动翻页功能也很好实现了。其就是相当于设置了一个定时器，然后自动点击next按钮。于是代码实现如下：</p>\n <figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setInterval(<span class=\"name\">function</span>()&#123;</span><br><span class=\"line\">\t$next.click()<span class=\"comment\">;</span></span><br><span class=\"line\">&#125;,<span class=\"number\">3000</span>)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>hover停止滚动<br>当鼠标hover到图片上后，我们需要停止自动滚动。这意味着我们将定时器清除掉即可，为此我们需要给上一步的定时器一个名字，如timer。鼠标移开之后再次恢复自动点击即可。</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$img.hover(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tclearInterval(timer);</span><br><span class=\"line\">&#125;,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//恢复</span></span><br><span class=\"line\">\t$next.click();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>至此，我们主要的功能都已经实现了。但明显地存在几个问题：</p>\n<ul>\n<li>重复代码多</li>\n<li>代码不好复用</li>\n<li>扩展性不够，如果有多个轮播，改造成本大</li>\n</ul>\n<p>如果只是一次性的用用是没问题的，但若是想以后重用，减少改造成本的话就需要继续改造下了。我们来看下如何将其改造成组件化的版本。</p>\n<h2 id=\"组件化\"><a href=\"#组件化\" class=\"headerlink\" title=\"组件化\"></a>组件化</h2><p>首先我们将公共的部分抽取出来，如滑动的操作、自动滚动的操作，然后将各个步骤封装，如展示后一张、展示前一张、点亮小圆点等，在文件最后我们将接口导出供外部引入使用。<br>在前述代码的基础上，我们直接看下组件化版本的代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Carousel = &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//传入容器</span></span><br><span class=\"line\">\tinit: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$carousel</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$carousel = $carousel;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.$carousel);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$pre = $carousel.siblings(<span class=\"string\">\".pre\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$next = $carousel.siblings(<span class=\"string\">\".next\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav = $carousel.siblings(<span class=\"string\">\"#nav\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$span = <span class=\"keyword\">this</span>.$nav.find(<span class=\"string\">\"span\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$img = $carousel.find(<span class=\"string\">\"img\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.imgWidth = $carousel.find(<span class=\"string\">\"img\"</span>).width();</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.imgSize = $carousel.find(<span class=\"string\">\"img\"</span>).length;</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置容器宽度</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$carousel.css(<span class=\"string\">\"width\"</span>,<span class=\"keyword\">this</span>.imgWidth * <span class=\"keyword\">this</span>.imgSize);</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置滚动点居中</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav.css(<span class=\"string\">\"left\"</span>,<span class=\"keyword\">this</span>.imgWidth / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav.css(<span class=\"string\">\"marginLeft\"</span>,<span class=\"number\">0</span> - <span class=\"keyword\">this</span>.$nav.width() / <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.bind();</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.autoSlider();</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tbind: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//hover停止滚动</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$img.hover(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tclearInterval(that.timer);</span><br><span class=\"line\">\t\t&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.autoSlider();</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$pre.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.showPre(that.$pre);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$next.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.showNext(that.$next);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$span.on(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">\t\t\tthat.showAnyOne($(e.target));</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tshowPre: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$ele</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//防止多次点击</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> curLeft = <span class=\"keyword\">this</span>.$carousel.offset().left;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> left = curLeft + <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($ele === <span class=\"keyword\">this</span>.$pre)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//到达头部置0</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(curLeft === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\tleft = <span class=\"number\">0</span> - (<span class=\"keyword\">this</span>.imgWidth * (<span class=\"keyword\">this</span>.imgSize - <span class=\"number\">1</span>));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tleft = ($ele.attr(<span class=\"string\">\"index\"</span>) - <span class=\"number\">1</span>) * <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.doSlide(left);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tshowNext: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$ele</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//防止多次点击</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> curLeft = <span class=\"keyword\">this</span>.$carousel.offset().left;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> left = curLeft - <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($ele === <span class=\"keyword\">this</span>.$next)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//到达尾部置0</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(curLeft === (<span class=\"number\">0</span> - <span class=\"keyword\">this</span>.imgWidth * (<span class=\"keyword\">this</span>.imgSize - <span class=\"number\">1</span>)))&#123;</span><br><span class=\"line\">\t\t\t\tleft = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tleft = ($ele.attr(<span class=\"string\">\"index\"</span>) - <span class=\"number\">1</span>) * <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.doSlide(left);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tshowAnyOne: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">$ele</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> curLeft = <span class=\"keyword\">this</span>.$carousel.offset().left;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> left = <span class=\"number\">0</span> - ($ele.attr(<span class=\"string\">\"index\"</span>) - <span class=\"number\">1</span>) * <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.doSlide(left);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tautoSlider: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.timer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.$next.click();</span><br><span class=\"line\">\t\t&#125;,<span class=\"number\">3000</span>)</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tsetActive: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">left</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> index = <span class=\"built_in\">Math</span>.abs(left) / <span class=\"keyword\">this</span>.imgWidth + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav.find(<span class=\"string\">\".on\"</span>).removeAttr(<span class=\"string\">\"class\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav.find(<span class=\"string\">\"span:nth-child(\"</span> + index + <span class=\"string\">\")\"</span>).attr(<span class=\"string\">\"class\"</span>,<span class=\"string\">\"on\"</span>);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tdoSlide: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">left</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!<span class=\"built_in\">window</span>.processing)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">window</span>.processing = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.setActive(left);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.$carousel.animate(&#123;</span><br><span class=\"line\">\t\t\t\tleft: left</span><br><span class=\"line\">\t\t\t&#125;,<span class=\"number\">1000</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">window</span>.processing = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">$container</span>) </span>&#123;</span><br><span class=\"line\">\t <span class=\"keyword\">return</span> Carousel.init($container);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.exports = exports;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Usage:</span></span><br><span class=\"line\"><span class=\"comment\">//Carousel.init($(\"#c1\"));</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>轮播效果在web开发中使用很频繁，之前一直是使用网上找来的插件，今天研究了一下自己实现了一下，没多大难度，还是很简单的，顺便再组件化了一把，以后再有需要就使用自己的了不用再用第三方插件了。知其然知其所以然，本篇博文对此做一分享。</p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><p>让我们先来看一下轮播的实现原理。<br>轮播其实很类似于我们小时候玩的抽卡片的小玩意儿：底下一层是绘制好的图案，上面一层开了一个窗口，通过转动上层的窗口来展示底层不同的图案。<br>轮播也是这样，我们可以理解为：底层排列好了要轮播的图片，上层的窗口每次只展示一个图片，每点击一次窗口就滑动一次。</p>","more":"<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>我们来写一个轮播插件，需要满足以下几个功能：</p>\n<ol>\n<li>支持左右翻页</li>\n<li>图片上显示小圆点，点击小圆点也可以翻页</li>\n<li>翻页后点亮相应的小圆点</li>\n<li>自动翻页</li>\n<li>鼠标hover到图片上后自动翻页停止，移开后恢复自动翻页</li>\n</ol>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>以下讲解主要部分，完整代码见：<a href=\"https://github.com/zhangjh/practice/blob/master/轮播\" target=\"_blank\" rel=\"noopener\"><strong>组件化轮播</strong></a></p>\n<h4 id=\"HTML容器\"><a href=\"#HTML容器\" class=\"headerlink\" title=\"HTML容器\"></a>HTML容器</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"container\"</span>&gt;</span><br><span class=\"line\">\t&lt;ul id=<span class=\"string\">\"c1\"</span>&gt;</span><br><span class=\"line\">\t\t&lt;li index=<span class=\"number\">1</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">\t\t&lt;li index=<span class=\"number\">2</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span></span><br><span class=\"line\">\t\t... ...</span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&lt;a class=\"pre arrow\"&gt;&lt;&lt;/</span>a&gt;</span><br><span class=\"line\">\t&lt;a <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"next arrow\"</span>&gt;&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\">\t&lt;div id=<span class=\"string\">\"nav\"</span>&gt;</span><br><span class=\"line\">\t\t&lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"on\"</span> index=<span class=\"number\">1</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">\t\t&lt;span index=<span class=\"number\">2</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\">\t\t... ...</span><br><span class=\"line\">\t&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>\n<p>没什么好说的，样式里需要将图片显示在一行，整个容器的宽度定义为单张图片的宽度*图片张数即可。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">\t<span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: xx;  \t\t<span class=\"comment\">/*跟单张图片同宽高*/</span></span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: xx;</span><br><span class=\"line\">\t<span class=\"attribute\">overflow</span>: hidden;   <span class=\"comment\">/*溢出部分隐藏*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"js逻辑\"><a href=\"#js逻辑\" class=\"headerlink\" title=\"js逻辑\"></a>js逻辑</h4><ol>\n<li><p>左右翻页<br>点击一次next，窗口向右滑动一次，由于窗口固定，等同于底层向左滑动一次，于是我们可以得到：<br>点击next时，包裹图片的容器left偏移量需要减去一个图片宽度，反之点击prev时，包裹图片的容器left偏移量要加上一个图片宽度。<br>代码实现如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> $next = $(<span class=\"string\">\".next\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> $pre = $(<span class=\"string\">\".pre\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> $ul = $(<span class=\"string\">\"ul\"</span>);\t</span><br><span class=\"line\"><span class=\"keyword\">var</span> imgW = $(<span class=\"string\">\"img\"</span>).width();</span><br><span class=\"line\">$next.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> curLeft = $ul.offset().left;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> left = curLeft - imgW;</span><br><span class=\"line\">\t$ul.animate(&#123;</span><br><span class=\"line\">\t\tleft: left</span><br><span class=\"line\">\t&#125;,<span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$pre.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> curLeft = $ul.offset().left;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> left = curLeft + imgW;</span><br><span class=\"line\">\t$ul.animate(&#123;</span><br><span class=\"line\">\t\tleft: left</span><br><span class=\"line\">\t&#125;,<span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上代码有个问题，当next翻到最后一张或者prev翻到第一张时，继续翻页就不能正常工作了。因为我们没有设置边界条件。<br>当翻到最后一张时，再次点击next，left值需要置回0，表示展示第一张图。<br>当翻到第一张时，再次点击prev，left值需置回最后一张图的left偏移。因此我们可以在代码中加上边界设置条件。</p>\n <figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> imgSize = $(<span class=\"string\">\"img\"</span>).length;</span><br><span class=\"line\"><span class=\"params\">...</span></span><br><span class=\"line\"><span class=\"comment\">//到达最后一张</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(curLeft === (<span class=\"number\">0</span> - imgW * (imgSize - <span class=\"number\">1</span>)))&#123;</span><br><span class=\"line\">\tleft = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$ul.animate(<span class=\"params\">...</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//到达第一张</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(curLeft === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\tleft = <span class=\"number\">0</span> - (imgW * (imgSize - <span class=\"number\">1</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>小圆点翻页<br>其实实现了左右翻页后，我们就知道，翻页的功能是类似的，只要计算出点击后对应的left偏移量即可。<br>点击任意小圆点后，相应的偏移量为当前第几个位置减去1之后个图片宽度。(第一个位置偏移为0)</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> $span = $(<span class=\"string\">\"span\"</span>);</span><br><span class=\"line\">$span.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> curLeft = $ul.offset().left;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> left = <span class=\"number\">0</span> - ($(this).attr(<span class=\"string\">\"index\"</span>) - <span class=\"number\">1</span>) * imgW;</span><br><span class=\"line\">\t$ul.animate(...);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>翻页后点亮对应的小圆点<br>这个功能很简单，给当前图片对应的小圆点位置设置一个样式即可。我们要做的即是翻页后将对应的小圆点置为有效状态。<br>如何判断当前哪个小圆点应该置为有效呢？可以通过偏移量来判断。通过之前的分析我们可以看出，偏移量跟位置很有关系，当知道了偏移量后当前是第一张图片也顺应得知了。</p>\n <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var index = Math.abs(curLeft) / imgW + 1;</span><br><span class=\"line\"><span class=\"variable\">$span</span>.<span class=\"builtin-name\">find</span>(<span class=\"string\">\".on\"</span>).removeAttr(<span class=\"string\">\"class\"</span>);</span><br><span class=\"line\"><span class=\"variable\">$span</span>.<span class=\"builtin-name\">find</span>(<span class=\"string\">\"span:nth-child(\"</span> + index + <span class=\"string\">\")\"</span>).attr(<span class=\"string\">\"class\"</span>,<span class=\"string\">\"on\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>自动翻页<br>在实现了左右翻页功能后，自动翻页功能也很好实现了。其就是相当于设置了一个定时器，然后自动点击next按钮。于是代码实现如下：</p>\n <figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setInterval(<span class=\"name\">function</span>()&#123;</span><br><span class=\"line\">\t$next.click()<span class=\"comment\">;</span></span><br><span class=\"line\">&#125;,<span class=\"number\">3000</span>)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>hover停止滚动<br>当鼠标hover到图片上后，我们需要停止自动滚动。这意味着我们将定时器清除掉即可，为此我们需要给上一步的定时器一个名字，如timer。鼠标移开之后再次恢复自动点击即可。</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$img.hover(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tclearInterval(timer);</span><br><span class=\"line\">&#125;,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//恢复</span></span><br><span class=\"line\">\t$next.click();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>至此，我们主要的功能都已经实现了。但明显地存在几个问题：</p>\n<ul>\n<li>重复代码多</li>\n<li>代码不好复用</li>\n<li>扩展性不够，如果有多个轮播，改造成本大</li>\n</ul>\n<p>如果只是一次性的用用是没问题的，但若是想以后重用，减少改造成本的话就需要继续改造下了。我们来看下如何将其改造成组件化的版本。</p>\n<h2 id=\"组件化\"><a href=\"#组件化\" class=\"headerlink\" title=\"组件化\"></a>组件化</h2><p>首先我们将公共的部分抽取出来，如滑动的操作、自动滚动的操作，然后将各个步骤封装，如展示后一张、展示前一张、点亮小圆点等，在文件最后我们将接口导出供外部引入使用。<br>在前述代码的基础上，我们直接看下组件化版本的代码实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Carousel = &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//传入容器</span></span><br><span class=\"line\">\tinit: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$carousel</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$carousel = $carousel;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.$carousel);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$pre = $carousel.siblings(<span class=\"string\">\".pre\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$next = $carousel.siblings(<span class=\"string\">\".next\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav = $carousel.siblings(<span class=\"string\">\"#nav\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$span = <span class=\"keyword\">this</span>.$nav.find(<span class=\"string\">\"span\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$img = $carousel.find(<span class=\"string\">\"img\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.imgWidth = $carousel.find(<span class=\"string\">\"img\"</span>).width();</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.imgSize = $carousel.find(<span class=\"string\">\"img\"</span>).length;</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置容器宽度</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$carousel.css(<span class=\"string\">\"width\"</span>,<span class=\"keyword\">this</span>.imgWidth * <span class=\"keyword\">this</span>.imgSize);</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置滚动点居中</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav.css(<span class=\"string\">\"left\"</span>,<span class=\"keyword\">this</span>.imgWidth / <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav.css(<span class=\"string\">\"marginLeft\"</span>,<span class=\"number\">0</span> - <span class=\"keyword\">this</span>.$nav.width() / <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.bind();</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.autoSlider();</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tbind: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//hover停止滚动</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$img.hover(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tclearInterval(that.timer);</span><br><span class=\"line\">\t\t&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.autoSlider();</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$pre.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.showPre(that.$pre);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$next.on(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.showNext(that.$next);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$span.on(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">\t\t\tthat.showAnyOne($(e.target));</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tshowPre: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$ele</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//防止多次点击</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> curLeft = <span class=\"keyword\">this</span>.$carousel.offset().left;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> left = curLeft + <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($ele === <span class=\"keyword\">this</span>.$pre)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//到达头部置0</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(curLeft === <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\tleft = <span class=\"number\">0</span> - (<span class=\"keyword\">this</span>.imgWidth * (<span class=\"keyword\">this</span>.imgSize - <span class=\"number\">1</span>));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tleft = ($ele.attr(<span class=\"string\">\"index\"</span>) - <span class=\"number\">1</span>) * <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.doSlide(left);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tshowNext: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$ele</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//防止多次点击</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> curLeft = <span class=\"keyword\">this</span>.$carousel.offset().left;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> left = curLeft - <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($ele === <span class=\"keyword\">this</span>.$next)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//到达尾部置0</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(curLeft === (<span class=\"number\">0</span> - <span class=\"keyword\">this</span>.imgWidth * (<span class=\"keyword\">this</span>.imgSize - <span class=\"number\">1</span>)))&#123;</span><br><span class=\"line\">\t\t\t\tleft = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tleft = ($ele.attr(<span class=\"string\">\"index\"</span>) - <span class=\"number\">1</span>) * <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.doSlide(left);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tshowAnyOne: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">$ele</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> curLeft = <span class=\"keyword\">this</span>.$carousel.offset().left;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> left = <span class=\"number\">0</span> - ($ele.attr(<span class=\"string\">\"index\"</span>) - <span class=\"number\">1</span>) * <span class=\"keyword\">this</span>.imgWidth;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.doSlide(left);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tautoSlider: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.timer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tthat.$next.click();</span><br><span class=\"line\">\t\t&#125;,<span class=\"number\">3000</span>)</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tsetActive: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">left</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> index = <span class=\"built_in\">Math</span>.abs(left) / <span class=\"keyword\">this</span>.imgWidth + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav.find(<span class=\"string\">\".on\"</span>).removeAttr(<span class=\"string\">\"class\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.$nav.find(<span class=\"string\">\"span:nth-child(\"</span> + index + <span class=\"string\">\")\"</span>).attr(<span class=\"string\">\"class\"</span>,<span class=\"string\">\"on\"</span>);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\tdoSlide: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">left</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!<span class=\"built_in\">window</span>.processing)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">window</span>.processing = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.setActive(left);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">this</span>.$carousel.animate(&#123;</span><br><span class=\"line\">\t\t\t\tleft: left</span><br><span class=\"line\">\t\t\t&#125;,<span class=\"number\">1000</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">window</span>.processing = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">$container</span>) </span>&#123;</span><br><span class=\"line\">\t <span class=\"keyword\">return</span> Carousel.init($container);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.exports = exports;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Usage:</span></span><br><span class=\"line\"><span class=\"comment\">//Carousel.init($(\"#c1\"));</span></span><br></pre></td></tr></table></figure>","sticky":0},{"title":"使用Charles抓取调试手机请求","show":true,"date":"2018-03-11T10:50:54.000Z","_content":"<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  3/53，每周一篇博，坚持！\n\n在实际工作的开发过程中，我们经常会遇到一些场景需要分析手机访问时的代码问题。这时候我们可以用Chrome提供的模拟手机功能，但有时候是无法模拟的，如请求涉及到了手机定位，这种情形我们只能使用手机端来请求才能获取到实际的请求参数。这时候一般我们都会动用抓包工具来将手机访问的请求代理到电脑上来。\n\n抓包工具有很多，Charles就是一款非常好用的抓包工具。本篇博文里就针对使用Charles来抓取手机端访问请求做一番简介。\n\n## 安装\nCharles的安装非常简单，可以直接访问[Charles的官网下载页面](https://www.charlesproxy.com/download/)，选择合适自己操作系统的版本即可。Charles是收费软件，可以免费试用30天。试用期过后未付费用户仍然可以继续使用，但是每次使用超过30分钟后会需要关闭重启。这种引导付费的方案对大部分人来说还是非常友好的，即使你长期不付费也能使用完整的软件功能，30分钟的使用时长也应该能满足大部分人的使用需求了。\n如果你出于各种原因，坚持要使用无任何\"瑕疵\"的版本，你可以选择付费，也可以自行搜索破解补丁。\n\n<!--more-->\n\n## Charles配置\n安装完成后，Charles可以完成大部分的自动配置。需要用户自己配置的地方并不多。\n手机端的设置部分需要自己设置一下：\n1. 首先确保手机和电脑在一个局域网下。\n2. 查看电脑的IP地址。这个有各种查看方法，可以通过点击Help->Local IP Address查看本机IP。\n3. 打开Charles->Proxy->Proxy Setting菜单，调出Charles的代理设置。如图：\n![](http://wx3.sinaimg.cn/large/62d95157gy1fp94hcllkpj20x20sagot.jpg)\n图示为默认的设置，如果同时需要代理socks请求，可以打开socks mode。\n4. 打开手机的无线网络，找到连接的Wifi设置代理。通常是在高级设置的位置，不同手机操作细节不一。以我的手机为例：\n![](http://wx4.sinaimg.cn/large/62d95157gy1fp959s5praj20f00smdig.jpg)\n设置代理方式为手动，填入代理服务器IP和端口，即上一步中查询的本地IP和端口。\n如果你还是不会手动设置，你也可以采用Charles提供的自动设置方式：\n在手机上打开链接：`https://chls.pro/X.X.X.X.pac`，其中X.X.X.X即为上述本机IP，如果你修改了默认端口，那么还需要指定端口：`https://chls.pro/X.X.X.X:XXXX.pac`\n5. 使用Charles抓包，现在手机访问任意一个程序试试，看看Charles的抓包是不是就生效了。\n![](http://wx4.sinaimg.cn/large/62d95157gy1fp95jybtjnj21om0uqn7g.jpg)\n6. 通过截图可以看到有一些请求的前面有一个带锁的小图标，这个其实意思是请求是走的SSL请求，需要设置下SSL Proxy，否则是无法解析的。\n\n\t- 我们可以打开Proxy->SSL Proxy Settings，然后将目标地址配置进去，或者直接填写\"*,443\"\n\t![](http://wx3.sinaimg.cn/large/62d95157gy1fp95v71b6yj20wo0oadjp.jpg)\n\t表示抓取任意网站的https请求。\n\t- 电脑端安装SSL证书\n\t![](https://upload-images.jianshu.io/upload_images/5337737-895a3736db7ce118.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/507)\n\t- 手机端安装证书\n\t![](https://upload-images.jianshu.io/upload_images/5337737-c17b7752efa93560.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/554)\n\t弹出的对话框中会提示一个链接地址`chls.pro/ssl`，直接访问即可。\n7. 试一下抓取https吧。以笔者的`https://favlink.cn`为例：\n![](http://wx3.sinaimg.cn/large/62d95157gy1fp961hb9ghj21os0q4gsh.jpg)\n完美！\n8. 如果要修改某个请求参数，可以选中请求后点击菜单栏上钢笔形状的按钮即可修改请求执行。\n![](http://wx2.sinaimg.cn/large/62d95157gy1fp96f63fnqj225o0ks44o.jpg)\n\n如果在进行过程中，发现手机端连接不上Charles，可以看看防火墙是否关闭，防火墙如果开启会影响Charles的连接。\n\n## 结语\n除了抓包之外，Charles还有很多其他实用功能：重发请求、修改请求、模拟慢速网络、代理等。本篇主要就抓包做了简要介绍，详细的功能可以参看[Charles的完整使用文档](https://www.charlesproxy.com/documentation/tools/)。\n","source":"_posts/charles.md","raw":"title: 使用Charles抓取调试手机请求\nshow: true\ndate: 2018-03-11 18:50:54\ntags: [Charles,代理,抓包]\ncategories: 技术人生\n---\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  3/53，每周一篇博，坚持！\n\n在实际工作的开发过程中，我们经常会遇到一些场景需要分析手机访问时的代码问题。这时候我们可以用Chrome提供的模拟手机功能，但有时候是无法模拟的，如请求涉及到了手机定位，这种情形我们只能使用手机端来请求才能获取到实际的请求参数。这时候一般我们都会动用抓包工具来将手机访问的请求代理到电脑上来。\n\n抓包工具有很多，Charles就是一款非常好用的抓包工具。本篇博文里就针对使用Charles来抓取手机端访问请求做一番简介。\n\n## 安装\nCharles的安装非常简单，可以直接访问[Charles的官网下载页面](https://www.charlesproxy.com/download/)，选择合适自己操作系统的版本即可。Charles是收费软件，可以免费试用30天。试用期过后未付费用户仍然可以继续使用，但是每次使用超过30分钟后会需要关闭重启。这种引导付费的方案对大部分人来说还是非常友好的，即使你长期不付费也能使用完整的软件功能，30分钟的使用时长也应该能满足大部分人的使用需求了。\n如果你出于各种原因，坚持要使用无任何\"瑕疵\"的版本，你可以选择付费，也可以自行搜索破解补丁。\n\n<!--more-->\n\n## Charles配置\n安装完成后，Charles可以完成大部分的自动配置。需要用户自己配置的地方并不多。\n手机端的设置部分需要自己设置一下：\n1. 首先确保手机和电脑在一个局域网下。\n2. 查看电脑的IP地址。这个有各种查看方法，可以通过点击Help->Local IP Address查看本机IP。\n3. 打开Charles->Proxy->Proxy Setting菜单，调出Charles的代理设置。如图：\n![](http://wx3.sinaimg.cn/large/62d95157gy1fp94hcllkpj20x20sagot.jpg)\n图示为默认的设置，如果同时需要代理socks请求，可以打开socks mode。\n4. 打开手机的无线网络，找到连接的Wifi设置代理。通常是在高级设置的位置，不同手机操作细节不一。以我的手机为例：\n![](http://wx4.sinaimg.cn/large/62d95157gy1fp959s5praj20f00smdig.jpg)\n设置代理方式为手动，填入代理服务器IP和端口，即上一步中查询的本地IP和端口。\n如果你还是不会手动设置，你也可以采用Charles提供的自动设置方式：\n在手机上打开链接：`https://chls.pro/X.X.X.X.pac`，其中X.X.X.X即为上述本机IP，如果你修改了默认端口，那么还需要指定端口：`https://chls.pro/X.X.X.X:XXXX.pac`\n5. 使用Charles抓包，现在手机访问任意一个程序试试，看看Charles的抓包是不是就生效了。\n![](http://wx4.sinaimg.cn/large/62d95157gy1fp95jybtjnj21om0uqn7g.jpg)\n6. 通过截图可以看到有一些请求的前面有一个带锁的小图标，这个其实意思是请求是走的SSL请求，需要设置下SSL Proxy，否则是无法解析的。\n\n\t- 我们可以打开Proxy->SSL Proxy Settings，然后将目标地址配置进去，或者直接填写\"*,443\"\n\t![](http://wx3.sinaimg.cn/large/62d95157gy1fp95v71b6yj20wo0oadjp.jpg)\n\t表示抓取任意网站的https请求。\n\t- 电脑端安装SSL证书\n\t![](https://upload-images.jianshu.io/upload_images/5337737-895a3736db7ce118.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/507)\n\t- 手机端安装证书\n\t![](https://upload-images.jianshu.io/upload_images/5337737-c17b7752efa93560.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/554)\n\t弹出的对话框中会提示一个链接地址`chls.pro/ssl`，直接访问即可。\n7. 试一下抓取https吧。以笔者的`https://favlink.cn`为例：\n![](http://wx3.sinaimg.cn/large/62d95157gy1fp961hb9ghj21os0q4gsh.jpg)\n完美！\n8. 如果要修改某个请求参数，可以选中请求后点击菜单栏上钢笔形状的按钮即可修改请求执行。\n![](http://wx2.sinaimg.cn/large/62d95157gy1fp96f63fnqj225o0ks44o.jpg)\n\n如果在进行过程中，发现手机端连接不上Charles，可以看看防火墙是否关闭，防火墙如果开启会影响Charles的连接。\n\n## 结语\n除了抓包之外，Charles还有很多其他实用功能：重发请求、修改请求、模拟慢速网络、代理等。本篇主要就抓包做了简要介绍，详细的功能可以参看[Charles的完整使用文档](https://www.charlesproxy.com/documentation/tools/)。\n","slug":"charles","published":1,"updated":"2018-10-19T18:30:07.977Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzte0010fnpvgbbs0uh6","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  3/53，每周一篇博，坚持！</p>\n<p>在实际工作的开发过程中，我们经常会遇到一些场景需要分析手机访问时的代码问题。这时候我们可以用Chrome提供的模拟手机功能，但有时候是无法模拟的，如请求涉及到了手机定位，这种情形我们只能使用手机端来请求才能获取到实际的请求参数。这时候一般我们都会动用抓包工具来将手机访问的请求代理到电脑上来。</p>\n<p>抓包工具有很多，Charles就是一款非常好用的抓包工具。本篇博文里就针对使用Charles来抓取手机端访问请求做一番简介。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>Charles的安装非常简单，可以直接访问<a href=\"https://www.charlesproxy.com/download/\" target=\"_blank\" rel=\"noopener\">Charles的官网下载页面</a>，选择合适自己操作系统的版本即可。Charles是收费软件，可以免费试用30天。试用期过后未付费用户仍然可以继续使用，但是每次使用超过30分钟后会需要关闭重启。这种引导付费的方案对大部分人来说还是非常友好的，即使你长期不付费也能使用完整的软件功能，30分钟的使用时长也应该能满足大部分人的使用需求了。<br>如果你出于各种原因，坚持要使用无任何”瑕疵”的版本，你可以选择付费，也可以自行搜索破解补丁。</p>\n<a id=\"more\"></a>\n<h2 id=\"Charles配置\"><a href=\"#Charles配置\" class=\"headerlink\" title=\"Charles配置\"></a>Charles配置</h2><p>安装完成后，Charles可以完成大部分的自动配置。需要用户自己配置的地方并不多。<br>手机端的设置部分需要自己设置一下：</p>\n<ol>\n<li>首先确保手机和电脑在一个局域网下。</li>\n<li>查看电脑的IP地址。这个有各种查看方法，可以通过点击Help-&gt;Local IP Address查看本机IP。</li>\n<li>打开Charles-&gt;Proxy-&gt;Proxy Setting菜单，调出Charles的代理设置。如图：<br><img src=\"http://wx3.sinaimg.cn/large/62d95157gy1fp94hcllkpj20x20sagot.jpg\" alt=\"\"><br>图示为默认的设置，如果同时需要代理socks请求，可以打开socks mode。</li>\n<li>打开手机的无线网络，找到连接的Wifi设置代理。通常是在高级设置的位置，不同手机操作细节不一。以我的手机为例：<br><img src=\"http://wx4.sinaimg.cn/large/62d95157gy1fp959s5praj20f00smdig.jpg\" alt=\"\"><br>设置代理方式为手动，填入代理服务器IP和端口，即上一步中查询的本地IP和端口。<br>如果你还是不会手动设置，你也可以采用Charles提供的自动设置方式：<br>在手机上打开链接：<code>https://chls.pro/X.X.X.X.pac</code>，其中X.X.X.X即为上述本机IP，如果你修改了默认端口，那么还需要指定端口：<code>https://chls.pro/X.X.X.X:XXXX.pac</code></li>\n<li>使用Charles抓包，现在手机访问任意一个程序试试，看看Charles的抓包是不是就生效了。<br><img src=\"http://wx4.sinaimg.cn/large/62d95157gy1fp95jybtjnj21om0uqn7g.jpg\" alt=\"\"></li>\n<li><p>通过截图可以看到有一些请求的前面有一个带锁的小图标，这个其实意思是请求是走的SSL请求，需要设置下SSL Proxy，否则是无法解析的。</p>\n<ul>\n<li>我们可以打开Proxy-&gt;SSL Proxy Settings，然后将目标地址配置进去，或者直接填写”*,443”<br><img src=\"http://wx3.sinaimg.cn/large/62d95157gy1fp95v71b6yj20wo0oadjp.jpg\" alt=\"\"><br>表示抓取任意网站的https请求。</li>\n<li>电脑端安装SSL证书<br><img src=\"https://upload-images.jianshu.io/upload_images/5337737-895a3736db7ce118.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/507\" alt=\"\"></li>\n<li>手机端安装证书<br><img src=\"https://upload-images.jianshu.io/upload_images/5337737-c17b7752efa93560.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/554\" alt=\"\"><br>弹出的对话框中会提示一个链接地址<code>chls.pro/ssl</code>，直接访问即可。</li>\n</ul>\n</li>\n<li>试一下抓取https吧。以笔者的<code>https://favlink.cn</code>为例：<br><img src=\"http://wx3.sinaimg.cn/large/62d95157gy1fp961hb9ghj21os0q4gsh.jpg\" alt=\"\"><br>完美！</li>\n<li>如果要修改某个请求参数，可以选中请求后点击菜单栏上钢笔形状的按钮即可修改请求执行。<br><img src=\"http://wx2.sinaimg.cn/large/62d95157gy1fp96f63fnqj225o0ks44o.jpg\" alt=\"\"></li>\n</ol>\n<p>如果在进行过程中，发现手机端连接不上Charles，可以看看防火墙是否关闭，防火墙如果开启会影响Charles的连接。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>除了抓包之外，Charles还有很多其他实用功能：重发请求、修改请求、模拟慢速网络、代理等。本篇主要就抓包做了简要介绍，详细的功能可以参看<a href=\"https://www.charlesproxy.com/documentation/tools/\" target=\"_blank\" rel=\"noopener\">Charles的完整使用文档</a>。</p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  3/53，每周一篇博，坚持！</p>\n<p>在实际工作的开发过程中，我们经常会遇到一些场景需要分析手机访问时的代码问题。这时候我们可以用Chrome提供的模拟手机功能，但有时候是无法模拟的，如请求涉及到了手机定位，这种情形我们只能使用手机端来请求才能获取到实际的请求参数。这时候一般我们都会动用抓包工具来将手机访问的请求代理到电脑上来。</p>\n<p>抓包工具有很多，Charles就是一款非常好用的抓包工具。本篇博文里就针对使用Charles来抓取手机端访问请求做一番简介。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>Charles的安装非常简单，可以直接访问<a href=\"https://www.charlesproxy.com/download/\" target=\"_blank\" rel=\"noopener\">Charles的官网下载页面</a>，选择合适自己操作系统的版本即可。Charles是收费软件，可以免费试用30天。试用期过后未付费用户仍然可以继续使用，但是每次使用超过30分钟后会需要关闭重启。这种引导付费的方案对大部分人来说还是非常友好的，即使你长期不付费也能使用完整的软件功能，30分钟的使用时长也应该能满足大部分人的使用需求了。<br>如果你出于各种原因，坚持要使用无任何”瑕疵”的版本，你可以选择付费，也可以自行搜索破解补丁。</p>","more":"<h2 id=\"Charles配置\"><a href=\"#Charles配置\" class=\"headerlink\" title=\"Charles配置\"></a>Charles配置</h2><p>安装完成后，Charles可以完成大部分的自动配置。需要用户自己配置的地方并不多。<br>手机端的设置部分需要自己设置一下：</p>\n<ol>\n<li>首先确保手机和电脑在一个局域网下。</li>\n<li>查看电脑的IP地址。这个有各种查看方法，可以通过点击Help-&gt;Local IP Address查看本机IP。</li>\n<li>打开Charles-&gt;Proxy-&gt;Proxy Setting菜单，调出Charles的代理设置。如图：<br><img src=\"http://wx3.sinaimg.cn/large/62d95157gy1fp94hcllkpj20x20sagot.jpg\" alt=\"\"><br>图示为默认的设置，如果同时需要代理socks请求，可以打开socks mode。</li>\n<li>打开手机的无线网络，找到连接的Wifi设置代理。通常是在高级设置的位置，不同手机操作细节不一。以我的手机为例：<br><img src=\"http://wx4.sinaimg.cn/large/62d95157gy1fp959s5praj20f00smdig.jpg\" alt=\"\"><br>设置代理方式为手动，填入代理服务器IP和端口，即上一步中查询的本地IP和端口。<br>如果你还是不会手动设置，你也可以采用Charles提供的自动设置方式：<br>在手机上打开链接：<code>https://chls.pro/X.X.X.X.pac</code>，其中X.X.X.X即为上述本机IP，如果你修改了默认端口，那么还需要指定端口：<code>https://chls.pro/X.X.X.X:XXXX.pac</code></li>\n<li>使用Charles抓包，现在手机访问任意一个程序试试，看看Charles的抓包是不是就生效了。<br><img src=\"http://wx4.sinaimg.cn/large/62d95157gy1fp95jybtjnj21om0uqn7g.jpg\" alt=\"\"></li>\n<li><p>通过截图可以看到有一些请求的前面有一个带锁的小图标，这个其实意思是请求是走的SSL请求，需要设置下SSL Proxy，否则是无法解析的。</p>\n<ul>\n<li>我们可以打开Proxy-&gt;SSL Proxy Settings，然后将目标地址配置进去，或者直接填写”*,443”<br><img src=\"http://wx3.sinaimg.cn/large/62d95157gy1fp95v71b6yj20wo0oadjp.jpg\" alt=\"\"><br>表示抓取任意网站的https请求。</li>\n<li>电脑端安装SSL证书<br><img src=\"https://upload-images.jianshu.io/upload_images/5337737-895a3736db7ce118.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/507\" alt=\"\"></li>\n<li>手机端安装证书<br><img src=\"https://upload-images.jianshu.io/upload_images/5337737-c17b7752efa93560.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/554\" alt=\"\"><br>弹出的对话框中会提示一个链接地址<code>chls.pro/ssl</code>，直接访问即可。</li>\n</ul>\n</li>\n<li>试一下抓取https吧。以笔者的<code>https://favlink.cn</code>为例：<br><img src=\"http://wx3.sinaimg.cn/large/62d95157gy1fp961hb9ghj21os0q4gsh.jpg\" alt=\"\"><br>完美！</li>\n<li>如果要修改某个请求参数，可以选中请求后点击菜单栏上钢笔形状的按钮即可修改请求执行。<br><img src=\"http://wx2.sinaimg.cn/large/62d95157gy1fp96f63fnqj225o0ks44o.jpg\" alt=\"\"></li>\n</ol>\n<p>如果在进行过程中，发现手机端连接不上Charles，可以看看防火墙是否关闭，防火墙如果开启会影响Charles的连接。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>除了抓包之外，Charles还有很多其他实用功能：重发请求、修改请求、模拟慢速网络、代理等。本篇主要就抓包做了简要介绍，详细的功能可以参看<a href=\"https://www.charlesproxy.com/documentation/tools/\" target=\"_blank\" rel=\"noopener\">Charles的完整使用文档</a>。</p>","sticky":0},{"title":"学习Chrome插件开发制作--简易去广告插件&自动修改url","date":"2015-09-15T11:58:30.000Z","show":true,"_content":"　　算不上什么高大上的玩意儿，只是记录下最近研究的Chrome扩展开发技术。了解的很还不够，不过爱因斯坦说过：\n>\"没有应用场景的学习都是扯淡！\" (爱因斯坦：我™没说过。。)☜☜\n\n# 背景\n　　了解灰度发布，A/B实验的同学应该都知道，很多时候在发布新版的时候都不是一蹴而就的，而是默认访问老版本，而将新版本向用户隐藏或是小流量放出，内部人员查看新版本时通常会有\"命中参数\"（即访问时传入相应的新版本参数可以强制命中新版）。\n　　然而，页面是有很多内部逻辑的，比如点击跳转之类，这种动作是不会自动将参数带上的，因此实际中面临的问题是经常需要来回复制黏贴参数，再考虑到初始访问的可能是静态页面（静态页面传递参数使用?param=value），跳转后可能是动态页面（动态页面传递参数使用&param=value）。这样来回复制黏贴起来就更加费事了。。\n　　在多次\"惨遭蹂躏\"后，开始琢磨是否可以有什么方式能够帮我完成判断页面是动态or静态然后自动添加参数的事情呢？\n\n<!--more-->\n\n# Chrome扩展\n　　利用Chrome的扩展功能，对页面注入js脚本即可。下面简单记录下整个扩展的编写过程。用到的点不是很多，基本上都是比较初级的功能，没办法，英语泪目啊。。官方的API文档360翻译过一份，[**戳这儿查看**](http://open.chrome.360.cn/extension_dev/overview.html)，然而实际开发过程中发现，不少的用法已经过时了，官方的文档[**戳这儿**](https://developer.chrome.com/extensions/getstarted)，纯英文例子还少。。基本当个手册有需要的时候上去查查，[**这儿**](https://github.com/GoogleChrome/chrome-app-samples)还有份官方的samples，可以借鉴参考。\n　　使用中通常会有两种场景，一种是注入后默默在后台运行就好了，\"默默无闻，我是人民好雷锋\"；还有一种就是需要你点击并弹出一个框框跟用户交互，\"存在感爆表\"。下面会以两个小例子来说明：简易的去广告插件--雷锋型，自动修改url--存在感型。\n\t\n# 一个扩展的基本结构\n　　Chrome的扩展说白了其实就是网页，也是由HTML，CSS，JS等文件构成，所不同的是这个网页需要和Chrome的API进行交互，需要遵循一定的基本准则。这个基本准则就是manifest.json文件，这个文件必不可少，里面定义了插件的基本信息。\n1. manifest.json\n2. popup.html(可选)(HTML+CSS)\n3. JS业务逻辑\n\n# 存在感型扩展--自动修改url添加实验参数\n## 清单文件\n```js\n{\n\t\"name\": \"自动添加实验参数\",\n\t\"version\": \"2.0\",\n\t\"manifest_version\": 2,               //此处必须是2\n\t\"description\": \"自动添加实验参数\",\n\t\"permissions\": [\"tabs\",\"storage\",\"notifications\"],\n\t\"icons\": {\n\t\t// \"16\": \"icon-16-coco.png\",\n\t\t// \"48\": \"48.png\",\n\t\t// \"128\": \"128.png\"\n\t},\n\t\"browser_action\": {\n\t\t// \"default_icon\": \"icon-16-coco.png\",\n\t\t\"default_popup\": \"popup.html\"\n\t},\n\t\"content_scripts\": [{\n\t\t\"run_at\":\"document_end\",\n\t\t\"matches\": [\"*://*.alibaba.com/*\",\"*://*.aliexpress.com/*\"],    \n\t\t\"js\": [\"jquery.min.js\", \"addParam.js\"]     //依序加载\n\t}]\n}\n```\n　　如上述定义信息，必须属性为name,version以及manifest_version。\n　　**name,version**不必赘述，指插件的名字和版本，manifest_version指清单文件即manifest.json文件格式的版本，在Chrome18后应该都是2了。\n　　**permissions**属性指定需要和Chrome交互的一些权限设置，如tab标签，storage本地存储以及notifications可以发送桌面通知等，另外一些跨域请求也需要将跨域的目的url写在此处。\n　　**icons**也没什么好说的了，就是指定插件的图标，不指定会由Chrome分配一个默认的。\n　　**browser_action**顾名思义是浏览器的一些工作，这里default_popup指定了点击扩展图标后弹出的窗口，上述雷锋型扩展就不需要指定该字段。\n　　**content_scripts**属性指明需要向页面注入的js脚本，run_at指明什么时候开始运行js，而matches则表明哪些场景下该扩展适用。\n\n　　我觉得这份清单文件才是扩展的核心所在，弄明白了这个写起来基本就没问题了，当然官方的属性多如牛毛。。\n\n## 业务代码\n　　搞定了清单文件，下面就是真正干活的业务代码了。\n　　为了将插件做的更通用一点，我们希望提供用户输入\"实验参数\"的功能，否则写死了的话只能用一次就嗝屁了。。因此我需要一个popup页面供用户输入实验参数，并且还需要将实验参数存储在浏览器本地，否则每打开一个页面都需要重复再输入一次\"实验参数\"这样就没法玩了。\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>点击自动添加实验参数</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./style.css\">\n    <script type=\"text/javascript\" src=\"jquery.min.js\"></script>\n</head>\n<body>\n    <div id=\"div1\">\n        <input type=\"text\" id=\"test_param\" value=\"\" placeholder=\"输入要添加的实验参数\">\n        <button id=\"btn\">确认</button>\n    </div>\n\t\n</body>\n<script type=\"text/javascript\" src=\"addParam.js\"></script>\n</html>\n```\n　　很简单，啥玩意儿也没有，就一个框一个按钮。值得说明的是，不像普通的html，扩展的js文件一定要使用外部引入方式，否则没法运行！\n\n　　核心的逻辑代码在js文件中，当然也是非常简单：\n```js\n(function addParam(){\n    $(\"#btn\").click(function() {\n        var buckettestValue = $(\"#test_param\").val();\n        chrome.storage.sync.remove(\"buckettestValue\");\n        chrome.storage.sync.set({\"buckettestValue\":buckettestValue},function(){\n            new Notification(\"Save ok.\",{body: \"保存成功.\"});\n        });\n        \n    });\n\n    console.log(\"start\");\n\n    chrome.storage.sync.get(\"buckettestValue\",function(result){\n        var curUrl = window.location.href;\n        if(!curUrl.match(/buckettest/)){\n            //已经添加实验参数的url不再添加\n            if(curUrl.match(/htm$|html$/) || !curUrl.match(/\\&/)){\n                window.location.href = curUrl + \"?buckettest=\" + result.buckettestValue;\n                console.log(\"静态url\");\n            }else {\n                window.location.href = curUrl + \"&buckettest=\" + result.buckettestValue;\n                console.log(\"动态url\");\n            }       \n        }\n        \n    })\n})();\n```\n　　`chrome.storage.sync`用来跟chrome交互，保存之前先清理下本地的存储，然后将用户输入的保存到本地。这个操作需要用户点击扩展按钮在popup页面进行操作，否则就直接读取本地已经保存的实验参数值通过判断页面静态动态来自动拼接url跳转访问。\n　　是不是很简单？只用到了两个API即完成了\"蹂躏\"我多时的问题。\n\n# 雷锋型扩展--简易去广告插件\n## 清单文件\n```js\n{\n    \"name\": \"清除页面广告\",\n    \"version\": \"2.0\",\n    \"manifest_version\": 2,\n    \"description\": \"简易制作的清除页面广告的chrome插件\",\n\t//\"permissions\" : [],\n    \"icons\": {\n        // \"16\": \"icon-16-coco.png\",\n        \"128\": \"128.png\"\n    },\n    \"browser_action\": {\n        // \"default_icon\": \"icon-16-coco.png\",\n        // \"default_popup\": \"popup.html\"\n    },\n    \"content_scripts\": [{\n    \t\"run_at\":\"document_end\",\n        \"matches\": [\"*://*/\", \"*://*/*\"],\n        \"js\": [\"jquery.min.js\", \"my-del-ad-script.js\"]\n    }]\n}\n```\n　　雷锋型扩展由于不需要跟用户交互，因此不需要**browser_action**属性，这款简易的去广告小插件也不需要使用Chrome的API或者是发送跨域请求因此我把**permissions**属性也去掉了。\n\n## 业务代码\n```js\n(function clearAd (argument) {\n    console.info(\"clear start\");\n\n    var ad_ids = [\n    \t//脚本之家\n    \t\"cproIframe2001holder\",\n    \t\"baidu300\",\n    \t\"cproIframe2002holder\",\n    \t\"art_1\",\n    \t\"art_2\",\n    \t\"art_3\",\n    \t\"tonglan1\",\n    \t\"con_all\",\n    \t\"logo_m\",\n    \t\"con_da2\",\n    \t//微博\n    \t\"v6_pl_content_biztips\",\n    \t\"v6_pl_rightmod_rank\",\n    \t\"v6_trustPagelet_recom_member\",\n    \t//baidu\n    \t\"5001\",\n    \t\"5002\"\n    ];\n\n    var ad_classes = [\n    \t\"art_bot_ad\",\n    \t\"tonglanad\",\n    \t\"sm\"\n    ];\n\n    $(document).ready(function(){\n\t    for(var i=0,len=ad_ids.length;i<len;i++){\n\t    \t$(\"#\" + ad_ids[i]).remove();\n\t    }\n\n\t    for(var i=0,len=ad_classes.length;i<len;i++){\n\t    \t$(\".\" + ad_classes[i]).remove();\n\t    }\n\n\t    //简单的广告智能预测\t\n\t    $(\"iframe\").hide();\n\t    $(\"div[id*='ad']\").not(\"div[id*='head']\").remove();\n\t    $(\"div[class*='ad']\").not(\"div[class*='head']\").remove();\n\t    if($(\"a:contains('推广链接')\").parent().parent().attr(\"id\").match(/content/)){\n\t    \t$(\"a:contains('推广链接')\").parent().hide()\n\t    }else{\n\t    \t$(\"a:contains('推广链接')\").parent().parent().hide();\n\t    }\n\t    \n    \tconsole.log(\"clear end\");\n    });\n})();\n```\n　　很简单的逻辑，把页面上是广告的元素去掉不展示，一开始做这个的目的只是为了干掉\"脚本之家\"的广告，百度搜索一些问题的时候经常会跳转到脚本之家，这网站做的简直就是，*\"广告比内容还多\"*，相信林子聪、屠龙宝刀什么的，见过的人也是不在少数了，挺醉人的。\n　　一个很明显的缺陷在于，不够通用。需要自己收集广告元素的id或class名，网上尝试搜索了下智能检测广告的方法，没get到什么东西。\n　　自己分析了几个网站，尝试着写了几个简单的广告智能预测的逻辑：\n　　1. 通常现在的网站大多数已经不使用内嵌iframe了，而多数的广告内容都是广告提供商提供内容，网站主将广告主提供的iframe内嵌入网页中。因此可以将网页中的iframe元素隐藏。当然这个存在一定的副作用：正常使用的iframe也会被误杀掉。\n　　2. 通过命名方式。通常广告内容的ic或class名都还是带有\"ad\"标志的，将带有\"ad\"标志的元素隐藏也能干掉一票广告。注意排除带有\"head\"的，否则就会误杀百度搜索框啦~~\n　　3. 还有一种情况是百度或者谷歌联盟的广告，通常都带有\"推广链接\"的链接标志，将其隐藏掉即可。\n\n　　作为一个简易的去广告插件，已经满足了我90%的日常上网去广告的需求。在智能检测广告算法的问题上，如果你有更好的想法可以跟我讨论，也可直接改代码，[**戳这上github**](https://github.com/zhangjh/practice/tree/master/chrome_ext)。\n\n# 开发者模式下安装插件\n　　直接上图：\n\t![](http://ww3.sinaimg.cn/mw690/62d95157gw1ew4cr3qbv6j20l102sglw.jpg)\n\n　　也可以打包成crx格式文件，拖动到浏览器里即可。\n\t![](http://ww3.sinaimg.cn/mw690/62d95157gw1ew4crd97glj20fh054t91.jpg)\n","source":"_posts/chrome-extension-learning.md","raw":"title: '学习Chrome插件开发制作--简易去广告插件&自动修改url'\ndate: 2015-09-15 19:58:30\ntags: [去广告,Chrome插件]\ncategories: 技术人生\nshow: true\n---\n　　算不上什么高大上的玩意儿，只是记录下最近研究的Chrome扩展开发技术。了解的很还不够，不过爱因斯坦说过：\n>\"没有应用场景的学习都是扯淡！\" (爱因斯坦：我™没说过。。)☜☜\n\n# 背景\n　　了解灰度发布，A/B实验的同学应该都知道，很多时候在发布新版的时候都不是一蹴而就的，而是默认访问老版本，而将新版本向用户隐藏或是小流量放出，内部人员查看新版本时通常会有\"命中参数\"（即访问时传入相应的新版本参数可以强制命中新版）。\n　　然而，页面是有很多内部逻辑的，比如点击跳转之类，这种动作是不会自动将参数带上的，因此实际中面临的问题是经常需要来回复制黏贴参数，再考虑到初始访问的可能是静态页面（静态页面传递参数使用?param=value），跳转后可能是动态页面（动态页面传递参数使用&param=value）。这样来回复制黏贴起来就更加费事了。。\n　　在多次\"惨遭蹂躏\"后，开始琢磨是否可以有什么方式能够帮我完成判断页面是动态or静态然后自动添加参数的事情呢？\n\n<!--more-->\n\n# Chrome扩展\n　　利用Chrome的扩展功能，对页面注入js脚本即可。下面简单记录下整个扩展的编写过程。用到的点不是很多，基本上都是比较初级的功能，没办法，英语泪目啊。。官方的API文档360翻译过一份，[**戳这儿查看**](http://open.chrome.360.cn/extension_dev/overview.html)，然而实际开发过程中发现，不少的用法已经过时了，官方的文档[**戳这儿**](https://developer.chrome.com/extensions/getstarted)，纯英文例子还少。。基本当个手册有需要的时候上去查查，[**这儿**](https://github.com/GoogleChrome/chrome-app-samples)还有份官方的samples，可以借鉴参考。\n　　使用中通常会有两种场景，一种是注入后默默在后台运行就好了，\"默默无闻，我是人民好雷锋\"；还有一种就是需要你点击并弹出一个框框跟用户交互，\"存在感爆表\"。下面会以两个小例子来说明：简易的去广告插件--雷锋型，自动修改url--存在感型。\n\t\n# 一个扩展的基本结构\n　　Chrome的扩展说白了其实就是网页，也是由HTML，CSS，JS等文件构成，所不同的是这个网页需要和Chrome的API进行交互，需要遵循一定的基本准则。这个基本准则就是manifest.json文件，这个文件必不可少，里面定义了插件的基本信息。\n1. manifest.json\n2. popup.html(可选)(HTML+CSS)\n3. JS业务逻辑\n\n# 存在感型扩展--自动修改url添加实验参数\n## 清单文件\n```js\n{\n\t\"name\": \"自动添加实验参数\",\n\t\"version\": \"2.0\",\n\t\"manifest_version\": 2,               //此处必须是2\n\t\"description\": \"自动添加实验参数\",\n\t\"permissions\": [\"tabs\",\"storage\",\"notifications\"],\n\t\"icons\": {\n\t\t// \"16\": \"icon-16-coco.png\",\n\t\t// \"48\": \"48.png\",\n\t\t// \"128\": \"128.png\"\n\t},\n\t\"browser_action\": {\n\t\t// \"default_icon\": \"icon-16-coco.png\",\n\t\t\"default_popup\": \"popup.html\"\n\t},\n\t\"content_scripts\": [{\n\t\t\"run_at\":\"document_end\",\n\t\t\"matches\": [\"*://*.alibaba.com/*\",\"*://*.aliexpress.com/*\"],    \n\t\t\"js\": [\"jquery.min.js\", \"addParam.js\"]     //依序加载\n\t}]\n}\n```\n　　如上述定义信息，必须属性为name,version以及manifest_version。\n　　**name,version**不必赘述，指插件的名字和版本，manifest_version指清单文件即manifest.json文件格式的版本，在Chrome18后应该都是2了。\n　　**permissions**属性指定需要和Chrome交互的一些权限设置，如tab标签，storage本地存储以及notifications可以发送桌面通知等，另外一些跨域请求也需要将跨域的目的url写在此处。\n　　**icons**也没什么好说的了，就是指定插件的图标，不指定会由Chrome分配一个默认的。\n　　**browser_action**顾名思义是浏览器的一些工作，这里default_popup指定了点击扩展图标后弹出的窗口，上述雷锋型扩展就不需要指定该字段。\n　　**content_scripts**属性指明需要向页面注入的js脚本，run_at指明什么时候开始运行js，而matches则表明哪些场景下该扩展适用。\n\n　　我觉得这份清单文件才是扩展的核心所在，弄明白了这个写起来基本就没问题了，当然官方的属性多如牛毛。。\n\n## 业务代码\n　　搞定了清单文件，下面就是真正干活的业务代码了。\n　　为了将插件做的更通用一点，我们希望提供用户输入\"实验参数\"的功能，否则写死了的话只能用一次就嗝屁了。。因此我需要一个popup页面供用户输入实验参数，并且还需要将实验参数存储在浏览器本地，否则每打开一个页面都需要重复再输入一次\"实验参数\"这样就没法玩了。\n```js\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>点击自动添加实验参数</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./style.css\">\n    <script type=\"text/javascript\" src=\"jquery.min.js\"></script>\n</head>\n<body>\n    <div id=\"div1\">\n        <input type=\"text\" id=\"test_param\" value=\"\" placeholder=\"输入要添加的实验参数\">\n        <button id=\"btn\">确认</button>\n    </div>\n\t\n</body>\n<script type=\"text/javascript\" src=\"addParam.js\"></script>\n</html>\n```\n　　很简单，啥玩意儿也没有，就一个框一个按钮。值得说明的是，不像普通的html，扩展的js文件一定要使用外部引入方式，否则没法运行！\n\n　　核心的逻辑代码在js文件中，当然也是非常简单：\n```js\n(function addParam(){\n    $(\"#btn\").click(function() {\n        var buckettestValue = $(\"#test_param\").val();\n        chrome.storage.sync.remove(\"buckettestValue\");\n        chrome.storage.sync.set({\"buckettestValue\":buckettestValue},function(){\n            new Notification(\"Save ok.\",{body: \"保存成功.\"});\n        });\n        \n    });\n\n    console.log(\"start\");\n\n    chrome.storage.sync.get(\"buckettestValue\",function(result){\n        var curUrl = window.location.href;\n        if(!curUrl.match(/buckettest/)){\n            //已经添加实验参数的url不再添加\n            if(curUrl.match(/htm$|html$/) || !curUrl.match(/\\&/)){\n                window.location.href = curUrl + \"?buckettest=\" + result.buckettestValue;\n                console.log(\"静态url\");\n            }else {\n                window.location.href = curUrl + \"&buckettest=\" + result.buckettestValue;\n                console.log(\"动态url\");\n            }       \n        }\n        \n    })\n})();\n```\n　　`chrome.storage.sync`用来跟chrome交互，保存之前先清理下本地的存储，然后将用户输入的保存到本地。这个操作需要用户点击扩展按钮在popup页面进行操作，否则就直接读取本地已经保存的实验参数值通过判断页面静态动态来自动拼接url跳转访问。\n　　是不是很简单？只用到了两个API即完成了\"蹂躏\"我多时的问题。\n\n# 雷锋型扩展--简易去广告插件\n## 清单文件\n```js\n{\n    \"name\": \"清除页面广告\",\n    \"version\": \"2.0\",\n    \"manifest_version\": 2,\n    \"description\": \"简易制作的清除页面广告的chrome插件\",\n\t//\"permissions\" : [],\n    \"icons\": {\n        // \"16\": \"icon-16-coco.png\",\n        \"128\": \"128.png\"\n    },\n    \"browser_action\": {\n        // \"default_icon\": \"icon-16-coco.png\",\n        // \"default_popup\": \"popup.html\"\n    },\n    \"content_scripts\": [{\n    \t\"run_at\":\"document_end\",\n        \"matches\": [\"*://*/\", \"*://*/*\"],\n        \"js\": [\"jquery.min.js\", \"my-del-ad-script.js\"]\n    }]\n}\n```\n　　雷锋型扩展由于不需要跟用户交互，因此不需要**browser_action**属性，这款简易的去广告小插件也不需要使用Chrome的API或者是发送跨域请求因此我把**permissions**属性也去掉了。\n\n## 业务代码\n```js\n(function clearAd (argument) {\n    console.info(\"clear start\");\n\n    var ad_ids = [\n    \t//脚本之家\n    \t\"cproIframe2001holder\",\n    \t\"baidu300\",\n    \t\"cproIframe2002holder\",\n    \t\"art_1\",\n    \t\"art_2\",\n    \t\"art_3\",\n    \t\"tonglan1\",\n    \t\"con_all\",\n    \t\"logo_m\",\n    \t\"con_da2\",\n    \t//微博\n    \t\"v6_pl_content_biztips\",\n    \t\"v6_pl_rightmod_rank\",\n    \t\"v6_trustPagelet_recom_member\",\n    \t//baidu\n    \t\"5001\",\n    \t\"5002\"\n    ];\n\n    var ad_classes = [\n    \t\"art_bot_ad\",\n    \t\"tonglanad\",\n    \t\"sm\"\n    ];\n\n    $(document).ready(function(){\n\t    for(var i=0,len=ad_ids.length;i<len;i++){\n\t    \t$(\"#\" + ad_ids[i]).remove();\n\t    }\n\n\t    for(var i=0,len=ad_classes.length;i<len;i++){\n\t    \t$(\".\" + ad_classes[i]).remove();\n\t    }\n\n\t    //简单的广告智能预测\t\n\t    $(\"iframe\").hide();\n\t    $(\"div[id*='ad']\").not(\"div[id*='head']\").remove();\n\t    $(\"div[class*='ad']\").not(\"div[class*='head']\").remove();\n\t    if($(\"a:contains('推广链接')\").parent().parent().attr(\"id\").match(/content/)){\n\t    \t$(\"a:contains('推广链接')\").parent().hide()\n\t    }else{\n\t    \t$(\"a:contains('推广链接')\").parent().parent().hide();\n\t    }\n\t    \n    \tconsole.log(\"clear end\");\n    });\n})();\n```\n　　很简单的逻辑，把页面上是广告的元素去掉不展示，一开始做这个的目的只是为了干掉\"脚本之家\"的广告，百度搜索一些问题的时候经常会跳转到脚本之家，这网站做的简直就是，*\"广告比内容还多\"*，相信林子聪、屠龙宝刀什么的，见过的人也是不在少数了，挺醉人的。\n　　一个很明显的缺陷在于，不够通用。需要自己收集广告元素的id或class名，网上尝试搜索了下智能检测广告的方法，没get到什么东西。\n　　自己分析了几个网站，尝试着写了几个简单的广告智能预测的逻辑：\n　　1. 通常现在的网站大多数已经不使用内嵌iframe了，而多数的广告内容都是广告提供商提供内容，网站主将广告主提供的iframe内嵌入网页中。因此可以将网页中的iframe元素隐藏。当然这个存在一定的副作用：正常使用的iframe也会被误杀掉。\n　　2. 通过命名方式。通常广告内容的ic或class名都还是带有\"ad\"标志的，将带有\"ad\"标志的元素隐藏也能干掉一票广告。注意排除带有\"head\"的，否则就会误杀百度搜索框啦~~\n　　3. 还有一种情况是百度或者谷歌联盟的广告，通常都带有\"推广链接\"的链接标志，将其隐藏掉即可。\n\n　　作为一个简易的去广告插件，已经满足了我90%的日常上网去广告的需求。在智能检测广告算法的问题上，如果你有更好的想法可以跟我讨论，也可直接改代码，[**戳这上github**](https://github.com/zhangjh/practice/tree/master/chrome_ext)。\n\n# 开发者模式下安装插件\n　　直接上图：\n\t![](http://ww3.sinaimg.cn/mw690/62d95157gw1ew4cr3qbv6j20l102sglw.jpg)\n\n　　也可以打包成crx格式文件，拖动到浏览器里即可。\n\t![](http://ww3.sinaimg.cn/mw690/62d95157gw1ew4crd97glj20fh054t91.jpg)\n","slug":"chrome-extension-learning","published":1,"updated":"2018-10-19T18:30:07.977Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyztg0013fnpvp0uzsjxa","content":"<p>　　算不上什么高大上的玩意儿，只是记录下最近研究的Chrome扩展开发技术。了解的很还不够，不过爱因斯坦说过：</p>\n<blockquote>\n<p>“没有应用场景的学习都是扯淡！” (爱因斯坦：我™没说过。。)☜☜</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>　　了解灰度发布，A/B实验的同学应该都知道，很多时候在发布新版的时候都不是一蹴而就的，而是默认访问老版本，而将新版本向用户隐藏或是小流量放出，内部人员查看新版本时通常会有”命中参数”（即访问时传入相应的新版本参数可以强制命中新版）。<br>　　然而，页面是有很多内部逻辑的，比如点击跳转之类，这种动作是不会自动将参数带上的，因此实际中面临的问题是经常需要来回复制黏贴参数，再考虑到初始访问的可能是静态页面（静态页面传递参数使用?param=value），跳转后可能是动态页面（动态页面传递参数使用&amp;param=value）。这样来回复制黏贴起来就更加费事了。。<br>　　在多次”惨遭蹂躏”后，开始琢磨是否可以有什么方式能够帮我完成判断页面是动态or静态然后自动添加参数的事情呢？</p>\n<a id=\"more\"></a>\n<h1 id=\"Chrome扩展\"><a href=\"#Chrome扩展\" class=\"headerlink\" title=\"Chrome扩展\"></a>Chrome扩展</h1><p>　　利用Chrome的扩展功能，对页面注入js脚本即可。下面简单记录下整个扩展的编写过程。用到的点不是很多，基本上都是比较初级的功能，没办法，英语泪目啊。。官方的API文档360翻译过一份，<a href=\"http://open.chrome.360.cn/extension_dev/overview.html\" target=\"_blank\" rel=\"noopener\"><strong>戳这儿查看</strong></a>，然而实际开发过程中发现，不少的用法已经过时了，官方的文档<a href=\"https://developer.chrome.com/extensions/getstarted\" target=\"_blank\" rel=\"noopener\"><strong>戳这儿</strong></a>，纯英文例子还少。。基本当个手册有需要的时候上去查查，<a href=\"https://github.com/GoogleChrome/chrome-app-samples\" target=\"_blank\" rel=\"noopener\"><strong>这儿</strong></a>还有份官方的samples，可以借鉴参考。<br>　　使用中通常会有两种场景，一种是注入后默默在后台运行就好了，”默默无闻，我是人民好雷锋”；还有一种就是需要你点击并弹出一个框框跟用户交互，”存在感爆表”。下面会以两个小例子来说明：简易的去广告插件–雷锋型，自动修改url–存在感型。</p>\n<h1 id=\"一个扩展的基本结构\"><a href=\"#一个扩展的基本结构\" class=\"headerlink\" title=\"一个扩展的基本结构\"></a>一个扩展的基本结构</h1><p>　　Chrome的扩展说白了其实就是网页，也是由HTML，CSS，JS等文件构成，所不同的是这个网页需要和Chrome的API进行交互，需要遵循一定的基本准则。这个基本准则就是manifest.json文件，这个文件必不可少，里面定义了插件的基本信息。</p>\n<ol>\n<li>manifest.json</li>\n<li>popup.html(可选)(HTML+CSS)</li>\n<li>JS业务逻辑</li>\n</ol>\n<h1 id=\"存在感型扩展–自动修改url添加实验参数\"><a href=\"#存在感型扩展–自动修改url添加实验参数\" class=\"headerlink\" title=\"存在感型扩展–自动修改url添加实验参数\"></a>存在感型扩展–自动修改url添加实验参数</h1><h2 id=\"清单文件\"><a href=\"#清单文件\" class=\"headerlink\" title=\"清单文件\"></a>清单文件</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"自动添加实验参数\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"version\"</span>: <span class=\"string\">\"2.0\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"manifest_version\"</span>: <span class=\"number\">2</span>,               <span class=\"comment\">//此处必须是2</span></span><br><span class=\"line\">\t<span class=\"string\">\"description\"</span>: <span class=\"string\">\"自动添加实验参数\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"permissions\"</span>: [<span class=\"string\">\"tabs\"</span>,<span class=\"string\">\"storage\"</span>,<span class=\"string\">\"notifications\"</span>],</span><br><span class=\"line\">\t<span class=\"string\">\"icons\"</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// \"16\": \"icon-16-coco.png\",</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// \"48\": \"48.png\",</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// \"128\": \"128.png\"</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">\"browser_action\"</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// \"default_icon\": \"icon-16-coco.png\",</span></span><br><span class=\"line\">\t\t<span class=\"string\">\"default_popup\"</span>: <span class=\"string\">\"popup.html\"</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">\"content_scripts\"</span>: [&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">\"run_at\"</span>:<span class=\"string\">\"document_end\"</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">\"matches\"</span>: [<span class=\"string\">\"*://*.alibaba.com/*\"</span>,<span class=\"string\">\"*://*.aliexpress.com/*\"</span>],    </span><br><span class=\"line\">\t\t<span class=\"string\">\"js\"</span>: [<span class=\"string\">\"jquery.min.js\"</span>, <span class=\"string\">\"addParam.js\"</span>]     <span class=\"comment\">//依序加载</span></span><br><span class=\"line\">\t&#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　如上述定义信息，必须属性为name,version以及manifest_version。<br>　　<strong>name,version</strong>不必赘述，指插件的名字和版本，manifest_version指清单文件即manifest.json文件格式的版本，在Chrome18后应该都是2了。<br>　　<strong>permissions</strong>属性指定需要和Chrome交互的一些权限设置，如tab标签，storage本地存储以及notifications可以发送桌面通知等，另外一些跨域请求也需要将跨域的目的url写在此处。<br>　　<strong>icons</strong>也没什么好说的了，就是指定插件的图标，不指定会由Chrome分配一个默认的。<br>　　<strong>browser_action</strong>顾名思义是浏览器的一些工作，这里default_popup指定了点击扩展图标后弹出的窗口，上述雷锋型扩展就不需要指定该字段。<br>　　<strong>content_scripts</strong>属性指明需要向页面注入的js脚本，run_at指明什么时候开始运行js，而matches则表明哪些场景下该扩展适用。</p>\n<p>　　我觉得这份清单文件才是扩展的核心所在，弄明白了这个写起来基本就没问题了，当然官方的属性多如牛毛。。</p>\n<h2 id=\"业务代码\"><a href=\"#业务代码\" class=\"headerlink\" title=\"业务代码\"></a>业务代码</h2><p>　　搞定了清单文件，下面就是真正干活的业务代码了。<br>　　为了将插件做的更通用一点，我们希望提供用户输入”实验参数”的功能，否则写死了的话只能用一次就嗝屁了。。因此我需要一个popup页面供用户输入实验参数，并且还需要将实验参数存储在浏览器本地，否则每打开一个页面都需要重复再输入一次”实验参数”这样就没法玩了。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;点击自动添加实验参数&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;link rel=\"stylesheet\" type=\"text/</span>css<span class=\"string\">\" href=\"</span>./style.css<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;script type=\"</span>text/javascript<span class=\"string\">\" src=\"</span>jquery.min.js<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div id=\"</span>div1<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;input type=\"</span>text<span class=\"string\">\" id=\"</span>test_param<span class=\"string\">\" value=\"</span><span class=\"string\">\" placeholder=\"</span>输入要添加的实验参数<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button id=\"</span>btn<span class=\"string\">\"&gt;确认&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t</span></span><br><span class=\"line\"><span class=\"string\">&lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;script type=\"</span>text/javascript<span class=\"string\">\" src=\"</span>addParam.js<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>　　很简单，啥玩意儿也没有，就一个框一个按钮。值得说明的是，不像普通的html，扩展的js文件一定要使用外部引入方式，否则没法运行！</p>\n<p>　　核心的逻辑代码在js文件中，当然也是非常简单：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addParam</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#btn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> buckettestValue = $(<span class=\"string\">\"#test_param\"</span>).val();</span><br><span class=\"line\">        chrome.storage.sync.remove(<span class=\"string\">\"buckettestValue\"</span>);</span><br><span class=\"line\">        chrome.storage.sync.set(&#123;<span class=\"string\">\"buckettestValue\"</span>:buckettestValue&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Notification(<span class=\"string\">\"Save ok.\"</span>,&#123;<span class=\"attr\">body</span>: <span class=\"string\">\"保存成功.\"</span>&#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"start\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    chrome.storage.sync.get(<span class=\"string\">\"buckettestValue\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> curUrl = <span class=\"built_in\">window</span>.location.href;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!curUrl.match(<span class=\"regexp\">/buckettest/</span>))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//已经添加实验参数的url不再添加</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(curUrl.match(<span class=\"regexp\">/htm$|html$/</span>) || !curUrl.match(<span class=\"regexp\">/\\&amp;/</span>))&#123;</span><br><span class=\"line\">                <span class=\"built_in\">window</span>.location.href = curUrl + <span class=\"string\">\"?buckettest=\"</span> + result.buckettestValue;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"静态url\"</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">window</span>.location.href = curUrl + <span class=\"string\">\"&amp;buckettest=\"</span> + result.buckettestValue;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"动态url\"</span>);</span><br><span class=\"line\">            &#125;       </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>　　<code>chrome.storage.sync</code>用来跟chrome交互，保存之前先清理下本地的存储，然后将用户输入的保存到本地。这个操作需要用户点击扩展按钮在popup页面进行操作，否则就直接读取本地已经保存的实验参数值通过判断页面静态动态来自动拼接url跳转访问。<br>　　是不是很简单？只用到了两个API即完成了”蹂躏”我多时的问题。</p>\n<h1 id=\"雷锋型扩展–简易去广告插件\"><a href=\"#雷锋型扩展–简易去广告插件\" class=\"headerlink\" title=\"雷锋型扩展–简易去广告插件\"></a>雷锋型扩展–简易去广告插件</h1><h2 id=\"清单文件-1\"><a href=\"#清单文件-1\" class=\"headerlink\" title=\"清单文件\"></a>清单文件</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"清除页面广告\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"version\"</span>: <span class=\"string\">\"2.0\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"manifest_version\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">\"description\"</span>: <span class=\"string\">\"简易制作的清除页面广告的chrome插件\"</span>,</span><br><span class=\"line\">\t<span class=\"comment\">//\"permissions\" : [],</span></span><br><span class=\"line\">    <span class=\"string\">\"icons\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// \"16\": \"icon-16-coco.png\",</span></span><br><span class=\"line\">        <span class=\"string\">\"128\"</span>: <span class=\"string\">\"128.png\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"browser_action\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// \"default_icon\": \"icon-16-coco.png\",</span></span><br><span class=\"line\">        <span class=\"comment\">// \"default_popup\": \"popup.html\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"content_scripts\"</span>: [&#123;</span><br><span class=\"line\">    \t<span class=\"string\">\"run_at\"</span>:<span class=\"string\">\"document_end\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"matches\"</span>: [<span class=\"string\">\"*://*/\"</span>, <span class=\"string\">\"*://*/*\"</span>],</span><br><span class=\"line\">        <span class=\"string\">\"js\"</span>: [<span class=\"string\">\"jquery.min.js\"</span>, <span class=\"string\">\"my-del-ad-script.js\"</span>]</span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　雷锋型扩展由于不需要跟用户交互，因此不需要<strong>browser_action</strong>属性，这款简易的去广告小插件也不需要使用Chrome的API或者是发送跨域请求因此我把<strong>permissions</strong>属性也去掉了。</p>\n<h2 id=\"业务代码-1\"><a href=\"#业务代码-1\" class=\"headerlink\" title=\"业务代码\"></a>业务代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clearAd</span> (<span class=\"params\">argument</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(<span class=\"string\">\"clear start\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ad_ids = [</span><br><span class=\"line\">    \t<span class=\"comment\">//脚本之家</span></span><br><span class=\"line\">    \t<span class=\"string\">\"cproIframe2001holder\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"baidu300\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"cproIframe2002holder\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"art_1\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"art_2\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"art_3\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"tonglan1\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"con_all\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"logo_m\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"con_da2\"</span>,</span><br><span class=\"line\">    \t<span class=\"comment\">//微博</span></span><br><span class=\"line\">    \t<span class=\"string\">\"v6_pl_content_biztips\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"v6_pl_rightmod_rank\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"v6_trustPagelet_recom_member\"</span>,</span><br><span class=\"line\">    \t<span class=\"comment\">//baidu</span></span><br><span class=\"line\">    \t<span class=\"string\">\"5001\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"5002\"</span></span><br><span class=\"line\">    ];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ad_classes = [</span><br><span class=\"line\">    \t<span class=\"string\">\"art_bot_ad\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"tonglanad\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"sm\"</span></span><br><span class=\"line\">    ];</span><br><span class=\"line\"></span><br><span class=\"line\">    $(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=ad_ids.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">\t    \t$(<span class=\"string\">\"#\"</span> + ad_ids[i]).remove();</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=ad_classes.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">\t    \t$(<span class=\"string\">\".\"</span> + ad_classes[i]).remove();</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    <span class=\"comment\">//简单的广告智能预测\t</span></span><br><span class=\"line\">\t    $(<span class=\"string\">\"iframe\"</span>).hide();</span><br><span class=\"line\">\t    $(<span class=\"string\">\"div[id*='ad']\"</span>).not(<span class=\"string\">\"div[id*='head']\"</span>).remove();</span><br><span class=\"line\">\t    $(<span class=\"string\">\"div[class*='ad']\"</span>).not(<span class=\"string\">\"div[class*='head']\"</span>).remove();</span><br><span class=\"line\">\t    <span class=\"keyword\">if</span>($(<span class=\"string\">\"a:contains('推广链接')\"</span>).parent().parent().attr(<span class=\"string\">\"id\"</span>).match(<span class=\"regexp\">/content/</span>))&#123;</span><br><span class=\"line\">\t    \t$(<span class=\"string\">\"a:contains('推广链接')\"</span>).parent().hide()</span><br><span class=\"line\">\t    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t    \t$(<span class=\"string\">\"a:contains('推广链接')\"</span>).parent().parent().hide();</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t    </span><br><span class=\"line\">    \t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"clear end\"</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>　　很简单的逻辑，把页面上是广告的元素去掉不展示，一开始做这个的目的只是为了干掉”脚本之家”的广告，百度搜索一些问题的时候经常会跳转到脚本之家，这网站做的简直就是，<em>“广告比内容还多”</em>，相信林子聪、屠龙宝刀什么的，见过的人也是不在少数了，挺醉人的。<br>　　一个很明显的缺陷在于，不够通用。需要自己收集广告元素的id或class名，网上尝试搜索了下智能检测广告的方法，没get到什么东西。<br>　　自己分析了几个网站，尝试着写了几个简单的广告智能预测的逻辑：<br>　　1. 通常现在的网站大多数已经不使用内嵌iframe了，而多数的广告内容都是广告提供商提供内容，网站主将广告主提供的iframe内嵌入网页中。因此可以将网页中的iframe元素隐藏。当然这个存在一定的副作用：正常使用的iframe也会被误杀掉。<br>　　2. 通过命名方式。通常广告内容的ic或class名都还是带有”ad”标志的，将带有”ad”标志的元素隐藏也能干掉一票广告。注意排除带有”head”的，否则就会误杀百度搜索框啦~~<br>　　3. 还有一种情况是百度或者谷歌联盟的广告，通常都带有”推广链接”的链接标志，将其隐藏掉即可。</p>\n<p>　　作为一个简易的去广告插件，已经满足了我90%的日常上网去广告的需求。在智能检测广告算法的问题上，如果你有更好的想法可以跟我讨论，也可直接改代码，<a href=\"https://github.com/zhangjh/practice/tree/master/chrome_ext\" target=\"_blank\" rel=\"noopener\"><strong>戳这上github</strong></a>。</p>\n<h1 id=\"开发者模式下安装插件\"><a href=\"#开发者模式下安装插件\" class=\"headerlink\" title=\"开发者模式下安装插件\"></a>开发者模式下安装插件</h1><p>　　直接上图：<br>    <img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1ew4cr3qbv6j20l102sglw.jpg\" alt=\"\"></p>\n<p>　　也可以打包成crx格式文件，拖动到浏览器里即可。<br>    <img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1ew4crd97glj20fh054t91.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>　　算不上什么高大上的玩意儿，只是记录下最近研究的Chrome扩展开发技术。了解的很还不够，不过爱因斯坦说过：</p>\n<blockquote>\n<p>“没有应用场景的学习都是扯淡！” (爱因斯坦：我™没说过。。)☜☜</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>　　了解灰度发布，A/B实验的同学应该都知道，很多时候在发布新版的时候都不是一蹴而就的，而是默认访问老版本，而将新版本向用户隐藏或是小流量放出，内部人员查看新版本时通常会有”命中参数”（即访问时传入相应的新版本参数可以强制命中新版）。<br>　　然而，页面是有很多内部逻辑的，比如点击跳转之类，这种动作是不会自动将参数带上的，因此实际中面临的问题是经常需要来回复制黏贴参数，再考虑到初始访问的可能是静态页面（静态页面传递参数使用?param=value），跳转后可能是动态页面（动态页面传递参数使用&amp;param=value）。这样来回复制黏贴起来就更加费事了。。<br>　　在多次”惨遭蹂躏”后，开始琢磨是否可以有什么方式能够帮我完成判断页面是动态or静态然后自动添加参数的事情呢？</p>","more":"<h1 id=\"Chrome扩展\"><a href=\"#Chrome扩展\" class=\"headerlink\" title=\"Chrome扩展\"></a>Chrome扩展</h1><p>　　利用Chrome的扩展功能，对页面注入js脚本即可。下面简单记录下整个扩展的编写过程。用到的点不是很多，基本上都是比较初级的功能，没办法，英语泪目啊。。官方的API文档360翻译过一份，<a href=\"http://open.chrome.360.cn/extension_dev/overview.html\" target=\"_blank\" rel=\"noopener\"><strong>戳这儿查看</strong></a>，然而实际开发过程中发现，不少的用法已经过时了，官方的文档<a href=\"https://developer.chrome.com/extensions/getstarted\" target=\"_blank\" rel=\"noopener\"><strong>戳这儿</strong></a>，纯英文例子还少。。基本当个手册有需要的时候上去查查，<a href=\"https://github.com/GoogleChrome/chrome-app-samples\" target=\"_blank\" rel=\"noopener\"><strong>这儿</strong></a>还有份官方的samples，可以借鉴参考。<br>　　使用中通常会有两种场景，一种是注入后默默在后台运行就好了，”默默无闻，我是人民好雷锋”；还有一种就是需要你点击并弹出一个框框跟用户交互，”存在感爆表”。下面会以两个小例子来说明：简易的去广告插件–雷锋型，自动修改url–存在感型。</p>\n<h1 id=\"一个扩展的基本结构\"><a href=\"#一个扩展的基本结构\" class=\"headerlink\" title=\"一个扩展的基本结构\"></a>一个扩展的基本结构</h1><p>　　Chrome的扩展说白了其实就是网页，也是由HTML，CSS，JS等文件构成，所不同的是这个网页需要和Chrome的API进行交互，需要遵循一定的基本准则。这个基本准则就是manifest.json文件，这个文件必不可少，里面定义了插件的基本信息。</p>\n<ol>\n<li>manifest.json</li>\n<li>popup.html(可选)(HTML+CSS)</li>\n<li>JS业务逻辑</li>\n</ol>\n<h1 id=\"存在感型扩展–自动修改url添加实验参数\"><a href=\"#存在感型扩展–自动修改url添加实验参数\" class=\"headerlink\" title=\"存在感型扩展–自动修改url添加实验参数\"></a>存在感型扩展–自动修改url添加实验参数</h1><h2 id=\"清单文件\"><a href=\"#清单文件\" class=\"headerlink\" title=\"清单文件\"></a>清单文件</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"自动添加实验参数\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"version\"</span>: <span class=\"string\">\"2.0\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"manifest_version\"</span>: <span class=\"number\">2</span>,               <span class=\"comment\">//此处必须是2</span></span><br><span class=\"line\">\t<span class=\"string\">\"description\"</span>: <span class=\"string\">\"自动添加实验参数\"</span>,</span><br><span class=\"line\">\t<span class=\"string\">\"permissions\"</span>: [<span class=\"string\">\"tabs\"</span>,<span class=\"string\">\"storage\"</span>,<span class=\"string\">\"notifications\"</span>],</span><br><span class=\"line\">\t<span class=\"string\">\"icons\"</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// \"16\": \"icon-16-coco.png\",</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// \"48\": \"48.png\",</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// \"128\": \"128.png\"</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">\"browser_action\"</span>: &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// \"default_icon\": \"icon-16-coco.png\",</span></span><br><span class=\"line\">\t\t<span class=\"string\">\"default_popup\"</span>: <span class=\"string\">\"popup.html\"</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">\"content_scripts\"</span>: [&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">\"run_at\"</span>:<span class=\"string\">\"document_end\"</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">\"matches\"</span>: [<span class=\"string\">\"*://*.alibaba.com/*\"</span>,<span class=\"string\">\"*://*.aliexpress.com/*\"</span>],    </span><br><span class=\"line\">\t\t<span class=\"string\">\"js\"</span>: [<span class=\"string\">\"jquery.min.js\"</span>, <span class=\"string\">\"addParam.js\"</span>]     <span class=\"comment\">//依序加载</span></span><br><span class=\"line\">\t&#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　如上述定义信息，必须属性为name,version以及manifest_version。<br>　　<strong>name,version</strong>不必赘述，指插件的名字和版本，manifest_version指清单文件即manifest.json文件格式的版本，在Chrome18后应该都是2了。<br>　　<strong>permissions</strong>属性指定需要和Chrome交互的一些权限设置，如tab标签，storage本地存储以及notifications可以发送桌面通知等，另外一些跨域请求也需要将跨域的目的url写在此处。<br>　　<strong>icons</strong>也没什么好说的了，就是指定插件的图标，不指定会由Chrome分配一个默认的。<br>　　<strong>browser_action</strong>顾名思义是浏览器的一些工作，这里default_popup指定了点击扩展图标后弹出的窗口，上述雷锋型扩展就不需要指定该字段。<br>　　<strong>content_scripts</strong>属性指明需要向页面注入的js脚本，run_at指明什么时候开始运行js，而matches则表明哪些场景下该扩展适用。</p>\n<p>　　我觉得这份清单文件才是扩展的核心所在，弄明白了这个写起来基本就没问题了，当然官方的属性多如牛毛。。</p>\n<h2 id=\"业务代码\"><a href=\"#业务代码\" class=\"headerlink\" title=\"业务代码\"></a>业务代码</h2><p>　　搞定了清单文件，下面就是真正干活的业务代码了。<br>　　为了将插件做的更通用一点，我们希望提供用户输入”实验参数”的功能，否则写死了的话只能用一次就嗝屁了。。因此我需要一个popup页面供用户输入实验参数，并且还需要将实验参数存储在浏览器本地，否则每打开一个页面都需要重复再输入一次”实验参数”这样就没法玩了。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">\"en\"</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;点击自动添加实验参数&lt;<span class=\"regexp\">/title&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;link rel=\"stylesheet\" type=\"text/</span>css<span class=\"string\">\" href=\"</span>./style.css<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;script type=\"</span>text/javascript<span class=\"string\">\" src=\"</span>jquery.min.js<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;body&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div id=\"</span>div1<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;input type=\"</span>text<span class=\"string\">\" id=\"</span>test_param<span class=\"string\">\" value=\"</span><span class=\"string\">\" placeholder=\"</span>输入要添加的实验参数<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;button id=\"</span>btn<span class=\"string\">\"&gt;确认&lt;/button&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t</span></span><br><span class=\"line\"><span class=\"string\">&lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;script type=\"</span>text/javascript<span class=\"string\">\" src=\"</span>addParam.js<span class=\"string\">\"&gt;&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>　　很简单，啥玩意儿也没有，就一个框一个按钮。值得说明的是，不像普通的html，扩展的js文件一定要使用外部引入方式，否则没法运行！</p>\n<p>　　核心的逻辑代码在js文件中，当然也是非常简单：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addParam</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#btn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> buckettestValue = $(<span class=\"string\">\"#test_param\"</span>).val();</span><br><span class=\"line\">        chrome.storage.sync.remove(<span class=\"string\">\"buckettestValue\"</span>);</span><br><span class=\"line\">        chrome.storage.sync.set(&#123;<span class=\"string\">\"buckettestValue\"</span>:buckettestValue&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Notification(<span class=\"string\">\"Save ok.\"</span>,&#123;<span class=\"attr\">body</span>: <span class=\"string\">\"保存成功.\"</span>&#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"start\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    chrome.storage.sync.get(<span class=\"string\">\"buckettestValue\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> curUrl = <span class=\"built_in\">window</span>.location.href;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!curUrl.match(<span class=\"regexp\">/buckettest/</span>))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//已经添加实验参数的url不再添加</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(curUrl.match(<span class=\"regexp\">/htm$|html$/</span>) || !curUrl.match(<span class=\"regexp\">/\\&amp;/</span>))&#123;</span><br><span class=\"line\">                <span class=\"built_in\">window</span>.location.href = curUrl + <span class=\"string\">\"?buckettest=\"</span> + result.buckettestValue;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"静态url\"</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">window</span>.location.href = curUrl + <span class=\"string\">\"&amp;buckettest=\"</span> + result.buckettestValue;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"动态url\"</span>);</span><br><span class=\"line\">            &#125;       </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>　　<code>chrome.storage.sync</code>用来跟chrome交互，保存之前先清理下本地的存储，然后将用户输入的保存到本地。这个操作需要用户点击扩展按钮在popup页面进行操作，否则就直接读取本地已经保存的实验参数值通过判断页面静态动态来自动拼接url跳转访问。<br>　　是不是很简单？只用到了两个API即完成了”蹂躏”我多时的问题。</p>\n<h1 id=\"雷锋型扩展–简易去广告插件\"><a href=\"#雷锋型扩展–简易去广告插件\" class=\"headerlink\" title=\"雷锋型扩展–简易去广告插件\"></a>雷锋型扩展–简易去广告插件</h1><h2 id=\"清单文件-1\"><a href=\"#清单文件-1\" class=\"headerlink\" title=\"清单文件\"></a>清单文件</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"清除页面广告\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"version\"</span>: <span class=\"string\">\"2.0\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"manifest_version\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"string\">\"description\"</span>: <span class=\"string\">\"简易制作的清除页面广告的chrome插件\"</span>,</span><br><span class=\"line\">\t<span class=\"comment\">//\"permissions\" : [],</span></span><br><span class=\"line\">    <span class=\"string\">\"icons\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// \"16\": \"icon-16-coco.png\",</span></span><br><span class=\"line\">        <span class=\"string\">\"128\"</span>: <span class=\"string\">\"128.png\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"browser_action\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// \"default_icon\": \"icon-16-coco.png\",</span></span><br><span class=\"line\">        <span class=\"comment\">// \"default_popup\": \"popup.html\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"content_scripts\"</span>: [&#123;</span><br><span class=\"line\">    \t<span class=\"string\">\"run_at\"</span>:<span class=\"string\">\"document_end\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"matches\"</span>: [<span class=\"string\">\"*://*/\"</span>, <span class=\"string\">\"*://*/*\"</span>],</span><br><span class=\"line\">        <span class=\"string\">\"js\"</span>: [<span class=\"string\">\"jquery.min.js\"</span>, <span class=\"string\">\"my-del-ad-script.js\"</span>]</span><br><span class=\"line\">    &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>　　雷锋型扩展由于不需要跟用户交互，因此不需要<strong>browser_action</strong>属性，这款简易的去广告小插件也不需要使用Chrome的API或者是发送跨域请求因此我把<strong>permissions</strong>属性也去掉了。</p>\n<h2 id=\"业务代码-1\"><a href=\"#业务代码-1\" class=\"headerlink\" title=\"业务代码\"></a>业务代码</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clearAd</span> (<span class=\"params\">argument</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(<span class=\"string\">\"clear start\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ad_ids = [</span><br><span class=\"line\">    \t<span class=\"comment\">//脚本之家</span></span><br><span class=\"line\">    \t<span class=\"string\">\"cproIframe2001holder\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"baidu300\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"cproIframe2002holder\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"art_1\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"art_2\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"art_3\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"tonglan1\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"con_all\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"logo_m\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"con_da2\"</span>,</span><br><span class=\"line\">    \t<span class=\"comment\">//微博</span></span><br><span class=\"line\">    \t<span class=\"string\">\"v6_pl_content_biztips\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"v6_pl_rightmod_rank\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"v6_trustPagelet_recom_member\"</span>,</span><br><span class=\"line\">    \t<span class=\"comment\">//baidu</span></span><br><span class=\"line\">    \t<span class=\"string\">\"5001\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"5002\"</span></span><br><span class=\"line\">    ];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ad_classes = [</span><br><span class=\"line\">    \t<span class=\"string\">\"art_bot_ad\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"tonglanad\"</span>,</span><br><span class=\"line\">    \t<span class=\"string\">\"sm\"</span></span><br><span class=\"line\">    ];</span><br><span class=\"line\"></span><br><span class=\"line\">    $(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=ad_ids.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">\t    \t$(<span class=\"string\">\"#\"</span> + ad_ids[i]).remove();</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=ad_classes.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">\t    \t$(<span class=\"string\">\".\"</span> + ad_classes[i]).remove();</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    <span class=\"comment\">//简单的广告智能预测\t</span></span><br><span class=\"line\">\t    $(<span class=\"string\">\"iframe\"</span>).hide();</span><br><span class=\"line\">\t    $(<span class=\"string\">\"div[id*='ad']\"</span>).not(<span class=\"string\">\"div[id*='head']\"</span>).remove();</span><br><span class=\"line\">\t    $(<span class=\"string\">\"div[class*='ad']\"</span>).not(<span class=\"string\">\"div[class*='head']\"</span>).remove();</span><br><span class=\"line\">\t    <span class=\"keyword\">if</span>($(<span class=\"string\">\"a:contains('推广链接')\"</span>).parent().parent().attr(<span class=\"string\">\"id\"</span>).match(<span class=\"regexp\">/content/</span>))&#123;</span><br><span class=\"line\">\t    \t$(<span class=\"string\">\"a:contains('推广链接')\"</span>).parent().hide()</span><br><span class=\"line\">\t    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t    \t$(<span class=\"string\">\"a:contains('推广链接')\"</span>).parent().parent().hide();</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t    </span><br><span class=\"line\">    \t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"clear end\"</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<p>　　很简单的逻辑，把页面上是广告的元素去掉不展示，一开始做这个的目的只是为了干掉”脚本之家”的广告，百度搜索一些问题的时候经常会跳转到脚本之家，这网站做的简直就是，<em>“广告比内容还多”</em>，相信林子聪、屠龙宝刀什么的，见过的人也是不在少数了，挺醉人的。<br>　　一个很明显的缺陷在于，不够通用。需要自己收集广告元素的id或class名，网上尝试搜索了下智能检测广告的方法，没get到什么东西。<br>　　自己分析了几个网站，尝试着写了几个简单的广告智能预测的逻辑：<br>　　1. 通常现在的网站大多数已经不使用内嵌iframe了，而多数的广告内容都是广告提供商提供内容，网站主将广告主提供的iframe内嵌入网页中。因此可以将网页中的iframe元素隐藏。当然这个存在一定的副作用：正常使用的iframe也会被误杀掉。<br>　　2. 通过命名方式。通常广告内容的ic或class名都还是带有”ad”标志的，将带有”ad”标志的元素隐藏也能干掉一票广告。注意排除带有”head”的，否则就会误杀百度搜索框啦~~<br>　　3. 还有一种情况是百度或者谷歌联盟的广告，通常都带有”推广链接”的链接标志，将其隐藏掉即可。</p>\n<p>　　作为一个简易的去广告插件，已经满足了我90%的日常上网去广告的需求。在智能检测广告算法的问题上，如果你有更好的想法可以跟我讨论，也可直接改代码，<a href=\"https://github.com/zhangjh/practice/tree/master/chrome_ext\" target=\"_blank\" rel=\"noopener\"><strong>戳这上github</strong></a>。</p>\n<h1 id=\"开发者模式下安装插件\"><a href=\"#开发者模式下安装插件\" class=\"headerlink\" title=\"开发者模式下安装插件\"></a>开发者模式下安装插件</h1><p>　　直接上图：<br>    <img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1ew4cr3qbv6j20l102sglw.jpg\" alt=\"\"></p>\n<p>　　也可以打包成crx格式文件，拖动到浏览器里即可。<br>    <img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1ew4crd97glj20fh054t91.jpg\" alt=\"\"></p>","sticky":0},{"title":"[转载]史上最全CSS学习资料大全","show":true,"date":"2016-03-04T11:47:02.000Z","photos":["http://img.imooc.com/568c7d4400013a4d19201080.jpg"],"_content":"\n本文转载自慕课网，原文[戳此](http://www.imooc.com/article/3450)\n\n#### 基础篇\n- [CSS 最核心的几个概念](http://www.imooc.com/article/1437)\n- [CSS 简写指南](http://www.imooc.com/article/1186)\n- [CSS样式基础](http://www.imooc.com/article/2001)\n- [CSS样式设置](http://www.imooc.com/article/2067)\n- [CSS布局模型](http://www.imooc.com/article/2058)\n- [CSS文字排版](http://www.imooc.com/article/2010)\n- [你不得不知道的CSS 字体那些事儿](http://www.imooc.com/article/2475)\n- [CSS中的颜色值和长度值](http://www.imooc.com/article/2064)\n- [CSS选择器分类](http://www.imooc.com/article/2004)\n- [30个你必须记住的CSS选择符](http://www.imooc.com/article/2787)\n- [CSS元素分类](http://www.imooc.com/article/2031)\n- [浅谈CSS伪类分类](http://www.imooc.com/article/2799)\n\n<!--more-->\n\n#### 进阶篇\n- [CSS 专业技巧收集](http://www.imooc.com/article/2442)\n- [CSS小技巧](http://www.imooc.com/article/1845)\n- [CSS代码优化](http://www.imooc.com/article/2061)\n- [CSS的继承、层叠、特殊性和重要性](http://www.imooc.com/article/2007)\n- [CSS 的使用中你可能不知道的 7 件事](http://www.imooc.com/article/3030)\n- [Web 开发中 20 个很有用的 CSS 库](http://www.imooc.com/article/1536)\n- [11个学习CSS实用工具和资源](http://www.imooc.com/article/1334)\n- [17个有趣实用的CSS 3悬停效果教程](http://www.imooc.com/article/1247)\n- [前端笔试面试中的常用知识点总结(CSS)](http://www.imooc.com/article/2181)\n- [10个顶级的CSS UI开源框架](http://www.imooc.com/article/1332)\n\n#### 实战篇\n- [用CSS来找出两张图的差异](http://www.imooc.com/article/2055)\n- [用 CSS 3 来做个平安果吧~](http://www.imooc.com/article/2979)\n- [如何调试CSS动画](http://www.imooc.com/article/2409)\n- [用CSS制作Loading加载动画【第一期】](http://www.imooc.com/article/1245)\n- [用CSS制作Loading加载动画-Loading字样【第二期】](http://www.imooc.com/article/1258)\n- [帮助你美化网站的10+实用 CSS3 技巧](http://www.imooc.com/article/2439)\n- [30个使用CSS实现的loading等待加载效果](http://www.imooc.com/article/2163)\n- [慕课课程导航解析](http://www.imooc.com/article/3273)\n\n#### 免费课程（视频）篇\n- [重识CSS](http://www.imooc.com/learn/315)\n- [CSS未来](http://www.imooc.com/learn/314)\n- [css框架的迷思](http://www.imooc.com/learn/316)\n- [CSS与界面动效](http://www.imooc.com/learn/319)\n- [CSS工作流](http://www.imooc.com/learn/320)\n- [如何用CSS进行网页布局](http://www.imooc.com/learn/57)\n- [CSS3图片动态提示效果](http://www.imooc.com/learn/473)\n- [Web Components中的CSS](http://www.imooc.com/learn/323)\n- [CSS动画实用技巧](http://www.imooc.com/learn/357)\n- [HTML+CSS基础课程](http://www.imooc.com/learn/9)\n- [商城分类导航效果](http://www.imooc.com/learn/174)\n- [形形色色的下拉菜单](http://www.imooc.com/learn/12)\n- [导航条菜单的制作](http://www.imooc.com/learn/6)\n","source":"_posts/css-learning.md","raw":"title: '[转载]史上最全CSS学习资料大全'\nshow: true\ndate: 2016-03-04 19:47:02\ntags: [CSS，转载]\ncategories: 技术人生\nphotos: \n    - http://img.imooc.com/568c7d4400013a4d19201080.jpg\n---\n\n本文转载自慕课网，原文[戳此](http://www.imooc.com/article/3450)\n\n#### 基础篇\n- [CSS 最核心的几个概念](http://www.imooc.com/article/1437)\n- [CSS 简写指南](http://www.imooc.com/article/1186)\n- [CSS样式基础](http://www.imooc.com/article/2001)\n- [CSS样式设置](http://www.imooc.com/article/2067)\n- [CSS布局模型](http://www.imooc.com/article/2058)\n- [CSS文字排版](http://www.imooc.com/article/2010)\n- [你不得不知道的CSS 字体那些事儿](http://www.imooc.com/article/2475)\n- [CSS中的颜色值和长度值](http://www.imooc.com/article/2064)\n- [CSS选择器分类](http://www.imooc.com/article/2004)\n- [30个你必须记住的CSS选择符](http://www.imooc.com/article/2787)\n- [CSS元素分类](http://www.imooc.com/article/2031)\n- [浅谈CSS伪类分类](http://www.imooc.com/article/2799)\n\n<!--more-->\n\n#### 进阶篇\n- [CSS 专业技巧收集](http://www.imooc.com/article/2442)\n- [CSS小技巧](http://www.imooc.com/article/1845)\n- [CSS代码优化](http://www.imooc.com/article/2061)\n- [CSS的继承、层叠、特殊性和重要性](http://www.imooc.com/article/2007)\n- [CSS 的使用中你可能不知道的 7 件事](http://www.imooc.com/article/3030)\n- [Web 开发中 20 个很有用的 CSS 库](http://www.imooc.com/article/1536)\n- [11个学习CSS实用工具和资源](http://www.imooc.com/article/1334)\n- [17个有趣实用的CSS 3悬停效果教程](http://www.imooc.com/article/1247)\n- [前端笔试面试中的常用知识点总结(CSS)](http://www.imooc.com/article/2181)\n- [10个顶级的CSS UI开源框架](http://www.imooc.com/article/1332)\n\n#### 实战篇\n- [用CSS来找出两张图的差异](http://www.imooc.com/article/2055)\n- [用 CSS 3 来做个平安果吧~](http://www.imooc.com/article/2979)\n- [如何调试CSS动画](http://www.imooc.com/article/2409)\n- [用CSS制作Loading加载动画【第一期】](http://www.imooc.com/article/1245)\n- [用CSS制作Loading加载动画-Loading字样【第二期】](http://www.imooc.com/article/1258)\n- [帮助你美化网站的10+实用 CSS3 技巧](http://www.imooc.com/article/2439)\n- [30个使用CSS实现的loading等待加载效果](http://www.imooc.com/article/2163)\n- [慕课课程导航解析](http://www.imooc.com/article/3273)\n\n#### 免费课程（视频）篇\n- [重识CSS](http://www.imooc.com/learn/315)\n- [CSS未来](http://www.imooc.com/learn/314)\n- [css框架的迷思](http://www.imooc.com/learn/316)\n- [CSS与界面动效](http://www.imooc.com/learn/319)\n- [CSS工作流](http://www.imooc.com/learn/320)\n- [如何用CSS进行网页布局](http://www.imooc.com/learn/57)\n- [CSS3图片动态提示效果](http://www.imooc.com/learn/473)\n- [Web Components中的CSS](http://www.imooc.com/learn/323)\n- [CSS动画实用技巧](http://www.imooc.com/learn/357)\n- [HTML+CSS基础课程](http://www.imooc.com/learn/9)\n- [商城分类导航效果](http://www.imooc.com/learn/174)\n- [形形色色的下拉菜单](http://www.imooc.com/learn/12)\n- [导航条菜单的制作](http://www.imooc.com/learn/6)\n","slug":"css-learning","published":1,"updated":"2018-10-19T18:30:07.977Z","comments":1,"layout":"post","link":"","_id":"cjnijyztj0017fnpvdrnuyo7g","content":"<p>本文转载自慕课网，原文<a href=\"http://www.imooc.com/article/3450\" target=\"_blank\" rel=\"noopener\">戳此</a></p>\n<h4 id=\"基础篇\"><a href=\"#基础篇\" class=\"headerlink\" title=\"基础篇\"></a>基础篇</h4><ul>\n<li><a href=\"http://www.imooc.com/article/1437\" target=\"_blank\" rel=\"noopener\">CSS 最核心的几个概念</a></li>\n<li><a href=\"http://www.imooc.com/article/1186\" target=\"_blank\" rel=\"noopener\">CSS 简写指南</a></li>\n<li><a href=\"http://www.imooc.com/article/2001\" target=\"_blank\" rel=\"noopener\">CSS样式基础</a></li>\n<li><a href=\"http://www.imooc.com/article/2067\" target=\"_blank\" rel=\"noopener\">CSS样式设置</a></li>\n<li><a href=\"http://www.imooc.com/article/2058\" target=\"_blank\" rel=\"noopener\">CSS布局模型</a></li>\n<li><a href=\"http://www.imooc.com/article/2010\" target=\"_blank\" rel=\"noopener\">CSS文字排版</a></li>\n<li><a href=\"http://www.imooc.com/article/2475\" target=\"_blank\" rel=\"noopener\">你不得不知道的CSS 字体那些事儿</a></li>\n<li><a href=\"http://www.imooc.com/article/2064\" target=\"_blank\" rel=\"noopener\">CSS中的颜色值和长度值</a></li>\n<li><a href=\"http://www.imooc.com/article/2004\" target=\"_blank\" rel=\"noopener\">CSS选择器分类</a></li>\n<li><a href=\"http://www.imooc.com/article/2787\" target=\"_blank\" rel=\"noopener\">30个你必须记住的CSS选择符</a></li>\n<li><a href=\"http://www.imooc.com/article/2031\" target=\"_blank\" rel=\"noopener\">CSS元素分类</a></li>\n<li><a href=\"http://www.imooc.com/article/2799\" target=\"_blank\" rel=\"noopener\">浅谈CSS伪类分类</a></li>\n</ul>\n<a id=\"more\"></a>\n<h4 id=\"进阶篇\"><a href=\"#进阶篇\" class=\"headerlink\" title=\"进阶篇\"></a>进阶篇</h4><ul>\n<li><a href=\"http://www.imooc.com/article/2442\" target=\"_blank\" rel=\"noopener\">CSS 专业技巧收集</a></li>\n<li><a href=\"http://www.imooc.com/article/1845\" target=\"_blank\" rel=\"noopener\">CSS小技巧</a></li>\n<li><a href=\"http://www.imooc.com/article/2061\" target=\"_blank\" rel=\"noopener\">CSS代码优化</a></li>\n<li><a href=\"http://www.imooc.com/article/2007\" target=\"_blank\" rel=\"noopener\">CSS的继承、层叠、特殊性和重要性</a></li>\n<li><a href=\"http://www.imooc.com/article/3030\" target=\"_blank\" rel=\"noopener\">CSS 的使用中你可能不知道的 7 件事</a></li>\n<li><a href=\"http://www.imooc.com/article/1536\" target=\"_blank\" rel=\"noopener\">Web 开发中 20 个很有用的 CSS 库</a></li>\n<li><a href=\"http://www.imooc.com/article/1334\" target=\"_blank\" rel=\"noopener\">11个学习CSS实用工具和资源</a></li>\n<li><a href=\"http://www.imooc.com/article/1247\" target=\"_blank\" rel=\"noopener\">17个有趣实用的CSS 3悬停效果教程</a></li>\n<li><a href=\"http://www.imooc.com/article/2181\" target=\"_blank\" rel=\"noopener\">前端笔试面试中的常用知识点总结(CSS)</a></li>\n<li><a href=\"http://www.imooc.com/article/1332\" target=\"_blank\" rel=\"noopener\">10个顶级的CSS UI开源框架</a></li>\n</ul>\n<h4 id=\"实战篇\"><a href=\"#实战篇\" class=\"headerlink\" title=\"实战篇\"></a>实战篇</h4><ul>\n<li><a href=\"http://www.imooc.com/article/2055\" target=\"_blank\" rel=\"noopener\">用CSS来找出两张图的差异</a></li>\n<li><a href=\"http://www.imooc.com/article/2979\" target=\"_blank\" rel=\"noopener\">用 CSS 3 来做个平安果吧~</a></li>\n<li><a href=\"http://www.imooc.com/article/2409\" target=\"_blank\" rel=\"noopener\">如何调试CSS动画</a></li>\n<li><a href=\"http://www.imooc.com/article/1245\" target=\"_blank\" rel=\"noopener\">用CSS制作Loading加载动画【第一期】</a></li>\n<li><a href=\"http://www.imooc.com/article/1258\" target=\"_blank\" rel=\"noopener\">用CSS制作Loading加载动画-Loading字样【第二期】</a></li>\n<li><a href=\"http://www.imooc.com/article/2439\" target=\"_blank\" rel=\"noopener\">帮助你美化网站的10+实用 CSS3 技巧</a></li>\n<li><a href=\"http://www.imooc.com/article/2163\" target=\"_blank\" rel=\"noopener\">30个使用CSS实现的loading等待加载效果</a></li>\n<li><a href=\"http://www.imooc.com/article/3273\" target=\"_blank\" rel=\"noopener\">慕课课程导航解析</a></li>\n</ul>\n<h4 id=\"免费课程（视频）篇\"><a href=\"#免费课程（视频）篇\" class=\"headerlink\" title=\"免费课程（视频）篇\"></a>免费课程（视频）篇</h4><ul>\n<li><a href=\"http://www.imooc.com/learn/315\" target=\"_blank\" rel=\"noopener\">重识CSS</a></li>\n<li><a href=\"http://www.imooc.com/learn/314\" target=\"_blank\" rel=\"noopener\">CSS未来</a></li>\n<li><a href=\"http://www.imooc.com/learn/316\" target=\"_blank\" rel=\"noopener\">css框架的迷思</a></li>\n<li><a href=\"http://www.imooc.com/learn/319\" target=\"_blank\" rel=\"noopener\">CSS与界面动效</a></li>\n<li><a href=\"http://www.imooc.com/learn/320\" target=\"_blank\" rel=\"noopener\">CSS工作流</a></li>\n<li><a href=\"http://www.imooc.com/learn/57\" target=\"_blank\" rel=\"noopener\">如何用CSS进行网页布局</a></li>\n<li><a href=\"http://www.imooc.com/learn/473\" target=\"_blank\" rel=\"noopener\">CSS3图片动态提示效果</a></li>\n<li><a href=\"http://www.imooc.com/learn/323\" target=\"_blank\" rel=\"noopener\">Web Components中的CSS</a></li>\n<li><a href=\"http://www.imooc.com/learn/357\" target=\"_blank\" rel=\"noopener\">CSS动画实用技巧</a></li>\n<li><a href=\"http://www.imooc.com/learn/9\" target=\"_blank\" rel=\"noopener\">HTML+CSS基础课程</a></li>\n<li><a href=\"http://www.imooc.com/learn/174\" target=\"_blank\" rel=\"noopener\">商城分类导航效果</a></li>\n<li><a href=\"http://www.imooc.com/learn/12\" target=\"_blank\" rel=\"noopener\">形形色色的下拉菜单</a></li>\n<li><a href=\"http://www.imooc.com/learn/6\" target=\"_blank\" rel=\"noopener\">导航条菜单的制作</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>本文转载自慕课网，原文<a href=\"http://www.imooc.com/article/3450\" target=\"_blank\" rel=\"noopener\">戳此</a></p>\n<h4 id=\"基础篇\"><a href=\"#基础篇\" class=\"headerlink\" title=\"基础篇\"></a>基础篇</h4><ul>\n<li><a href=\"http://www.imooc.com/article/1437\" target=\"_blank\" rel=\"noopener\">CSS 最核心的几个概念</a></li>\n<li><a href=\"http://www.imooc.com/article/1186\" target=\"_blank\" rel=\"noopener\">CSS 简写指南</a></li>\n<li><a href=\"http://www.imooc.com/article/2001\" target=\"_blank\" rel=\"noopener\">CSS样式基础</a></li>\n<li><a href=\"http://www.imooc.com/article/2067\" target=\"_blank\" rel=\"noopener\">CSS样式设置</a></li>\n<li><a href=\"http://www.imooc.com/article/2058\" target=\"_blank\" rel=\"noopener\">CSS布局模型</a></li>\n<li><a href=\"http://www.imooc.com/article/2010\" target=\"_blank\" rel=\"noopener\">CSS文字排版</a></li>\n<li><a href=\"http://www.imooc.com/article/2475\" target=\"_blank\" rel=\"noopener\">你不得不知道的CSS 字体那些事儿</a></li>\n<li><a href=\"http://www.imooc.com/article/2064\" target=\"_blank\" rel=\"noopener\">CSS中的颜色值和长度值</a></li>\n<li><a href=\"http://www.imooc.com/article/2004\" target=\"_blank\" rel=\"noopener\">CSS选择器分类</a></li>\n<li><a href=\"http://www.imooc.com/article/2787\" target=\"_blank\" rel=\"noopener\">30个你必须记住的CSS选择符</a></li>\n<li><a href=\"http://www.imooc.com/article/2031\" target=\"_blank\" rel=\"noopener\">CSS元素分类</a></li>\n<li><a href=\"http://www.imooc.com/article/2799\" target=\"_blank\" rel=\"noopener\">浅谈CSS伪类分类</a></li>\n</ul>","more":"<h4 id=\"进阶篇\"><a href=\"#进阶篇\" class=\"headerlink\" title=\"进阶篇\"></a>进阶篇</h4><ul>\n<li><a href=\"http://www.imooc.com/article/2442\" target=\"_blank\" rel=\"noopener\">CSS 专业技巧收集</a></li>\n<li><a href=\"http://www.imooc.com/article/1845\" target=\"_blank\" rel=\"noopener\">CSS小技巧</a></li>\n<li><a href=\"http://www.imooc.com/article/2061\" target=\"_blank\" rel=\"noopener\">CSS代码优化</a></li>\n<li><a href=\"http://www.imooc.com/article/2007\" target=\"_blank\" rel=\"noopener\">CSS的继承、层叠、特殊性和重要性</a></li>\n<li><a href=\"http://www.imooc.com/article/3030\" target=\"_blank\" rel=\"noopener\">CSS 的使用中你可能不知道的 7 件事</a></li>\n<li><a href=\"http://www.imooc.com/article/1536\" target=\"_blank\" rel=\"noopener\">Web 开发中 20 个很有用的 CSS 库</a></li>\n<li><a href=\"http://www.imooc.com/article/1334\" target=\"_blank\" rel=\"noopener\">11个学习CSS实用工具和资源</a></li>\n<li><a href=\"http://www.imooc.com/article/1247\" target=\"_blank\" rel=\"noopener\">17个有趣实用的CSS 3悬停效果教程</a></li>\n<li><a href=\"http://www.imooc.com/article/2181\" target=\"_blank\" rel=\"noopener\">前端笔试面试中的常用知识点总结(CSS)</a></li>\n<li><a href=\"http://www.imooc.com/article/1332\" target=\"_blank\" rel=\"noopener\">10个顶级的CSS UI开源框架</a></li>\n</ul>\n<h4 id=\"实战篇\"><a href=\"#实战篇\" class=\"headerlink\" title=\"实战篇\"></a>实战篇</h4><ul>\n<li><a href=\"http://www.imooc.com/article/2055\" target=\"_blank\" rel=\"noopener\">用CSS来找出两张图的差异</a></li>\n<li><a href=\"http://www.imooc.com/article/2979\" target=\"_blank\" rel=\"noopener\">用 CSS 3 来做个平安果吧~</a></li>\n<li><a href=\"http://www.imooc.com/article/2409\" target=\"_blank\" rel=\"noopener\">如何调试CSS动画</a></li>\n<li><a href=\"http://www.imooc.com/article/1245\" target=\"_blank\" rel=\"noopener\">用CSS制作Loading加载动画【第一期】</a></li>\n<li><a href=\"http://www.imooc.com/article/1258\" target=\"_blank\" rel=\"noopener\">用CSS制作Loading加载动画-Loading字样【第二期】</a></li>\n<li><a href=\"http://www.imooc.com/article/2439\" target=\"_blank\" rel=\"noopener\">帮助你美化网站的10+实用 CSS3 技巧</a></li>\n<li><a href=\"http://www.imooc.com/article/2163\" target=\"_blank\" rel=\"noopener\">30个使用CSS实现的loading等待加载效果</a></li>\n<li><a href=\"http://www.imooc.com/article/3273\" target=\"_blank\" rel=\"noopener\">慕课课程导航解析</a></li>\n</ul>\n<h4 id=\"免费课程（视频）篇\"><a href=\"#免费课程（视频）篇\" class=\"headerlink\" title=\"免费课程（视频）篇\"></a>免费课程（视频）篇</h4><ul>\n<li><a href=\"http://www.imooc.com/learn/315\" target=\"_blank\" rel=\"noopener\">重识CSS</a></li>\n<li><a href=\"http://www.imooc.com/learn/314\" target=\"_blank\" rel=\"noopener\">CSS未来</a></li>\n<li><a href=\"http://www.imooc.com/learn/316\" target=\"_blank\" rel=\"noopener\">css框架的迷思</a></li>\n<li><a href=\"http://www.imooc.com/learn/319\" target=\"_blank\" rel=\"noopener\">CSS与界面动效</a></li>\n<li><a href=\"http://www.imooc.com/learn/320\" target=\"_blank\" rel=\"noopener\">CSS工作流</a></li>\n<li><a href=\"http://www.imooc.com/learn/57\" target=\"_blank\" rel=\"noopener\">如何用CSS进行网页布局</a></li>\n<li><a href=\"http://www.imooc.com/learn/473\" target=\"_blank\" rel=\"noopener\">CSS3图片动态提示效果</a></li>\n<li><a href=\"http://www.imooc.com/learn/323\" target=\"_blank\" rel=\"noopener\">Web Components中的CSS</a></li>\n<li><a href=\"http://www.imooc.com/learn/357\" target=\"_blank\" rel=\"noopener\">CSS动画实用技巧</a></li>\n<li><a href=\"http://www.imooc.com/learn/9\" target=\"_blank\" rel=\"noopener\">HTML+CSS基础课程</a></li>\n<li><a href=\"http://www.imooc.com/learn/174\" target=\"_blank\" rel=\"noopener\">商城分类导航效果</a></li>\n<li><a href=\"http://www.imooc.com/learn/12\" target=\"_blank\" rel=\"noopener\">形形色色的下拉菜单</a></li>\n<li><a href=\"http://www.imooc.com/learn/6\" target=\"_blank\" rel=\"noopener\">导航条菜单的制作</a></li>\n</ul>","sticky":0},{"title":"JAVA导出CSV乱码问题","show":true,"date":"2017-10-11T08:09:41.000Z","_content":"# 背景\n我在项目中使用阿里云OSS存储文件，导出时导出为csv格式的文件。然而打开时总是存在中文乱码。\n通过网上的一番搜索，大抵是使用记事本先打开csv文件，然后再保存为ANSI格式，然后再用excel打开时就不存在乱码了。但这不是程序里的解决方式，我们不可能提供一个半成品的导出文件供用户使用。经过一番网上搜寻，发现问题的根源在于UTF8的BOM信息头。\n本来UTF8是不需要BOM头的，这就不得不说到微软的可恶了。\n\n# BOM简介\nBOM中文译作\"字节顺序标记\"，UTF8本不需要BOM来表明字节顺序，但WINDOWS用BOM来标记文件文件的编码方式。BOM的UTF8编码是\"EF BB BF\"，所以如果接收者收到以\"EF BB BF\"开头的字节流，就知道这是UTF8编码了。WINDOWS系软件保存的UTF8编码的文件需要文件的开头保有这个BOM字符。\n\n# 问题解决\n项目中使用OSS存储文件，存储成功后返回一个签名过的文件url地址，前端再根据这个url去请求获取文件。由于前端是直接使用\"window.open(url)\"的方式，直接新开窗口访问链接，下载下来的文件默认是UTF8编码的，因此使用excel打开时需要BOM字符来表明是UTF8编码，否则其中的中文则会产生乱码。\n\n因此，在OSS存储时，我们就需要额外添加BOM头一并存储。代码如下：\n```\nOSSClient client = new OSSClient(ossHelper.getEndPoint(), ossHelper.getAccessKeyId(),\n\tossHelper.getAccessKeySecret());\nObjectMetadata objectMetadata = new ObjectMetadata();\nobjectMetadata.setContentType(\"application/vnd.ms-excel\");\nobjectMetadata.setContentEncoding(\"UTF-8\");\nobjectMetadata.setContentDisposition(\"attachment; filename=\" + fileName + \".csv\");\n\n// 增加BOM头信息\nString bom = new String(new byte[] { (byte) 0xEF, (byte) 0xBB,(byte) 0xBF });\n\ntry {\n\t// 以同样的编码获取字节流\n\tclient.putObject(ossHelper.getBucketName(), fileName,\n    new ByteArrayInputStream((bom + exportFileString).getBytes(\"UTF-8\")), objectMetadata);\n}catch (UnsupportedEncodingException e){\n    e.printStackTrace();\n}\n\n```\n","source":"_posts/csv-encoding-bom.md","raw":"title: JAVA导出CSV乱码问题\nshow: true\ndate: 2017-10-11 16:09:41\ntags: [csv,oss,utf8,bom]\ncategories: 技术人生\n---\n# 背景\n我在项目中使用阿里云OSS存储文件，导出时导出为csv格式的文件。然而打开时总是存在中文乱码。\n通过网上的一番搜索，大抵是使用记事本先打开csv文件，然后再保存为ANSI格式，然后再用excel打开时就不存在乱码了。但这不是程序里的解决方式，我们不可能提供一个半成品的导出文件供用户使用。经过一番网上搜寻，发现问题的根源在于UTF8的BOM信息头。\n本来UTF8是不需要BOM头的，这就不得不说到微软的可恶了。\n\n# BOM简介\nBOM中文译作\"字节顺序标记\"，UTF8本不需要BOM来表明字节顺序，但WINDOWS用BOM来标记文件文件的编码方式。BOM的UTF8编码是\"EF BB BF\"，所以如果接收者收到以\"EF BB BF\"开头的字节流，就知道这是UTF8编码了。WINDOWS系软件保存的UTF8编码的文件需要文件的开头保有这个BOM字符。\n\n# 问题解决\n项目中使用OSS存储文件，存储成功后返回一个签名过的文件url地址，前端再根据这个url去请求获取文件。由于前端是直接使用\"window.open(url)\"的方式，直接新开窗口访问链接，下载下来的文件默认是UTF8编码的，因此使用excel打开时需要BOM字符来表明是UTF8编码，否则其中的中文则会产生乱码。\n\n因此，在OSS存储时，我们就需要额外添加BOM头一并存储。代码如下：\n```\nOSSClient client = new OSSClient(ossHelper.getEndPoint(), ossHelper.getAccessKeyId(),\n\tossHelper.getAccessKeySecret());\nObjectMetadata objectMetadata = new ObjectMetadata();\nobjectMetadata.setContentType(\"application/vnd.ms-excel\");\nobjectMetadata.setContentEncoding(\"UTF-8\");\nobjectMetadata.setContentDisposition(\"attachment; filename=\" + fileName + \".csv\");\n\n// 增加BOM头信息\nString bom = new String(new byte[] { (byte) 0xEF, (byte) 0xBB,(byte) 0xBF });\n\ntry {\n\t// 以同样的编码获取字节流\n\tclient.putObject(ossHelper.getBucketName(), fileName,\n    new ByteArrayInputStream((bom + exportFileString).getBytes(\"UTF-8\")), objectMetadata);\n}catch (UnsupportedEncodingException e){\n    e.printStackTrace();\n}\n\n```\n","slug":"csv-encoding-bom","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyztl001afnpv6ujjpui8","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>我在项目中使用阿里云OSS存储文件，导出时导出为csv格式的文件。然而打开时总是存在中文乱码。<br>通过网上的一番搜索，大抵是使用记事本先打开csv文件，然后再保存为ANSI格式，然后再用excel打开时就不存在乱码了。但这不是程序里的解决方式，我们不可能提供一个半成品的导出文件供用户使用。经过一番网上搜寻，发现问题的根源在于UTF8的BOM信息头。<br>本来UTF8是不需要BOM头的，这就不得不说到微软的可恶了。</p>\n<h1 id=\"BOM简介\"><a href=\"#BOM简介\" class=\"headerlink\" title=\"BOM简介\"></a>BOM简介</h1><p>BOM中文译作”字节顺序标记”，UTF8本不需要BOM来表明字节顺序，但WINDOWS用BOM来标记文件文件的编码方式。BOM的UTF8编码是”EF BB BF”，所以如果接收者收到以”EF BB BF”开头的字节流，就知道这是UTF8编码了。WINDOWS系软件保存的UTF8编码的文件需要文件的开头保有这个BOM字符。</p>\n<h1 id=\"问题解决\"><a href=\"#问题解决\" class=\"headerlink\" title=\"问题解决\"></a>问题解决</h1><p>项目中使用OSS存储文件，存储成功后返回一个签名过的文件url地址，前端再根据这个url去请求获取文件。由于前端是直接使用”window.open(url)”的方式，直接新开窗口访问链接，下载下来的文件默认是UTF8编码的，因此使用excel打开时需要BOM字符来表明是UTF8编码，否则其中的中文则会产生乱码。</p>\n<p>因此，在OSS存储时，我们就需要额外添加BOM头一并存储。代码如下：<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OSSClient client = <span class=\"keyword\">new</span> OSSClient(ossHelper.getEndPoint(), ossHelper.getAccessKeyId(),</span><br><span class=\"line\">\tossHelper.getAccessKeySecret());</span><br><span class=\"line\">ObjectMetadata objectMetadata = <span class=\"keyword\">new</span> ObjectMetadata();</span><br><span class=\"line\">objectMetadata.setContentType(<span class=\"string\">\"application/vnd.ms-excel\"</span>);</span><br><span class=\"line\">objectMetadata.setContentEncoding(<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">objectMetadata.setContentDisposition(<span class=\"string\">\"attachment; filename=\"</span> + fileName + <span class=\"string\">\".csv\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 增加BOM头信息</span></span><br><span class=\"line\"><span class=\"keyword\">String</span> bom = <span class=\"keyword\">new</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[] &#123; (<span class=\"keyword\">byte</span>) <span class=\"number\">0xEF</span>, (<span class=\"keyword\">byte</span>) <span class=\"number\">0xBB</span>,(<span class=\"keyword\">byte</span>) <span class=\"number\">0xBF</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">try</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 以同样的编码获取字节流</span></span><br><span class=\"line\">\tclient.putObject(ossHelper.getBucketName(), fileName,</span><br><span class=\"line\">    <span class=\"keyword\">new</span> ByteArrayInputStream((bom + exportFileString).getBytes(<span class=\"string\">\"UTF-8\"</span>)), objectMetadata);</span><br><span class=\"line\">&#125;<span class=\"built_in\">catch</span> (UnsupportedEncodingException e)&#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>我在项目中使用阿里云OSS存储文件，导出时导出为csv格式的文件。然而打开时总是存在中文乱码。<br>通过网上的一番搜索，大抵是使用记事本先打开csv文件，然后再保存为ANSI格式，然后再用excel打开时就不存在乱码了。但这不是程序里的解决方式，我们不可能提供一个半成品的导出文件供用户使用。经过一番网上搜寻，发现问题的根源在于UTF8的BOM信息头。<br>本来UTF8是不需要BOM头的，这就不得不说到微软的可恶了。</p>\n<h1 id=\"BOM简介\"><a href=\"#BOM简介\" class=\"headerlink\" title=\"BOM简介\"></a>BOM简介</h1><p>BOM中文译作”字节顺序标记”，UTF8本不需要BOM来表明字节顺序，但WINDOWS用BOM来标记文件文件的编码方式。BOM的UTF8编码是”EF BB BF”，所以如果接收者收到以”EF BB BF”开头的字节流，就知道这是UTF8编码了。WINDOWS系软件保存的UTF8编码的文件需要文件的开头保有这个BOM字符。</p>\n<h1 id=\"问题解决\"><a href=\"#问题解决\" class=\"headerlink\" title=\"问题解决\"></a>问题解决</h1><p>项目中使用OSS存储文件，存储成功后返回一个签名过的文件url地址，前端再根据这个url去请求获取文件。由于前端是直接使用”window.open(url)”的方式，直接新开窗口访问链接，下载下来的文件默认是UTF8编码的，因此使用excel打开时需要BOM字符来表明是UTF8编码，否则其中的中文则会产生乱码。</p>\n<p>因此，在OSS存储时，我们就需要额外添加BOM头一并存储。代码如下：<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OSSClient client = <span class=\"keyword\">new</span> OSSClient(ossHelper.getEndPoint(), ossHelper.getAccessKeyId(),</span><br><span class=\"line\">\tossHelper.getAccessKeySecret());</span><br><span class=\"line\">ObjectMetadata objectMetadata = <span class=\"keyword\">new</span> ObjectMetadata();</span><br><span class=\"line\">objectMetadata.setContentType(<span class=\"string\">\"application/vnd.ms-excel\"</span>);</span><br><span class=\"line\">objectMetadata.setContentEncoding(<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">objectMetadata.setContentDisposition(<span class=\"string\">\"attachment; filename=\"</span> + fileName + <span class=\"string\">\".csv\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 增加BOM头信息</span></span><br><span class=\"line\"><span class=\"keyword\">String</span> bom = <span class=\"keyword\">new</span> <span class=\"keyword\">String</span>(<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[] &#123; (<span class=\"keyword\">byte</span>) <span class=\"number\">0xEF</span>, (<span class=\"keyword\">byte</span>) <span class=\"number\">0xBB</span>,(<span class=\"keyword\">byte</span>) <span class=\"number\">0xBF</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">try</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 以同样的编码获取字节流</span></span><br><span class=\"line\">\tclient.putObject(ossHelper.getBucketName(), fileName,</span><br><span class=\"line\">    <span class=\"keyword\">new</span> ByteArrayInputStream((bom + exportFileString).getBytes(<span class=\"string\">\"UTF-8\"</span>)), objectMetadata);</span><br><span class=\"line\">&#125;<span class=\"built_in\">catch</span> (UnsupportedEncodingException e)&#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","sticky":0},{"title":"解决git报错:\".git/hooks/pre-commit No such file or directory\"","show":true,"date":"2016-12-22T08:22:00.000Z","_content":"第二次遇到这个问题了，第一次删除了.git目录重新下载了项目，结果commit记录什么的都不对了，损失惨重，这次又遇到这个问题没敢轻举妄动了，折腾了很久，终于找到了问题的根源，这里记录一下以备忘，顺便给遇到同样问题的朋友们一点启发。\n\n这个问题的根源在于跨平台造成的换行符的不一致造成。回想两次操作，都是在push的时候提示要将CRLF替换成LF，\"warning: CRLF will be replaced by LF\"。接受IDE的建议修改以后，所有的文件的换行符都被替换，于是pre-commit文件的行尾也多了\"\\r\"字符，导致运行时报错。\n```\n.git/hooks/pre-commit: line 4: [: 127 : integer expression expected\n.git/hooks/pre-commit: line 5: exit: 0 : numeric argument required\n```\n\n找到问题的原因后，解决方案就呼之欲出了。删除掉多余的字符即可。\n\n```\ncp .git/hooks/pre-commit /tmp/pre-commit\ntr -d '\\r' < /tmp/pre-commit > .git/hooks/pre-commit\n```\n如果还有其余文件报错，一并处理即可。\n","source":"_posts/error-commit.md","raw":"title: 解决git报错:\".git/hooks/pre-commit No such file or directory\"\nshow: true\ndate: 2016-12-22 16:22:00\ntags: git\ncategories: 技术人生\n---\n第二次遇到这个问题了，第一次删除了.git目录重新下载了项目，结果commit记录什么的都不对了，损失惨重，这次又遇到这个问题没敢轻举妄动了，折腾了很久，终于找到了问题的根源，这里记录一下以备忘，顺便给遇到同样问题的朋友们一点启发。\n\n这个问题的根源在于跨平台造成的换行符的不一致造成。回想两次操作，都是在push的时候提示要将CRLF替换成LF，\"warning: CRLF will be replaced by LF\"。接受IDE的建议修改以后，所有的文件的换行符都被替换，于是pre-commit文件的行尾也多了\"\\r\"字符，导致运行时报错。\n```\n.git/hooks/pre-commit: line 4: [: 127 : integer expression expected\n.git/hooks/pre-commit: line 5: exit: 0 : numeric argument required\n```\n\n找到问题的原因后，解决方案就呼之欲出了。删除掉多余的字符即可。\n\n```\ncp .git/hooks/pre-commit /tmp/pre-commit\ntr -d '\\r' < /tmp/pre-commit > .git/hooks/pre-commit\n```\n如果还有其余文件报错，一并处理即可。\n","slug":"error-commit","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyztn001cfnpvwqrjbq6d","content":"<p>第二次遇到这个问题了，第一次删除了.git目录重新下载了项目，结果commit记录什么的都不对了，损失惨重，这次又遇到这个问题没敢轻举妄动了，折腾了很久，终于找到了问题的根源，这里记录一下以备忘，顺便给遇到同样问题的朋友们一点启发。</p>\n<p>这个问题的根源在于跨平台造成的换行符的不一致造成。回想两次操作，都是在push的时候提示要将CRLF替换成LF，”warning: CRLF will be replaced by LF”。接受IDE的建议修改以后，所有的文件的换行符都被替换，于是pre-commit文件的行尾也多了”\\r”字符，导致运行时报错。<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.git<span class=\"regexp\">/hooks/</span>pre-commit: line <span class=\"number\">4</span>: [: <span class=\"number\">127</span> : integer expression expected</span><br><span class=\"line\">.git<span class=\"regexp\">/hooks/</span>pre-commit: line <span class=\"number\">5</span>: <span class=\"keyword\">exit</span>: <span class=\"number\">0</span> : numeric argument required</span><br></pre></td></tr></table></figure></p>\n<p>找到问题的原因后，解决方案就呼之欲出了。删除掉多余的字符即可。</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cp</span> .git/hooks/<span class=\"keyword\">pre</span>-commit /tmp/<span class=\"keyword\">pre</span>-commit</span><br><span class=\"line\"><span class=\"keyword\">tr</span> -d <span class=\"string\">'\\r'</span> &lt; /tmp/<span class=\"keyword\">pre</span>-commit &gt; .git/hooks/<span class=\"keyword\">pre</span>-commit</span><br></pre></td></tr></table></figure>\n<p>如果还有其余文件报错，一并处理即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第二次遇到这个问题了，第一次删除了.git目录重新下载了项目，结果commit记录什么的都不对了，损失惨重，这次又遇到这个问题没敢轻举妄动了，折腾了很久，终于找到了问题的根源，这里记录一下以备忘，顺便给遇到同样问题的朋友们一点启发。</p>\n<p>这个问题的根源在于跨平台造成的换行符的不一致造成。回想两次操作，都是在push的时候提示要将CRLF替换成LF，”warning: CRLF will be replaced by LF”。接受IDE的建议修改以后，所有的文件的换行符都被替换，于是pre-commit文件的行尾也多了”\\r”字符，导致运行时报错。<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.git<span class=\"regexp\">/hooks/</span>pre-commit: line <span class=\"number\">4</span>: [: <span class=\"number\">127</span> : integer expression expected</span><br><span class=\"line\">.git<span class=\"regexp\">/hooks/</span>pre-commit: line <span class=\"number\">5</span>: <span class=\"keyword\">exit</span>: <span class=\"number\">0</span> : numeric argument required</span><br></pre></td></tr></table></figure></p>\n<p>找到问题的原因后，解决方案就呼之欲出了。删除掉多余的字符即可。</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cp</span> .git/hooks/<span class=\"keyword\">pre</span>-commit /tmp/<span class=\"keyword\">pre</span>-commit</span><br><span class=\"line\"><span class=\"keyword\">tr</span> -d <span class=\"string\">'\\r'</span> &lt; /tmp/<span class=\"keyword\">pre</span>-commit &gt; .git/hooks/<span class=\"keyword\">pre</span>-commit</span><br></pre></td></tr></table></figure>\n<p>如果还有其余文件报错，一并处理即可。</p>\n","sticky":0},{"title":"使用IDEA自动编译less文件","show":true,"date":"2018-05-12T23:39:45.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  12/53，每周一篇博，坚持！\n\n### 背景\n我的工作性质是属于全栈的，也就是前后端都需要干的那种\"全干工程师\"。在阿里又会用到很多内部自研的框架，有的框架就不那么的好用。如工作中用到的这个前端框架，写的CSS文件不支持@import语法。。。这意味着，如果你想将不同页面间样式的公共部分抽取出来再@import的方式不可行，你只能不停的重复同样的样式代码，丑陋且不可维护。\n好在框架支持less等CSS编译语言，而在less中写@import语句是没问题的。于是想到了一个可行的方式：项目维护less样式文件，抽取公共的部分，在需要的地方@import进来，唯一的问题就是需要将这些less文件编译成浏览器认识的CSS。我可不想每次自己来执行编译。\n\n<!--more-->\n\n### FileWatchers插件\nIDEA下的FileWatchers插件可以帮助我实现自动编译的功能。它实际上就是一个文件监视器，当文件有所改动时，自动触发设置好的命令执行。\n在说明FileWatchers使用之前，我们先具体的看一下，如何将less编译成可执行的CSS。\n\n### 使用LESSC编译LESS文件\n在动手之前，所需的前端依赖环境，如node.js、npm不再赘述。\n首先使用npm安装lessc编译器：\n```\nnpm i lessc -d -g\n```\n安装完之后就可以使用了。\n如：\n```css\n/**1.less*/\n@nice-blue: #5B83AD;\ndiv {\n    p {\n        color: @nice-blue;\n    }\n}\n```\n运行命令：\n`lessc 1.less > 1.css`\n上述命令将生成：\n```\ndiv p {\n\tcolor: #5B83AD;\n}\n```\n上述简单的例子可以看出，使用less来编写样式，给我们提供了一些CSS没有的功能，如嵌套和变量。这里不再赘述，less的详细使用可以参考[less手册](https://less.bootcss.com/)。\n\n### IDEA下使用FileWatchers编译less文件\n1. 安装FileWatchers插件\n打开设置找到plugins，搜索FileWatchers并安装\n\n2. 重启IDEA，打开设置搜索FileWatchers，通常是在Tools子菜单下\n\n3. 设置FileWatchers\n添加模板，这里我选择less\n设置要监控的文件类型及文件变更后的操作如下：\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fr9zdr0697j21ag0x8gs0.jpg)\n\n配置完成后，当我一边写less样式时，FileWatchers将自动调用我的lessc编译器将less文件同步编译生成相应的css文件。\n\n这篇博文只是利用FileWatchers来实现了自动编译less文件，其实它的作用远不止这个。只要是希望监视文件变动后自动触发一些操作的事情都可以交给FileWatchers帮忙实现。如当你想尝试某些ES6或更高版本JS的新功能，而又担心浏览器无法识别或者不想自己手动将文件转为低版本时，你可以借助FileWatchers和bable来实现自动的代码转译。\n又或者，你可以利用它来自动压缩混淆代码等等，如果有更好的想法可以评论跟我分享。\n","source":"_posts/filewatchers.md","raw":"title: 使用IDEA自动编译less文件\nshow: true\ndate: 2018-05-13 07:39:45\ntags: [filewatchers]\ncategories: 技术人生\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  12/53，每周一篇博，坚持！\n\n### 背景\n我的工作性质是属于全栈的，也就是前后端都需要干的那种\"全干工程师\"。在阿里又会用到很多内部自研的框架，有的框架就不那么的好用。如工作中用到的这个前端框架，写的CSS文件不支持@import语法。。。这意味着，如果你想将不同页面间样式的公共部分抽取出来再@import的方式不可行，你只能不停的重复同样的样式代码，丑陋且不可维护。\n好在框架支持less等CSS编译语言，而在less中写@import语句是没问题的。于是想到了一个可行的方式：项目维护less样式文件，抽取公共的部分，在需要的地方@import进来，唯一的问题就是需要将这些less文件编译成浏览器认识的CSS。我可不想每次自己来执行编译。\n\n<!--more-->\n\n### FileWatchers插件\nIDEA下的FileWatchers插件可以帮助我实现自动编译的功能。它实际上就是一个文件监视器，当文件有所改动时，自动触发设置好的命令执行。\n在说明FileWatchers使用之前，我们先具体的看一下，如何将less编译成可执行的CSS。\n\n### 使用LESSC编译LESS文件\n在动手之前，所需的前端依赖环境，如node.js、npm不再赘述。\n首先使用npm安装lessc编译器：\n```\nnpm i lessc -d -g\n```\n安装完之后就可以使用了。\n如：\n```css\n/**1.less*/\n@nice-blue: #5B83AD;\ndiv {\n    p {\n        color: @nice-blue;\n    }\n}\n```\n运行命令：\n`lessc 1.less > 1.css`\n上述命令将生成：\n```\ndiv p {\n\tcolor: #5B83AD;\n}\n```\n上述简单的例子可以看出，使用less来编写样式，给我们提供了一些CSS没有的功能，如嵌套和变量。这里不再赘述，less的详细使用可以参考[less手册](https://less.bootcss.com/)。\n\n### IDEA下使用FileWatchers编译less文件\n1. 安装FileWatchers插件\n打开设置找到plugins，搜索FileWatchers并安装\n\n2. 重启IDEA，打开设置搜索FileWatchers，通常是在Tools子菜单下\n\n3. 设置FileWatchers\n添加模板，这里我选择less\n设置要监控的文件类型及文件变更后的操作如下：\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fr9zdr0697j21ag0x8gs0.jpg)\n\n配置完成后，当我一边写less样式时，FileWatchers将自动调用我的lessc编译器将less文件同步编译生成相应的css文件。\n\n这篇博文只是利用FileWatchers来实现了自动编译less文件，其实它的作用远不止这个。只要是希望监视文件变动后自动触发一些操作的事情都可以交给FileWatchers帮忙实现。如当你想尝试某些ES6或更高版本JS的新功能，而又担心浏览器无法识别或者不想自己手动将文件转为低版本时，你可以借助FileWatchers和bable来实现自动的代码转译。\n又或者，你可以利用它来自动压缩混淆代码等等，如果有更好的想法可以评论跟我分享。\n","slug":"filewatchers","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyztr001ffnpvgzu72qss","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  12/53，每周一篇博，坚持！</p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>我的工作性质是属于全栈的，也就是前后端都需要干的那种”全干工程师”。在阿里又会用到很多内部自研的框架，有的框架就不那么的好用。如工作中用到的这个前端框架，写的CSS文件不支持@import语法。。。这意味着，如果你想将不同页面间样式的公共部分抽取出来再@import的方式不可行，你只能不停的重复同样的样式代码，丑陋且不可维护。<br>好在框架支持less等CSS编译语言，而在less中写@import语句是没问题的。于是想到了一个可行的方式：项目维护less样式文件，抽取公共的部分，在需要的地方@import进来，唯一的问题就是需要将这些less文件编译成浏览器认识的CSS。我可不想每次自己来执行编译。</p>\n<a id=\"more\"></a>\n<h3 id=\"FileWatchers插件\"><a href=\"#FileWatchers插件\" class=\"headerlink\" title=\"FileWatchers插件\"></a>FileWatchers插件</h3><p>IDEA下的FileWatchers插件可以帮助我实现自动编译的功能。它实际上就是一个文件监视器，当文件有所改动时，自动触发设置好的命令执行。<br>在说明FileWatchers使用之前，我们先具体的看一下，如何将less编译成可执行的CSS。</p>\n<h3 id=\"使用LESSC编译LESS文件\"><a href=\"#使用LESSC编译LESS文件\" class=\"headerlink\" title=\"使用LESSC编译LESS文件\"></a>使用LESSC编译LESS文件</h3><p>在动手之前，所需的前端依赖环境，如node.js、npm不再赘述。<br>首先使用npm安装lessc编译器：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> lessc -d -g</span><br></pre></td></tr></table></figure></p>\n<p>安装完之后就可以使用了。<br>如：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**1.less*/</span></span><br><span class=\"line\">@nice-blue: #5B83AD;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    p &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">color</span>: @<span class=\"keyword\">nice</span>-<span class=\"keyword\">blue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行命令：<br><code>lessc 1.less &gt; 1.css</code><br>上述命令将生成：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: <span class=\"number\">#5B83AD</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上述简单的例子可以看出，使用less来编写样式，给我们提供了一些CSS没有的功能，如嵌套和变量。这里不再赘述，less的详细使用可以参考<a href=\"https://less.bootcss.com/\" target=\"_blank\" rel=\"noopener\">less手册</a>。</p>\n<h3 id=\"IDEA下使用FileWatchers编译less文件\"><a href=\"#IDEA下使用FileWatchers编译less文件\" class=\"headerlink\" title=\"IDEA下使用FileWatchers编译less文件\"></a>IDEA下使用FileWatchers编译less文件</h3><ol>\n<li><p>安装FileWatchers插件<br>打开设置找到plugins，搜索FileWatchers并安装</p>\n</li>\n<li><p>重启IDEA，打开设置搜索FileWatchers，通常是在Tools子菜单下</p>\n</li>\n<li><p>设置FileWatchers<br>添加模板，这里我选择less<br>设置要监控的文件类型及文件变更后的操作如下：<br><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fr9zdr0697j21ag0x8gs0.jpg\" alt=\"\"></p>\n</li>\n</ol>\n<p>配置完成后，当我一边写less样式时，FileWatchers将自动调用我的lessc编译器将less文件同步编译生成相应的css文件。</p>\n<p>这篇博文只是利用FileWatchers来实现了自动编译less文件，其实它的作用远不止这个。只要是希望监视文件变动后自动触发一些操作的事情都可以交给FileWatchers帮忙实现。如当你想尝试某些ES6或更高版本JS的新功能，而又担心浏览器无法识别或者不想自己手动将文件转为低版本时，你可以借助FileWatchers和bable来实现自动的代码转译。<br>又或者，你可以利用它来自动压缩混淆代码等等，如果有更好的想法可以评论跟我分享。</p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  12/53，每周一篇博，坚持！</p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>我的工作性质是属于全栈的，也就是前后端都需要干的那种”全干工程师”。在阿里又会用到很多内部自研的框架，有的框架就不那么的好用。如工作中用到的这个前端框架，写的CSS文件不支持@import语法。。。这意味着，如果你想将不同页面间样式的公共部分抽取出来再@import的方式不可行，你只能不停的重复同样的样式代码，丑陋且不可维护。<br>好在框架支持less等CSS编译语言，而在less中写@import语句是没问题的。于是想到了一个可行的方式：项目维护less样式文件，抽取公共的部分，在需要的地方@import进来，唯一的问题就是需要将这些less文件编译成浏览器认识的CSS。我可不想每次自己来执行编译。</p>","more":"<h3 id=\"FileWatchers插件\"><a href=\"#FileWatchers插件\" class=\"headerlink\" title=\"FileWatchers插件\"></a>FileWatchers插件</h3><p>IDEA下的FileWatchers插件可以帮助我实现自动编译的功能。它实际上就是一个文件监视器，当文件有所改动时，自动触发设置好的命令执行。<br>在说明FileWatchers使用之前，我们先具体的看一下，如何将less编译成可执行的CSS。</p>\n<h3 id=\"使用LESSC编译LESS文件\"><a href=\"#使用LESSC编译LESS文件\" class=\"headerlink\" title=\"使用LESSC编译LESS文件\"></a>使用LESSC编译LESS文件</h3><p>在动手之前，所需的前端依赖环境，如node.js、npm不再赘述。<br>首先使用npm安装lessc编译器：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> lessc -d -g</span><br></pre></td></tr></table></figure></p>\n<p>安装完之后就可以使用了。<br>如：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**1.less*/</span></span><br><span class=\"line\">@nice-blue: #5B83AD;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    p &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">color</span>: @<span class=\"keyword\">nice</span>-<span class=\"keyword\">blue</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>运行命令：<br><code>lessc 1.less &gt; 1.css</code><br>上述命令将生成：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> <span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: <span class=\"number\">#5B83AD</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上述简单的例子可以看出，使用less来编写样式，给我们提供了一些CSS没有的功能，如嵌套和变量。这里不再赘述，less的详细使用可以参考<a href=\"https://less.bootcss.com/\" target=\"_blank\" rel=\"noopener\">less手册</a>。</p>\n<h3 id=\"IDEA下使用FileWatchers编译less文件\"><a href=\"#IDEA下使用FileWatchers编译less文件\" class=\"headerlink\" title=\"IDEA下使用FileWatchers编译less文件\"></a>IDEA下使用FileWatchers编译less文件</h3><ol>\n<li><p>安装FileWatchers插件<br>打开设置找到plugins，搜索FileWatchers并安装</p>\n</li>\n<li><p>重启IDEA，打开设置搜索FileWatchers，通常是在Tools子菜单下</p>\n</li>\n<li><p>设置FileWatchers<br>添加模板，这里我选择less<br>设置要监控的文件类型及文件变更后的操作如下：<br><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fr9zdr0697j21ag0x8gs0.jpg\" alt=\"\"></p>\n</li>\n</ol>\n<p>配置完成后，当我一边写less样式时，FileWatchers将自动调用我的lessc编译器将less文件同步编译生成相应的css文件。</p>\n<p>这篇博文只是利用FileWatchers来实现了自动编译less文件，其实它的作用远不止这个。只要是希望监视文件变动后自动触发一些操作的事情都可以交给FileWatchers帮忙实现。如当你想尝试某些ES6或更高版本JS的新功能，而又担心浏览器无法识别或者不想自己手动将文件转为低版本时，你可以借助FileWatchers和bable来实现自动的代码转译。<br>又或者，你可以利用它来自动压缩混淆代码等等，如果有更好的想法可以评论跟我分享。</p>","sticky":0},{"title":"使用find结合xargs进行大批量复制","show":true,"date":"2016-07-19T11:59:32.000Z","_content":"##### 背景\n今天在写脚本的时候遇到这么一个问题，cp复制过程中报错：\n```\ncp: will not overwrite just-created `xxxx'\n```\n没来由的，cp这么基础的命令怎么还会出错？想了想我这命令也就复制的文件多一点，可能是cp的文件太多了，导致cp参数超限了。于是开始验证，同样的复制命令，删除了一些文件之后就cp成功了。\n\n虽然根据谷歌查找到的[**资料**](http://unix.stackexchange.com/questions/110282/cp-max-source-files-number-arguments-for-copy-utility)显示，我这cp的源文件长度还远没有到达最大限制。不纠缠于此，既然文件太多了，那么使用xargs来复制吧。\n\n##### xargs\n直接附上命令：\n```\nfind ${src_dir} -type f | xargs -i cp {} ${dst_dir}\n```\n\n由于cp是二元操作，需要传入源文件，这里需要使用xargs的替换模式。使用`-i`参数，然后可以使用`{}`表示来自标准输入的参数。\n","source":"_posts/find-xargs-cp.md","raw":"title: 使用find结合xargs进行大批量复制\nshow: true\ndate: 2016-07-19 19:59:32\ntags: [find,xargs,cp]\ncategories: 技术人生\n---\n##### 背景\n今天在写脚本的时候遇到这么一个问题，cp复制过程中报错：\n```\ncp: will not overwrite just-created `xxxx'\n```\n没来由的，cp这么基础的命令怎么还会出错？想了想我这命令也就复制的文件多一点，可能是cp的文件太多了，导致cp参数超限了。于是开始验证，同样的复制命令，删除了一些文件之后就cp成功了。\n\n虽然根据谷歌查找到的[**资料**](http://unix.stackexchange.com/questions/110282/cp-max-source-files-number-arguments-for-copy-utility)显示，我这cp的源文件长度还远没有到达最大限制。不纠缠于此，既然文件太多了，那么使用xargs来复制吧。\n\n##### xargs\n直接附上命令：\n```\nfind ${src_dir} -type f | xargs -i cp {} ${dst_dir}\n```\n\n由于cp是二元操作，需要传入源文件，这里需要使用xargs的替换模式。使用`-i`参数，然后可以使用`{}`表示来自标准输入的参数。\n","slug":"find-xargs-cp","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyztt001ifnpvtx7bsbz9","content":"<h5 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h5><p>今天在写脚本的时候遇到这么一个问题，cp复制过程中报错：<br><figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">cp:</span> will <span class=\"literal\">not</span> overwrite just-created `xxxx'</span><br></pre></td></tr></table></figure></p>\n<p>没来由的，cp这么基础的命令怎么还会出错？想了想我这命令也就复制的文件多一点，可能是cp的文件太多了，导致cp参数超限了。于是开始验证，同样的复制命令，删除了一些文件之后就cp成功了。</p>\n<p>虽然根据谷歌查找到的<a href=\"http://unix.stackexchange.com/questions/110282/cp-max-source-files-number-arguments-for-copy-utility\" target=\"_blank\" rel=\"noopener\"><strong>资料</strong></a>显示，我这cp的源文件长度还远没有到达最大限制。不纠缠于此，既然文件太多了，那么使用xargs来复制吧。</p>\n<h5 id=\"xargs\"><a href=\"#xargs\" class=\"headerlink\" title=\"xargs\"></a>xargs</h5><p>直接附上命令：<br><figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">find</span> $&#123;src_dir&#125; -<span class=\"keyword\">type</span> f | xargs -i cp &#123;&#125; $&#123;dst_dir&#125;</span><br></pre></td></tr></table></figure></p>\n<p>由于cp是二元操作，需要传入源文件，这里需要使用xargs的替换模式。使用<code>-i</code>参数，然后可以使用<code>{}</code>表示来自标准输入的参数。</p>\n","site":{"data":{}},"excerpt":"","more":"<h5 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h5><p>今天在写脚本的时候遇到这么一个问题，cp复制过程中报错：<br><figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">cp:</span> will <span class=\"literal\">not</span> overwrite just-created `xxxx'</span><br></pre></td></tr></table></figure></p>\n<p>没来由的，cp这么基础的命令怎么还会出错？想了想我这命令也就复制的文件多一点，可能是cp的文件太多了，导致cp参数超限了。于是开始验证，同样的复制命令，删除了一些文件之后就cp成功了。</p>\n<p>虽然根据谷歌查找到的<a href=\"http://unix.stackexchange.com/questions/110282/cp-max-source-files-number-arguments-for-copy-utility\" target=\"_blank\" rel=\"noopener\"><strong>资料</strong></a>显示，我这cp的源文件长度还远没有到达最大限制。不纠缠于此，既然文件太多了，那么使用xargs来复制吧。</p>\n<h5 id=\"xargs\"><a href=\"#xargs\" class=\"headerlink\" title=\"xargs\"></a>xargs</h5><p>直接附上命令：<br><figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">find</span> $&#123;src_dir&#125; -<span class=\"keyword\">type</span> f | xargs -i cp &#123;&#125; $&#123;dst_dir&#125;</span><br></pre></td></tr></table></figure></p>\n<p>由于cp是二元操作，需要传入源文件，这里需要使用xargs的替换模式。使用<code>-i</code>参数，然后可以使用<code>{}</code>表示来自标准输入的参数。</p>\n","sticky":0},{"title":"freecodecamp算法题解系列（一）--初级算法","show":true,"date":"2016-02-28T09:08:49.000Z","_content":"#### 背景\n> 好记性不如烂笔头。\n\n[freecodecamp](http://www.freecodecamp.com/)是一个开源社区项目，提供免费的在线编程学习训练，主要以前端为主。完成相应的内容还可以获得freecodecamp颁发的电子认证，该电子认证在领英上还可以像普通学历一样作为一项个人的教育经历。\n不过，freecodecamp最近频繁的更新导致用户体验反而不如之前好了：现在所有你做过的题目都一股脑的放在了一起没有分类了。。以前会按照HTML、CSS、基础算法、中级算法、高级算法、后端等等分门别类一目了然。这些分类在未做题列表里还是这么分，做过的题也有标记，不过如果点进已经做过的题会发现之前的解决方案已经不再自动展现出来了。总之就是很麻烦，如果你想review的话。\n如此这般就把做过的算法题作为博文梳理下吧，以便日后review巩固用法。\n\n#### Basic Algorithm\n本篇梳理基础算法，大多数都很简单，如果你有更好的方法欢迎分享，毕竟我的算法水平真的很烂。。梳理只是自己备忘，如果不幸有大神来看过，板砖轻拍。\n\n###### 1. [Reverse a String](http://www.freecodecamp.com/challenges/reverse-a-string)\n> Reverse the provided string.\nYou may need to turn the string into an array before you can reverse it.\nYour result must be a string.\n\n将给定字符串逆序输出\n```js\nfunction reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\n\nreverseString(\"hello\");\n```\n\n<!--more-->\n\n###### 2. [Factorialize a Number](http://www.freecodecamp.com/challenges/factorialize-a-number)\n> Return the factorial of the provided integer.\nIf the integer is represented with the letter n, a factorial is the product of all positive integers less than or equal to n.\nFactorials are often represented with the shorthand notation n!\nFor example: 5! = 1 * 2 * 3 * 4 * 5 = 120\n\n输出给定数字的阶乘\n```js\nfunction factorialize(num) {\n    if(num === 0)return 1;\n    else {\n        return num * factorialize(num - 1);\n    }\n}\n\nfactorialize(5);\n```\n\n###### 3. [Check for Palindromes](http://www.freecodecamp.com/challenges/check-for-palindromes)\n> Return true if the given string is a palindrome. Otherwise, return false.\nA palindrome is a word or sentence that's spelled the same way both forward and backward, ignoring punctuation, case, and spacing.\n\n检查回文\n```js\nfunction palindrome(str) {\n    var newStr1 = str.replace(/[\\s\\.,]/g,\"\").toLowerCase().replace(/[\\(\\)\\-_:\\\\\\/]/g,\"\");\n\n    var newStr2 = str.replace(/[\\s\\.,]/g,\"\").toLowerCase().split(\"\").reverse().join(\"\").replace(/[\\(\\)\\-_:\\\\\\/]/g,\"\");\n    return newStr1 == newStr2;\n}\n\npalindrome(\"eye\");\n\n```\n这题需要注意的是，根据题目给出的tester case以及题干的提示，所有的非字母数字字符（标点，空格以及符号）都不影响回文串的判断。因此使用正则表达式先剔除无效字符再将每个字符逆序后与原串对比。\n\n###### 4. [Find the Longest Word in a String](http://www.freecodecamp.com/challenges/find-the-longest-word-in-a-string)\n> Return the length of the longest word in the provided sentence.\n\n找出给定句子中最长的单词。\n```js\nfunction findLongestWord(str) {\n    var tmp = str.split(\" \");\n    var len = 0;\n    tmp.map(function(val){\n        len = len < val.length ? val.length : len;\n    });\n    return len;\n}\n\nfindLongestWord(\"The quick brown fox jumped over the lazy dog\");\n```\n\n###### 5. [Title Case a Sentence](http://www.freecodecamp.com/challenges/title-case-a-sentence)\n> Return the provided string with the first letter of each word capitalized. Make sure the rest of the word is in lower case.\nFor the purpose of this exercise, you should also capitalize connecting words like \"the\" and \"of\".\n\n将给定词首字母大写，其他的小写。\n```js\nfunction titleCase(str) {\n    var tmp = str.toLowerCase().split(\" \");\n    var res = \"\";\n    tmp.map(function(val){\n        var first = val.charAt(0);\n        var preNew = val.replace(first,first.toUpperCase());\n        res === undefined ? res = preNew + \" \" : res += preNew + \" \";\n    });\n    return (res.replace(/\\s$/,''));\n}\n\ntitleCase(\"I'm a little tea pot\");\ntitleCase(\"sHoRt AnD sToUt\");\ntitleCase(\"HERE IS MY HANDLE HERE IS MY SPOUT\");\n```\n\n###### 6. [Return Largest Numbers in Array](http://www.freecodecamp.com/challenges/return-largest-numbers-in-arrays)\n> Return an array consisting of the largest number from each provided sub-array. For simplicity, the provided array will contain exactly 4 sub-arrays.\n\n返回数组最大值，当然多维数组要返回数组，否则也太简单了\n```js\nfunction largestOfFour(arr) {\nvar ret = [];\nfor(var i=0,len=arr.length;i<len;i++){\n    var max = arr[i][0];\n    for(var j=0,len2=arr[i].length;j<len2;j++){\n        if(arr[i][j] > max){\n            max = arr[i][j];\n        }\n        if(j == len2 - 1){\n            ret.push(max);\n        }\n    }\n}\nreturn (ret);\n}\n\nlargestOfFour([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]);\n```\n\n###### 7. [Confirm the Ending ](http://www.freecodecamp.com/challenges/confirm-the-ending)\n> Check if a string (first argument) ends with the given target string (second argument).\n\n检查给定字串是否以给定目标字串结尾\n```js\nfunction end(str, target) {\n    /*\n    if(new RegExp(target + \"$\").test(str)){\n        return true;\n    }else return false;\n    */\n    var targetLen = target.length;\n    if(str.substr(-targetLen) === target){\n        return true;\n    }else {\n        return false;\n    }\n}\nend(\"He has to give me a new name\", \"name\");\n\n```\n\n###### 8. [Repeat a string repeat a string ](http://www.freecodecamp.com/challenges/repeat-a-string-repeat-a-string)\n> Repeat a given string (first argument) num times (second argument). Return an empty string if num is a negative number.\n\n以给定的次数重复指定字串\n```js\nfunction repeat(str, num) {\n    if(num<0){\n        return \"\";\n    }else {\n        var tmp=\"\";\n        for(var i=0;i<num;i++){\n            tmp = tmp + str;\n        }\n        return (tmp);\n    }\n}\nrepeat(\"abc\", 3);\n\n```\n\n###### 9. [Truncate a string](http://www.freecodecamp.com/challenges/truncate-a-string)\n> Truncate a string (first argument) if it is longer than the given maximum string length (second argument). Return the truncated string with a \"...\" ending.\n\n截断字符串\n```js\nfunction truncate(str, num) {\n    if(str.length <= num){\n        return str;\n    }else {\n        if(num > 3){\n            num -= 3;\n        }\n        var truncted = str.substr(0,num);\n\n        return truncted + \"...\";\n    }\n}\n\ntruncate(\"A-tisket a-tasket A green and yellow basket\", 11);\n```\n\n###### 10. [Chunky Monkey](http://www.freecodecamp.com/challenges/chunky-monkey)\n> Write a function that splits an array (first argument) into groups the length of size (second argument) and returns them as a two-dimensional array.\n\n将指定数组按给定长度分割\n```js\nfunction chunk(arr, size) {\n    var res = [];\n    var tmp = [];\n    for(var i=0,len=arr.length;i<len;i++){\n        tmp.push(arr[i]);\n        if((i+1)%size === 0 || i === len - 1){\n            res.push(tmp);\n            tmp = [];\n        }\n    }\nreturn ( res );\n}\n\nchunk([\"a\", \"b\", \"c\", \"d\"], 2);\n```\n\n###### 11. [Slasher Flick](http://www.freecodecamp.com/challenges/slasher-flick)\n> Return the remaining elements of an array after chopping off n elements from the head.\nThe head means the beginning of the array, or the zeroth index.\n\n返回指定数组去除某些给定元素后的结果\n```js\nfunction slasher(arr, howMany) {\n    if(howMany >= arr.length){\n        return arr.slice(arr.length);\n    }else {\n        return arr.slice(-arr.length + howMany);\n    }\n}\n\nslasher([1, 2, 3], 4);\n```\n\n###### 12. [Mutations](http://www.freecodecamp.com/challenges/mutations\n> Return true if the string in the first element of the array contains all of the letters of the string in the second element of the array.\n\n判断两个给定数组的包含关系\n```js\nfunction mutation(arr) {\n    var first =  arr[0].toLowerCase(),\n    sec = arr[1].toLowerCase();\n    var cnt = 0;\n    for(var i=0,len=sec.length;i<len;i++){\n        if(first.indexOf(sec[i]) != -1){\n            cnt ++;\n        }\n    }\n    if(cnt === len){\n        return true;\n    }else {\n        return false;\n    }\n}\n\nmutation([\"hello\", \"hey\"]);\n```\n\n###### 13. [Falsy Bouncer](http://www.freecodecamp.com/challenges/falsy-bouncer)\n> Remove all falsy values from an array.\n\n去除数组所有假值\n```js\nfunction bouncer(arr) {\n    return arr.filter(function(val){\n        return val;\n    });\n}\n\nbouncer([7, \"ate\", \"\", false, 9]);\nbouncer([false, null, 0, NaN, undefined, \"\"]);\n```\n\n###### 14. [Seek and Destroy](http://www.freecodecamp.com/challenges/seek-and-destroy)\n> You will be provided with an initial array (the first argument in the destroyer function), followed by one or more arguments. Remove all elements from the initial array that are of the same value as these arguments.\n\n去除指定数组中包含给定参数的值\n```js\nfunction destroyer(arr) {\n    var tmp = arguments[0];\n    var newArr = [];\n    for(var i=0,len = tmp.length;i<len;i++){\n        var flag = false;\n        for(var j=0,len2 = arguments.length - 1;j<=len2;j++){\n            if(tmp[i] == arguments[j]) {\n                flag = true;\n            }\n        }\n        if(!flag){\n            newArr.push(tmp[i]);\n        }\n    }\n\n    return newArr;\n}\n\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);\n\n```\n\n###### 15. [Where do I belong](http://www.freecodecamp.com/challenges/where-do-i-belong)\n> Return the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted.\n\n查找给定参数待插入指定数组的索引位置\n```js\nfunction where(arr, num) {\n    // Find my place in this sorted array.\n    //1，先排序\n    //2.找到插入位置\n    //3.注意排序规则\n    //4.注意边界条件\n    var arr = arr.sort(function(a,b){\n        return a - b;\n    });\n    for(var i=0,len=arr.length;i<len;i++){\n        if(arr[i] < num)continue;\n        else return i;\n    }\n    return arr.length;\n}\n\nwhere([40, 60], 50);\nwhere([5, 3, 20, 3], 5);\n```\n\n###### 16. [Caesars Cipher](http://www.freecodecamp.com/challenges/caesars-cipher)\n> One of the simplest and most widely known ciphers is a Caesar cipher, also known as a shift cipher. In a shift cipher the meanings of the letters are shifted by some set amount.\n\n不多解释，实现凯撒密码解密加密的字符串\n```js\nfunction rot13(str) { \n    /*\n    var inStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    var outStr = \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\";\n    var ret = [];\n    var i=0,j=0,len = str.length,leng = outStr.length;\n    for(i=0;i<len;i++){\n        for(j=0;j<leng;j++){\n            if(outStr[j] === str[i]){\n                ret.push(inStr[j]);\n                break;\n            }\n        }\n        if(j === leng){\n            ret.push(str[i]);\n        }\n    }\n    return ret.join(\"\");\n    */\n}\n// Change the inputs below to test\nrot13(\"SERR PBQR PNZC\");\n```\n以上方法采用了穷举密码对，看起来有点\"蠢笨\"，但其实是很好的一种方法。只是用了穷举映射但还是避免不了要循环查找相应地性能并没有多少提升。\n按照题干提示的采用`String API`的方式，可以如下解决：\n```js\nfunction rot13(str) { // LBH QVQ VG!\n    var ret = [];\n    for(var i = 0,len=str.length;i<len;i++){\n        if(/\\w/.test(str[i])) {       \n            var t = str[i].charCodeAt() + 13\n            //根据题干的要求，密文的范围在大写字母内，90为\"Z\"的ASCII码，13为凯撒13密码的加密方法：平移13位\n            t = t > 90 ? (str[i].charCodeAt() - 13 : t; \n            ret.push(String.fromCharCode(t));\n        }else{\n            ret.push(str[i]);\n        }\n    }\n    return ret.join(\"\");\n}\n\n// Change the inputs below to test\nconsole.log(rot13(\"SERR PBQR PNZC\"));\n```\n\n初级算法都比较简单，基本上利用String的API就解决了。\n","source":"_posts/freecodecamp-Basic-Algorithm-Scripting.md","raw":"title: freecodecamp算法题解系列（一）--初级算法\nshow: true\ndate: 2016-02-28 17:08:49\ntags: [javascript,算法，字符串]\ncategories: [技术人生]\n---\n#### 背景\n> 好记性不如烂笔头。\n\n[freecodecamp](http://www.freecodecamp.com/)是一个开源社区项目，提供免费的在线编程学习训练，主要以前端为主。完成相应的内容还可以获得freecodecamp颁发的电子认证，该电子认证在领英上还可以像普通学历一样作为一项个人的教育经历。\n不过，freecodecamp最近频繁的更新导致用户体验反而不如之前好了：现在所有你做过的题目都一股脑的放在了一起没有分类了。。以前会按照HTML、CSS、基础算法、中级算法、高级算法、后端等等分门别类一目了然。这些分类在未做题列表里还是这么分，做过的题也有标记，不过如果点进已经做过的题会发现之前的解决方案已经不再自动展现出来了。总之就是很麻烦，如果你想review的话。\n如此这般就把做过的算法题作为博文梳理下吧，以便日后review巩固用法。\n\n#### Basic Algorithm\n本篇梳理基础算法，大多数都很简单，如果你有更好的方法欢迎分享，毕竟我的算法水平真的很烂。。梳理只是自己备忘，如果不幸有大神来看过，板砖轻拍。\n\n###### 1. [Reverse a String](http://www.freecodecamp.com/challenges/reverse-a-string)\n> Reverse the provided string.\nYou may need to turn the string into an array before you can reverse it.\nYour result must be a string.\n\n将给定字符串逆序输出\n```js\nfunction reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\n\nreverseString(\"hello\");\n```\n\n<!--more-->\n\n###### 2. [Factorialize a Number](http://www.freecodecamp.com/challenges/factorialize-a-number)\n> Return the factorial of the provided integer.\nIf the integer is represented with the letter n, a factorial is the product of all positive integers less than or equal to n.\nFactorials are often represented with the shorthand notation n!\nFor example: 5! = 1 * 2 * 3 * 4 * 5 = 120\n\n输出给定数字的阶乘\n```js\nfunction factorialize(num) {\n    if(num === 0)return 1;\n    else {\n        return num * factorialize(num - 1);\n    }\n}\n\nfactorialize(5);\n```\n\n###### 3. [Check for Palindromes](http://www.freecodecamp.com/challenges/check-for-palindromes)\n> Return true if the given string is a palindrome. Otherwise, return false.\nA palindrome is a word or sentence that's spelled the same way both forward and backward, ignoring punctuation, case, and spacing.\n\n检查回文\n```js\nfunction palindrome(str) {\n    var newStr1 = str.replace(/[\\s\\.,]/g,\"\").toLowerCase().replace(/[\\(\\)\\-_:\\\\\\/]/g,\"\");\n\n    var newStr2 = str.replace(/[\\s\\.,]/g,\"\").toLowerCase().split(\"\").reverse().join(\"\").replace(/[\\(\\)\\-_:\\\\\\/]/g,\"\");\n    return newStr1 == newStr2;\n}\n\npalindrome(\"eye\");\n\n```\n这题需要注意的是，根据题目给出的tester case以及题干的提示，所有的非字母数字字符（标点，空格以及符号）都不影响回文串的判断。因此使用正则表达式先剔除无效字符再将每个字符逆序后与原串对比。\n\n###### 4. [Find the Longest Word in a String](http://www.freecodecamp.com/challenges/find-the-longest-word-in-a-string)\n> Return the length of the longest word in the provided sentence.\n\n找出给定句子中最长的单词。\n```js\nfunction findLongestWord(str) {\n    var tmp = str.split(\" \");\n    var len = 0;\n    tmp.map(function(val){\n        len = len < val.length ? val.length : len;\n    });\n    return len;\n}\n\nfindLongestWord(\"The quick brown fox jumped over the lazy dog\");\n```\n\n###### 5. [Title Case a Sentence](http://www.freecodecamp.com/challenges/title-case-a-sentence)\n> Return the provided string with the first letter of each word capitalized. Make sure the rest of the word is in lower case.\nFor the purpose of this exercise, you should also capitalize connecting words like \"the\" and \"of\".\n\n将给定词首字母大写，其他的小写。\n```js\nfunction titleCase(str) {\n    var tmp = str.toLowerCase().split(\" \");\n    var res = \"\";\n    tmp.map(function(val){\n        var first = val.charAt(0);\n        var preNew = val.replace(first,first.toUpperCase());\n        res === undefined ? res = preNew + \" \" : res += preNew + \" \";\n    });\n    return (res.replace(/\\s$/,''));\n}\n\ntitleCase(\"I'm a little tea pot\");\ntitleCase(\"sHoRt AnD sToUt\");\ntitleCase(\"HERE IS MY HANDLE HERE IS MY SPOUT\");\n```\n\n###### 6. [Return Largest Numbers in Array](http://www.freecodecamp.com/challenges/return-largest-numbers-in-arrays)\n> Return an array consisting of the largest number from each provided sub-array. For simplicity, the provided array will contain exactly 4 sub-arrays.\n\n返回数组最大值，当然多维数组要返回数组，否则也太简单了\n```js\nfunction largestOfFour(arr) {\nvar ret = [];\nfor(var i=0,len=arr.length;i<len;i++){\n    var max = arr[i][0];\n    for(var j=0,len2=arr[i].length;j<len2;j++){\n        if(arr[i][j] > max){\n            max = arr[i][j];\n        }\n        if(j == len2 - 1){\n            ret.push(max);\n        }\n    }\n}\nreturn (ret);\n}\n\nlargestOfFour([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]);\n```\n\n###### 7. [Confirm the Ending ](http://www.freecodecamp.com/challenges/confirm-the-ending)\n> Check if a string (first argument) ends with the given target string (second argument).\n\n检查给定字串是否以给定目标字串结尾\n```js\nfunction end(str, target) {\n    /*\n    if(new RegExp(target + \"$\").test(str)){\n        return true;\n    }else return false;\n    */\n    var targetLen = target.length;\n    if(str.substr(-targetLen) === target){\n        return true;\n    }else {\n        return false;\n    }\n}\nend(\"He has to give me a new name\", \"name\");\n\n```\n\n###### 8. [Repeat a string repeat a string ](http://www.freecodecamp.com/challenges/repeat-a-string-repeat-a-string)\n> Repeat a given string (first argument) num times (second argument). Return an empty string if num is a negative number.\n\n以给定的次数重复指定字串\n```js\nfunction repeat(str, num) {\n    if(num<0){\n        return \"\";\n    }else {\n        var tmp=\"\";\n        for(var i=0;i<num;i++){\n            tmp = tmp + str;\n        }\n        return (tmp);\n    }\n}\nrepeat(\"abc\", 3);\n\n```\n\n###### 9. [Truncate a string](http://www.freecodecamp.com/challenges/truncate-a-string)\n> Truncate a string (first argument) if it is longer than the given maximum string length (second argument). Return the truncated string with a \"...\" ending.\n\n截断字符串\n```js\nfunction truncate(str, num) {\n    if(str.length <= num){\n        return str;\n    }else {\n        if(num > 3){\n            num -= 3;\n        }\n        var truncted = str.substr(0,num);\n\n        return truncted + \"...\";\n    }\n}\n\ntruncate(\"A-tisket a-tasket A green and yellow basket\", 11);\n```\n\n###### 10. [Chunky Monkey](http://www.freecodecamp.com/challenges/chunky-monkey)\n> Write a function that splits an array (first argument) into groups the length of size (second argument) and returns them as a two-dimensional array.\n\n将指定数组按给定长度分割\n```js\nfunction chunk(arr, size) {\n    var res = [];\n    var tmp = [];\n    for(var i=0,len=arr.length;i<len;i++){\n        tmp.push(arr[i]);\n        if((i+1)%size === 0 || i === len - 1){\n            res.push(tmp);\n            tmp = [];\n        }\n    }\nreturn ( res );\n}\n\nchunk([\"a\", \"b\", \"c\", \"d\"], 2);\n```\n\n###### 11. [Slasher Flick](http://www.freecodecamp.com/challenges/slasher-flick)\n> Return the remaining elements of an array after chopping off n elements from the head.\nThe head means the beginning of the array, or the zeroth index.\n\n返回指定数组去除某些给定元素后的结果\n```js\nfunction slasher(arr, howMany) {\n    if(howMany >= arr.length){\n        return arr.slice(arr.length);\n    }else {\n        return arr.slice(-arr.length + howMany);\n    }\n}\n\nslasher([1, 2, 3], 4);\n```\n\n###### 12. [Mutations](http://www.freecodecamp.com/challenges/mutations\n> Return true if the string in the first element of the array contains all of the letters of the string in the second element of the array.\n\n判断两个给定数组的包含关系\n```js\nfunction mutation(arr) {\n    var first =  arr[0].toLowerCase(),\n    sec = arr[1].toLowerCase();\n    var cnt = 0;\n    for(var i=0,len=sec.length;i<len;i++){\n        if(first.indexOf(sec[i]) != -1){\n            cnt ++;\n        }\n    }\n    if(cnt === len){\n        return true;\n    }else {\n        return false;\n    }\n}\n\nmutation([\"hello\", \"hey\"]);\n```\n\n###### 13. [Falsy Bouncer](http://www.freecodecamp.com/challenges/falsy-bouncer)\n> Remove all falsy values from an array.\n\n去除数组所有假值\n```js\nfunction bouncer(arr) {\n    return arr.filter(function(val){\n        return val;\n    });\n}\n\nbouncer([7, \"ate\", \"\", false, 9]);\nbouncer([false, null, 0, NaN, undefined, \"\"]);\n```\n\n###### 14. [Seek and Destroy](http://www.freecodecamp.com/challenges/seek-and-destroy)\n> You will be provided with an initial array (the first argument in the destroyer function), followed by one or more arguments. Remove all elements from the initial array that are of the same value as these arguments.\n\n去除指定数组中包含给定参数的值\n```js\nfunction destroyer(arr) {\n    var tmp = arguments[0];\n    var newArr = [];\n    for(var i=0,len = tmp.length;i<len;i++){\n        var flag = false;\n        for(var j=0,len2 = arguments.length - 1;j<=len2;j++){\n            if(tmp[i] == arguments[j]) {\n                flag = true;\n            }\n        }\n        if(!flag){\n            newArr.push(tmp[i]);\n        }\n    }\n\n    return newArr;\n}\n\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);\n\n```\n\n###### 15. [Where do I belong](http://www.freecodecamp.com/challenges/where-do-i-belong)\n> Return the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted.\n\n查找给定参数待插入指定数组的索引位置\n```js\nfunction where(arr, num) {\n    // Find my place in this sorted array.\n    //1，先排序\n    //2.找到插入位置\n    //3.注意排序规则\n    //4.注意边界条件\n    var arr = arr.sort(function(a,b){\n        return a - b;\n    });\n    for(var i=0,len=arr.length;i<len;i++){\n        if(arr[i] < num)continue;\n        else return i;\n    }\n    return arr.length;\n}\n\nwhere([40, 60], 50);\nwhere([5, 3, 20, 3], 5);\n```\n\n###### 16. [Caesars Cipher](http://www.freecodecamp.com/challenges/caesars-cipher)\n> One of the simplest and most widely known ciphers is a Caesar cipher, also known as a shift cipher. In a shift cipher the meanings of the letters are shifted by some set amount.\n\n不多解释，实现凯撒密码解密加密的字符串\n```js\nfunction rot13(str) { \n    /*\n    var inStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    var outStr = \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\";\n    var ret = [];\n    var i=0,j=0,len = str.length,leng = outStr.length;\n    for(i=0;i<len;i++){\n        for(j=0;j<leng;j++){\n            if(outStr[j] === str[i]){\n                ret.push(inStr[j]);\n                break;\n            }\n        }\n        if(j === leng){\n            ret.push(str[i]);\n        }\n    }\n    return ret.join(\"\");\n    */\n}\n// Change the inputs below to test\nrot13(\"SERR PBQR PNZC\");\n```\n以上方法采用了穷举密码对，看起来有点\"蠢笨\"，但其实是很好的一种方法。只是用了穷举映射但还是避免不了要循环查找相应地性能并没有多少提升。\n按照题干提示的采用`String API`的方式，可以如下解决：\n```js\nfunction rot13(str) { // LBH QVQ VG!\n    var ret = [];\n    for(var i = 0,len=str.length;i<len;i++){\n        if(/\\w/.test(str[i])) {       \n            var t = str[i].charCodeAt() + 13\n            //根据题干的要求，密文的范围在大写字母内，90为\"Z\"的ASCII码，13为凯撒13密码的加密方法：平移13位\n            t = t > 90 ? (str[i].charCodeAt() - 13 : t; \n            ret.push(String.fromCharCode(t));\n        }else{\n            ret.push(str[i]);\n        }\n    }\n    return ret.join(\"\");\n}\n\n// Change the inputs below to test\nconsole.log(rot13(\"SERR PBQR PNZC\"));\n```\n\n初级算法都比较简单，基本上利用String的API就解决了。\n","slug":"freecodecamp-Basic-Algorithm-Scripting","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyztx001lfnpvp2r99yrl","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><blockquote>\n<p>好记性不如烂笔头。</p>\n</blockquote>\n<p><a href=\"http://www.freecodecamp.com/\" target=\"_blank\" rel=\"noopener\">freecodecamp</a>是一个开源社区项目，提供免费的在线编程学习训练，主要以前端为主。完成相应的内容还可以获得freecodecamp颁发的电子认证，该电子认证在领英上还可以像普通学历一样作为一项个人的教育经历。<br>不过，freecodecamp最近频繁的更新导致用户体验反而不如之前好了：现在所有你做过的题目都一股脑的放在了一起没有分类了。。以前会按照HTML、CSS、基础算法、中级算法、高级算法、后端等等分门别类一目了然。这些分类在未做题列表里还是这么分，做过的题也有标记，不过如果点进已经做过的题会发现之前的解决方案已经不再自动展现出来了。总之就是很麻烦，如果你想review的话。<br>如此这般就把做过的算法题作为博文梳理下吧，以便日后review巩固用法。</p>\n<h4 id=\"Basic-Algorithm\"><a href=\"#Basic-Algorithm\" class=\"headerlink\" title=\"Basic Algorithm\"></a>Basic Algorithm</h4><p>本篇梳理基础算法，大多数都很简单，如果你有更好的方法欢迎分享，毕竟我的算法水平真的很烂。。梳理只是自己备忘，如果不幸有大神来看过，板砖轻拍。</p>\n<h6 id=\"1-Reverse-a-String\"><a href=\"#1-Reverse-a-String\" class=\"headerlink\" title=\"1. Reverse a String\"></a>1. <a href=\"http://www.freecodecamp.com/challenges/reverse-a-string\" target=\"_blank\" rel=\"noopener\">Reverse a String</a></h6><blockquote>\n<p>Reverse the provided string.<br>You may need to turn the string into an array before you can reverse it.<br>Your result must be a string.</p>\n</blockquote>\n<p>将给定字符串逆序输出<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseString</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.split(<span class=\"string\">\"\"</span>).reverse().join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>);</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h6 id=\"2-Factorialize-a-Number\"><a href=\"#2-Factorialize-a-Number\" class=\"headerlink\" title=\"2. Factorialize a Number\"></a>2. <a href=\"http://www.freecodecamp.com/challenges/factorialize-a-number\" target=\"_blank\" rel=\"noopener\">Factorialize a Number</a></h6><blockquote>\n<p>Return the factorial of the provided integer.<br>If the integer is represented with the letter n, a factorial is the product of all positive integers less than or equal to n.<br>Factorials are often represented with the shorthand notation n!<br>For example: 5! = 1 <em> 2 </em> 3 <em> 4 </em> 5 = 120</p>\n</blockquote>\n<p>输出给定数字的阶乘<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">factorialize</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num === <span class=\"number\">0</span>)<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num * factorialize(num - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">factorialize(<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3-Check-for-Palindromes\"><a href=\"#3-Check-for-Palindromes\" class=\"headerlink\" title=\"3. Check for Palindromes\"></a>3. <a href=\"http://www.freecodecamp.com/challenges/check-for-palindromes\" target=\"_blank\" rel=\"noopener\">Check for Palindromes</a></h6><blockquote>\n<p>Return true if the given string is a palindrome. Otherwise, return false.<br>A palindrome is a word or sentence that’s spelled the same way both forward and backward, ignoring punctuation, case, and spacing.</p>\n</blockquote>\n<p>检查回文<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">palindrome</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newStr1 = str.replace(<span class=\"regexp\">/[\\s\\.,]/g</span>,<span class=\"string\">\"\"</span>).toLowerCase().replace(<span class=\"regexp\">/[\\(\\)\\-_:\\\\\\/]/g</span>,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newStr2 = str.replace(<span class=\"regexp\">/[\\s\\.,]/g</span>,<span class=\"string\">\"\"</span>).toLowerCase().split(<span class=\"string\">\"\"</span>).reverse().join(<span class=\"string\">\"\"</span>).replace(<span class=\"regexp\">/[\\(\\)\\-_:\\\\\\/]/g</span>,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newStr1 == newStr2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">palindrome(<span class=\"string\">\"eye\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p>这题需要注意的是，根据题目给出的tester case以及题干的提示，所有的非字母数字字符（标点，空格以及符号）都不影响回文串的判断。因此使用正则表达式先剔除无效字符再将每个字符逆序后与原串对比。</p>\n<h6 id=\"4-Find-the-Longest-Word-in-a-String\"><a href=\"#4-Find-the-Longest-Word-in-a-String\" class=\"headerlink\" title=\"4. Find the Longest Word in a String\"></a>4. <a href=\"http://www.freecodecamp.com/challenges/find-the-longest-word-in-a-string\" target=\"_blank\" rel=\"noopener\">Find the Longest Word in a String</a></h6><blockquote>\n<p>Return the length of the longest word in the provided sentence.</p>\n</blockquote>\n<p>找出给定句子中最长的单词。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">findLongestWord</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = str.split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    tmp.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        len = len &lt; val.length ? val.length : len;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">findLongestWord(<span class=\"string\">\"The quick brown fox jumped over the lazy dog\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"5-Title-Case-a-Sentence\"><a href=\"#5-Title-Case-a-Sentence\" class=\"headerlink\" title=\"5. Title Case a Sentence\"></a>5. <a href=\"http://www.freecodecamp.com/challenges/title-case-a-sentence\" target=\"_blank\" rel=\"noopener\">Title Case a Sentence</a></h6><blockquote>\n<p>Return the provided string with the first letter of each word capitalized. Make sure the rest of the word is in lower case.<br>For the purpose of this exercise, you should also capitalize connecting words like “the” and “of”.</p>\n</blockquote>\n<p>将给定词首字母大写，其他的小写。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">titleCase</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = str.toLowerCase().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    tmp.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> first = val.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> preNew = val.replace(first,first.toUpperCase());</span><br><span class=\"line\">        res === <span class=\"literal\">undefined</span> ? res = preNew + <span class=\"string\">\" \"</span> : res += preNew + <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (res.replace(<span class=\"regexp\">/\\s$/</span>,<span class=\"string\">''</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">titleCase(<span class=\"string\">\"I'm a little tea pot\"</span>);</span><br><span class=\"line\">titleCase(<span class=\"string\">\"sHoRt AnD sToUt\"</span>);</span><br><span class=\"line\">titleCase(<span class=\"string\">\"HERE IS MY HANDLE HERE IS MY SPOUT\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"6-Return-Largest-Numbers-in-Array\"><a href=\"#6-Return-Largest-Numbers-in-Array\" class=\"headerlink\" title=\"6. Return Largest Numbers in Array\"></a>6. <a href=\"http://www.freecodecamp.com/challenges/return-largest-numbers-in-arrays\" target=\"_blank\" rel=\"noopener\">Return Largest Numbers in Array</a></h6><blockquote>\n<p>Return an array consisting of the largest number from each provided sub-array. For simplicity, the provided array will contain exactly 4 sub-arrays.</p>\n</blockquote>\n<p>返回数组最大值，当然多维数组要返回数组，否则也太简单了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">largestOfFour</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ret = [];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=arr.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> max = arr[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,len2=arr[i].length;j&lt;len2;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[i][j] &gt; max)&#123;</span><br><span class=\"line\">            max = arr[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j == len2 - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            ret.push(max);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> (ret);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">largestOfFour([[<span class=\"number\">13</span>, <span class=\"number\">27</span>, <span class=\"number\">18</span>, <span class=\"number\">26</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>], [<span class=\"number\">32</span>, <span class=\"number\">35</span>, <span class=\"number\">37</span>, <span class=\"number\">39</span>], [<span class=\"number\">1000</span>, <span class=\"number\">1001</span>, <span class=\"number\">857</span>, <span class=\"number\">1</span>]]);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"7-Confirm-the-Ending\"><a href=\"#7-Confirm-the-Ending\" class=\"headerlink\" title=\"7. Confirm the Ending \"></a>7. <a href=\"http://www.freecodecamp.com/challenges/confirm-the-ending\" target=\"_blank\" rel=\"noopener\">Confirm the Ending </a></h6><blockquote>\n<p>Check if a string (first argument) ends with the given target string (second argument).</p>\n</blockquote>\n<p>检查给定字串是否以给定目标字串结尾<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">end</span>(<span class=\"params\">str, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    if(new RegExp(target + \"$\").test(str))&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        return true;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;else return false;</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> targetLen = target.length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(str.substr(-targetLen) === target)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">end(<span class=\"string\">\"He has to give me a new name\"</span>, <span class=\"string\">\"name\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"8-Repeat-a-string-repeat-a-string\"><a href=\"#8-Repeat-a-string-repeat-a-string\" class=\"headerlink\" title=\"8. Repeat a string repeat a string \"></a>8. <a href=\"http://www.freecodecamp.com/challenges/repeat-a-string-repeat-a-string\" target=\"_blank\" rel=\"noopener\">Repeat a string repeat a string </a></h6><blockquote>\n<p>Repeat a given string (first argument) num times (second argument). Return an empty string if num is a negative number.</p>\n</blockquote>\n<p>以给定的次数重复指定字串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">repeat</span>(<span class=\"params\">str, num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> tmp=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;num;i++)&#123;</span><br><span class=\"line\">            tmp = tmp + str;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (tmp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">repeat(<span class=\"string\">\"abc\"</span>, <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"9-Truncate-a-string\"><a href=\"#9-Truncate-a-string\" class=\"headerlink\" title=\"9. Truncate a string\"></a>9. <a href=\"http://www.freecodecamp.com/challenges/truncate-a-string\" target=\"_blank\" rel=\"noopener\">Truncate a string</a></h6><blockquote>\n<p>Truncate a string (first argument) if it is longer than the given maximum string length (second argument). Return the truncated string with a “…” ending.</p>\n</blockquote>\n<p>截断字符串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">truncate</span>(<span class=\"params\">str, num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(str.length &lt;= num)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(num &gt; <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            num -= <span class=\"number\">3</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> truncted = str.substr(<span class=\"number\">0</span>,num);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> truncted + <span class=\"string\">\"...\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">truncate(<span class=\"string\">\"A-tisket a-tasket A green and yellow basket\"</span>, <span class=\"number\">11</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"10-Chunky-Monkey\"><a href=\"#10-Chunky-Monkey\" class=\"headerlink\" title=\"10. Chunky Monkey\"></a>10. <a href=\"http://www.freecodecamp.com/challenges/chunky-monkey\" target=\"_blank\" rel=\"noopener\">Chunky Monkey</a></h6><blockquote>\n<p>Write a function that splits an array (first argument) into groups the length of size (second argument) and returns them as a two-dimensional array.</p>\n</blockquote>\n<p>将指定数组按给定长度分割<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">chunk</span>(<span class=\"params\">arr, size</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=arr.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        tmp.push(arr[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((i+<span class=\"number\">1</span>)%size === <span class=\"number\">0</span> || i === len - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            res.push(tmp);</span><br><span class=\"line\">            tmp = [];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> ( res );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">chunk([<span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span>, <span class=\"string\">\"c\"</span>, <span class=\"string\">\"d\"</span>], <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"11-Slasher-Flick\"><a href=\"#11-Slasher-Flick\" class=\"headerlink\" title=\"11. Slasher Flick\"></a>11. <a href=\"http://www.freecodecamp.com/challenges/slasher-flick\" target=\"_blank\" rel=\"noopener\">Slasher Flick</a></h6><blockquote>\n<p>Return the remaining elements of an array after chopping off n elements from the head.<br>The head means the beginning of the array, or the zeroth index.</p>\n</blockquote>\n<p>返回指定数组去除某些给定元素后的结果<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">slasher</span>(<span class=\"params\">arr, howMany</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(howMany &gt;= arr.length)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr.slice(arr.length);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr.slice(-arr.length + howMany);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">slasher([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"12-Mutations-http-www-freecodecamp-com-challenges-mutations\"><a href=\"#12-Mutations-http-www-freecodecamp-com-challenges-mutations\" class=\"headerlink\" title=\"12. [Mutations](http://www.freecodecamp.com/challenges/mutations\"></a>12. [Mutations](<a href=\"http://www.freecodecamp.com/challenges/mutations\" target=\"_blank\" rel=\"noopener\">http://www.freecodecamp.com/challenges/mutations</a></h6><blockquote>\n<p>Return true if the string in the first element of the array contains all of the letters of the string in the second element of the array.</p>\n</blockquote>\n<p>判断两个给定数组的包含关系<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mutation</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> first =  arr[<span class=\"number\">0</span>].toLowerCase(),</span><br><span class=\"line\">    sec = arr[<span class=\"number\">1</span>].toLowerCase();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=sec.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(first.indexOf(sec[i]) != <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">            cnt ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(cnt === len)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mutation([<span class=\"string\">\"hello\"</span>, <span class=\"string\">\"hey\"</span>]);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"13-Falsy-Bouncer\"><a href=\"#13-Falsy-Bouncer\" class=\"headerlink\" title=\"13. Falsy Bouncer\"></a>13. <a href=\"http://www.freecodecamp.com/challenges/falsy-bouncer\" target=\"_blank\" rel=\"noopener\">Falsy Bouncer</a></h6><blockquote>\n<p>Remove all falsy values from an array.</p>\n</blockquote>\n<p>去除数组所有假值<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bouncer</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> val;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">bouncer([<span class=\"number\">7</span>, <span class=\"string\">\"ate\"</span>, <span class=\"string\">\"\"</span>, <span class=\"literal\">false</span>, <span class=\"number\">9</span>]);</span><br><span class=\"line\">bouncer([<span class=\"literal\">false</span>, <span class=\"literal\">null</span>, <span class=\"number\">0</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">undefined</span>, <span class=\"string\">\"\"</span>]);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"14-Seek-and-Destroy\"><a href=\"#14-Seek-and-Destroy\" class=\"headerlink\" title=\"14. Seek and Destroy\"></a>14. <a href=\"http://www.freecodecamp.com/challenges/seek-and-destroy\" target=\"_blank\" rel=\"noopener\">Seek and Destroy</a></h6><blockquote>\n<p>You will be provided with an initial array (the first argument in the destroyer function), followed by one or more arguments. Remove all elements from the initial array that are of the same value as these arguments.</p>\n</blockquote>\n<p>去除指定数组中包含给定参数的值<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">destroyer</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len = tmp.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,len2 = <span class=\"built_in\">arguments</span>.length - <span class=\"number\">1</span>;j&lt;=len2;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(tmp[i] == <span class=\"built_in\">arguments</span>[j]) &#123;</span><br><span class=\"line\">                flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!flag)&#123;</span><br><span class=\"line\">            newArr.push(tmp[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">destroyer([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"15-Where-do-I-belong\"><a href=\"#15-Where-do-I-belong\" class=\"headerlink\" title=\"15. Where do I belong\"></a>15. <a href=\"http://www.freecodecamp.com/challenges/where-do-i-belong\" target=\"_blank\" rel=\"noopener\">Where do I belong</a></h6><blockquote>\n<p>Return the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted.</p>\n</blockquote>\n<p>查找给定参数待插入指定数组的索引位置<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">where</span>(<span class=\"params\">arr, num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Find my place in this sorted array.</span></span><br><span class=\"line\">    <span class=\"comment\">//1，先排序</span></span><br><span class=\"line\">    <span class=\"comment\">//2.找到插入位置</span></span><br><span class=\"line\">    <span class=\"comment\">//3.注意排序规则</span></span><br><span class=\"line\">    <span class=\"comment\">//4.注意边界条件</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=arr.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[i] &lt; num)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">where([<span class=\"number\">40</span>, <span class=\"number\">60</span>], <span class=\"number\">50</span>);</span><br><span class=\"line\">where([<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">20</span>, <span class=\"number\">3</span>], <span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"16-Caesars-Cipher\"><a href=\"#16-Caesars-Cipher\" class=\"headerlink\" title=\"16. Caesars Cipher\"></a>16. <a href=\"http://www.freecodecamp.com/challenges/caesars-cipher\" target=\"_blank\" rel=\"noopener\">Caesars Cipher</a></h6><blockquote>\n<p>One of the simplest and most widely known ciphers is a Caesar cipher, also known as a shift cipher. In a shift cipher the meanings of the letters are shifted by some set amount.</p>\n</blockquote>\n<p>不多解释，实现凯撒密码解密加密的字符串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rot13</span>(<span class=\"params\">str</span>) </span>&#123; </span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    var inStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";</span></span><br><span class=\"line\"><span class=\"comment\">    var outStr = \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\";</span></span><br><span class=\"line\"><span class=\"comment\">    var ret = [];</span></span><br><span class=\"line\"><span class=\"comment\">    var i=0,j=0,len = str.length,leng = outStr.length;</span></span><br><span class=\"line\"><span class=\"comment\">    for(i=0;i&lt;len;i++)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        for(j=0;j&lt;leng;j++)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            if(outStr[j] === str[i])&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                ret.push(inStr[j]);</span></span><br><span class=\"line\"><span class=\"comment\">                break;</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        if(j === leng)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            ret.push(str[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    return ret.join(\"\");</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Change the inputs below to test</span></span><br><span class=\"line\">rot13(<span class=\"string\">\"SERR PBQR PNZC\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p>以上方法采用了穷举密码对，看起来有点”蠢笨”，但其实是很好的一种方法。只是用了穷举映射但还是避免不了要循环查找相应地性能并没有多少提升。<br>按照题干提示的采用<code>String API</code>的方式，可以如下解决：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rot13</span>(<span class=\"params\">str</span>) </span>&#123; <span class=\"comment\">// LBH QVQ VG!</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ret = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"regexp\">/\\w/</span>.test(str[i])) &#123;       </span><br><span class=\"line\">            <span class=\"keyword\">var</span> t = str[i].charCodeAt() + <span class=\"number\">13</span></span><br><span class=\"line\">            <span class=\"comment\">//根据题干的要求，密文的范围在大写字母内，90为\"Z\"的ASCII码，13为凯撒13密码的加密方法：平移13位</span></span><br><span class=\"line\">            t = t &gt; <span class=\"number\">90</span> ? (str[i].charCodeAt() - <span class=\"number\">13</span> : t; </span><br><span class=\"line\">            ret.push(<span class=\"built_in\">String</span>.fromCharCode(t));</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            ret.push(str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret.join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Change the inputs below to test</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(rot13(<span class=\"string\">\"SERR PBQR PNZC\"</span>));</span><br></pre></td></tr></table></figure></p>\n<p>初级算法都比较简单，基本上利用String的API就解决了。</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><blockquote>\n<p>好记性不如烂笔头。</p>\n</blockquote>\n<p><a href=\"http://www.freecodecamp.com/\" target=\"_blank\" rel=\"noopener\">freecodecamp</a>是一个开源社区项目，提供免费的在线编程学习训练，主要以前端为主。完成相应的内容还可以获得freecodecamp颁发的电子认证，该电子认证在领英上还可以像普通学历一样作为一项个人的教育经历。<br>不过，freecodecamp最近频繁的更新导致用户体验反而不如之前好了：现在所有你做过的题目都一股脑的放在了一起没有分类了。。以前会按照HTML、CSS、基础算法、中级算法、高级算法、后端等等分门别类一目了然。这些分类在未做题列表里还是这么分，做过的题也有标记，不过如果点进已经做过的题会发现之前的解决方案已经不再自动展现出来了。总之就是很麻烦，如果你想review的话。<br>如此这般就把做过的算法题作为博文梳理下吧，以便日后review巩固用法。</p>\n<h4 id=\"Basic-Algorithm\"><a href=\"#Basic-Algorithm\" class=\"headerlink\" title=\"Basic Algorithm\"></a>Basic Algorithm</h4><p>本篇梳理基础算法，大多数都很简单，如果你有更好的方法欢迎分享，毕竟我的算法水平真的很烂。。梳理只是自己备忘，如果不幸有大神来看过，板砖轻拍。</p>\n<h6 id=\"1-Reverse-a-String\"><a href=\"#1-Reverse-a-String\" class=\"headerlink\" title=\"1. Reverse a String\"></a>1. <a href=\"http://www.freecodecamp.com/challenges/reverse-a-string\" target=\"_blank\" rel=\"noopener\">Reverse a String</a></h6><blockquote>\n<p>Reverse the provided string.<br>You may need to turn the string into an array before you can reverse it.<br>Your result must be a string.</p>\n</blockquote>\n<p>将给定字符串逆序输出<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseString</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.split(<span class=\"string\">\"\"</span>).reverse().join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>);</span><br></pre></td></tr></table></figure></p>","more":"<h6 id=\"2-Factorialize-a-Number\"><a href=\"#2-Factorialize-a-Number\" class=\"headerlink\" title=\"2. Factorialize a Number\"></a>2. <a href=\"http://www.freecodecamp.com/challenges/factorialize-a-number\" target=\"_blank\" rel=\"noopener\">Factorialize a Number</a></h6><blockquote>\n<p>Return the factorial of the provided integer.<br>If the integer is represented with the letter n, a factorial is the product of all positive integers less than or equal to n.<br>Factorials are often represented with the shorthand notation n!<br>For example: 5! = 1 <em> 2 </em> 3 <em> 4 </em> 5 = 120</p>\n</blockquote>\n<p>输出给定数字的阶乘<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">factorialize</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num === <span class=\"number\">0</span>)<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num * factorialize(num - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">factorialize(<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3-Check-for-Palindromes\"><a href=\"#3-Check-for-Palindromes\" class=\"headerlink\" title=\"3. Check for Palindromes\"></a>3. <a href=\"http://www.freecodecamp.com/challenges/check-for-palindromes\" target=\"_blank\" rel=\"noopener\">Check for Palindromes</a></h6><blockquote>\n<p>Return true if the given string is a palindrome. Otherwise, return false.<br>A palindrome is a word or sentence that’s spelled the same way both forward and backward, ignoring punctuation, case, and spacing.</p>\n</blockquote>\n<p>检查回文<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">palindrome</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newStr1 = str.replace(<span class=\"regexp\">/[\\s\\.,]/g</span>,<span class=\"string\">\"\"</span>).toLowerCase().replace(<span class=\"regexp\">/[\\(\\)\\-_:\\\\\\/]/g</span>,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newStr2 = str.replace(<span class=\"regexp\">/[\\s\\.,]/g</span>,<span class=\"string\">\"\"</span>).toLowerCase().split(<span class=\"string\">\"\"</span>).reverse().join(<span class=\"string\">\"\"</span>).replace(<span class=\"regexp\">/[\\(\\)\\-_:\\\\\\/]/g</span>,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newStr1 == newStr2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">palindrome(<span class=\"string\">\"eye\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p>这题需要注意的是，根据题目给出的tester case以及题干的提示，所有的非字母数字字符（标点，空格以及符号）都不影响回文串的判断。因此使用正则表达式先剔除无效字符再将每个字符逆序后与原串对比。</p>\n<h6 id=\"4-Find-the-Longest-Word-in-a-String\"><a href=\"#4-Find-the-Longest-Word-in-a-String\" class=\"headerlink\" title=\"4. Find the Longest Word in a String\"></a>4. <a href=\"http://www.freecodecamp.com/challenges/find-the-longest-word-in-a-string\" target=\"_blank\" rel=\"noopener\">Find the Longest Word in a String</a></h6><blockquote>\n<p>Return the length of the longest word in the provided sentence.</p>\n</blockquote>\n<p>找出给定句子中最长的单词。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">findLongestWord</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = str.split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    tmp.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        len = len &lt; val.length ? val.length : len;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> len;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">findLongestWord(<span class=\"string\">\"The quick brown fox jumped over the lazy dog\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"5-Title-Case-a-Sentence\"><a href=\"#5-Title-Case-a-Sentence\" class=\"headerlink\" title=\"5. Title Case a Sentence\"></a>5. <a href=\"http://www.freecodecamp.com/challenges/title-case-a-sentence\" target=\"_blank\" rel=\"noopener\">Title Case a Sentence</a></h6><blockquote>\n<p>Return the provided string with the first letter of each word capitalized. Make sure the rest of the word is in lower case.<br>For the purpose of this exercise, you should also capitalize connecting words like “the” and “of”.</p>\n</blockquote>\n<p>将给定词首字母大写，其他的小写。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">titleCase</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = str.toLowerCase().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    tmp.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> first = val.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> preNew = val.replace(first,first.toUpperCase());</span><br><span class=\"line\">        res === <span class=\"literal\">undefined</span> ? res = preNew + <span class=\"string\">\" \"</span> : res += preNew + <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (res.replace(<span class=\"regexp\">/\\s$/</span>,<span class=\"string\">''</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">titleCase(<span class=\"string\">\"I'm a little tea pot\"</span>);</span><br><span class=\"line\">titleCase(<span class=\"string\">\"sHoRt AnD sToUt\"</span>);</span><br><span class=\"line\">titleCase(<span class=\"string\">\"HERE IS MY HANDLE HERE IS MY SPOUT\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"6-Return-Largest-Numbers-in-Array\"><a href=\"#6-Return-Largest-Numbers-in-Array\" class=\"headerlink\" title=\"6. Return Largest Numbers in Array\"></a>6. <a href=\"http://www.freecodecamp.com/challenges/return-largest-numbers-in-arrays\" target=\"_blank\" rel=\"noopener\">Return Largest Numbers in Array</a></h6><blockquote>\n<p>Return an array consisting of the largest number from each provided sub-array. For simplicity, the provided array will contain exactly 4 sub-arrays.</p>\n</blockquote>\n<p>返回数组最大值，当然多维数组要返回数组，否则也太简单了<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">largestOfFour</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ret = [];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=arr.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> max = arr[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,len2=arr[i].length;j&lt;len2;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[i][j] &gt; max)&#123;</span><br><span class=\"line\">            max = arr[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j == len2 - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            ret.push(max);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> (ret);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">largestOfFour([[<span class=\"number\">13</span>, <span class=\"number\">27</span>, <span class=\"number\">18</span>, <span class=\"number\">26</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>], [<span class=\"number\">32</span>, <span class=\"number\">35</span>, <span class=\"number\">37</span>, <span class=\"number\">39</span>], [<span class=\"number\">1000</span>, <span class=\"number\">1001</span>, <span class=\"number\">857</span>, <span class=\"number\">1</span>]]);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"7-Confirm-the-Ending\"><a href=\"#7-Confirm-the-Ending\" class=\"headerlink\" title=\"7. Confirm the Ending \"></a>7. <a href=\"http://www.freecodecamp.com/challenges/confirm-the-ending\" target=\"_blank\" rel=\"noopener\">Confirm the Ending </a></h6><blockquote>\n<p>Check if a string (first argument) ends with the given target string (second argument).</p>\n</blockquote>\n<p>检查给定字串是否以给定目标字串结尾<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">end</span>(<span class=\"params\">str, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    if(new RegExp(target + \"$\").test(str))&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        return true;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;else return false;</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> targetLen = target.length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(str.substr(-targetLen) === target)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">end(<span class=\"string\">\"He has to give me a new name\"</span>, <span class=\"string\">\"name\"</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"8-Repeat-a-string-repeat-a-string\"><a href=\"#8-Repeat-a-string-repeat-a-string\" class=\"headerlink\" title=\"8. Repeat a string repeat a string \"></a>8. <a href=\"http://www.freecodecamp.com/challenges/repeat-a-string-repeat-a-string\" target=\"_blank\" rel=\"noopener\">Repeat a string repeat a string </a></h6><blockquote>\n<p>Repeat a given string (first argument) num times (second argument). Return an empty string if num is a negative number.</p>\n</blockquote>\n<p>以给定的次数重复指定字串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">repeat</span>(<span class=\"params\">str, num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> tmp=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;num;i++)&#123;</span><br><span class=\"line\">            tmp = tmp + str;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (tmp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">repeat(<span class=\"string\">\"abc\"</span>, <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"9-Truncate-a-string\"><a href=\"#9-Truncate-a-string\" class=\"headerlink\" title=\"9. Truncate a string\"></a>9. <a href=\"http://www.freecodecamp.com/challenges/truncate-a-string\" target=\"_blank\" rel=\"noopener\">Truncate a string</a></h6><blockquote>\n<p>Truncate a string (first argument) if it is longer than the given maximum string length (second argument). Return the truncated string with a “…” ending.</p>\n</blockquote>\n<p>截断字符串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">truncate</span>(<span class=\"params\">str, num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(str.length &lt;= num)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(num &gt; <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            num -= <span class=\"number\">3</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> truncted = str.substr(<span class=\"number\">0</span>,num);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> truncted + <span class=\"string\">\"...\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">truncate(<span class=\"string\">\"A-tisket a-tasket A green and yellow basket\"</span>, <span class=\"number\">11</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"10-Chunky-Monkey\"><a href=\"#10-Chunky-Monkey\" class=\"headerlink\" title=\"10. Chunky Monkey\"></a>10. <a href=\"http://www.freecodecamp.com/challenges/chunky-monkey\" target=\"_blank\" rel=\"noopener\">Chunky Monkey</a></h6><blockquote>\n<p>Write a function that splits an array (first argument) into groups the length of size (second argument) and returns them as a two-dimensional array.</p>\n</blockquote>\n<p>将指定数组按给定长度分割<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">chunk</span>(<span class=\"params\">arr, size</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res = [];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=arr.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        tmp.push(arr[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((i+<span class=\"number\">1</span>)%size === <span class=\"number\">0</span> || i === len - <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            res.push(tmp);</span><br><span class=\"line\">            tmp = [];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> ( res );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">chunk([<span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span>, <span class=\"string\">\"c\"</span>, <span class=\"string\">\"d\"</span>], <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"11-Slasher-Flick\"><a href=\"#11-Slasher-Flick\" class=\"headerlink\" title=\"11. Slasher Flick\"></a>11. <a href=\"http://www.freecodecamp.com/challenges/slasher-flick\" target=\"_blank\" rel=\"noopener\">Slasher Flick</a></h6><blockquote>\n<p>Return the remaining elements of an array after chopping off n elements from the head.<br>The head means the beginning of the array, or the zeroth index.</p>\n</blockquote>\n<p>返回指定数组去除某些给定元素后的结果<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">slasher</span>(<span class=\"params\">arr, howMany</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(howMany &gt;= arr.length)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr.slice(arr.length);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr.slice(-arr.length + howMany);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">slasher([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"12-Mutations-http-www-freecodecamp-com-challenges-mutations\"><a href=\"#12-Mutations-http-www-freecodecamp-com-challenges-mutations\" class=\"headerlink\" title=\"12. [Mutations](http://www.freecodecamp.com/challenges/mutations\"></a>12. [Mutations](<a href=\"http://www.freecodecamp.com/challenges/mutations\" target=\"_blank\" rel=\"noopener\">http://www.freecodecamp.com/challenges/mutations</a></h6><blockquote>\n<p>Return true if the string in the first element of the array contains all of the letters of the string in the second element of the array.</p>\n</blockquote>\n<p>判断两个给定数组的包含关系<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mutation</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> first =  arr[<span class=\"number\">0</span>].toLowerCase(),</span><br><span class=\"line\">    sec = arr[<span class=\"number\">1</span>].toLowerCase();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=sec.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(first.indexOf(sec[i]) != <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">            cnt ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(cnt === len)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mutation([<span class=\"string\">\"hello\"</span>, <span class=\"string\">\"hey\"</span>]);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"13-Falsy-Bouncer\"><a href=\"#13-Falsy-Bouncer\" class=\"headerlink\" title=\"13. Falsy Bouncer\"></a>13. <a href=\"http://www.freecodecamp.com/challenges/falsy-bouncer\" target=\"_blank\" rel=\"noopener\">Falsy Bouncer</a></h6><blockquote>\n<p>Remove all falsy values from an array.</p>\n</blockquote>\n<p>去除数组所有假值<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bouncer</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> val;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">bouncer([<span class=\"number\">7</span>, <span class=\"string\">\"ate\"</span>, <span class=\"string\">\"\"</span>, <span class=\"literal\">false</span>, <span class=\"number\">9</span>]);</span><br><span class=\"line\">bouncer([<span class=\"literal\">false</span>, <span class=\"literal\">null</span>, <span class=\"number\">0</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">undefined</span>, <span class=\"string\">\"\"</span>]);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"14-Seek-and-Destroy\"><a href=\"#14-Seek-and-Destroy\" class=\"headerlink\" title=\"14. Seek and Destroy\"></a>14. <a href=\"http://www.freecodecamp.com/challenges/seek-and-destroy\" target=\"_blank\" rel=\"noopener\">Seek and Destroy</a></h6><blockquote>\n<p>You will be provided with an initial array (the first argument in the destroyer function), followed by one or more arguments. Remove all elements from the initial array that are of the same value as these arguments.</p>\n</blockquote>\n<p>去除指定数组中包含给定参数的值<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">destroyer</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len = tmp.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>,len2 = <span class=\"built_in\">arguments</span>.length - <span class=\"number\">1</span>;j&lt;=len2;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(tmp[i] == <span class=\"built_in\">arguments</span>[j]) &#123;</span><br><span class=\"line\">                flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!flag)&#123;</span><br><span class=\"line\">            newArr.push(tmp[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">destroyer([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], <span class=\"number\">2</span>, <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"15-Where-do-I-belong\"><a href=\"#15-Where-do-I-belong\" class=\"headerlink\" title=\"15. Where do I belong\"></a>15. <a href=\"http://www.freecodecamp.com/challenges/where-do-i-belong\" target=\"_blank\" rel=\"noopener\">Where do I belong</a></h6><blockquote>\n<p>Return the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted.</p>\n</blockquote>\n<p>查找给定参数待插入指定数组的索引位置<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">where</span>(<span class=\"params\">arr, num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Find my place in this sorted array.</span></span><br><span class=\"line\">    <span class=\"comment\">//1，先排序</span></span><br><span class=\"line\">    <span class=\"comment\">//2.找到插入位置</span></span><br><span class=\"line\">    <span class=\"comment\">//3.注意排序规则</span></span><br><span class=\"line\">    <span class=\"comment\">//4.注意边界条件</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=arr.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[i] &lt; num)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">where([<span class=\"number\">40</span>, <span class=\"number\">60</span>], <span class=\"number\">50</span>);</span><br><span class=\"line\">where([<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">20</span>, <span class=\"number\">3</span>], <span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"16-Caesars-Cipher\"><a href=\"#16-Caesars-Cipher\" class=\"headerlink\" title=\"16. Caesars Cipher\"></a>16. <a href=\"http://www.freecodecamp.com/challenges/caesars-cipher\" target=\"_blank\" rel=\"noopener\">Caesars Cipher</a></h6><blockquote>\n<p>One of the simplest and most widely known ciphers is a Caesar cipher, also known as a shift cipher. In a shift cipher the meanings of the letters are shifted by some set amount.</p>\n</blockquote>\n<p>不多解释，实现凯撒密码解密加密的字符串<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rot13</span>(<span class=\"params\">str</span>) </span>&#123; </span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    var inStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";</span></span><br><span class=\"line\"><span class=\"comment\">    var outStr = \"NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm\";</span></span><br><span class=\"line\"><span class=\"comment\">    var ret = [];</span></span><br><span class=\"line\"><span class=\"comment\">    var i=0,j=0,len = str.length,leng = outStr.length;</span></span><br><span class=\"line\"><span class=\"comment\">    for(i=0;i&lt;len;i++)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        for(j=0;j&lt;leng;j++)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            if(outStr[j] === str[i])&#123;</span></span><br><span class=\"line\"><span class=\"comment\">                ret.push(inStr[j]);</span></span><br><span class=\"line\"><span class=\"comment\">                break;</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        if(j === leng)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            ret.push(str[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    return ret.join(\"\");</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Change the inputs below to test</span></span><br><span class=\"line\">rot13(<span class=\"string\">\"SERR PBQR PNZC\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p>以上方法采用了穷举密码对，看起来有点”蠢笨”，但其实是很好的一种方法。只是用了穷举映射但还是避免不了要循环查找相应地性能并没有多少提升。<br>按照题干提示的采用<code>String API</code>的方式，可以如下解决：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rot13</span>(<span class=\"params\">str</span>) </span>&#123; <span class=\"comment\">// LBH QVQ VG!</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ret = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,len=str.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"regexp\">/\\w/</span>.test(str[i])) &#123;       </span><br><span class=\"line\">            <span class=\"keyword\">var</span> t = str[i].charCodeAt() + <span class=\"number\">13</span></span><br><span class=\"line\">            <span class=\"comment\">//根据题干的要求，密文的范围在大写字母内，90为\"Z\"的ASCII码，13为凯撒13密码的加密方法：平移13位</span></span><br><span class=\"line\">            t = t &gt; <span class=\"number\">90</span> ? (str[i].charCodeAt() - <span class=\"number\">13</span> : t; </span><br><span class=\"line\">            ret.push(<span class=\"built_in\">String</span>.fromCharCode(t));</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            ret.push(str[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret.join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Change the inputs below to test</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(rot13(<span class=\"string\">\"SERR PBQR PNZC\"</span>));</span><br></pre></td></tr></table></figure></p>\n<p>初级算法都比较简单，基本上利用String的API就解决了。</p>","sticky":0},{"title":"使用squid+stunnel搭建自己的翻墙服务器","date":"2015-07-17T02:30:38.000Z","show":true,"photos":["http://ww3.sinaimg.cn/large/62d95157gw1eu5kesk5m5j20dw0c2js1.jpg"],"_content":"\n　　GFW让国内的码农们要比国外同行们必须多掌握一门必备技能：**翻墙**。\n　　就为了更好的上网体验，天朝上国的我们要跟移动、联通、电信(死比运营商肆无忌惮搞网络劫持推送广告)，工信部(互联网内容审查)，GFW作斗争，浪费大好光阴，真是想想就让人想[**爆粗**](http://www.bilibili.com/video/av2550217)。这不，大GFW最近技术又牛逼了，goagent已经被墙的半身不遂了。。有这技术研究点别的多好，天朝的网络审查制度典型的\"把洗澡水和孩子一起泼了\"：翻墙的除了去看法哔功的，也有社会主义现代化建设的我们啊。\n　　我本身翻墙的时候不多，用上的时候开下goagent基本也能对付了，虽然对限制自由这事很不爽，但也只能不爽了。可最近goagent也总是不能用了，这尼玛还咋玩。。\n　　租用的国外服务器只部署个博客好像有点浪费，这基本只有我自己看的玩意儿能用多少流量，太浪费了啊。于是想着是否可以自己搭建个代理实现肉身翻墙呢？\n　　下面是我折腾的通过*国外服务器+squid+stunnel+chrome+SwitchOmege*实现的代理翻墙方式，照着操作你也可以。\n\n<!--more-->\n\n# 翻墙原理\n　　1. 客户端向stunnel服务器发送访问请求\n　　2. stunnel将请求加密后发送给代理服务器的stunnel服务\n　　3. 代理服务器的stunnel服务接收到请求后将请求解密发送给代理服务器的squid服务\n　　4. squid服务接收到实际的客户端访问请求(经过了加密解密处理)，向目标网站请求并返回数据\n\n　　之所以要加上stunnel加密，是因为GFW会把请求墙掉，导致原始请求连代理服务器都发送不过去。\n# 物料准备\n　　1. 国外服务器，可以正常无限制访问互联网，用来代理国内被墙的请求\n　　2. 国内服务器，可以是服务器也可以是自己的主机，用来做stunnel加密服务器\n　　3. stunnel，squid，chrom以及chrome下的代理插件SwitchOmega(stunnel，squid必须，客户端代理可以采取别的浏览器)\n# 环境\n　　1. 我的国外服务器系统是Centos 6.0-x86，以下称为服务器A\n　　2. 我的国内stunnel采用的也是服务器部署，之所以没有采用自己的主机，考虑到如果将stunnel加密服务也部署在我的客户端上的话，只要我电脑关机后就要重新启动stunnel服务，而且如果换电脑的话就不能用了。因此将服务和客户端分开了，没有条件的可以将stunnel加密服务搭建在自己的主机上亦可。以下称stunnel加密服务器为服务器B，自己用来上网的电脑称为客户端。\n　　服务器Ｂ的系统是Linux 2.6.32。\n# 搭建步骤\n## 服务器A上安装squid以及stunnel\n- 安装squid\n`yum install squid`\n- 修改squid配置文件：\n\n```plain\nvim /etc/squid/squid.conf      #路径以自己安装的为准\n```\n将配置文件的\n```js\nhttp_access deny all\n修改为\nhttp_access allow all\n其余多余的http_access选项删除\n```\n- 启动squid\n`service squid start`\n\n- 安装stunnel\n`yum install stunnel`\n由于需要stunnel进行加密，因此还需要生成相应的密钥：(依赖openssl，通常linux发行版都自带了，如果没有预装可以自行安装)\n```js\ncd /usr/local/etc/stunnel/\nopenssl req -new -x509 -days 1000 -nodes -out stunnel.pem -keyout stunnel.pem  \n#生成一个有效时间1000天的证书文件stunnel.pem\n\n```\n- 修改配置文件\n```js\nvim /usr/local/etc/stunnel/stunnel.conf    #路径以自己安装的为准\n```\n我的配置文件：\n```plain\nfips=no\nsyslog=yes\ndebug=7\noutput=/var/log/stunnel.log\nsetuid=root                        #我是部署在root账户下，看部署的账户了 \nsetgid=root                          \npid=/var/run/stunnel.pid\ncert=/usr/local/etc/stunnel/stunnel.pem     #上述生成的证书文件路径\nkey=/usr/local/etc/stunnel/stunnel.pem\nclient=no\n[squid]\naccept=443                         #stunnel的监听接口 \nconnect=127.0.0.1:3128             #服务器A的connect配置基本没啥用\n```\n- 启动stunnel\n`stunnel stunnel.conf`\n\t\n# 服务器B上安装stunnel\n在服务器B上安装stunnel，步骤类似服务器A，需要注意的是，证书文件可以和服务器A一样，直接复制过来即可。\n- 修改配置文件：\n我的配置\n```plain\ncert = ./stunnel.pem               #复制过来的证书文件路径\nsocket = l:TCP_NODELAY=1\nsocket = r:TCP_NODELAY=1\nverify = 2\nCAfile = ./stunnel.pem\nclient=yes\ncompression = zlib\nciphers = AES256-SHA\ndelay = no\nfailover = prio\nsslVersion = TLSv1\nfips = no\n[sproxy]\naccept  = 8888                     \t\t\t\t\t#服务器B上stunnel的监听端口，可以随便设，影响客户端的代理设置 \nconnect = 服务器A的IP:服务器A的stunnel监听端口      #填写服务器A的IP和端口，用来和A交互\n```\n- 启动stunnel\n\n# Tests\n配置差不多了，配置下客户端代理试试看吧\n1. 下载chrome浏览器下的代理管理插件SwitchOmega\n2. 配置代理地址\n![](http://ww1.sinaimg.cn/large/62d95157gw1eu5s08oeo9j20o605jmy2.jpg)\n代理地址填写服务器B的地址，端口填写服务器B上stunnel服务器的监听端口\n\n访问被墙地址的时候将模式切换到设置的该模式。\n\t\n![](http://ww1.sinaimg.cn/large/62d95157gw1eu5tgaewnxj20p508m76l.jpg)\n\nＧｏｏｄ！\n","source":"_posts/gfw-squid-stunnel.md","raw":"title: 使用squid+stunnel搭建自己的翻墙服务器\ndate: 2015-07-17 10:30:38\ntags: [翻墙,squid,stunnel,vpn代理]\ncategories: 技术人生 \nshow: true\nphotos:\n\t- http://ww3.sinaimg.cn/large/62d95157gw1eu5kesk5m5j20dw0c2js1.jpg\n---\n\n　　GFW让国内的码农们要比国外同行们必须多掌握一门必备技能：**翻墙**。\n　　就为了更好的上网体验，天朝上国的我们要跟移动、联通、电信(死比运营商肆无忌惮搞网络劫持推送广告)，工信部(互联网内容审查)，GFW作斗争，浪费大好光阴，真是想想就让人想[**爆粗**](http://www.bilibili.com/video/av2550217)。这不，大GFW最近技术又牛逼了，goagent已经被墙的半身不遂了。。有这技术研究点别的多好，天朝的网络审查制度典型的\"把洗澡水和孩子一起泼了\"：翻墙的除了去看法哔功的，也有社会主义现代化建设的我们啊。\n　　我本身翻墙的时候不多，用上的时候开下goagent基本也能对付了，虽然对限制自由这事很不爽，但也只能不爽了。可最近goagent也总是不能用了，这尼玛还咋玩。。\n　　租用的国外服务器只部署个博客好像有点浪费，这基本只有我自己看的玩意儿能用多少流量，太浪费了啊。于是想着是否可以自己搭建个代理实现肉身翻墙呢？\n　　下面是我折腾的通过*国外服务器+squid+stunnel+chrome+SwitchOmege*实现的代理翻墙方式，照着操作你也可以。\n\n<!--more-->\n\n# 翻墙原理\n　　1. 客户端向stunnel服务器发送访问请求\n　　2. stunnel将请求加密后发送给代理服务器的stunnel服务\n　　3. 代理服务器的stunnel服务接收到请求后将请求解密发送给代理服务器的squid服务\n　　4. squid服务接收到实际的客户端访问请求(经过了加密解密处理)，向目标网站请求并返回数据\n\n　　之所以要加上stunnel加密，是因为GFW会把请求墙掉，导致原始请求连代理服务器都发送不过去。\n# 物料准备\n　　1. 国外服务器，可以正常无限制访问互联网，用来代理国内被墙的请求\n　　2. 国内服务器，可以是服务器也可以是自己的主机，用来做stunnel加密服务器\n　　3. stunnel，squid，chrom以及chrome下的代理插件SwitchOmega(stunnel，squid必须，客户端代理可以采取别的浏览器)\n# 环境\n　　1. 我的国外服务器系统是Centos 6.0-x86，以下称为服务器A\n　　2. 我的国内stunnel采用的也是服务器部署，之所以没有采用自己的主机，考虑到如果将stunnel加密服务也部署在我的客户端上的话，只要我电脑关机后就要重新启动stunnel服务，而且如果换电脑的话就不能用了。因此将服务和客户端分开了，没有条件的可以将stunnel加密服务搭建在自己的主机上亦可。以下称stunnel加密服务器为服务器B，自己用来上网的电脑称为客户端。\n　　服务器Ｂ的系统是Linux 2.6.32。\n# 搭建步骤\n## 服务器A上安装squid以及stunnel\n- 安装squid\n`yum install squid`\n- 修改squid配置文件：\n\n```plain\nvim /etc/squid/squid.conf      #路径以自己安装的为准\n```\n将配置文件的\n```js\nhttp_access deny all\n修改为\nhttp_access allow all\n其余多余的http_access选项删除\n```\n- 启动squid\n`service squid start`\n\n- 安装stunnel\n`yum install stunnel`\n由于需要stunnel进行加密，因此还需要生成相应的密钥：(依赖openssl，通常linux发行版都自带了，如果没有预装可以自行安装)\n```js\ncd /usr/local/etc/stunnel/\nopenssl req -new -x509 -days 1000 -nodes -out stunnel.pem -keyout stunnel.pem  \n#生成一个有效时间1000天的证书文件stunnel.pem\n\n```\n- 修改配置文件\n```js\nvim /usr/local/etc/stunnel/stunnel.conf    #路径以自己安装的为准\n```\n我的配置文件：\n```plain\nfips=no\nsyslog=yes\ndebug=7\noutput=/var/log/stunnel.log\nsetuid=root                        #我是部署在root账户下，看部署的账户了 \nsetgid=root                          \npid=/var/run/stunnel.pid\ncert=/usr/local/etc/stunnel/stunnel.pem     #上述生成的证书文件路径\nkey=/usr/local/etc/stunnel/stunnel.pem\nclient=no\n[squid]\naccept=443                         #stunnel的监听接口 \nconnect=127.0.0.1:3128             #服务器A的connect配置基本没啥用\n```\n- 启动stunnel\n`stunnel stunnel.conf`\n\t\n# 服务器B上安装stunnel\n在服务器B上安装stunnel，步骤类似服务器A，需要注意的是，证书文件可以和服务器A一样，直接复制过来即可。\n- 修改配置文件：\n我的配置\n```plain\ncert = ./stunnel.pem               #复制过来的证书文件路径\nsocket = l:TCP_NODELAY=1\nsocket = r:TCP_NODELAY=1\nverify = 2\nCAfile = ./stunnel.pem\nclient=yes\ncompression = zlib\nciphers = AES256-SHA\ndelay = no\nfailover = prio\nsslVersion = TLSv1\nfips = no\n[sproxy]\naccept  = 8888                     \t\t\t\t\t#服务器B上stunnel的监听端口，可以随便设，影响客户端的代理设置 \nconnect = 服务器A的IP:服务器A的stunnel监听端口      #填写服务器A的IP和端口，用来和A交互\n```\n- 启动stunnel\n\n# Tests\n配置差不多了，配置下客户端代理试试看吧\n1. 下载chrome浏览器下的代理管理插件SwitchOmega\n2. 配置代理地址\n![](http://ww1.sinaimg.cn/large/62d95157gw1eu5s08oeo9j20o605jmy2.jpg)\n代理地址填写服务器B的地址，端口填写服务器B上stunnel服务器的监听端口\n\n访问被墙地址的时候将模式切换到设置的该模式。\n\t\n![](http://ww1.sinaimg.cn/large/62d95157gw1eu5tgaewnxj20p508m76l.jpg)\n\nＧｏｏｄ！\n","slug":"gfw-squid-stunnel","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","link":"","_id":"cjnijyzu0001ofnpvs4i2s9j6","content":"<p>　　GFW让国内的码农们要比国外同行们必须多掌握一门必备技能：<strong>翻墙</strong>。<br>　　就为了更好的上网体验，天朝上国的我们要跟移动、联通、电信(死比运营商肆无忌惮搞网络劫持推送广告)，工信部(互联网内容审查)，GFW作斗争，浪费大好光阴，真是想想就让人想<a href=\"http://www.bilibili.com/video/av2550217\" target=\"_blank\" rel=\"noopener\"><strong>爆粗</strong></a>。这不，大GFW最近技术又牛逼了，goagent已经被墙的半身不遂了。。有这技术研究点别的多好，天朝的网络审查制度典型的”把洗澡水和孩子一起泼了”：翻墙的除了去看法哔功的，也有社会主义现代化建设的我们啊。<br>　　我本身翻墙的时候不多，用上的时候开下goagent基本也能对付了，虽然对限制自由这事很不爽，但也只能不爽了。可最近goagent也总是不能用了，这尼玛还咋玩。。<br>　　租用的国外服务器只部署个博客好像有点浪费，这基本只有我自己看的玩意儿能用多少流量，太浪费了啊。于是想着是否可以自己搭建个代理实现肉身翻墙呢？<br>　　下面是我折腾的通过<em>国外服务器+squid+stunnel+chrome+SwitchOmege</em>实现的代理翻墙方式，照着操作你也可以。</p>\n<a id=\"more\"></a>\n<h1 id=\"翻墙原理\"><a href=\"#翻墙原理\" class=\"headerlink\" title=\"翻墙原理\"></a>翻墙原理</h1><p>　　1. 客户端向stunnel服务器发送访问请求<br>　　2. stunnel将请求加密后发送给代理服务器的stunnel服务<br>　　3. 代理服务器的stunnel服务接收到请求后将请求解密发送给代理服务器的squid服务<br>　　4. squid服务接收到实际的客户端访问请求(经过了加密解密处理)，向目标网站请求并返回数据</p>\n<p>　　之所以要加上stunnel加密，是因为GFW会把请求墙掉，导致原始请求连代理服务器都发送不过去。</p>\n<h1 id=\"物料准备\"><a href=\"#物料准备\" class=\"headerlink\" title=\"物料准备\"></a>物料准备</h1><p>　　1. 国外服务器，可以正常无限制访问互联网，用来代理国内被墙的请求<br>　　2. 国内服务器，可以是服务器也可以是自己的主机，用来做stunnel加密服务器<br>　　3. stunnel，squid，chrom以及chrome下的代理插件SwitchOmega(stunnel，squid必须，客户端代理可以采取别的浏览器)</p>\n<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>　　1. 我的国外服务器系统是Centos 6.0-x86，以下称为服务器A<br>　　2. 我的国内stunnel采用的也是服务器部署，之所以没有采用自己的主机，考虑到如果将stunnel加密服务也部署在我的客户端上的话，只要我电脑关机后就要重新启动stunnel服务，而且如果换电脑的话就不能用了。因此将服务和客户端分开了，没有条件的可以将stunnel加密服务搭建在自己的主机上亦可。以下称stunnel加密服务器为服务器B，自己用来上网的电脑称为客户端。<br>　　服务器Ｂ的系统是Linux 2.6.32。</p>\n<h1 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h1><h2 id=\"服务器A上安装squid以及stunnel\"><a href=\"#服务器A上安装squid以及stunnel\" class=\"headerlink\" title=\"服务器A上安装squid以及stunnel\"></a>服务器A上安装squid以及stunnel</h2><ul>\n<li>安装squid<br><code>yum install squid</code></li>\n<li>修改squid配置文件：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/squid/squid.conf      #路径以自己安装的为准</span><br></pre></td></tr></table></figure>\n<p>将配置文件的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http_access deny all</span><br><span class=\"line\">修改为</span><br><span class=\"line\">http_access allow all</span><br><span class=\"line\">其余多余的http_access选项删除</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>启动squid<br><code>service squid start</code></p>\n</li>\n<li><p>安装stunnel<br><code>yum install stunnel</code><br>由于需要stunnel进行加密，因此还需要生成相应的密钥：(依赖openssl，通常linux发行版都自带了，如果没有预装可以自行安装)</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/etc/stunnel/</span><br><span class=\"line\">openssl req -<span class=\"keyword\">new</span> -x509 -days <span class=\"number\">1000</span> -nodes -out stunnel.pem -keyout stunnel.pem  </span><br><span class=\"line\">#生成一个有效时间1000天的证书文件stunnel.pem</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改配置文件</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/local/etc/stunnel/stunnel.conf    #路径以自己安装的为准</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>我的配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fips=no</span><br><span class=\"line\">syslog=yes</span><br><span class=\"line\">debug=7</span><br><span class=\"line\">output=/var/log/stunnel.log</span><br><span class=\"line\">setuid=root                        #我是部署在root账户下，看部署的账户了 </span><br><span class=\"line\">setgid=root                          </span><br><span class=\"line\">pid=/var/run/stunnel.pid</span><br><span class=\"line\">cert=/usr/local/etc/stunnel/stunnel.pem     #上述生成的证书文件路径</span><br><span class=\"line\">key=/usr/local/etc/stunnel/stunnel.pem</span><br><span class=\"line\">client=no</span><br><span class=\"line\">[squid]</span><br><span class=\"line\">accept=443                         #stunnel的监听接口 </span><br><span class=\"line\">connect=127.0.0.1:3128             #服务器A的connect配置基本没啥用</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>启动stunnel<br><code>stunnel stunnel.conf</code></li>\n</ul>\n<h1 id=\"服务器B上安装stunnel\"><a href=\"#服务器B上安装stunnel\" class=\"headerlink\" title=\"服务器B上安装stunnel\"></a>服务器B上安装stunnel</h1><p>在服务器B上安装stunnel，步骤类似服务器A，需要注意的是，证书文件可以和服务器A一样，直接复制过来即可。</p>\n<ul>\n<li><p>修改配置文件：<br>我的配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cert = ./stunnel.pem               #复制过来的证书文件路径</span><br><span class=\"line\">socket = l:TCP_NODELAY=1</span><br><span class=\"line\">socket = r:TCP_NODELAY=1</span><br><span class=\"line\">verify = 2</span><br><span class=\"line\">CAfile = ./stunnel.pem</span><br><span class=\"line\">client=yes</span><br><span class=\"line\">compression = zlib</span><br><span class=\"line\">ciphers = AES256-SHA</span><br><span class=\"line\">delay = no</span><br><span class=\"line\">failover = prio</span><br><span class=\"line\">sslVersion = TLSv1</span><br><span class=\"line\">fips = no</span><br><span class=\"line\">[sproxy]</span><br><span class=\"line\">accept  = 8888                     \t\t\t\t\t#服务器B上stunnel的监听端口，可以随便设，影响客户端的代理设置 </span><br><span class=\"line\">connect = 服务器A的IP:服务器A的stunnel监听端口      #填写服务器A的IP和端口，用来和A交互</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动stunnel</p>\n</li>\n</ul>\n<h1 id=\"Tests\"><a href=\"#Tests\" class=\"headerlink\" title=\"Tests\"></a>Tests</h1><p>配置差不多了，配置下客户端代理试试看吧</p>\n<ol>\n<li>下载chrome浏览器下的代理管理插件SwitchOmega</li>\n<li>配置代理地址<br><img src=\"http://ww1.sinaimg.cn/large/62d95157gw1eu5s08oeo9j20o605jmy2.jpg\" alt=\"\"><br>代理地址填写服务器B的地址，端口填写服务器B上stunnel服务器的监听端口</li>\n</ol>\n<p>访问被墙地址的时候将模式切换到设置的该模式。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/62d95157gw1eu5tgaewnxj20p508m76l.jpg\" alt=\"\"></p>\n<p>Ｇｏｏｄ！</p>\n","site":{"data":{}},"excerpt":"<p>　　GFW让国内的码农们要比国外同行们必须多掌握一门必备技能：<strong>翻墙</strong>。<br>　　就为了更好的上网体验，天朝上国的我们要跟移动、联通、电信(死比运营商肆无忌惮搞网络劫持推送广告)，工信部(互联网内容审查)，GFW作斗争，浪费大好光阴，真是想想就让人想<a href=\"http://www.bilibili.com/video/av2550217\" target=\"_blank\" rel=\"noopener\"><strong>爆粗</strong></a>。这不，大GFW最近技术又牛逼了，goagent已经被墙的半身不遂了。。有这技术研究点别的多好，天朝的网络审查制度典型的”把洗澡水和孩子一起泼了”：翻墙的除了去看法哔功的，也有社会主义现代化建设的我们啊。<br>　　我本身翻墙的时候不多，用上的时候开下goagent基本也能对付了，虽然对限制自由这事很不爽，但也只能不爽了。可最近goagent也总是不能用了，这尼玛还咋玩。。<br>　　租用的国外服务器只部署个博客好像有点浪费，这基本只有我自己看的玩意儿能用多少流量，太浪费了啊。于是想着是否可以自己搭建个代理实现肉身翻墙呢？<br>　　下面是我折腾的通过<em>国外服务器+squid+stunnel+chrome+SwitchOmege</em>实现的代理翻墙方式，照着操作你也可以。</p>","more":"<h1 id=\"翻墙原理\"><a href=\"#翻墙原理\" class=\"headerlink\" title=\"翻墙原理\"></a>翻墙原理</h1><p>　　1. 客户端向stunnel服务器发送访问请求<br>　　2. stunnel将请求加密后发送给代理服务器的stunnel服务<br>　　3. 代理服务器的stunnel服务接收到请求后将请求解密发送给代理服务器的squid服务<br>　　4. squid服务接收到实际的客户端访问请求(经过了加密解密处理)，向目标网站请求并返回数据</p>\n<p>　　之所以要加上stunnel加密，是因为GFW会把请求墙掉，导致原始请求连代理服务器都发送不过去。</p>\n<h1 id=\"物料准备\"><a href=\"#物料准备\" class=\"headerlink\" title=\"物料准备\"></a>物料准备</h1><p>　　1. 国外服务器，可以正常无限制访问互联网，用来代理国内被墙的请求<br>　　2. 国内服务器，可以是服务器也可以是自己的主机，用来做stunnel加密服务器<br>　　3. stunnel，squid，chrom以及chrome下的代理插件SwitchOmega(stunnel，squid必须，客户端代理可以采取别的浏览器)</p>\n<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>　　1. 我的国外服务器系统是Centos 6.0-x86，以下称为服务器A<br>　　2. 我的国内stunnel采用的也是服务器部署，之所以没有采用自己的主机，考虑到如果将stunnel加密服务也部署在我的客户端上的话，只要我电脑关机后就要重新启动stunnel服务，而且如果换电脑的话就不能用了。因此将服务和客户端分开了，没有条件的可以将stunnel加密服务搭建在自己的主机上亦可。以下称stunnel加密服务器为服务器B，自己用来上网的电脑称为客户端。<br>　　服务器Ｂ的系统是Linux 2.6.32。</p>\n<h1 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h1><h2 id=\"服务器A上安装squid以及stunnel\"><a href=\"#服务器A上安装squid以及stunnel\" class=\"headerlink\" title=\"服务器A上安装squid以及stunnel\"></a>服务器A上安装squid以及stunnel</h2><ul>\n<li>安装squid<br><code>yum install squid</code></li>\n<li>修改squid配置文件：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/squid/squid.conf      #路径以自己安装的为准</span><br></pre></td></tr></table></figure>\n<p>将配置文件的<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http_access deny all</span><br><span class=\"line\">修改为</span><br><span class=\"line\">http_access allow all</span><br><span class=\"line\">其余多余的http_access选项删除</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>启动squid<br><code>service squid start</code></p>\n</li>\n<li><p>安装stunnel<br><code>yum install stunnel</code><br>由于需要stunnel进行加密，因此还需要生成相应的密钥：(依赖openssl，通常linux发行版都自带了，如果没有预装可以自行安装)</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/etc/stunnel/</span><br><span class=\"line\">openssl req -<span class=\"keyword\">new</span> -x509 -days <span class=\"number\">1000</span> -nodes -out stunnel.pem -keyout stunnel.pem  </span><br><span class=\"line\">#生成一个有效时间1000天的证书文件stunnel.pem</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改配置文件</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/local/etc/stunnel/stunnel.conf    #路径以自己安装的为准</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>我的配置文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fips=no</span><br><span class=\"line\">syslog=yes</span><br><span class=\"line\">debug=7</span><br><span class=\"line\">output=/var/log/stunnel.log</span><br><span class=\"line\">setuid=root                        #我是部署在root账户下，看部署的账户了 </span><br><span class=\"line\">setgid=root                          </span><br><span class=\"line\">pid=/var/run/stunnel.pid</span><br><span class=\"line\">cert=/usr/local/etc/stunnel/stunnel.pem     #上述生成的证书文件路径</span><br><span class=\"line\">key=/usr/local/etc/stunnel/stunnel.pem</span><br><span class=\"line\">client=no</span><br><span class=\"line\">[squid]</span><br><span class=\"line\">accept=443                         #stunnel的监听接口 </span><br><span class=\"line\">connect=127.0.0.1:3128             #服务器A的connect配置基本没啥用</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>启动stunnel<br><code>stunnel stunnel.conf</code></li>\n</ul>\n<h1 id=\"服务器B上安装stunnel\"><a href=\"#服务器B上安装stunnel\" class=\"headerlink\" title=\"服务器B上安装stunnel\"></a>服务器B上安装stunnel</h1><p>在服务器B上安装stunnel，步骤类似服务器A，需要注意的是，证书文件可以和服务器A一样，直接复制过来即可。</p>\n<ul>\n<li><p>修改配置文件：<br>我的配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cert = ./stunnel.pem               #复制过来的证书文件路径</span><br><span class=\"line\">socket = l:TCP_NODELAY=1</span><br><span class=\"line\">socket = r:TCP_NODELAY=1</span><br><span class=\"line\">verify = 2</span><br><span class=\"line\">CAfile = ./stunnel.pem</span><br><span class=\"line\">client=yes</span><br><span class=\"line\">compression = zlib</span><br><span class=\"line\">ciphers = AES256-SHA</span><br><span class=\"line\">delay = no</span><br><span class=\"line\">failover = prio</span><br><span class=\"line\">sslVersion = TLSv1</span><br><span class=\"line\">fips = no</span><br><span class=\"line\">[sproxy]</span><br><span class=\"line\">accept  = 8888                     \t\t\t\t\t#服务器B上stunnel的监听端口，可以随便设，影响客户端的代理设置 </span><br><span class=\"line\">connect = 服务器A的IP:服务器A的stunnel监听端口      #填写服务器A的IP和端口，用来和A交互</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动stunnel</p>\n</li>\n</ul>\n<h1 id=\"Tests\"><a href=\"#Tests\" class=\"headerlink\" title=\"Tests\"></a>Tests</h1><p>配置差不多了，配置下客户端代理试试看吧</p>\n<ol>\n<li>下载chrome浏览器下的代理管理插件SwitchOmega</li>\n<li>配置代理地址<br><img src=\"http://ww1.sinaimg.cn/large/62d95157gw1eu5s08oeo9j20o605jmy2.jpg\" alt=\"\"><br>代理地址填写服务器B的地址，端口填写服务器B上stunnel服务器的监听端口</li>\n</ol>\n<p>访问被墙地址的时候将模式切换到设置的该模式。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/62d95157gw1eu5tgaewnxj20p508m76l.jpg\" alt=\"\"></p>\n<p>Ｇｏｏｄ！</p>","sticky":0},{"title":"git学习笔记（1）","date":"2015-07-07T06:14:00.000Z","show":true,"_content":"没有系统的学习过git，工作过程中遇到一些使用git的问题，在网上搜寻经常被一些误人子弟的博主或者网站主们\"伤害\"，相信很多人也曾被网上转来转去未经验证的错误技术贴坑过。之前使用git也仅限于clone、commit、pull、push倒是没有遇到多少问题，在正式使用git来开发维护项目的时候就遇到很多问题了，尤其是在搞分支、主干，本地仓库、远程仓库的时候，那叫一个头晕。于是本着\"工欲善其事必先利其器\"的原则，跟随[廖雪峰的git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)系统的学习了下git。本篇博文即是我的git学习笔记，廖雪峰的教程非常浅显易懂，适合入门，但对于有技术基础的同学来说，未免显得\"聒噪\"了些。闲言少叙~\n\n<!--more-->\n\n# 1.创建版本库\n## 1.1设置用户以及邮箱\n设置git用户及邮箱，以便提交代码时仓库知道是谁的操作\n```js\ngit config --global user.name \"xx\"\ngit config --global user.email \"xx@xxx\"\n```\n\n## 1.2创建一个空仓库\ngit仓库就是一个目录，只要在任何的目录里创建了git的跟踪信息，该目录就成为了一个git仓库。\n```js\nmkdir test\ncd test\ngit init  <-  //初始化git，将test目录变成git仓库\n```\n## 1.3添加文件到仓库\n与svn一样，git添加文件也是add命令\n```js\ntouch README.md\ngit add README.md\n```\n添加所有新增文件可以使用add .\n```js\ntouch a b c\ngit add .\n```\n不过如果新增的空目录是没办法新增的，如果要add目录，必须目录非空\n```js\n[jihong.zjh@xxx:~/learngit]$mkdir empty\n[jihong.zjh@xxx:~/learngit]$git add empty/\n[jihong.zjh@xxx:~/learngit]$git status\n# On branch master\nnothing to commit (working directory clean)\n[jihong.zjh@xxx:~/learngit]$touch empty/test\n[jihong.zjh@xxx:~/learngit]$git add empty/\n[jihong.zjh@xxx:~/learngit]$git status\n# On branch master\n# Changes to be committed:\n#   (use \"git reset HEAD <file>...\" to unstage)\n#\n#       new file:   empty/test\n#\n```\n# 1.4提交修改\n```js\ngit commit README.md -m \"指定某个提交\"\ngit commit -a -m \"提交所有改动\"\n```\n\n# 1.5将本地仓库改动推送到远程仓库\n要将改动同步到远程仓库上还需要多一步push，由于是第一次，git需要知道要推送的仓库是什么，所以还需要使用add remote命令指定远程仓库地址\n```js\ngit remote add origin git@gitlab.alibaba-inc.com:jihong.zjh/test.git\ngit push origin master 或者直接 git push\n```\n\n# 2.想吃一颗后悔药\n穿插两个常用命令：\n- git status\n- git diff\n使用status可以时刻查看当前仓库的状态，是否有新增、修改文件，是否有修改还未提交等等\ngit diff则可以用来查看当前仓库里修改的文件和远程仓库的修改点。\n\n我在使用git的时候经常有两个时刻非常想吃颗后悔药：\n- 1.没有开分支改代码，结果改坏了。。\n- 2.使用add .或者commit -a的时候把不想缓存的修改缓存了\n- 3.刚保存的文件调试后发现有问题，但改了好多文件，回滚了别的文件怎么办啊\n第一种情形下，我通常非常怀念我上一个还能工作的版本；第二个情形当然是有笨办法的，大不了传了后再删呗，但要是有方法能撤销掉错误的缓存就好了\n\n# 2.1版本回退\ngit的每次提交修改都有日志可循，使用git log查看提交历史：\n```js\n[test@xxx:~/tap-node]$git log\ncommit 4186c5b885d6d3dcd3250836941cb8e0a07a75f6\nAuthor: xx <xx@xxx>\nDate:   Tue Jul 7 16:27:57 2015 +0800\n...\n```\n第一行commit后面跟着的commit id即对应了一次commit记录，有了commit id，接下来就好进行回退操作了。\n假设上述commit id即是我上一个可正常工作的版本，那么：\n```js\ngit reset --hard <commit id>\n```\n在git中，HEAD表示当前版本，对应git log显示的最新的commit id，HEAD^对应上一个版本，上上版本就是HEAD^^，上n个版本可以写成HEAD~n。\n\n\n# 2.2撤销修改\n\n经过git reset都可以解决上述描述的情形1,2了，但情形3，我只想取消错误修改的文件怎么办呢？整体回滚的成本太大了，可以使用checkout命令只撤销对应文件的修改即可\n```js\ngit checkout <file>\n```\n\n\n在git中，任何已经提交到git中的修改都会被记录，因此不用担心任何的文件丢失，即使在已被删除的分支中提交的代码都可以被恢复。\n你仅仅会丢失的修改只会是本地仓库中没有提交过的代码，它们对于git来说就像没有存在过一样。\n","source":"_posts/git-learning-1.md","raw":"title: git学习笔记（1）\ndate: 2015-07-07 14:14:00\ntags: git\ncategories: 技术人生\nshow: true\n---\n没有系统的学习过git，工作过程中遇到一些使用git的问题，在网上搜寻经常被一些误人子弟的博主或者网站主们\"伤害\"，相信很多人也曾被网上转来转去未经验证的错误技术贴坑过。之前使用git也仅限于clone、commit、pull、push倒是没有遇到多少问题，在正式使用git来开发维护项目的时候就遇到很多问题了，尤其是在搞分支、主干，本地仓库、远程仓库的时候，那叫一个头晕。于是本着\"工欲善其事必先利其器\"的原则，跟随[廖雪峰的git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)系统的学习了下git。本篇博文即是我的git学习笔记，廖雪峰的教程非常浅显易懂，适合入门，但对于有技术基础的同学来说，未免显得\"聒噪\"了些。闲言少叙~\n\n<!--more-->\n\n# 1.创建版本库\n## 1.1设置用户以及邮箱\n设置git用户及邮箱，以便提交代码时仓库知道是谁的操作\n```js\ngit config --global user.name \"xx\"\ngit config --global user.email \"xx@xxx\"\n```\n\n## 1.2创建一个空仓库\ngit仓库就是一个目录，只要在任何的目录里创建了git的跟踪信息，该目录就成为了一个git仓库。\n```js\nmkdir test\ncd test\ngit init  <-  //初始化git，将test目录变成git仓库\n```\n## 1.3添加文件到仓库\n与svn一样，git添加文件也是add命令\n```js\ntouch README.md\ngit add README.md\n```\n添加所有新增文件可以使用add .\n```js\ntouch a b c\ngit add .\n```\n不过如果新增的空目录是没办法新增的，如果要add目录，必须目录非空\n```js\n[jihong.zjh@xxx:~/learngit]$mkdir empty\n[jihong.zjh@xxx:~/learngit]$git add empty/\n[jihong.zjh@xxx:~/learngit]$git status\n# On branch master\nnothing to commit (working directory clean)\n[jihong.zjh@xxx:~/learngit]$touch empty/test\n[jihong.zjh@xxx:~/learngit]$git add empty/\n[jihong.zjh@xxx:~/learngit]$git status\n# On branch master\n# Changes to be committed:\n#   (use \"git reset HEAD <file>...\" to unstage)\n#\n#       new file:   empty/test\n#\n```\n# 1.4提交修改\n```js\ngit commit README.md -m \"指定某个提交\"\ngit commit -a -m \"提交所有改动\"\n```\n\n# 1.5将本地仓库改动推送到远程仓库\n要将改动同步到远程仓库上还需要多一步push，由于是第一次，git需要知道要推送的仓库是什么，所以还需要使用add remote命令指定远程仓库地址\n```js\ngit remote add origin git@gitlab.alibaba-inc.com:jihong.zjh/test.git\ngit push origin master 或者直接 git push\n```\n\n# 2.想吃一颗后悔药\n穿插两个常用命令：\n- git status\n- git diff\n使用status可以时刻查看当前仓库的状态，是否有新增、修改文件，是否有修改还未提交等等\ngit diff则可以用来查看当前仓库里修改的文件和远程仓库的修改点。\n\n我在使用git的时候经常有两个时刻非常想吃颗后悔药：\n- 1.没有开分支改代码，结果改坏了。。\n- 2.使用add .或者commit -a的时候把不想缓存的修改缓存了\n- 3.刚保存的文件调试后发现有问题，但改了好多文件，回滚了别的文件怎么办啊\n第一种情形下，我通常非常怀念我上一个还能工作的版本；第二个情形当然是有笨办法的，大不了传了后再删呗，但要是有方法能撤销掉错误的缓存就好了\n\n# 2.1版本回退\ngit的每次提交修改都有日志可循，使用git log查看提交历史：\n```js\n[test@xxx:~/tap-node]$git log\ncommit 4186c5b885d6d3dcd3250836941cb8e0a07a75f6\nAuthor: xx <xx@xxx>\nDate:   Tue Jul 7 16:27:57 2015 +0800\n...\n```\n第一行commit后面跟着的commit id即对应了一次commit记录，有了commit id，接下来就好进行回退操作了。\n假设上述commit id即是我上一个可正常工作的版本，那么：\n```js\ngit reset --hard <commit id>\n```\n在git中，HEAD表示当前版本，对应git log显示的最新的commit id，HEAD^对应上一个版本，上上版本就是HEAD^^，上n个版本可以写成HEAD~n。\n\n\n# 2.2撤销修改\n\n经过git reset都可以解决上述描述的情形1,2了，但情形3，我只想取消错误修改的文件怎么办呢？整体回滚的成本太大了，可以使用checkout命令只撤销对应文件的修改即可\n```js\ngit checkout <file>\n```\n\n\n在git中，任何已经提交到git中的修改都会被记录，因此不用担心任何的文件丢失，即使在已被删除的分支中提交的代码都可以被恢复。\n你仅仅会丢失的修改只会是本地仓库中没有提交过的代码，它们对于git来说就像没有存在过一样。\n","slug":"git-learning-1","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzu3001sfnpvffspsvho","content":"<p>没有系统的学习过git，工作过程中遇到一些使用git的问题，在网上搜寻经常被一些误人子弟的博主或者网站主们”伤害”，相信很多人也曾被网上转来转去未经验证的错误技术贴坑过。之前使用git也仅限于clone、commit、pull、push倒是没有遇到多少问题，在正式使用git来开发维护项目的时候就遇到很多问题了，尤其是在搞分支、主干，本地仓库、远程仓库的时候，那叫一个头晕。于是本着”工欲善其事必先利其器”的原则，跟随<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰的git教程</a>系统的学习了下git。本篇博文即是我的git学习笔记，廖雪峰的教程非常浅显易懂，适合入门，但对于有技术基础的同学来说，未免显得”聒噪”了些。闲言少叙~</p>\n<a id=\"more\"></a>\n<h1 id=\"1-创建版本库\"><a href=\"#1-创建版本库\" class=\"headerlink\" title=\"1.创建版本库\"></a>1.创建版本库</h1><h2 id=\"1-1设置用户以及邮箱\"><a href=\"#1-1设置用户以及邮箱\" class=\"headerlink\" title=\"1.1设置用户以及邮箱\"></a>1.1设置用户以及邮箱</h2><p>设置git用户及邮箱，以便提交代码时仓库知道是谁的操作<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"xx\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"xx@xxx\"</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"1-2创建一个空仓库\"><a href=\"#1-2创建一个空仓库\" class=\"headerlink\" title=\"1.2创建一个空仓库\"></a>1.2创建一个空仓库</h2><p>git仓库就是一个目录，只要在任何的目录里创建了git的跟踪信息，该目录就成为了一个git仓库。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir test</span><br><span class=\"line\">cd test</span><br><span class=\"line\">git init  &lt;-  <span class=\"comment\">//初始化git，将test目录变成git仓库</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"1-3添加文件到仓库\"><a href=\"#1-3添加文件到仓库\" class=\"headerlink\" title=\"1.3添加文件到仓库\"></a>1.3添加文件到仓库</h2><p>与svn一样，git添加文件也是add命令<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch README.md</span><br><span class=\"line\">git add README.md</span><br></pre></td></tr></table></figure></p>\n<p>添加所有新增文件可以使用add .<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch a b c</span><br><span class=\"line\">git add .</span><br></pre></td></tr></table></figure></p>\n<p>不过如果新增的空目录是没办法新增的，如果要add目录，必须目录非空<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[jihong.zjh@xxx:~<span class=\"regexp\">/learngit]$mkdir empty</span></span><br><span class=\"line\"><span class=\"regexp\">[jihong.zjh@xxx:~/learngit]$git add empty/</span></span><br><span class=\"line\">[jihong.zjh@xxx:~<span class=\"regexp\">/learngit]$git status</span></span><br><span class=\"line\"><span class=\"regexp\"># On branch master</span></span><br><span class=\"line\"><span class=\"regexp\">nothing to commit (working directory clean)</span></span><br><span class=\"line\"><span class=\"regexp\">[jihong.zjh@xxx:~/learngit]$touch empty/</span>test</span><br><span class=\"line\">[jihong.zjh@xxx:~<span class=\"regexp\">/learngit]$git add empty/</span></span><br><span class=\"line\">[jihong.zjh@xxx:~<span class=\"regexp\">/learngit]$git status</span></span><br><span class=\"line\"><span class=\"regexp\"># On branch master</span></span><br><span class=\"line\"><span class=\"regexp\"># Changes to be committed:</span></span><br><span class=\"line\"><span class=\"regexp\">#   (use \"git reset HEAD &lt;file&gt;...\" to unstage)</span></span><br><span class=\"line\"><span class=\"regexp\">#</span></span><br><span class=\"line\"><span class=\"regexp\">#       new file:   empty/</span>test</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"1-4提交修改\"><a href=\"#1-4提交修改\" class=\"headerlink\" title=\"1.4提交修改\"></a>1.4提交修改</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit README.md -m <span class=\"string\">\"指定某个提交\"</span></span><br><span class=\"line\">git commit -a -m <span class=\"string\">\"提交所有改动\"</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"1-5将本地仓库改动推送到远程仓库\"><a href=\"#1-5将本地仓库改动推送到远程仓库\" class=\"headerlink\" title=\"1.5将本地仓库改动推送到远程仓库\"></a>1.5将本地仓库改动推送到远程仓库</h1><p>要将改动同步到远程仓库上还需要多一步push，由于是第一次，git需要知道要推送的仓库是什么，所以还需要使用add remote命令指定远程仓库地址<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@gitlab.alibaba-inc.com:jihong.zjh/test.git</span><br><span class=\"line\">git push origin master 或者直接 git push</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"2-想吃一颗后悔药\"><a href=\"#2-想吃一颗后悔药\" class=\"headerlink\" title=\"2.想吃一颗后悔药\"></a>2.想吃一颗后悔药</h1><p>穿插两个常用命令：</p>\n<ul>\n<li>git status</li>\n<li>git diff<br>使用status可以时刻查看当前仓库的状态，是否有新增、修改文件，是否有修改还未提交等等<br>git diff则可以用来查看当前仓库里修改的文件和远程仓库的修改点。</li>\n</ul>\n<p>我在使用git的时候经常有两个时刻非常想吃颗后悔药：</p>\n<ul>\n<li>1.没有开分支改代码，结果改坏了。。</li>\n<li>2.使用add .或者commit -a的时候把不想缓存的修改缓存了</li>\n<li>3.刚保存的文件调试后发现有问题，但改了好多文件，回滚了别的文件怎么办啊<br>第一种情形下，我通常非常怀念我上一个还能工作的版本；第二个情形当然是有笨办法的，大不了传了后再删呗，但要是有方法能撤销掉错误的缓存就好了</li>\n</ul>\n<h1 id=\"2-1版本回退\"><a href=\"#2-1版本回退\" class=\"headerlink\" title=\"2.1版本回退\"></a>2.1版本回退</h1><p>git的每次提交修改都有日志可循，使用git log查看提交历史：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[test@xxx:~<span class=\"regexp\">/tap-node]$git log</span></span><br><span class=\"line\"><span class=\"regexp\">commit 4186c5b885d6d3dcd3250836941cb8e0a07a75f6</span></span><br><span class=\"line\"><span class=\"regexp\">Author: xx &lt;xx@xxx&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">Date:   Tue Jul 7 16:27:57 2015 +0800</span></span><br><span class=\"line\"><span class=\"regexp\">...</span></span><br></pre></td></tr></table></figure></p>\n<p>第一行commit后面跟着的commit id即对应了一次commit记录，有了commit id，接下来就好进行回退操作了。<br>假设上述commit id即是我上一个可正常工作的版本，那么：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;commit id&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在git中，HEAD表示当前版本，对应git log显示的最新的commit id，HEAD^对应上一个版本，上上版本就是HEAD^^，上n个版本可以写成HEAD~n。</p>\n<h1 id=\"2-2撤销修改\"><a href=\"#2-2撤销修改\" class=\"headerlink\" title=\"2.2撤销修改\"></a>2.2撤销修改</h1><p>经过git reset都可以解决上述描述的情形1,2了，但情形3，我只想取消错误修改的文件怎么办呢？整体回滚的成本太大了，可以使用checkout命令只撤销对应文件的修改即可<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout &lt;file&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在git中，任何已经提交到git中的修改都会被记录，因此不用担心任何的文件丢失，即使在已被删除的分支中提交的代码都可以被恢复。<br>你仅仅会丢失的修改只会是本地仓库中没有提交过的代码，它们对于git来说就像没有存在过一样。</p>\n","site":{"data":{}},"excerpt":"<p>没有系统的学习过git，工作过程中遇到一些使用git的问题，在网上搜寻经常被一些误人子弟的博主或者网站主们”伤害”，相信很多人也曾被网上转来转去未经验证的错误技术贴坑过。之前使用git也仅限于clone、commit、pull、push倒是没有遇到多少问题，在正式使用git来开发维护项目的时候就遇到很多问题了，尤其是在搞分支、主干，本地仓库、远程仓库的时候，那叫一个头晕。于是本着”工欲善其事必先利其器”的原则，跟随<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰的git教程</a>系统的学习了下git。本篇博文即是我的git学习笔记，廖雪峰的教程非常浅显易懂，适合入门，但对于有技术基础的同学来说，未免显得”聒噪”了些。闲言少叙~</p>","more":"<h1 id=\"1-创建版本库\"><a href=\"#1-创建版本库\" class=\"headerlink\" title=\"1.创建版本库\"></a>1.创建版本库</h1><h2 id=\"1-1设置用户以及邮箱\"><a href=\"#1-1设置用户以及邮箱\" class=\"headerlink\" title=\"1.1设置用户以及邮箱\"></a>1.1设置用户以及邮箱</h2><p>设置git用户及邮箱，以便提交代码时仓库知道是谁的操作<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"xx\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"xx@xxx\"</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"1-2创建一个空仓库\"><a href=\"#1-2创建一个空仓库\" class=\"headerlink\" title=\"1.2创建一个空仓库\"></a>1.2创建一个空仓库</h2><p>git仓库就是一个目录，只要在任何的目录里创建了git的跟踪信息，该目录就成为了一个git仓库。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir test</span><br><span class=\"line\">cd test</span><br><span class=\"line\">git init  &lt;-  <span class=\"comment\">//初始化git，将test目录变成git仓库</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"1-3添加文件到仓库\"><a href=\"#1-3添加文件到仓库\" class=\"headerlink\" title=\"1.3添加文件到仓库\"></a>1.3添加文件到仓库</h2><p>与svn一样，git添加文件也是add命令<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch README.md</span><br><span class=\"line\">git add README.md</span><br></pre></td></tr></table></figure></p>\n<p>添加所有新增文件可以使用add .<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch a b c</span><br><span class=\"line\">git add .</span><br></pre></td></tr></table></figure></p>\n<p>不过如果新增的空目录是没办法新增的，如果要add目录，必须目录非空<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[jihong.zjh@xxx:~<span class=\"regexp\">/learngit]$mkdir empty</span></span><br><span class=\"line\"><span class=\"regexp\">[jihong.zjh@xxx:~/learngit]$git add empty/</span></span><br><span class=\"line\">[jihong.zjh@xxx:~<span class=\"regexp\">/learngit]$git status</span></span><br><span class=\"line\"><span class=\"regexp\"># On branch master</span></span><br><span class=\"line\"><span class=\"regexp\">nothing to commit (working directory clean)</span></span><br><span class=\"line\"><span class=\"regexp\">[jihong.zjh@xxx:~/learngit]$touch empty/</span>test</span><br><span class=\"line\">[jihong.zjh@xxx:~<span class=\"regexp\">/learngit]$git add empty/</span></span><br><span class=\"line\">[jihong.zjh@xxx:~<span class=\"regexp\">/learngit]$git status</span></span><br><span class=\"line\"><span class=\"regexp\"># On branch master</span></span><br><span class=\"line\"><span class=\"regexp\"># Changes to be committed:</span></span><br><span class=\"line\"><span class=\"regexp\">#   (use \"git reset HEAD &lt;file&gt;...\" to unstage)</span></span><br><span class=\"line\"><span class=\"regexp\">#</span></span><br><span class=\"line\"><span class=\"regexp\">#       new file:   empty/</span>test</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"1-4提交修改\"><a href=\"#1-4提交修改\" class=\"headerlink\" title=\"1.4提交修改\"></a>1.4提交修改</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit README.md -m <span class=\"string\">\"指定某个提交\"</span></span><br><span class=\"line\">git commit -a -m <span class=\"string\">\"提交所有改动\"</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"1-5将本地仓库改动推送到远程仓库\"><a href=\"#1-5将本地仓库改动推送到远程仓库\" class=\"headerlink\" title=\"1.5将本地仓库改动推送到远程仓库\"></a>1.5将本地仓库改动推送到远程仓库</h1><p>要将改动同步到远程仓库上还需要多一步push，由于是第一次，git需要知道要推送的仓库是什么，所以还需要使用add remote命令指定远程仓库地址<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin git@gitlab.alibaba-inc.com:jihong.zjh/test.git</span><br><span class=\"line\">git push origin master 或者直接 git push</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"2-想吃一颗后悔药\"><a href=\"#2-想吃一颗后悔药\" class=\"headerlink\" title=\"2.想吃一颗后悔药\"></a>2.想吃一颗后悔药</h1><p>穿插两个常用命令：</p>\n<ul>\n<li>git status</li>\n<li>git diff<br>使用status可以时刻查看当前仓库的状态，是否有新增、修改文件，是否有修改还未提交等等<br>git diff则可以用来查看当前仓库里修改的文件和远程仓库的修改点。</li>\n</ul>\n<p>我在使用git的时候经常有两个时刻非常想吃颗后悔药：</p>\n<ul>\n<li>1.没有开分支改代码，结果改坏了。。</li>\n<li>2.使用add .或者commit -a的时候把不想缓存的修改缓存了</li>\n<li>3.刚保存的文件调试后发现有问题，但改了好多文件，回滚了别的文件怎么办啊<br>第一种情形下，我通常非常怀念我上一个还能工作的版本；第二个情形当然是有笨办法的，大不了传了后再删呗，但要是有方法能撤销掉错误的缓存就好了</li>\n</ul>\n<h1 id=\"2-1版本回退\"><a href=\"#2-1版本回退\" class=\"headerlink\" title=\"2.1版本回退\"></a>2.1版本回退</h1><p>git的每次提交修改都有日志可循，使用git log查看提交历史：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[test@xxx:~<span class=\"regexp\">/tap-node]$git log</span></span><br><span class=\"line\"><span class=\"regexp\">commit 4186c5b885d6d3dcd3250836941cb8e0a07a75f6</span></span><br><span class=\"line\"><span class=\"regexp\">Author: xx &lt;xx@xxx&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">Date:   Tue Jul 7 16:27:57 2015 +0800</span></span><br><span class=\"line\"><span class=\"regexp\">...</span></span><br></pre></td></tr></table></figure></p>\n<p>第一行commit后面跟着的commit id即对应了一次commit记录，有了commit id，接下来就好进行回退操作了。<br>假设上述commit id即是我上一个可正常工作的版本，那么：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;commit id&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在git中，HEAD表示当前版本，对应git log显示的最新的commit id，HEAD^对应上一个版本，上上版本就是HEAD^^，上n个版本可以写成HEAD~n。</p>\n<h1 id=\"2-2撤销修改\"><a href=\"#2-2撤销修改\" class=\"headerlink\" title=\"2.2撤销修改\"></a>2.2撤销修改</h1><p>经过git reset都可以解决上述描述的情形1,2了，但情形3，我只想取消错误修改的文件怎么办呢？整体回滚的成本太大了，可以使用checkout命令只撤销对应文件的修改即可<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout &lt;file&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在git中，任何已经提交到git中的修改都会被记录，因此不用担心任何的文件丢失，即使在已被删除的分支中提交的代码都可以被恢复。<br>你仅仅会丢失的修改只会是本地仓库中没有提交过的代码，它们对于git来说就像没有存在过一样。</p>","sticky":0},{"title":"git学习笔记（2）","date":"2015-07-10T06:35:17.000Z","show":true,"_content":"# 3.远程仓库\nsvn只在一个仓库里管理文件，而git是分布式版本控制系统，同一个git仓库可以分布到不同的机器上。\n不同机器上的版本库其实都一样，没有主次之分。通常实际上，我们是有一台充当服务器的电脑，开源项目有很多的项目托管网站如github，gitcafe等，自己公司也会搭建自己的git服务器。我们每个人都从这个服务器上克隆一份仓库到自己本地上，再把自己的提交推送到服务器仓库里。\n在向远程仓库提交修改之前，需要设置一下本地与远程服务器之间的信任关系，这也是svn与git的区别之一。svn通过账号即可，而git本地和远程仓库之间的传输是通过ssh加密的，需要设置一下key，本质上等价于两台服务器之间的信任关系建立。这里简单记录一下key生成的步骤。\n<!--more-->\n## 3.1设置本地与远程的信任关系\n- 创建SSH KEY\n在本机用户主目录下如果已有密钥文件id_rsa、id_rsa.pub则可以跳过此步骤，否则需要先生成密钥，生成方法：\n```js\nssh-keygen -t rsa -C \"email@xxx.com\"\n```\n使用默认设置，一路回车即可\n- 将生成的KEY添加到远程库\n以github为例，打开用户配置\n![](http://ww2.sinaimg.cn/bmiddle/62d95157gw1etxonuntbqj20p60gqta2.jpg)\n在设置页面选择\"SSH Keys\"，点击\"Add SSH Keys\"，将生成的id_rsa.pub文件的内容黏贴进框中，需要注意不要有多余的字符。\n\n这样在向远程仓库推送的时候git就可以识别出提交推送的人确实是有权限的。（跟主机间建立信任关系免密码登录一个道理）\n按照同样的步骤，可以添加多个Key，这个就可以在不同的电脑上进行提交了。\n\n## 3.2添加远程仓库\n略去在服务器上添加新的空仓库的过程不表，通常新建仓库之后服务器会提示我们如何新建仓库或者将本地已有的仓库与远程关联。\n![](http://ww4.sinaimg.cn/bmiddle/62d95157gw1etxp7xfwq3j20g6098jt4.jpg)\n添加后，远程库的名字就是*origin*，这是git默认的叫法，也可以改成别的，但*origin*这个名字一看就知道是远程库。\n\n上图中第一次推送的时候使用的是\n`git push -u origin master`\n实际上是把当前分支*master*推送到远程。\n由于远程库是空的，第一次推送master分支时，加上-u参数，git不但会把本地的master分支内容推送到远程库新的master分支，还会把本地的master分支和远程的master分支关联起来，在后续的推送中即可简化推送命令：\n`git push`\n\n# 4.分支管理\n分支管理之前弄的不是很明白，主要还是实际工作中分支开发的使用不多。以前我在写工具的时候通常要修改的时候都是拷贝一份代码出来，修改好了之后再替换原来的。这样不但山寨，也让我付出过惨痛代价：硬盘挂了或者被同事误删除导致代码丢失。。\ngit的分支管理可以让你随时修改代码，想提交就提交，开发完成后再合并到主干即可。安全可靠。虽然在刚学git的时候发生过由于操作*reset*命令有误导致将已修改的代码回滚掉，表象看起来都是丢了代码，但本质上已经完全不一样啦，硬盘挂或者被误删之类的再也不用担心了。\n## 4.1创建分支\n在git里，分支的管理操作非常快，这是由于git在创建分支时仅仅是指针的修改，见图：\n![](http://ww3.sinaimg.cn/thumbnail/62d95157gw1etxpo3n0e5j208d047q2w.jpg)\n初始时，HEAD指针指向master分支，每当创建一个分支时，git会新建一个指针指向该分支（未做改动前，该分支指针和master分支指向一致），HEAD指向改指针（原先指向master，表示当前分支），工作区文件都不会变化。当分支提交改动时，该分支指针即向前移动一步，而master指针不会改变。\n当分支的工作完成，合并分支到master时，git直接将master的指针指向了要合并的分支，改变HEAD指针指向master。合并也相当迅速，不涉及文件操作。过程见图：\n![](http://ww4.sinaimg.cn/bmiddle/62d95157gw1etxpwrt26lj20dq06hmx7.jpg)\n\n![](http://ww2.sinaimg.cn/bmiddle/62d95157gw1etxpwv53w5j20br0660st.jpg)\n`git checkout -b dev`\n创建dev分支并切换到dev分支（-b表示切换）\n可以使用`git branch`查看当前分支，使用`git branch -a`查看远程仓库有几个分支\n## 4.2合并分支\n当分支开发完毕需要合并到master上时\n```js\ngit checkout master\ngit merge dev\n```\n首先切回master分支，然后merge待合并分支\n这种默认的merge合并方式是*Fast-forward*，git直接把master指向dev的当前提交，合并非常快，所以叫*快进模式*。\n并不是每次都可以\"快进\"成功，还有其他的合并方式。\n## 4.3删除分支\n`git branch -d dev`\n\n## 4.4获取远程分支\n很多时候我们需要将远程分支上的代码check下来修改，这时候如果本地工作机器没有已经check好的分支代码的话直接`git pull`是不行的，该怎么获取远程分支代码呢？\n```js\ngit branch -a  //查看远程分支信息\ngit fetch      //获取远程库代码\ngit checkout -b local-branch origin/remote-branch   //新建本地分支并映射到远程名为remote-branch的分支上\ngit branch     //可以查看下确认是否已经在local-branch分支上了\n```\n\n","source":"_posts/git-learning-2.md","raw":"title: git学习笔记（2）\ndate: 2015-07-10 14:35:17\ntags: git\ncategories: 技术人生\nshow: true\n---\n# 3.远程仓库\nsvn只在一个仓库里管理文件，而git是分布式版本控制系统，同一个git仓库可以分布到不同的机器上。\n不同机器上的版本库其实都一样，没有主次之分。通常实际上，我们是有一台充当服务器的电脑，开源项目有很多的项目托管网站如github，gitcafe等，自己公司也会搭建自己的git服务器。我们每个人都从这个服务器上克隆一份仓库到自己本地上，再把自己的提交推送到服务器仓库里。\n在向远程仓库提交修改之前，需要设置一下本地与远程服务器之间的信任关系，这也是svn与git的区别之一。svn通过账号即可，而git本地和远程仓库之间的传输是通过ssh加密的，需要设置一下key，本质上等价于两台服务器之间的信任关系建立。这里简单记录一下key生成的步骤。\n<!--more-->\n## 3.1设置本地与远程的信任关系\n- 创建SSH KEY\n在本机用户主目录下如果已有密钥文件id_rsa、id_rsa.pub则可以跳过此步骤，否则需要先生成密钥，生成方法：\n```js\nssh-keygen -t rsa -C \"email@xxx.com\"\n```\n使用默认设置，一路回车即可\n- 将生成的KEY添加到远程库\n以github为例，打开用户配置\n![](http://ww2.sinaimg.cn/bmiddle/62d95157gw1etxonuntbqj20p60gqta2.jpg)\n在设置页面选择\"SSH Keys\"，点击\"Add SSH Keys\"，将生成的id_rsa.pub文件的内容黏贴进框中，需要注意不要有多余的字符。\n\n这样在向远程仓库推送的时候git就可以识别出提交推送的人确实是有权限的。（跟主机间建立信任关系免密码登录一个道理）\n按照同样的步骤，可以添加多个Key，这个就可以在不同的电脑上进行提交了。\n\n## 3.2添加远程仓库\n略去在服务器上添加新的空仓库的过程不表，通常新建仓库之后服务器会提示我们如何新建仓库或者将本地已有的仓库与远程关联。\n![](http://ww4.sinaimg.cn/bmiddle/62d95157gw1etxp7xfwq3j20g6098jt4.jpg)\n添加后，远程库的名字就是*origin*，这是git默认的叫法，也可以改成别的，但*origin*这个名字一看就知道是远程库。\n\n上图中第一次推送的时候使用的是\n`git push -u origin master`\n实际上是把当前分支*master*推送到远程。\n由于远程库是空的，第一次推送master分支时，加上-u参数，git不但会把本地的master分支内容推送到远程库新的master分支，还会把本地的master分支和远程的master分支关联起来，在后续的推送中即可简化推送命令：\n`git push`\n\n# 4.分支管理\n分支管理之前弄的不是很明白，主要还是实际工作中分支开发的使用不多。以前我在写工具的时候通常要修改的时候都是拷贝一份代码出来，修改好了之后再替换原来的。这样不但山寨，也让我付出过惨痛代价：硬盘挂了或者被同事误删除导致代码丢失。。\ngit的分支管理可以让你随时修改代码，想提交就提交，开发完成后再合并到主干即可。安全可靠。虽然在刚学git的时候发生过由于操作*reset*命令有误导致将已修改的代码回滚掉，表象看起来都是丢了代码，但本质上已经完全不一样啦，硬盘挂或者被误删之类的再也不用担心了。\n## 4.1创建分支\n在git里，分支的管理操作非常快，这是由于git在创建分支时仅仅是指针的修改，见图：\n![](http://ww3.sinaimg.cn/thumbnail/62d95157gw1etxpo3n0e5j208d047q2w.jpg)\n初始时，HEAD指针指向master分支，每当创建一个分支时，git会新建一个指针指向该分支（未做改动前，该分支指针和master分支指向一致），HEAD指向改指针（原先指向master，表示当前分支），工作区文件都不会变化。当分支提交改动时，该分支指针即向前移动一步，而master指针不会改变。\n当分支的工作完成，合并分支到master时，git直接将master的指针指向了要合并的分支，改变HEAD指针指向master。合并也相当迅速，不涉及文件操作。过程见图：\n![](http://ww4.sinaimg.cn/bmiddle/62d95157gw1etxpwrt26lj20dq06hmx7.jpg)\n\n![](http://ww2.sinaimg.cn/bmiddle/62d95157gw1etxpwv53w5j20br0660st.jpg)\n`git checkout -b dev`\n创建dev分支并切换到dev分支（-b表示切换）\n可以使用`git branch`查看当前分支，使用`git branch -a`查看远程仓库有几个分支\n## 4.2合并分支\n当分支开发完毕需要合并到master上时\n```js\ngit checkout master\ngit merge dev\n```\n首先切回master分支，然后merge待合并分支\n这种默认的merge合并方式是*Fast-forward*，git直接把master指向dev的当前提交，合并非常快，所以叫*快进模式*。\n并不是每次都可以\"快进\"成功，还有其他的合并方式。\n## 4.3删除分支\n`git branch -d dev`\n\n## 4.4获取远程分支\n很多时候我们需要将远程分支上的代码check下来修改，这时候如果本地工作机器没有已经check好的分支代码的话直接`git pull`是不行的，该怎么获取远程分支代码呢？\n```js\ngit branch -a  //查看远程分支信息\ngit fetch      //获取远程库代码\ngit checkout -b local-branch origin/remote-branch   //新建本地分支并映射到远程名为remote-branch的分支上\ngit branch     //可以查看下确认是否已经在local-branch分支上了\n```\n\n","slug":"git-learning-2","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzu5001vfnpviu2qsltl","content":"<h1 id=\"3-远程仓库\"><a href=\"#3-远程仓库\" class=\"headerlink\" title=\"3.远程仓库\"></a>3.远程仓库</h1><p>svn只在一个仓库里管理文件，而git是分布式版本控制系统，同一个git仓库可以分布到不同的机器上。<br>不同机器上的版本库其实都一样，没有主次之分。通常实际上，我们是有一台充当服务器的电脑，开源项目有很多的项目托管网站如github，gitcafe等，自己公司也会搭建自己的git服务器。我们每个人都从这个服务器上克隆一份仓库到自己本地上，再把自己的提交推送到服务器仓库里。<br>在向远程仓库提交修改之前，需要设置一下本地与远程服务器之间的信任关系，这也是svn与git的区别之一。svn通过账号即可，而git本地和远程仓库之间的传输是通过ssh加密的，需要设置一下key，本质上等价于两台服务器之间的信任关系建立。这里简单记录一下key生成的步骤。<br><a id=\"more\"></a></p>\n<h2 id=\"3-1设置本地与远程的信任关系\"><a href=\"#3-1设置本地与远程的信任关系\" class=\"headerlink\" title=\"3.1设置本地与远程的信任关系\"></a>3.1设置本地与远程的信任关系</h2><ul>\n<li>创建SSH KEY<br>在本机用户主目录下如果已有密钥文件id_rsa、id_rsa.pub则可以跳过此步骤，否则需要先生成密钥，生成方法：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"email@xxx.com\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>使用默认设置，一路回车即可</p>\n<ul>\n<li>将生成的KEY添加到远程库<br>以github为例，打开用户配置<br><img src=\"http://ww2.sinaimg.cn/bmiddle/62d95157gw1etxonuntbqj20p60gqta2.jpg\" alt=\"\"><br>在设置页面选择”SSH Keys”，点击”Add SSH Keys”，将生成的id_rsa.pub文件的内容黏贴进框中，需要注意不要有多余的字符。</li>\n</ul>\n<p>这样在向远程仓库推送的时候git就可以识别出提交推送的人确实是有权限的。（跟主机间建立信任关系免密码登录一个道理）<br>按照同样的步骤，可以添加多个Key，这个就可以在不同的电脑上进行提交了。</p>\n<h2 id=\"3-2添加远程仓库\"><a href=\"#3-2添加远程仓库\" class=\"headerlink\" title=\"3.2添加远程仓库\"></a>3.2添加远程仓库</h2><p>略去在服务器上添加新的空仓库的过程不表，通常新建仓库之后服务器会提示我们如何新建仓库或者将本地已有的仓库与远程关联。<br><img src=\"http://ww4.sinaimg.cn/bmiddle/62d95157gw1etxp7xfwq3j20g6098jt4.jpg\" alt=\"\"><br>添加后，远程库的名字就是<em>origin</em>，这是git默认的叫法，也可以改成别的，但<em>origin</em>这个名字一看就知道是远程库。</p>\n<p>上图中第一次推送的时候使用的是<br><code>git push -u origin master</code><br>实际上是把当前分支<em>master</em>推送到远程。<br>由于远程库是空的，第一次推送master分支时，加上-u参数，git不但会把本地的master分支内容推送到远程库新的master分支，还会把本地的master分支和远程的master分支关联起来，在后续的推送中即可简化推送命令：<br><code>git push</code></p>\n<h1 id=\"4-分支管理\"><a href=\"#4-分支管理\" class=\"headerlink\" title=\"4.分支管理\"></a>4.分支管理</h1><p>分支管理之前弄的不是很明白，主要还是实际工作中分支开发的使用不多。以前我在写工具的时候通常要修改的时候都是拷贝一份代码出来，修改好了之后再替换原来的。这样不但山寨，也让我付出过惨痛代价：硬盘挂了或者被同事误删除导致代码丢失。。<br>git的分支管理可以让你随时修改代码，想提交就提交，开发完成后再合并到主干即可。安全可靠。虽然在刚学git的时候发生过由于操作<em>reset</em>命令有误导致将已修改的代码回滚掉，表象看起来都是丢了代码，但本质上已经完全不一样啦，硬盘挂或者被误删之类的再也不用担心了。</p>\n<h2 id=\"4-1创建分支\"><a href=\"#4-1创建分支\" class=\"headerlink\" title=\"4.1创建分支\"></a>4.1创建分支</h2><p>在git里，分支的管理操作非常快，这是由于git在创建分支时仅仅是指针的修改，见图：<br><img src=\"http://ww3.sinaimg.cn/thumbnail/62d95157gw1etxpo3n0e5j208d047q2w.jpg\" alt=\"\"><br>初始时，HEAD指针指向master分支，每当创建一个分支时，git会新建一个指针指向该分支（未做改动前，该分支指针和master分支指向一致），HEAD指向改指针（原先指向master，表示当前分支），工作区文件都不会变化。当分支提交改动时，该分支指针即向前移动一步，而master指针不会改变。<br>当分支的工作完成，合并分支到master时，git直接将master的指针指向了要合并的分支，改变HEAD指针指向master。合并也相当迅速，不涉及文件操作。过程见图：<br><img src=\"http://ww4.sinaimg.cn/bmiddle/62d95157gw1etxpwrt26lj20dq06hmx7.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww2.sinaimg.cn/bmiddle/62d95157gw1etxpwv53w5j20br0660st.jpg\" alt=\"\"><br><code>git checkout -b dev</code><br>创建dev分支并切换到dev分支（-b表示切换）<br>可以使用<code>git branch</code>查看当前分支，使用<code>git branch -a</code>查看远程仓库有几个分支</p>\n<h2 id=\"4-2合并分支\"><a href=\"#4-2合并分支\" class=\"headerlink\" title=\"4.2合并分支\"></a>4.2合并分支</h2><p>当分支开发完毕需要合并到master上时<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge dev</span><br></pre></td></tr></table></figure></p>\n<p>首先切回master分支，然后merge待合并分支<br>这种默认的merge合并方式是<em>Fast-forward</em>，git直接把master指向dev的当前提交，合并非常快，所以叫<em>快进模式</em>。<br>并不是每次都可以”快进”成功，还有其他的合并方式。</p>\n<h2 id=\"4-3删除分支\"><a href=\"#4-3删除分支\" class=\"headerlink\" title=\"4.3删除分支\"></a>4.3删除分支</h2><p><code>git branch -d dev</code></p>\n<h2 id=\"4-4获取远程分支\"><a href=\"#4-4获取远程分支\" class=\"headerlink\" title=\"4.4获取远程分支\"></a>4.4获取远程分支</h2><p>很多时候我们需要将远程分支上的代码check下来修改，这时候如果本地工作机器没有已经check好的分支代码的话直接<code>git pull</code>是不行的，该怎么获取远程分支代码呢？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -a  <span class=\"comment\">//查看远程分支信息</span></span><br><span class=\"line\">git fetch      <span class=\"comment\">//获取远程库代码</span></span><br><span class=\"line\">git checkout -b local-branch origin/remote-branch   <span class=\"comment\">//新建本地分支并映射到远程名为remote-branch的分支上</span></span><br><span class=\"line\">git branch     <span class=\"comment\">//可以查看下确认是否已经在local-branch分支上了</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"3-远程仓库\"><a href=\"#3-远程仓库\" class=\"headerlink\" title=\"3.远程仓库\"></a>3.远程仓库</h1><p>svn只在一个仓库里管理文件，而git是分布式版本控制系统，同一个git仓库可以分布到不同的机器上。<br>不同机器上的版本库其实都一样，没有主次之分。通常实际上，我们是有一台充当服务器的电脑，开源项目有很多的项目托管网站如github，gitcafe等，自己公司也会搭建自己的git服务器。我们每个人都从这个服务器上克隆一份仓库到自己本地上，再把自己的提交推送到服务器仓库里。<br>在向远程仓库提交修改之前，需要设置一下本地与远程服务器之间的信任关系，这也是svn与git的区别之一。svn通过账号即可，而git本地和远程仓库之间的传输是通过ssh加密的，需要设置一下key，本质上等价于两台服务器之间的信任关系建立。这里简单记录一下key生成的步骤。<br>","more":"</p>\n<h2 id=\"3-1设置本地与远程的信任关系\"><a href=\"#3-1设置本地与远程的信任关系\" class=\"headerlink\" title=\"3.1设置本地与远程的信任关系\"></a>3.1设置本地与远程的信任关系</h2><ul>\n<li>创建SSH KEY<br>在本机用户主目录下如果已有密钥文件id_rsa、id_rsa.pub则可以跳过此步骤，否则需要先生成密钥，生成方法：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"email@xxx.com\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>使用默认设置，一路回车即可</p>\n<ul>\n<li>将生成的KEY添加到远程库<br>以github为例，打开用户配置<br><img src=\"http://ww2.sinaimg.cn/bmiddle/62d95157gw1etxonuntbqj20p60gqta2.jpg\" alt=\"\"><br>在设置页面选择”SSH Keys”，点击”Add SSH Keys”，将生成的id_rsa.pub文件的内容黏贴进框中，需要注意不要有多余的字符。</li>\n</ul>\n<p>这样在向远程仓库推送的时候git就可以识别出提交推送的人确实是有权限的。（跟主机间建立信任关系免密码登录一个道理）<br>按照同样的步骤，可以添加多个Key，这个就可以在不同的电脑上进行提交了。</p>\n<h2 id=\"3-2添加远程仓库\"><a href=\"#3-2添加远程仓库\" class=\"headerlink\" title=\"3.2添加远程仓库\"></a>3.2添加远程仓库</h2><p>略去在服务器上添加新的空仓库的过程不表，通常新建仓库之后服务器会提示我们如何新建仓库或者将本地已有的仓库与远程关联。<br><img src=\"http://ww4.sinaimg.cn/bmiddle/62d95157gw1etxp7xfwq3j20g6098jt4.jpg\" alt=\"\"><br>添加后，远程库的名字就是<em>origin</em>，这是git默认的叫法，也可以改成别的，但<em>origin</em>这个名字一看就知道是远程库。</p>\n<p>上图中第一次推送的时候使用的是<br><code>git push -u origin master</code><br>实际上是把当前分支<em>master</em>推送到远程。<br>由于远程库是空的，第一次推送master分支时，加上-u参数，git不但会把本地的master分支内容推送到远程库新的master分支，还会把本地的master分支和远程的master分支关联起来，在后续的推送中即可简化推送命令：<br><code>git push</code></p>\n<h1 id=\"4-分支管理\"><a href=\"#4-分支管理\" class=\"headerlink\" title=\"4.分支管理\"></a>4.分支管理</h1><p>分支管理之前弄的不是很明白，主要还是实际工作中分支开发的使用不多。以前我在写工具的时候通常要修改的时候都是拷贝一份代码出来，修改好了之后再替换原来的。这样不但山寨，也让我付出过惨痛代价：硬盘挂了或者被同事误删除导致代码丢失。。<br>git的分支管理可以让你随时修改代码，想提交就提交，开发完成后再合并到主干即可。安全可靠。虽然在刚学git的时候发生过由于操作<em>reset</em>命令有误导致将已修改的代码回滚掉，表象看起来都是丢了代码，但本质上已经完全不一样啦，硬盘挂或者被误删之类的再也不用担心了。</p>\n<h2 id=\"4-1创建分支\"><a href=\"#4-1创建分支\" class=\"headerlink\" title=\"4.1创建分支\"></a>4.1创建分支</h2><p>在git里，分支的管理操作非常快，这是由于git在创建分支时仅仅是指针的修改，见图：<br><img src=\"http://ww3.sinaimg.cn/thumbnail/62d95157gw1etxpo3n0e5j208d047q2w.jpg\" alt=\"\"><br>初始时，HEAD指针指向master分支，每当创建一个分支时，git会新建一个指针指向该分支（未做改动前，该分支指针和master分支指向一致），HEAD指向改指针（原先指向master，表示当前分支），工作区文件都不会变化。当分支提交改动时，该分支指针即向前移动一步，而master指针不会改变。<br>当分支的工作完成，合并分支到master时，git直接将master的指针指向了要合并的分支，改变HEAD指针指向master。合并也相当迅速，不涉及文件操作。过程见图：<br><img src=\"http://ww4.sinaimg.cn/bmiddle/62d95157gw1etxpwrt26lj20dq06hmx7.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww2.sinaimg.cn/bmiddle/62d95157gw1etxpwv53w5j20br0660st.jpg\" alt=\"\"><br><code>git checkout -b dev</code><br>创建dev分支并切换到dev分支（-b表示切换）<br>可以使用<code>git branch</code>查看当前分支，使用<code>git branch -a</code>查看远程仓库有几个分支</p>\n<h2 id=\"4-2合并分支\"><a href=\"#4-2合并分支\" class=\"headerlink\" title=\"4.2合并分支\"></a>4.2合并分支</h2><p>当分支开发完毕需要合并到master上时<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge dev</span><br></pre></td></tr></table></figure></p>\n<p>首先切回master分支，然后merge待合并分支<br>这种默认的merge合并方式是<em>Fast-forward</em>，git直接把master指向dev的当前提交，合并非常快，所以叫<em>快进模式</em>。<br>并不是每次都可以”快进”成功，还有其他的合并方式。</p>\n<h2 id=\"4-3删除分支\"><a href=\"#4-3删除分支\" class=\"headerlink\" title=\"4.3删除分支\"></a>4.3删除分支</h2><p><code>git branch -d dev</code></p>\n<h2 id=\"4-4获取远程分支\"><a href=\"#4-4获取远程分支\" class=\"headerlink\" title=\"4.4获取远程分支\"></a>4.4获取远程分支</h2><p>很多时候我们需要将远程分支上的代码check下来修改，这时候如果本地工作机器没有已经check好的分支代码的话直接<code>git pull</code>是不行的，该怎么获取远程分支代码呢？<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -a  <span class=\"comment\">//查看远程分支信息</span></span><br><span class=\"line\">git fetch      <span class=\"comment\">//获取远程库代码</span></span><br><span class=\"line\">git checkout -b local-branch origin/remote-branch   <span class=\"comment\">//新建本地分支并映射到远程名为remote-branch的分支上</span></span><br><span class=\"line\">git branch     <span class=\"comment\">//可以查看下确认是否已经在local-branch分支上了</span></span><br></pre></td></tr></table></figure></p>","sticky":0},{"title":"git学习笔记（3）","date":"2015-07-24T06:31:39.000Z","show":true,"_content":"本篇对Git的学习做一个扫尾笔记，主要是标签、配置等一些杂项。\n三篇下来，基本上对日常使用中常用到的方法和命令都基本掌握了，以后有需要再查漏补缺了。\n\n# 4.标签\n标签相当于给分支取了一个好记的别名，这在git里称为里程碑。比如我们的代码版本达到了发布版本，可以取个别名叫做v1.0等等。方便后续更容易访问，而不是查看git log找到对应的commitid。\n\n标签即版本库快照。\n\n<!--more-->\n\n## 4.1 创建标签\ngit中打标签非常简单，拢共分两步：\n- 首先切换到待打标签的分支上\n```js\ngit checkout <branch name>\n\n```\n- 然后git tag打标签\n```js\ngit tag <tag name>\n```\n\n默认是给最新提交打标签，也可以给某次的历史commit打标签：\n```js\ngit tag <tag name> <commit id>\n\n```\n## 4.2 查看标签\n可以使用`git tag`查看标签，`git show <tag name>`可以查看标签信息。\n![](http://ww3.sinaimg.cn/large/62d95157gw1eudveokukyj20lt09kn0b.jpg)\n\n## 4.3 删除标签\n删除本地标签：\n```js\ngit tag -d <tag name>\n```\n如果要删除远程标签：(先删除本地再删除远程)\n```js\ngit tag -d <tag name>\ngit push origin :refs/tags/<tag name>\n```\n\n## 4.4 推送标签\n```js\ngit push origin <tag name>\n```\n一次性推送全部本地尚未推送到远程的标签：\n```js\ngit push origin --tags\n```\n\n# 5. 杂项\n## 5.1 配置git显示颜色\n```js\ngit config --global color.ui true\n```\n\n## 5.2 配置git命令别名\n给常用git命令设置简短别名：\n```js\ngit config --global alias.st status\ngit config --global alias.co checkout\ngit config --global alias.ci commit\ngit config --global alias.br branch\ngit config --global alias.pu push\ngit config --global alias.unstage 'reset HEAD'  //放弃暂存区的修改\n```\n## 5.3 配置忽略特殊文件\n我们在管理代码时，有时候有些文件不想列入代码管理，比如nodejs工程的node_modules安装模块目录，这种属于系统生成不是我们开发的文件，每次在查看git修改的时候都会提示\"untracked xxx\"，看着让强迫症患者还是挺不爽的。\n庆幸的是，git提供了忽略这些明确不用加入代码管理的文件的方式。只需配置下配置文件忽略掉他们即可。\n```js\ntouch ./.gitignore      //创建该配置文件，并添加待忽略文件，支持正则\n```\n\n对于熟悉svn的来说，使用git只是熟能生巧的事情，最后附上一张总结的Git常用命令图。\n[点击查看源图](http://byte.kde.org/~zrusin/git/git-cheat-sheet-large.png)\n![](http://byte.kde.org/~zrusin/git/git-cheat-sheet-large.png)\n","source":"_posts/git-learning-3.md","raw":"title: git学习笔记（3）\ndate: 2015-07-24 14:31:39\ntags: git\ncategories:  技术人生\nshow: true\n---\n本篇对Git的学习做一个扫尾笔记，主要是标签、配置等一些杂项。\n三篇下来，基本上对日常使用中常用到的方法和命令都基本掌握了，以后有需要再查漏补缺了。\n\n# 4.标签\n标签相当于给分支取了一个好记的别名，这在git里称为里程碑。比如我们的代码版本达到了发布版本，可以取个别名叫做v1.0等等。方便后续更容易访问，而不是查看git log找到对应的commitid。\n\n标签即版本库快照。\n\n<!--more-->\n\n## 4.1 创建标签\ngit中打标签非常简单，拢共分两步：\n- 首先切换到待打标签的分支上\n```js\ngit checkout <branch name>\n\n```\n- 然后git tag打标签\n```js\ngit tag <tag name>\n```\n\n默认是给最新提交打标签，也可以给某次的历史commit打标签：\n```js\ngit tag <tag name> <commit id>\n\n```\n## 4.2 查看标签\n可以使用`git tag`查看标签，`git show <tag name>`可以查看标签信息。\n![](http://ww3.sinaimg.cn/large/62d95157gw1eudveokukyj20lt09kn0b.jpg)\n\n## 4.3 删除标签\n删除本地标签：\n```js\ngit tag -d <tag name>\n```\n如果要删除远程标签：(先删除本地再删除远程)\n```js\ngit tag -d <tag name>\ngit push origin :refs/tags/<tag name>\n```\n\n## 4.4 推送标签\n```js\ngit push origin <tag name>\n```\n一次性推送全部本地尚未推送到远程的标签：\n```js\ngit push origin --tags\n```\n\n# 5. 杂项\n## 5.1 配置git显示颜色\n```js\ngit config --global color.ui true\n```\n\n## 5.2 配置git命令别名\n给常用git命令设置简短别名：\n```js\ngit config --global alias.st status\ngit config --global alias.co checkout\ngit config --global alias.ci commit\ngit config --global alias.br branch\ngit config --global alias.pu push\ngit config --global alias.unstage 'reset HEAD'  //放弃暂存区的修改\n```\n## 5.3 配置忽略特殊文件\n我们在管理代码时，有时候有些文件不想列入代码管理，比如nodejs工程的node_modules安装模块目录，这种属于系统生成不是我们开发的文件，每次在查看git修改的时候都会提示\"untracked xxx\"，看着让强迫症患者还是挺不爽的。\n庆幸的是，git提供了忽略这些明确不用加入代码管理的文件的方式。只需配置下配置文件忽略掉他们即可。\n```js\ntouch ./.gitignore      //创建该配置文件，并添加待忽略文件，支持正则\n```\n\n对于熟悉svn的来说，使用git只是熟能生巧的事情，最后附上一张总结的Git常用命令图。\n[点击查看源图](http://byte.kde.org/~zrusin/git/git-cheat-sheet-large.png)\n![](http://byte.kde.org/~zrusin/git/git-cheat-sheet-large.png)\n","slug":"git-learning-3","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzu7001zfnpv6icddg21","content":"<p>本篇对Git的学习做一个扫尾笔记，主要是标签、配置等一些杂项。<br>三篇下来，基本上对日常使用中常用到的方法和命令都基本掌握了，以后有需要再查漏补缺了。</p>\n<h1 id=\"4-标签\"><a href=\"#4-标签\" class=\"headerlink\" title=\"4.标签\"></a>4.标签</h1><p>标签相当于给分支取了一个好记的别名，这在git里称为里程碑。比如我们的代码版本达到了发布版本，可以取个别名叫做v1.0等等。方便后续更容易访问，而不是查看git log找到对应的commitid。</p>\n<p>标签即版本库快照。</p>\n<a id=\"more\"></a>\n<h2 id=\"4-1-创建标签\"><a href=\"#4-1-创建标签\" class=\"headerlink\" title=\"4.1 创建标签\"></a>4.1 创建标签</h2><p>git中打标签非常简单，拢共分两步：</p>\n<ul>\n<li><p>首先切换到待打标签的分支上</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout &lt;branch name&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后git tag打标签</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag &lt;tag name&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>默认是给最新提交打标签，也可以给某次的历史commit打标签：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag &lt;tag name&gt; <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">commit</span> <span class=\"attr\">id</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-2-查看标签\"><a href=\"#4-2-查看标签\" class=\"headerlink\" title=\"4.2 查看标签\"></a>4.2 查看标签</h2><p>可以使用<code>git tag</code>查看标签，<code>git show &lt;tag name&gt;</code>可以查看标签信息。<br><img src=\"http://ww3.sinaimg.cn/large/62d95157gw1eudveokukyj20lt09kn0b.jpg\" alt=\"\"></p>\n<h2 id=\"4-3-删除标签\"><a href=\"#4-3-删除标签\" class=\"headerlink\" title=\"4.3 删除标签\"></a>4.3 删除标签</h2><p>删除本地标签：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d &lt;tag name&gt;</span><br></pre></td></tr></table></figure></p>\n<p>如果要删除远程标签：(先删除本地再删除远程)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d &lt;tag name&gt;</span><br><span class=\"line\">git push origin :refs/tags/<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">tag</span> <span class=\"attr\">name</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-4-推送标签\"><a href=\"#4-4-推送标签\" class=\"headerlink\" title=\"4.4 推送标签\"></a>4.4 推送标签</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin &lt;tag name&gt;</span><br></pre></td></tr></table></figure>\n<p>一次性推送全部本地尚未推送到远程的标签：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --tags</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"5-杂项\"><a href=\"#5-杂项\" class=\"headerlink\" title=\"5. 杂项\"></a>5. 杂项</h1><h2 id=\"5-1-配置git显示颜色\"><a href=\"#5-1-配置git显示颜色\" class=\"headerlink\" title=\"5.1 配置git显示颜色\"></a>5.1 配置git显示颜色</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global color.ui <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-2-配置git命令别名\"><a href=\"#5-2-配置git命令别名\" class=\"headerlink\" title=\"5.2 配置git命令别名\"></a>5.2 配置git命令别名</h2><p>给常用git命令设置简短别名：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global alias.st status</span><br><span class=\"line\">git config --global alias.co checkout</span><br><span class=\"line\">git config --global alias.ci commit</span><br><span class=\"line\">git config --global alias.br branch</span><br><span class=\"line\">git config --global alias.pu push</span><br><span class=\"line\">git config --global alias.unstage <span class=\"string\">'reset HEAD'</span>  <span class=\"comment\">//放弃暂存区的修改</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"5-3-配置忽略特殊文件\"><a href=\"#5-3-配置忽略特殊文件\" class=\"headerlink\" title=\"5.3 配置忽略特殊文件\"></a>5.3 配置忽略特殊文件</h2><p>我们在管理代码时，有时候有些文件不想列入代码管理，比如nodejs工程的node_modules安装模块目录，这种属于系统生成不是我们开发的文件，每次在查看git修改的时候都会提示”untracked xxx”，看着让强迫症患者还是挺不爽的。<br>庆幸的是，git提供了忽略这些明确不用加入代码管理的文件的方式。只需配置下配置文件忽略掉他们即可。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch ./.gitignore      <span class=\"comment\">//创建该配置文件，并添加待忽略文件，支持正则</span></span><br></pre></td></tr></table></figure></p>\n<p>对于熟悉svn的来说，使用git只是熟能生巧的事情，最后附上一张总结的Git常用命令图。<br><a href=\"http://byte.kde.org/~zrusin/git/git-cheat-sheet-large.png\" target=\"_blank\" rel=\"noopener\">点击查看源图</a><br><img src=\"http://byte.kde.org/~zrusin/git/git-cheat-sheet-large.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>本篇对Git的学习做一个扫尾笔记，主要是标签、配置等一些杂项。<br>三篇下来，基本上对日常使用中常用到的方法和命令都基本掌握了，以后有需要再查漏补缺了。</p>\n<h1 id=\"4-标签\"><a href=\"#4-标签\" class=\"headerlink\" title=\"4.标签\"></a>4.标签</h1><p>标签相当于给分支取了一个好记的别名，这在git里称为里程碑。比如我们的代码版本达到了发布版本，可以取个别名叫做v1.0等等。方便后续更容易访问，而不是查看git log找到对应的commitid。</p>\n<p>标签即版本库快照。</p>","more":"<h2 id=\"4-1-创建标签\"><a href=\"#4-1-创建标签\" class=\"headerlink\" title=\"4.1 创建标签\"></a>4.1 创建标签</h2><p>git中打标签非常简单，拢共分两步：</p>\n<ul>\n<li><p>首先切换到待打标签的分支上</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout &lt;branch name&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后git tag打标签</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag &lt;tag name&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>默认是给最新提交打标签，也可以给某次的历史commit打标签：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag &lt;tag name&gt; <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">commit</span> <span class=\"attr\">id</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-2-查看标签\"><a href=\"#4-2-查看标签\" class=\"headerlink\" title=\"4.2 查看标签\"></a>4.2 查看标签</h2><p>可以使用<code>git tag</code>查看标签，<code>git show &lt;tag name&gt;</code>可以查看标签信息。<br><img src=\"http://ww3.sinaimg.cn/large/62d95157gw1eudveokukyj20lt09kn0b.jpg\" alt=\"\"></p>\n<h2 id=\"4-3-删除标签\"><a href=\"#4-3-删除标签\" class=\"headerlink\" title=\"4.3 删除标签\"></a>4.3 删除标签</h2><p>删除本地标签：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d &lt;tag name&gt;</span><br></pre></td></tr></table></figure></p>\n<p>如果要删除远程标签：(先删除本地再删除远程)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d &lt;tag name&gt;</span><br><span class=\"line\">git push origin :refs/tags/<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">tag</span> <span class=\"attr\">name</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-4-推送标签\"><a href=\"#4-4-推送标签\" class=\"headerlink\" title=\"4.4 推送标签\"></a>4.4 推送标签</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin &lt;tag name&gt;</span><br></pre></td></tr></table></figure>\n<p>一次性推送全部本地尚未推送到远程的标签：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --tags</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"5-杂项\"><a href=\"#5-杂项\" class=\"headerlink\" title=\"5. 杂项\"></a>5. 杂项</h1><h2 id=\"5-1-配置git显示颜色\"><a href=\"#5-1-配置git显示颜色\" class=\"headerlink\" title=\"5.1 配置git显示颜色\"></a>5.1 配置git显示颜色</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global color.ui <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-2-配置git命令别名\"><a href=\"#5-2-配置git命令别名\" class=\"headerlink\" title=\"5.2 配置git命令别名\"></a>5.2 配置git命令别名</h2><p>给常用git命令设置简短别名：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global alias.st status</span><br><span class=\"line\">git config --global alias.co checkout</span><br><span class=\"line\">git config --global alias.ci commit</span><br><span class=\"line\">git config --global alias.br branch</span><br><span class=\"line\">git config --global alias.pu push</span><br><span class=\"line\">git config --global alias.unstage <span class=\"string\">'reset HEAD'</span>  <span class=\"comment\">//放弃暂存区的修改</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"5-3-配置忽略特殊文件\"><a href=\"#5-3-配置忽略特殊文件\" class=\"headerlink\" title=\"5.3 配置忽略特殊文件\"></a>5.3 配置忽略特殊文件</h2><p>我们在管理代码时，有时候有些文件不想列入代码管理，比如nodejs工程的node_modules安装模块目录，这种属于系统生成不是我们开发的文件，每次在查看git修改的时候都会提示”untracked xxx”，看着让强迫症患者还是挺不爽的。<br>庆幸的是，git提供了忽略这些明确不用加入代码管理的文件的方式。只需配置下配置文件忽略掉他们即可。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch ./.gitignore      <span class=\"comment\">//创建该配置文件，并添加待忽略文件，支持正则</span></span><br></pre></td></tr></table></figure></p>\n<p>对于熟悉svn的来说，使用git只是熟能生巧的事情，最后附上一张总结的Git常用命令图。<br><a href=\"http://byte.kde.org/~zrusin/git/git-cheat-sheet-large.png\" target=\"_blank\" rel=\"noopener\">点击查看源图</a><br><img src=\"http://byte.kde.org/~zrusin/git/git-cheat-sheet-large.png\" alt=\"\"></p>","sticky":0},{"title":"gitcafe pages托管的博客dns解析","show":true,"date":"2015-12-17T08:35:45.000Z","_content":"#### 背景\n博客托管在github上，目前有很重要的两个问题：\n{% cq %} \n1. github拒绝百度收录\n2. 每次发文章都会有github page build warning告警邮件\n{% endcq%}\n\n上次写了一篇解决告警邮件的问题，但百度不能收录的问题貌似不能同时被解决。虽然改回去以后短暂的百度可以收录了，但今天看又不能收录了，真是。。。\n\n于是今天又折腾了一把，把博客迁移到gitcafe上托管了，不纠缠了，顺带还能提升访问速度。\n\n本篇不是探讨如何迁移，网上一搜已经一把了，主要想记录一下迁移到gitcafe后如何进行自定义域名的解析。\n关于这个问题，网上一水的文章，就没看到一个解释清楚了的，都是直接就贴配置了，但那些ip都是怎么来的呢？没有任何的说明，难道我的配置也可以写你的ip？这个就连[**官方的help文档**](https://help.gitcafe.com/manuals/help/pages-services#绑定自定义域名)也是语焉不详。\n\n以下是我自己折腾成功后的结果，记录下来供后来者借鉴。为此还付出了网站一段时间无法访问的代价。。\n\n<!--more-->\n\n#### 解析方法\n1. 和github不一样，gitcafe不用在项目下建立CNAME文件\n2. dig反查自己gitcafe pages的ip，将自定义的域名解析到该ip上\n```js\n\t//我的gitcafe pages域名：JHspider.gitcafe.io，按需替换\n\tdig JHspider.gitcafe.io\n\n```\n找到结果中标红的那行\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1ez2raaxsvtj20j309e76b.jpg)\n此处的ip即为网上多数文章中直接给出的ip的来源。\n在域名解析商处，配置A记录，将自定义的域名解析到此ip即可。\n\n以我的阿里云解析为例：\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1ez2rcob54zj20pt03fjrk.jpg)\n\n","source":"_posts/gitcafe-dns.md","raw":"title: gitcafe pages托管的博客dns解析\nshow: true\ndate: 2015-12-17 16:35:45\ntags: [gitcafe pages,gitcafe dns,gitcafe 域名解析]\ncategories: 技术人生\n---\n#### 背景\n博客托管在github上，目前有很重要的两个问题：\n{% cq %} \n1. github拒绝百度收录\n2. 每次发文章都会有github page build warning告警邮件\n{% endcq%}\n\n上次写了一篇解决告警邮件的问题，但百度不能收录的问题貌似不能同时被解决。虽然改回去以后短暂的百度可以收录了，但今天看又不能收录了，真是。。。\n\n于是今天又折腾了一把，把博客迁移到gitcafe上托管了，不纠缠了，顺带还能提升访问速度。\n\n本篇不是探讨如何迁移，网上一搜已经一把了，主要想记录一下迁移到gitcafe后如何进行自定义域名的解析。\n关于这个问题，网上一水的文章，就没看到一个解释清楚了的，都是直接就贴配置了，但那些ip都是怎么来的呢？没有任何的说明，难道我的配置也可以写你的ip？这个就连[**官方的help文档**](https://help.gitcafe.com/manuals/help/pages-services#绑定自定义域名)也是语焉不详。\n\n以下是我自己折腾成功后的结果，记录下来供后来者借鉴。为此还付出了网站一段时间无法访问的代价。。\n\n<!--more-->\n\n#### 解析方法\n1. 和github不一样，gitcafe不用在项目下建立CNAME文件\n2. dig反查自己gitcafe pages的ip，将自定义的域名解析到该ip上\n```js\n\t//我的gitcafe pages域名：JHspider.gitcafe.io，按需替换\n\tdig JHspider.gitcafe.io\n\n```\n找到结果中标红的那行\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1ez2raaxsvtj20j309e76b.jpg)\n此处的ip即为网上多数文章中直接给出的ip的来源。\n在域名解析商处，配置A记录，将自定义的域名解析到此ip即可。\n\n以我的阿里云解析为例：\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1ez2rcob54zj20pt03fjrk.jpg)\n\n","slug":"gitcafe-dns","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzu90022fnpvglhg7105","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>博客托管在github上，目前有很重要的两个问题：<br><blockquote class=\"blockquote-center\"><ol>\n<li>github拒绝百度收录</li>\n<li>每次发文章都会有github page build warning告警邮件</li>\n</ol>\n</blockquote></p>\n<p>上次写了一篇解决告警邮件的问题，但百度不能收录的问题貌似不能同时被解决。虽然改回去以后短暂的百度可以收录了，但今天看又不能收录了，真是。。。</p>\n<p>于是今天又折腾了一把，把博客迁移到gitcafe上托管了，不纠缠了，顺带还能提升访问速度。</p>\n<p>本篇不是探讨如何迁移，网上一搜已经一把了，主要想记录一下迁移到gitcafe后如何进行自定义域名的解析。<br>关于这个问题，网上一水的文章，就没看到一个解释清楚了的，都是直接就贴配置了，但那些ip都是怎么来的呢？没有任何的说明，难道我的配置也可以写你的ip？这个就连<a href=\"https://help.gitcafe.com/manuals/help/pages-services#绑定自定义域名\" target=\"_blank\" rel=\"noopener\"><strong>官方的help文档</strong></a>也是语焉不详。</p>\n<p>以下是我自己折腾成功后的结果，记录下来供后来者借鉴。为此还付出了网站一段时间无法访问的代价。。</p>\n<a id=\"more\"></a>\n<h4 id=\"解析方法\"><a href=\"#解析方法\" class=\"headerlink\" title=\"解析方法\"></a>解析方法</h4><ol>\n<li>和github不一样，gitcafe不用在项目下建立CNAME文件</li>\n<li>dig反查自己gitcafe pages的ip，将自定义的域名解析到该ip上<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//我的gitcafe pages域名：JHspider.gitcafe.io，按需替换</span></span><br><span class=\"line\">dig JHspider.gitcafe.io</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>找到结果中标红的那行<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1ez2raaxsvtj20j309e76b.jpg\" alt=\"\"><br>此处的ip即为网上多数文章中直接给出的ip的来源。<br>在域名解析商处，配置A记录，将自定义的域名解析到此ip即可。</p>\n<p>以我的阿里云解析为例：<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1ez2rcob54zj20pt03fjrk.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>博客托管在github上，目前有很重要的两个问题：<br><blockquote class=\"blockquote-center\"><ol>\n<li>github拒绝百度收录</li>\n<li>每次发文章都会有github page build warning告警邮件</li>\n</ol>\n</blockquote></p>\n<p>上次写了一篇解决告警邮件的问题，但百度不能收录的问题貌似不能同时被解决。虽然改回去以后短暂的百度可以收录了，但今天看又不能收录了，真是。。。</p>\n<p>于是今天又折腾了一把，把博客迁移到gitcafe上托管了，不纠缠了，顺带还能提升访问速度。</p>\n<p>本篇不是探讨如何迁移，网上一搜已经一把了，主要想记录一下迁移到gitcafe后如何进行自定义域名的解析。<br>关于这个问题，网上一水的文章，就没看到一个解释清楚了的，都是直接就贴配置了，但那些ip都是怎么来的呢？没有任何的说明，难道我的配置也可以写你的ip？这个就连<a href=\"https://help.gitcafe.com/manuals/help/pages-services#绑定自定义域名\" target=\"_blank\" rel=\"noopener\"><strong>官方的help文档</strong></a>也是语焉不详。</p>\n<p>以下是我自己折腾成功后的结果，记录下来供后来者借鉴。为此还付出了网站一段时间无法访问的代价。。</p>","more":"<h4 id=\"解析方法\"><a href=\"#解析方法\" class=\"headerlink\" title=\"解析方法\"></a>解析方法</h4><ol>\n<li>和github不一样，gitcafe不用在项目下建立CNAME文件</li>\n<li>dig反查自己gitcafe pages的ip，将自定义的域名解析到该ip上<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//我的gitcafe pages域名：JHspider.gitcafe.io，按需替换</span></span><br><span class=\"line\">dig JHspider.gitcafe.io</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>找到结果中标红的那行<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1ez2raaxsvtj20j309e76b.jpg\" alt=\"\"><br>此处的ip即为网上多数文章中直接给出的ip的来源。<br>在域名解析商处，配置A记录，将自定义的域名解析到此ip即可。</p>\n<p>以我的阿里云解析为例：<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1ez2rcob54zj20pt03fjrk.jpg\" alt=\"\"></p>","sticky":0},{"title":"解决hexo博客gitpages的page build warning问题","show":true,"date":"2015-12-11T06:06:45.000Z","_content":"#### 背景\n每次博客在写完文章发布之后，邮箱都会收到一封提醒邮件：\n> The page build completed successfully, but returned the following warning:\n\n> Your site's DNS settings are using a custom subdomain, www.5941740.cn, that's set up as an A record. We recommend you change this to a CNAME record pointing at zhangjh.github.io. Instructions on configuring a subdomain for use with GitHub Pages can be found at: https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/ \n\n> For information on troubleshooting Jekyll see:\n\n>  https://help.github.com/articles/using-jekyll-with-pages#troubleshooting\n\n> If you have any questions you can contact us by replying to this email.\n\n说我的域名dns解析有问题云云。之前也是在[github的帮助页面](https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/)上看的如何将自己的域名解析到gitpages上来。\n> With your DNS provider, create A records that resolve to the following IP addresses:\n\n> 192.30.252.153\n> 192.30.252.154\n> To confirm that your A records have been set correctly, use the dig command:\n\n> dig example.com +nostats +nocomments +nocmd\n> ;example.com\n> example.com.   73  IN  A 192.30.252.153\n> example.com.   73  IN  A 192.30.252.154\n\n由于一直也不影响访问就没当回事，奈何每次都发邮件还没法设置取消提醒，很烦。。\n\n<!--more-->\n\n#### 解决方法\n根据邮件提示，我需要将我的www域名解析到gitpages的`zhangjh.github.io`上才是。\n\n于是在github上搜索了下，官方的解决方法如下：[链接](https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider/)\n1. 域名解析商处\n- 创建A记录\n> 创建A记录，将顶级域名解析到`192.30.252.154`或`192.30.252.153`\n\n- 创建CNAME记录\n> 创建CNAME记录，将子域名(www)解析到gitpages的用户名，就是邮件里提到的`zhangjh.github.io`啦。\n\n2.项目仓库\ngitpages项目仓库里增加一个CNAME文件，其内容写上自己的域名\n```js\nwww.5941740.cn\n\n```\n等一会儿，dig域名查看dns是否解析生效。\n\n\n### 12.12更新--解决百度爬虫无法爬取问题\n做如上修改解决报警邮件问题后有一个副作用，我在做了修改一天之后才发现。\n该副作用是：百度不能收录！\n原因在网上搜索一番后发现，gitpages博客不能被百度收录，百度站长工具的抓取诊断也确实显示了抓取失败。\n>HTTP/1.1 403 Forbidden\nCache-Control: no-cache\nContent-Type: text/html\nTransfer-Encoding: chunked\nAccept-Ranges: bytes\nDate: Sat, 12 Dec 2015 12:50:53 GMT\nVia: 1.1 varnish\nConnection: close\nX-Served-By: cache-itm7426-ITM\nX-Cache: MISS\nX-Cache-Hits: 0\nX-Timer: S1449924652.915626,VS0,VE183\nVary: Accept-Encoding\nX-Fastly-Request-ID: 42a7750c17762bbaab530893bae393682c58a4b9\n\n由于刚好之前是可以被爬取的，改了之后就不能爬取了，于是迅速定位到是否是由于修改了DNS解析造成的。\n网上搜索了下，基本没有好的解决方法，CDN加速抑或海外VPS（基本就是放弃gitpages托管了）都不能很好的解决问题。\n于是没办法，只有继续忍耐warning，改回原来的DNS解析了。当然如果在你看来，强迫症比百度爬取更重要的话，那就另说了。\n```js\nA www 192.30.252.153     //解决warning时将子域名解析到了zhangjh.github.io\nA @   192.30.252.153\n```\n\n修改后，使用百度站长重试了下：\n>HTTP/1.1 200 OK\nServer: GitHub.com\nContent-Type: text/html; charset=utf-8\nLast-Modified: Fri, 11 Dec 2015 07:18:54 GMT\nAccess-Control-Allow-Origin: *\nExpires: Sat, 12 Dec 2015 11:29:59 GMT\nCache-Control: max-age=600\nContent-Encoding: gzip\nX-GitHub-Request-Id: 67F5E01A:448F:908CB80:566C02DE\nContent-Length: 11740\nAccept-Ranges: bytes\nDate: Sat, 12 Dec 2015 14:17:28 GMT\nVia: 1.1 varnish\nAge: 241\nConnection: close\nX-Served-By: cache-itm7426-ITM\nX-Cache: HIT\nX-Cache-Hits: 2\nX-Timer: S1449929848.900641,VS0,VE0\nVary: Accept-Encoding\nX-Fastly-Request-ID: 3d0dcaa1f8e132e8d6ed056c6c6f1e28f7bcd8eb\n\n","source":"_posts/gitpages-warning.md","raw":"title: 解决hexo博客gitpages的page build warning问题\nshow: true\ndate: 2015-12-11 14:06:45\ntags: [page build warning,github,gitpages warning,hexo,dns]\ncategories: 技术人生\n---\n#### 背景\n每次博客在写完文章发布之后，邮箱都会收到一封提醒邮件：\n> The page build completed successfully, but returned the following warning:\n\n> Your site's DNS settings are using a custom subdomain, www.5941740.cn, that's set up as an A record. We recommend you change this to a CNAME record pointing at zhangjh.github.io. Instructions on configuring a subdomain for use with GitHub Pages can be found at: https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/ \n\n> For information on troubleshooting Jekyll see:\n\n>  https://help.github.com/articles/using-jekyll-with-pages#troubleshooting\n\n> If you have any questions you can contact us by replying to this email.\n\n说我的域名dns解析有问题云云。之前也是在[github的帮助页面](https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/)上看的如何将自己的域名解析到gitpages上来。\n> With your DNS provider, create A records that resolve to the following IP addresses:\n\n> 192.30.252.153\n> 192.30.252.154\n> To confirm that your A records have been set correctly, use the dig command:\n\n> dig example.com +nostats +nocomments +nocmd\n> ;example.com\n> example.com.   73  IN  A 192.30.252.153\n> example.com.   73  IN  A 192.30.252.154\n\n由于一直也不影响访问就没当回事，奈何每次都发邮件还没法设置取消提醒，很烦。。\n\n<!--more-->\n\n#### 解决方法\n根据邮件提示，我需要将我的www域名解析到gitpages的`zhangjh.github.io`上才是。\n\n于是在github上搜索了下，官方的解决方法如下：[链接](https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider/)\n1. 域名解析商处\n- 创建A记录\n> 创建A记录，将顶级域名解析到`192.30.252.154`或`192.30.252.153`\n\n- 创建CNAME记录\n> 创建CNAME记录，将子域名(www)解析到gitpages的用户名，就是邮件里提到的`zhangjh.github.io`啦。\n\n2.项目仓库\ngitpages项目仓库里增加一个CNAME文件，其内容写上自己的域名\n```js\nwww.5941740.cn\n\n```\n等一会儿，dig域名查看dns是否解析生效。\n\n\n### 12.12更新--解决百度爬虫无法爬取问题\n做如上修改解决报警邮件问题后有一个副作用，我在做了修改一天之后才发现。\n该副作用是：百度不能收录！\n原因在网上搜索一番后发现，gitpages博客不能被百度收录，百度站长工具的抓取诊断也确实显示了抓取失败。\n>HTTP/1.1 403 Forbidden\nCache-Control: no-cache\nContent-Type: text/html\nTransfer-Encoding: chunked\nAccept-Ranges: bytes\nDate: Sat, 12 Dec 2015 12:50:53 GMT\nVia: 1.1 varnish\nConnection: close\nX-Served-By: cache-itm7426-ITM\nX-Cache: MISS\nX-Cache-Hits: 0\nX-Timer: S1449924652.915626,VS0,VE183\nVary: Accept-Encoding\nX-Fastly-Request-ID: 42a7750c17762bbaab530893bae393682c58a4b9\n\n由于刚好之前是可以被爬取的，改了之后就不能爬取了，于是迅速定位到是否是由于修改了DNS解析造成的。\n网上搜索了下，基本没有好的解决方法，CDN加速抑或海外VPS（基本就是放弃gitpages托管了）都不能很好的解决问题。\n于是没办法，只有继续忍耐warning，改回原来的DNS解析了。当然如果在你看来，强迫症比百度爬取更重要的话，那就另说了。\n```js\nA www 192.30.252.153     //解决warning时将子域名解析到了zhangjh.github.io\nA @   192.30.252.153\n```\n\n修改后，使用百度站长重试了下：\n>HTTP/1.1 200 OK\nServer: GitHub.com\nContent-Type: text/html; charset=utf-8\nLast-Modified: Fri, 11 Dec 2015 07:18:54 GMT\nAccess-Control-Allow-Origin: *\nExpires: Sat, 12 Dec 2015 11:29:59 GMT\nCache-Control: max-age=600\nContent-Encoding: gzip\nX-GitHub-Request-Id: 67F5E01A:448F:908CB80:566C02DE\nContent-Length: 11740\nAccept-Ranges: bytes\nDate: Sat, 12 Dec 2015 14:17:28 GMT\nVia: 1.1 varnish\nAge: 241\nConnection: close\nX-Served-By: cache-itm7426-ITM\nX-Cache: HIT\nX-Cache-Hits: 2\nX-Timer: S1449929848.900641,VS0,VE0\nVary: Accept-Encoding\nX-Fastly-Request-ID: 3d0dcaa1f8e132e8d6ed056c6c6f1e28f7bcd8eb\n\n","slug":"gitpages-warning","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzub0026fnpvztpmdlry","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>每次博客在写完文章发布之后，邮箱都会收到一封提醒邮件：</p>\n<blockquote>\n<p>The page build completed successfully, but returned the following warning:</p>\n</blockquote>\n<blockquote>\n<p>Your site’s DNS settings are using a custom subdomain, <a href=\"http://www.5941740.cn\" target=\"_blank\" rel=\"noopener\">www.5941740.cn</a>, that’s set up as an A record. We recommend you change this to a CNAME record pointing at zhangjh.github.io. Instructions on configuring a subdomain for use with GitHub Pages can be found at: <a href=\"https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/</a> </p>\n</blockquote>\n<blockquote>\n<p>For information on troubleshooting Jekyll see:</p>\n</blockquote>\n<blockquote>\n<p> <a href=\"https://help.github.com/articles/using-jekyll-with-pages#troubleshooting\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/using-jekyll-with-pages#troubleshooting</a></p>\n</blockquote>\n<blockquote>\n<p>If you have any questions you can contact us by replying to this email.</p>\n</blockquote>\n<p>说我的域名dns解析有问题云云。之前也是在<a href=\"https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/\" target=\"_blank\" rel=\"noopener\">github的帮助页面</a>上看的如何将自己的域名解析到gitpages上来。</p>\n<blockquote>\n<p>With your DNS provider, create A records that resolve to the following IP addresses:</p>\n</blockquote>\n<blockquote>\n<p>192.30.252.153<br>192.30.252.154<br>To confirm that your A records have been set correctly, use the dig command:</p>\n</blockquote>\n<blockquote>\n<p>dig example.com +nostats +nocomments +nocmd<br>;example.com<br>example.com.   73  IN  A 192.30.252.153<br>example.com.   73  IN  A 192.30.252.154</p>\n</blockquote>\n<p>由于一直也不影响访问就没当回事，奈何每次都发邮件还没法设置取消提醒，很烦。。</p>\n<a id=\"more\"></a>\n<h4 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h4><p>根据邮件提示，我需要将我的www域名解析到gitpages的<code>zhangjh.github.io</code>上才是。</p>\n<p>于是在github上搜索了下，官方的解决方法如下：<a href=\"https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider/\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<ol>\n<li>域名解析商处</li>\n</ol>\n<ul>\n<li><p>创建A记录</p>\n<blockquote>\n<p>创建A记录，将顶级域名解析到<code>192.30.252.154</code>或<code>192.30.252.153</code></p>\n</blockquote>\n</li>\n<li><p>创建CNAME记录</p>\n<blockquote>\n<p>创建CNAME记录，将子域名(www)解析到gitpages的用户名，就是邮件里提到的<code>zhangjh.github.io</code>啦。</p>\n</blockquote>\n</li>\n</ul>\n<p>2.项目仓库<br>gitpages项目仓库里增加一个CNAME文件，其内容写上自己的域名<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www<span class=\"number\">.5941740</span>.cn</span><br></pre></td></tr></table></figure></p>\n<p>等一会儿，dig域名查看dns是否解析生效。</p>\n<h3 id=\"12-12更新–解决百度爬虫无法爬取问题\"><a href=\"#12-12更新–解决百度爬虫无法爬取问题\" class=\"headerlink\" title=\"12.12更新–解决百度爬虫无法爬取问题\"></a>12.12更新–解决百度爬虫无法爬取问题</h3><p>做如上修改解决报警邮件问题后有一个副作用，我在做了修改一天之后才发现。<br>该副作用是：百度不能收录！<br>原因在网上搜索一番后发现，gitpages博客不能被百度收录，百度站长工具的抓取诊断也确实显示了抓取失败。</p>\n<blockquote>\n<p>HTTP/1.1 403 Forbidden<br>Cache-Control: no-cache<br>Content-Type: text/html<br>Transfer-Encoding: chunked<br>Accept-Ranges: bytes<br>Date: Sat, 12 Dec 2015 12:50:53 GMT<br>Via: 1.1 varnish<br>Connection: close<br>X-Served-By: cache-itm7426-ITM<br>X-Cache: MISS<br>X-Cache-Hits: 0<br>X-Timer: S1449924652.915626,VS0,VE183<br>Vary: Accept-Encoding<br>X-Fastly-Request-ID: 42a7750c17762bbaab530893bae393682c58a4b9</p>\n</blockquote>\n<p>由于刚好之前是可以被爬取的，改了之后就不能爬取了，于是迅速定位到是否是由于修改了DNS解析造成的。<br>网上搜索了下，基本没有好的解决方法，CDN加速抑或海外VPS（基本就是放弃gitpages托管了）都不能很好的解决问题。<br>于是没办法，只有继续忍耐warning，改回原来的DNS解析了。当然如果在你看来，强迫症比百度爬取更重要的话，那就另说了。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A www <span class=\"number\">192.30</span><span class=\"number\">.252</span><span class=\"number\">.153</span>     <span class=\"comment\">//解决warning时将子域名解析到了zhangjh.github.io</span></span><br><span class=\"line\">A @   <span class=\"number\">192.30</span><span class=\"number\">.252</span><span class=\"number\">.153</span></span><br></pre></td></tr></table></figure></p>\n<p>修改后，使用百度站长重试了下：</p>\n<blockquote>\n<p>HTTP/1.1 200 OK<br>Server: GitHub.com<br>Content-Type: text/html; charset=utf-8<br>Last-Modified: Fri, 11 Dec 2015 07:18:54 GMT<br>Access-Control-Allow-Origin: *<br>Expires: Sat, 12 Dec 2015 11:29:59 GMT<br>Cache-Control: max-age=600<br>Content-Encoding: gzip<br>X-GitHub-Request-Id: 67F5E01A:448F:908CB80:566C02DE<br>Content-Length: 11740<br>Accept-Ranges: bytes<br>Date: Sat, 12 Dec 2015 14:17:28 GMT<br>Via: 1.1 varnish<br>Age: 241<br>Connection: close<br>X-Served-By: cache-itm7426-ITM<br>X-Cache: HIT<br>X-Cache-Hits: 2<br>X-Timer: S1449929848.900641,VS0,VE0<br>Vary: Accept-Encoding<br>X-Fastly-Request-ID: 3d0dcaa1f8e132e8d6ed056c6c6f1e28f7bcd8eb</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>每次博客在写完文章发布之后，邮箱都会收到一封提醒邮件：</p>\n<blockquote>\n<p>The page build completed successfully, but returned the following warning:</p>\n</blockquote>\n<blockquote>\n<p>Your site’s DNS settings are using a custom subdomain, <a href=\"http://www.5941740.cn\" target=\"_blank\" rel=\"noopener\">www.5941740.cn</a>, that’s set up as an A record. We recommend you change this to a CNAME record pointing at zhangjh.github.io. Instructions on configuring a subdomain for use with GitHub Pages can be found at: <a href=\"https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/</a> </p>\n</blockquote>\n<blockquote>\n<p>For information on troubleshooting Jekyll see:</p>\n</blockquote>\n<blockquote>\n<p> <a href=\"https://help.github.com/articles/using-jekyll-with-pages#troubleshooting\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/using-jekyll-with-pages#troubleshooting</a></p>\n</blockquote>\n<blockquote>\n<p>If you have any questions you can contact us by replying to this email.</p>\n</blockquote>\n<p>说我的域名dns解析有问题云云。之前也是在<a href=\"https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/\" target=\"_blank\" rel=\"noopener\">github的帮助页面</a>上看的如何将自己的域名解析到gitpages上来。</p>\n<blockquote>\n<p>With your DNS provider, create A records that resolve to the following IP addresses:</p>\n</blockquote>\n<blockquote>\n<p>192.30.252.153<br>192.30.252.154<br>To confirm that your A records have been set correctly, use the dig command:</p>\n</blockquote>\n<blockquote>\n<p>dig example.com +nostats +nocomments +nocmd<br>;example.com<br>example.com.   73  IN  A 192.30.252.153<br>example.com.   73  IN  A 192.30.252.154</p>\n</blockquote>\n<p>由于一直也不影响访问就没当回事，奈何每次都发邮件还没法设置取消提醒，很烦。。</p>","more":"<h4 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h4><p>根据邮件提示，我需要将我的www域名解析到gitpages的<code>zhangjh.github.io</code>上才是。</p>\n<p>于是在github上搜索了下，官方的解决方法如下：<a href=\"https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider/\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n<ol>\n<li>域名解析商处</li>\n</ol>\n<ul>\n<li><p>创建A记录</p>\n<blockquote>\n<p>创建A记录，将顶级域名解析到<code>192.30.252.154</code>或<code>192.30.252.153</code></p>\n</blockquote>\n</li>\n<li><p>创建CNAME记录</p>\n<blockquote>\n<p>创建CNAME记录，将子域名(www)解析到gitpages的用户名，就是邮件里提到的<code>zhangjh.github.io</code>啦。</p>\n</blockquote>\n</li>\n</ul>\n<p>2.项目仓库<br>gitpages项目仓库里增加一个CNAME文件，其内容写上自己的域名<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www<span class=\"number\">.5941740</span>.cn</span><br></pre></td></tr></table></figure></p>\n<p>等一会儿，dig域名查看dns是否解析生效。</p>\n<h3 id=\"12-12更新–解决百度爬虫无法爬取问题\"><a href=\"#12-12更新–解决百度爬虫无法爬取问题\" class=\"headerlink\" title=\"12.12更新–解决百度爬虫无法爬取问题\"></a>12.12更新–解决百度爬虫无法爬取问题</h3><p>做如上修改解决报警邮件问题后有一个副作用，我在做了修改一天之后才发现。<br>该副作用是：百度不能收录！<br>原因在网上搜索一番后发现，gitpages博客不能被百度收录，百度站长工具的抓取诊断也确实显示了抓取失败。</p>\n<blockquote>\n<p>HTTP/1.1 403 Forbidden<br>Cache-Control: no-cache<br>Content-Type: text/html<br>Transfer-Encoding: chunked<br>Accept-Ranges: bytes<br>Date: Sat, 12 Dec 2015 12:50:53 GMT<br>Via: 1.1 varnish<br>Connection: close<br>X-Served-By: cache-itm7426-ITM<br>X-Cache: MISS<br>X-Cache-Hits: 0<br>X-Timer: S1449924652.915626,VS0,VE183<br>Vary: Accept-Encoding<br>X-Fastly-Request-ID: 42a7750c17762bbaab530893bae393682c58a4b9</p>\n</blockquote>\n<p>由于刚好之前是可以被爬取的，改了之后就不能爬取了，于是迅速定位到是否是由于修改了DNS解析造成的。<br>网上搜索了下，基本没有好的解决方法，CDN加速抑或海外VPS（基本就是放弃gitpages托管了）都不能很好的解决问题。<br>于是没办法，只有继续忍耐warning，改回原来的DNS解析了。当然如果在你看来，强迫症比百度爬取更重要的话，那就另说了。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A www <span class=\"number\">192.30</span><span class=\"number\">.252</span><span class=\"number\">.153</span>     <span class=\"comment\">//解决warning时将子域名解析到了zhangjh.github.io</span></span><br><span class=\"line\">A @   <span class=\"number\">192.30</span><span class=\"number\">.252</span><span class=\"number\">.153</span></span><br></pre></td></tr></table></figure></p>\n<p>修改后，使用百度站长重试了下：</p>\n<blockquote>\n<p>HTTP/1.1 200 OK<br>Server: GitHub.com<br>Content-Type: text/html; charset=utf-8<br>Last-Modified: Fri, 11 Dec 2015 07:18:54 GMT<br>Access-Control-Allow-Origin: *<br>Expires: Sat, 12 Dec 2015 11:29:59 GMT<br>Cache-Control: max-age=600<br>Content-Encoding: gzip<br>X-GitHub-Request-Id: 67F5E01A:448F:908CB80:566C02DE<br>Content-Length: 11740<br>Accept-Ranges: bytes<br>Date: Sat, 12 Dec 2015 14:17:28 GMT<br>Via: 1.1 varnish<br>Age: 241<br>Connection: close<br>X-Served-By: cache-itm7426-ITM<br>X-Cache: HIT<br>X-Cache-Hits: 2<br>X-Timer: S1449929848.900641,VS0,VE0<br>Vary: Accept-Encoding<br>X-Fastly-Request-ID: 3d0dcaa1f8e132e8d6ed056c6c6f1e28f7bcd8eb</p>\n</blockquote>","sticky":0},{"title":"gulp入门初步--使用gulp压缩前端代码","show":true,"date":"2016-02-19T01:43:28.000Z","_content":"#### gulp简介\ngulp是一个前端项目构建工具,用自动化构建工具增强你的工作流程[gulp中文官网语](http://www.gulpjs.com.cn/)\ngulp利用Node.js流的威力,减少了频繁的IO操作,让构建更快速,学习起来也是非常迅速.\n本篇博客就将对使用gulp进行前端代码的压缩方面做一个入门级的介绍,也是我的gulp入门学习总结.\n\n#### 安装\n1. 首先假设已经安装了node环境,如果没有安装请出门左转[node官网](https://nodejs.org/)参考\n\n2. 全局安装gulp\n```js\nnpm install -g -d gulp \n```\n\n3. 运行`gulp -v`,如果正常打印版本号则安装成功\n\n<!--more-->\n\n#### 安装常用插件\n在项目根目录下安装gulp常用插件.\ngulp的完全插件列表可以参考gulp的插件官网:[http://gulpjs.com/plugins/](http://gulpjs.com/plugins/).可以上去淘一淘插件.\n比较常用的插件大概有:\n- `gulp-minify-css         压缩css`\n- `gulp-minify-html        压缩html`\n- `gulp-uglify             压缩js`\n- `gulp-rename             重命名文件,通常压缩后的带.min后缀`\n- `gulp-jshint             jshint,js静态检查`\n- `gulp-concat             合并多个文件`\n- `gulp-imagemin           压缩图片`\n- `gulp-clean              清理文件或目录`\n\n安装:\n    `npm install [plugins-name] --save`\n    上述命令安装插件的同时也会把插件作为项目依赖写入package.json文件.\n\n#### gulp API\n##### gulp.src(globs)\n- src用来指明待处理文件的路径,globs参数必填(源文件路径)\n- globs参数string或array类型\n- 可以使用通配符,*表示匹配一层目录,**表示匹配所有子目录\n- 具体实例:\n    ```js\n        gulp.src(\"js/a.js\");              //指定js目录下a.js文件\n        gulp.src(\"js/*.js\");              //指定js目录下任意js文件\n        gulp.src(\"js/**/*.js\");           //指定js目录下所有js文件,包括任意子目录\n        gulp.src([\"js/**/*.js\",\"!js/**/*.min.js\"])   //指定js目录下所有非压缩js文件\n    ```\n\n##### gulp.dest(path)\n- dest用来指明处理完以后的文件存放路径(目的文件路径)\n- 如果path不存在会自动创建\n- 具体实例:\n    ```js\n        gulp.src(\"js/a.js\")\n        .pipe(gulp.uglify())\n        .pipe(gulp.dest(\"dst/js/\"))        //将js/a.js处理完以后输出到dst/js目录下,保持原名\n    ```\n\n##### gulp.task(name[,deps],fn)\n- name,任务的名字\n- deps,任务依赖的别的任务的名字,string或array,依赖任务完成以后才会执行当前任务\n- fn,任务操作函数\n- 实例:\n    ```js\n        gulp.task(\"example\",[\"task1\",\"task2\"],function(){\n            //做一些事情\n        });\n    ```\n- 任务甚至可以支持异步执行,只要fn能做到以下其中一点:\n    1. 接受一个回调函数\n        实例来自gulp中文官网.\n        ```js\n        var exec = require('child_process').exec;\n        gulp.task('jekyll',function(cb) {\n            exec('jekyll build',function(err) {\n                if(err)return cb(err);\n                cb();\n            });\n        });\n        ```\n    2. 返回一个stream\n        ```js\n        gulp.task('somename',function(){\n            var stream = gulp.src('client/**/*.js')\n                .pipe(minify())\n                .pipe(gulp.dest('build'));\n            return stream;\n        });\n        ```\n    3. 返回一个promise\n        ```js\n        gulp.task('somename',function() {\n            return new Promise(function(resolve,reject){\n                //做一些事\n            });\n        });\n        ```\n##### gulp.watch(glob [,opts],tasks)\n- watch方法用来监听文件变化,文件一修改就会执行指定任务\n- 实例:\n    ```js\n    gulp.task(\"watchtask\",function() {\n        gulp.watch('js/*.js',[js]);            //如果js目录下的js文件变化,则执行js任务\n        gulp.watch('**/*.html',[html]);\n    });\n    ```\ngulp一共就只有上述四个API.\n\n#### 使用gulp压缩html,css,js\n1. 我们利用上述gulp API来对项目的HTML,css,js文件进行压缩并设置监听,当文件有变动时自动运行任务\n\n2. 实例\n- 首先在项目根目录下创建gulpfile.js\n- 加载插件\n```js\nvar gulp = require('gulp'),\n    minifyCss = require('gulp-minifyCss'),\n    minifyHtml = require('gulp-minifyHtml'),\n    uglify = require('gulp-uglify'),\n    rename = require('gulp-rename'),\n    clean = require('gulp-clean');\n```\n- 清理任务\n```js\ngulp.task(\"clean\",function() {\n    return gulp.src(\"dst/\")\n    .pipe(clean());\n});\n```\n- 压缩html\n```js\ngulp.task(\"html\",function() {\n    return gulp.src(\"**/*.html\")\n    .pipe(minifyHtml())\n    .pipe(gulp.dest(\"dst/html\"));\n});\n```\n- 压缩CSS\n```js\ngulp.task(\"css\",function() {\n    return gulp.src(\"**/*.css\")\n    .pipe(minifyCss())\n    .pipe(rename({suffix:\".min\"}))\n    .pipe(gulp.dest(\"dst/css\"));\n});\n```\n- 压缩JS\n```js\ngulp.task(\"js\",function() {\n    return gulp.src(\"**/*.js\")\n    .pipe(uglify())\n    .pipe(rename({suffix:\".min\"}))\n    .pipe(gulp.dest(\"dst/js\"));\n});\n```\n- 默认任务\n```js\ngulp.task(\"default\",[\"clean\",\"js\",\"css\",\"html\"],function() {\n    console.log(\"gulp task finished!\");\n});\n```\n以上默认任务在只执行`gulp`时,由于定义了依赖任务,会依次运行clean,js,css,html任务,等任务都运行完毕后结束.默认任务自身只输出一句提示.\n- 监听任务\n```js\ngulp.task(\"watchtask\",function() {\n    gulp.watch(\"**/*.html\",[\"html\"]);\n    gulp.watch(\"**/*.css\",[\"css\"]);\n    gulp.watch(\"**/*.js\",[\"js\"]);\n});\n```\n","source":"_posts/gulp-learning.md","raw":"title: gulp入门初步--使用gulp压缩前端代码\nshow: true\ndate: 2016-02-19 09:43:28\ntags: [\"gulp\",\"代码压缩\"]\ncategories: 技术人生\n---\n#### gulp简介\ngulp是一个前端项目构建工具,用自动化构建工具增强你的工作流程[gulp中文官网语](http://www.gulpjs.com.cn/)\ngulp利用Node.js流的威力,减少了频繁的IO操作,让构建更快速,学习起来也是非常迅速.\n本篇博客就将对使用gulp进行前端代码的压缩方面做一个入门级的介绍,也是我的gulp入门学习总结.\n\n#### 安装\n1. 首先假设已经安装了node环境,如果没有安装请出门左转[node官网](https://nodejs.org/)参考\n\n2. 全局安装gulp\n```js\nnpm install -g -d gulp \n```\n\n3. 运行`gulp -v`,如果正常打印版本号则安装成功\n\n<!--more-->\n\n#### 安装常用插件\n在项目根目录下安装gulp常用插件.\ngulp的完全插件列表可以参考gulp的插件官网:[http://gulpjs.com/plugins/](http://gulpjs.com/plugins/).可以上去淘一淘插件.\n比较常用的插件大概有:\n- `gulp-minify-css         压缩css`\n- `gulp-minify-html        压缩html`\n- `gulp-uglify             压缩js`\n- `gulp-rename             重命名文件,通常压缩后的带.min后缀`\n- `gulp-jshint             jshint,js静态检查`\n- `gulp-concat             合并多个文件`\n- `gulp-imagemin           压缩图片`\n- `gulp-clean              清理文件或目录`\n\n安装:\n    `npm install [plugins-name] --save`\n    上述命令安装插件的同时也会把插件作为项目依赖写入package.json文件.\n\n#### gulp API\n##### gulp.src(globs)\n- src用来指明待处理文件的路径,globs参数必填(源文件路径)\n- globs参数string或array类型\n- 可以使用通配符,*表示匹配一层目录,**表示匹配所有子目录\n- 具体实例:\n    ```js\n        gulp.src(\"js/a.js\");              //指定js目录下a.js文件\n        gulp.src(\"js/*.js\");              //指定js目录下任意js文件\n        gulp.src(\"js/**/*.js\");           //指定js目录下所有js文件,包括任意子目录\n        gulp.src([\"js/**/*.js\",\"!js/**/*.min.js\"])   //指定js目录下所有非压缩js文件\n    ```\n\n##### gulp.dest(path)\n- dest用来指明处理完以后的文件存放路径(目的文件路径)\n- 如果path不存在会自动创建\n- 具体实例:\n    ```js\n        gulp.src(\"js/a.js\")\n        .pipe(gulp.uglify())\n        .pipe(gulp.dest(\"dst/js/\"))        //将js/a.js处理完以后输出到dst/js目录下,保持原名\n    ```\n\n##### gulp.task(name[,deps],fn)\n- name,任务的名字\n- deps,任务依赖的别的任务的名字,string或array,依赖任务完成以后才会执行当前任务\n- fn,任务操作函数\n- 实例:\n    ```js\n        gulp.task(\"example\",[\"task1\",\"task2\"],function(){\n            //做一些事情\n        });\n    ```\n- 任务甚至可以支持异步执行,只要fn能做到以下其中一点:\n    1. 接受一个回调函数\n        实例来自gulp中文官网.\n        ```js\n        var exec = require('child_process').exec;\n        gulp.task('jekyll',function(cb) {\n            exec('jekyll build',function(err) {\n                if(err)return cb(err);\n                cb();\n            });\n        });\n        ```\n    2. 返回一个stream\n        ```js\n        gulp.task('somename',function(){\n            var stream = gulp.src('client/**/*.js')\n                .pipe(minify())\n                .pipe(gulp.dest('build'));\n            return stream;\n        });\n        ```\n    3. 返回一个promise\n        ```js\n        gulp.task('somename',function() {\n            return new Promise(function(resolve,reject){\n                //做一些事\n            });\n        });\n        ```\n##### gulp.watch(glob [,opts],tasks)\n- watch方法用来监听文件变化,文件一修改就会执行指定任务\n- 实例:\n    ```js\n    gulp.task(\"watchtask\",function() {\n        gulp.watch('js/*.js',[js]);            //如果js目录下的js文件变化,则执行js任务\n        gulp.watch('**/*.html',[html]);\n    });\n    ```\ngulp一共就只有上述四个API.\n\n#### 使用gulp压缩html,css,js\n1. 我们利用上述gulp API来对项目的HTML,css,js文件进行压缩并设置监听,当文件有变动时自动运行任务\n\n2. 实例\n- 首先在项目根目录下创建gulpfile.js\n- 加载插件\n```js\nvar gulp = require('gulp'),\n    minifyCss = require('gulp-minifyCss'),\n    minifyHtml = require('gulp-minifyHtml'),\n    uglify = require('gulp-uglify'),\n    rename = require('gulp-rename'),\n    clean = require('gulp-clean');\n```\n- 清理任务\n```js\ngulp.task(\"clean\",function() {\n    return gulp.src(\"dst/\")\n    .pipe(clean());\n});\n```\n- 压缩html\n```js\ngulp.task(\"html\",function() {\n    return gulp.src(\"**/*.html\")\n    .pipe(minifyHtml())\n    .pipe(gulp.dest(\"dst/html\"));\n});\n```\n- 压缩CSS\n```js\ngulp.task(\"css\",function() {\n    return gulp.src(\"**/*.css\")\n    .pipe(minifyCss())\n    .pipe(rename({suffix:\".min\"}))\n    .pipe(gulp.dest(\"dst/css\"));\n});\n```\n- 压缩JS\n```js\ngulp.task(\"js\",function() {\n    return gulp.src(\"**/*.js\")\n    .pipe(uglify())\n    .pipe(rename({suffix:\".min\"}))\n    .pipe(gulp.dest(\"dst/js\"));\n});\n```\n- 默认任务\n```js\ngulp.task(\"default\",[\"clean\",\"js\",\"css\",\"html\"],function() {\n    console.log(\"gulp task finished!\");\n});\n```\n以上默认任务在只执行`gulp`时,由于定义了依赖任务,会依次运行clean,js,css,html任务,等任务都运行完毕后结束.默认任务自身只输出一句提示.\n- 监听任务\n```js\ngulp.task(\"watchtask\",function() {\n    gulp.watch(\"**/*.html\",[\"html\"]);\n    gulp.watch(\"**/*.css\",[\"css\"]);\n    gulp.watch(\"**/*.js\",[\"js\"]);\n});\n```\n","slug":"gulp-learning","published":1,"updated":"2018-10-19T18:30:07.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzug0029fnpvcx210iet","content":"<h4 id=\"gulp简介\"><a href=\"#gulp简介\" class=\"headerlink\" title=\"gulp简介\"></a>gulp简介</h4><p>gulp是一个前端项目构建工具,用自动化构建工具增强你的工作流程<a href=\"http://www.gulpjs.com.cn/\" target=\"_blank\" rel=\"noopener\">gulp中文官网语</a><br>gulp利用Node.js流的威力,减少了频繁的IO操作,让构建更快速,学习起来也是非常迅速.<br>本篇博客就将对使用gulp进行前端代码的压缩方面做一个入门级的介绍,也是我的gulp入门学习总结.</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ol>\n<li><p>首先假设已经安装了node环境,如果没有安装请出门左转<a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener\">node官网</a>参考</p>\n</li>\n<li><p>全局安装gulp</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g -d gulp</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行<code>gulp -v</code>,如果正常打印版本号则安装成功</p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h4 id=\"安装常用插件\"><a href=\"#安装常用插件\" class=\"headerlink\" title=\"安装常用插件\"></a>安装常用插件</h4><p>在项目根目录下安装gulp常用插件.<br>gulp的完全插件列表可以参考gulp的插件官网:<a href=\"http://gulpjs.com/plugins/\" target=\"_blank\" rel=\"noopener\">http://gulpjs.com/plugins/</a>.可以上去淘一淘插件.<br>比较常用的插件大概有:</p>\n<ul>\n<li><code>gulp-minify-css         压缩css</code></li>\n<li><code>gulp-minify-html        压缩html</code></li>\n<li><code>gulp-uglify             压缩js</code></li>\n<li><code>gulp-rename             重命名文件,通常压缩后的带.min后缀</code></li>\n<li><code>gulp-jshint             jshint,js静态检查</code></li>\n<li><code>gulp-concat             合并多个文件</code></li>\n<li><code>gulp-imagemin           压缩图片</code></li>\n<li><code>gulp-clean              清理文件或目录</code></li>\n</ul>\n<p>安装:<br>    <code>npm install [plugins-name] --save</code><br>    上述命令安装插件的同时也会把插件作为项目依赖写入package.json文件.</p>\n<h4 id=\"gulp-API\"><a href=\"#gulp-API\" class=\"headerlink\" title=\"gulp API\"></a>gulp API</h4><h5 id=\"gulp-src-globs\"><a href=\"#gulp-src-globs\" class=\"headerlink\" title=\"gulp.src(globs)\"></a>gulp.src(globs)</h5><ul>\n<li>src用来指明待处理文件的路径,globs参数必填(源文件路径)</li>\n<li>globs参数string或array类型</li>\n<li>可以使用通配符,*表示匹配一层目录,**表示匹配所有子目录</li>\n<li>具体实例:  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.src(<span class=\"string\">\"js/a.js\"</span>);              <span class=\"comment\">//指定js目录下a.js文件</span></span><br><span class=\"line\">gulp.src(<span class=\"string\">\"js/*.js\"</span>);              <span class=\"comment\">//指定js目录下任意js文件</span></span><br><span class=\"line\">gulp.src(<span class=\"string\">\"js/**/*.js\"</span>);           <span class=\"comment\">//指定js目录下所有js文件,包括任意子目录</span></span><br><span class=\"line\">gulp.src([<span class=\"string\">\"js/**/*.js\"</span>,<span class=\"string\">\"!js/**/*.min.js\"</span>])   <span class=\"comment\">//指定js目录下所有非压缩js文件</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"gulp-dest-path\"><a href=\"#gulp-dest-path\" class=\"headerlink\" title=\"gulp.dest(path)\"></a>gulp.dest(path)</h5><ul>\n<li>dest用来指明处理完以后的文件存放路径(目的文件路径)</li>\n<li>如果path不存在会自动创建</li>\n<li>具体实例:  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.src(<span class=\"string\">\"js/a.js\"</span>)</span><br><span class=\"line\">.pipe(gulp.uglify())</span><br><span class=\"line\">.pipe(gulp.dest(<span class=\"string\">\"dst/js/\"</span>))        <span class=\"comment\">//将js/a.js处理完以后输出到dst/js目录下,保持原名</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"gulp-task-name-deps-fn\"><a href=\"#gulp-task-name-deps-fn\" class=\"headerlink\" title=\"gulp.task(name[,deps],fn)\"></a>gulp.task(name[,deps],fn)</h5><ul>\n<li>name,任务的名字</li>\n<li>deps,任务依赖的别的任务的名字,string或array,依赖任务完成以后才会执行当前任务</li>\n<li>fn,任务操作函数</li>\n<li><p>实例:</p>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"example\"</span>,[<span class=\"string\">\"task1\"</span>,<span class=\"string\">\"task2\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//做一些事情</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>任务甚至可以支持异步执行,只要fn能做到以下其中一点:</p>\n<ol>\n<li><p>接受一个回调函数<br> 实例来自gulp中文官网.</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> exec = <span class=\"built_in\">require</span>(<span class=\"string\">'child_process'</span>).exec;</span><br><span class=\"line\">gulp.task(<span class=\"string\">'jekyll'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">    exec(<span class=\"string\">'jekyll build'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(err)<span class=\"keyword\">return</span> cb(err);</span><br><span class=\"line\">        cb();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>返回一个stream</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">'somename'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> stream = gulp.src(<span class=\"string\">'client/**/*.js'</span>)</span><br><span class=\"line\">        .pipe(minify())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'build'</span>));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> stream;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>返回一个promise</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">'somename'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve,reject</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//做一些事</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<h5 id=\"gulp-watch-glob-opts-tasks\"><a href=\"#gulp-watch-glob-opts-tasks\" class=\"headerlink\" title=\"gulp.watch(glob [,opts],tasks)\"></a>gulp.watch(glob [,opts],tasks)</h5><ul>\n<li>watch方法用来监听文件变化,文件一修改就会执行指定任务</li>\n<li>实例:  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"watchtask\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">'js/*.js'</span>,[js]);            <span class=\"comment\">//如果js目录下的js文件变化,则执行js任务</span></span><br><span class=\"line\">    gulp.watch(<span class=\"string\">'**/*.html'</span>,[html]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>gulp一共就只有上述四个API.</p>\n<h4 id=\"使用gulp压缩html-css-js\"><a href=\"#使用gulp压缩html-css-js\" class=\"headerlink\" title=\"使用gulp压缩html,css,js\"></a>使用gulp压缩html,css,js</h4><ol>\n<li><p>我们利用上述gulp API来对项目的HTML,css,js文件进行压缩并设置监听,当文件有变动时自动运行任务</p>\n</li>\n<li><p>实例</p>\n</li>\n</ol>\n<ul>\n<li>首先在项目根目录下创建gulpfile.js</li>\n<li><p>加载插件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>),</span><br><span class=\"line\">    minifyCss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minifyCss'</span>),</span><br><span class=\"line\">    minifyHtml = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minifyHtml'</span>),</span><br><span class=\"line\">    uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>),</span><br><span class=\"line\">    rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>),</span><br><span class=\"line\">    clean = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-clean'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清理任务</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"clean\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"dst/\"</span>)</span><br><span class=\"line\">    .pipe(clean());</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>压缩html</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"html\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"**/*.html\"</span>)</span><br><span class=\"line\">    .pipe(minifyHtml())</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"dst/html\"</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>压缩CSS</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"css\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"**/*.css\"</span>)</span><br><span class=\"line\">    .pipe(minifyCss())</span><br><span class=\"line\">    .pipe(rename(&#123;<span class=\"attr\">suffix</span>:<span class=\"string\">\".min\"</span>&#125;))</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"dst/css\"</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>压缩JS</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"**/*.js\"</span>)</span><br><span class=\"line\">    .pipe(uglify())</span><br><span class=\"line\">    .pipe(rename(&#123;<span class=\"attr\">suffix</span>:<span class=\"string\">\".min\"</span>&#125;))</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"dst/js\"</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>默认任务</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"default\"</span>,[<span class=\"string\">\"clean\"</span>,<span class=\"string\">\"js\"</span>,<span class=\"string\">\"css\"</span>,<span class=\"string\">\"html\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"gulp task finished!\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上默认任务在只执行<code>gulp</code>时,由于定义了依赖任务,会依次运行clean,js,css,html任务,等任务都运行完毕后结束.默认任务自身只输出一句提示.</p>\n<ul>\n<li>监听任务<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"watchtask\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">\"**/*.html\"</span>,[<span class=\"string\">\"html\"</span>]);</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">\"**/*.css\"</span>,[<span class=\"string\">\"css\"</span>]);</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">\"**/*.js\"</span>,[<span class=\"string\">\"js\"</span>]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h4 id=\"gulp简介\"><a href=\"#gulp简介\" class=\"headerlink\" title=\"gulp简介\"></a>gulp简介</h4><p>gulp是一个前端项目构建工具,用自动化构建工具增强你的工作流程<a href=\"http://www.gulpjs.com.cn/\" target=\"_blank\" rel=\"noopener\">gulp中文官网语</a><br>gulp利用Node.js流的威力,减少了频繁的IO操作,让构建更快速,学习起来也是非常迅速.<br>本篇博客就将对使用gulp进行前端代码的压缩方面做一个入门级的介绍,也是我的gulp入门学习总结.</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><ol>\n<li><p>首先假设已经安装了node环境,如果没有安装请出门左转<a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener\">node官网</a>参考</p>\n</li>\n<li><p>全局安装gulp</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g -d gulp</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行<code>gulp -v</code>,如果正常打印版本号则安装成功</p>\n</li>\n</ol>","more":"<h4 id=\"安装常用插件\"><a href=\"#安装常用插件\" class=\"headerlink\" title=\"安装常用插件\"></a>安装常用插件</h4><p>在项目根目录下安装gulp常用插件.<br>gulp的完全插件列表可以参考gulp的插件官网:<a href=\"http://gulpjs.com/plugins/\" target=\"_blank\" rel=\"noopener\">http://gulpjs.com/plugins/</a>.可以上去淘一淘插件.<br>比较常用的插件大概有:</p>\n<ul>\n<li><code>gulp-minify-css         压缩css</code></li>\n<li><code>gulp-minify-html        压缩html</code></li>\n<li><code>gulp-uglify             压缩js</code></li>\n<li><code>gulp-rename             重命名文件,通常压缩后的带.min后缀</code></li>\n<li><code>gulp-jshint             jshint,js静态检查</code></li>\n<li><code>gulp-concat             合并多个文件</code></li>\n<li><code>gulp-imagemin           压缩图片</code></li>\n<li><code>gulp-clean              清理文件或目录</code></li>\n</ul>\n<p>安装:<br>    <code>npm install [plugins-name] --save</code><br>    上述命令安装插件的同时也会把插件作为项目依赖写入package.json文件.</p>\n<h4 id=\"gulp-API\"><a href=\"#gulp-API\" class=\"headerlink\" title=\"gulp API\"></a>gulp API</h4><h5 id=\"gulp-src-globs\"><a href=\"#gulp-src-globs\" class=\"headerlink\" title=\"gulp.src(globs)\"></a>gulp.src(globs)</h5><ul>\n<li>src用来指明待处理文件的路径,globs参数必填(源文件路径)</li>\n<li>globs参数string或array类型</li>\n<li>可以使用通配符,*表示匹配一层目录,**表示匹配所有子目录</li>\n<li>具体实例:  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.src(<span class=\"string\">\"js/a.js\"</span>);              <span class=\"comment\">//指定js目录下a.js文件</span></span><br><span class=\"line\">gulp.src(<span class=\"string\">\"js/*.js\"</span>);              <span class=\"comment\">//指定js目录下任意js文件</span></span><br><span class=\"line\">gulp.src(<span class=\"string\">\"js/**/*.js\"</span>);           <span class=\"comment\">//指定js目录下所有js文件,包括任意子目录</span></span><br><span class=\"line\">gulp.src([<span class=\"string\">\"js/**/*.js\"</span>,<span class=\"string\">\"!js/**/*.min.js\"</span>])   <span class=\"comment\">//指定js目录下所有非压缩js文件</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"gulp-dest-path\"><a href=\"#gulp-dest-path\" class=\"headerlink\" title=\"gulp.dest(path)\"></a>gulp.dest(path)</h5><ul>\n<li>dest用来指明处理完以后的文件存放路径(目的文件路径)</li>\n<li>如果path不存在会自动创建</li>\n<li>具体实例:  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.src(<span class=\"string\">\"js/a.js\"</span>)</span><br><span class=\"line\">.pipe(gulp.uglify())</span><br><span class=\"line\">.pipe(gulp.dest(<span class=\"string\">\"dst/js/\"</span>))        <span class=\"comment\">//将js/a.js处理完以后输出到dst/js目录下,保持原名</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"gulp-task-name-deps-fn\"><a href=\"#gulp-task-name-deps-fn\" class=\"headerlink\" title=\"gulp.task(name[,deps],fn)\"></a>gulp.task(name[,deps],fn)</h5><ul>\n<li>name,任务的名字</li>\n<li>deps,任务依赖的别的任务的名字,string或array,依赖任务完成以后才会执行当前任务</li>\n<li>fn,任务操作函数</li>\n<li><p>实例:</p>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"example\"</span>,[<span class=\"string\">\"task1\"</span>,<span class=\"string\">\"task2\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//做一些事情</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>任务甚至可以支持异步执行,只要fn能做到以下其中一点:</p>\n<ol>\n<li><p>接受一个回调函数<br> 实例来自gulp中文官网.</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> exec = <span class=\"built_in\">require</span>(<span class=\"string\">'child_process'</span>).exec;</span><br><span class=\"line\">gulp.task(<span class=\"string\">'jekyll'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) </span>&#123;</span><br><span class=\"line\">    exec(<span class=\"string\">'jekyll build'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(err)<span class=\"keyword\">return</span> cb(err);</span><br><span class=\"line\">        cb();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>返回一个stream</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">'somename'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> stream = gulp.src(<span class=\"string\">'client/**/*.js'</span>)</span><br><span class=\"line\">        .pipe(minify())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'build'</span>));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> stream;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>返回一个promise</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">'somename'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve,reject</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//做一些事</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<h5 id=\"gulp-watch-glob-opts-tasks\"><a href=\"#gulp-watch-glob-opts-tasks\" class=\"headerlink\" title=\"gulp.watch(glob [,opts],tasks)\"></a>gulp.watch(glob [,opts],tasks)</h5><ul>\n<li>watch方法用来监听文件变化,文件一修改就会执行指定任务</li>\n<li>实例:  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"watchtask\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">'js/*.js'</span>,[js]);            <span class=\"comment\">//如果js目录下的js文件变化,则执行js任务</span></span><br><span class=\"line\">    gulp.watch(<span class=\"string\">'**/*.html'</span>,[html]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>gulp一共就只有上述四个API.</p>\n<h4 id=\"使用gulp压缩html-css-js\"><a href=\"#使用gulp压缩html-css-js\" class=\"headerlink\" title=\"使用gulp压缩html,css,js\"></a>使用gulp压缩html,css,js</h4><ol>\n<li><p>我们利用上述gulp API来对项目的HTML,css,js文件进行压缩并设置监听,当文件有变动时自动运行任务</p>\n</li>\n<li><p>实例</p>\n</li>\n</ol>\n<ul>\n<li>首先在项目根目录下创建gulpfile.js</li>\n<li><p>加载插件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>),</span><br><span class=\"line\">    minifyCss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minifyCss'</span>),</span><br><span class=\"line\">    minifyHtml = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minifyHtml'</span>),</span><br><span class=\"line\">    uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>),</span><br><span class=\"line\">    rename = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-rename'</span>),</span><br><span class=\"line\">    clean = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-clean'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清理任务</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"clean\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"dst/\"</span>)</span><br><span class=\"line\">    .pipe(clean());</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>压缩html</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"html\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"**/*.html\"</span>)</span><br><span class=\"line\">    .pipe(minifyHtml())</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"dst/html\"</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>压缩CSS</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"css\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"**/*.css\"</span>)</span><br><span class=\"line\">    .pipe(minifyCss())</span><br><span class=\"line\">    .pipe(rename(&#123;<span class=\"attr\">suffix</span>:<span class=\"string\">\".min\"</span>&#125;))</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"dst/css\"</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>压缩JS</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"**/*.js\"</span>)</span><br><span class=\"line\">    .pipe(uglify())</span><br><span class=\"line\">    .pipe(rename(&#123;<span class=\"attr\">suffix</span>:<span class=\"string\">\".min\"</span>&#125;))</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"dst/js\"</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>默认任务</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"default\"</span>,[<span class=\"string\">\"clean\"</span>,<span class=\"string\">\"js\"</span>,<span class=\"string\">\"css\"</span>,<span class=\"string\">\"html\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"gulp task finished!\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上默认任务在只执行<code>gulp</code>时,由于定义了依赖任务,会依次运行clean,js,css,html任务,等任务都运行完毕后结束.默认任务自身只输出一句提示.</p>\n<ul>\n<li>监听任务<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"watchtask\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">\"**/*.html\"</span>,[<span class=\"string\">\"html\"</span>]);</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">\"**/*.css\"</span>,[<span class=\"string\">\"css\"</span>]);</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">\"**/*.js\"</span>,[<span class=\"string\">\"js\"</span>]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>","sticky":0},{"title":"使用gulp精简hexo博客代码","show":true,"date":"2016-02-19T05:16:20.000Z","_content":"#### 背景\nNext主题在Hexo引擎解析md时生成的代码会包含大量的无用空白,见下图.\n![](http://ww3.sinaimg.cn/mw690/62d95157gw1f14j30rf5xj20z00kv76i.jpg)\n这对有完美主义倾向的我们来说是个很折磨的体验,并且多余的空白也会增加文档的大小,使得网站在响应上不够迅速,影响体验.\n[上一篇博文](/2016/02/19/gulp-learning/)提到了使用gulp压缩前端代码,本篇博文趁热打铁,就gulp在Hexo博客优化上进行一番实践.\n\n#### 优化实践\n##### 1. 博客根目录下创建gulpfile.js文件\n##### 2. 安装gulp以及依赖插件并保存到项目依赖\n```js\nnpm install -d --save gulp gulp-clean gulp-load-plugins gulp-minify-css gulp-minify-html gulp-rename gulp-uglify gulp-shell\n```\n##### 3. 编写gulp优化任务\n\n<!--more--> \n\nhexo编译后生成的代码文件都在`public`目录下,因此我们的待优化源文件都在该目录下.并且所有的子目录下的文件也都要被优化,并且开源的库文件比如jquery等一般已经是优化压缩过的,不需要再压缩,因此需要将带有`.min`后缀的文件排除.于是待优化源文件的路径就可以确定了.\n优化过的文件统一输出到项目根目录下的`dst`目录下.\n###### 3.1 清理任务\n```js\ngulp.task(\"clean\",function() {\n    return gulp.src(\"./dst/*\")\n    .pipe(plugins.clean());           //plugins为加载的gulp-load-plugins插件,它可以自动加载项目依赖(package.json定义)\n});\n```\n以上任务清空`dst`目录\n\n###### 3.2 压缩css\n```js\ngulp.task(\"css\",function() {\n    return gulp.src([\"public/**/*.css\",\"!public/**/*.min.css\"])\n    .pipe(plugins.minifyCss({compatibility: \"ie8\"}))\n    .pipe(gulp.dest(\"./dst/\"));      \n});\n```\n以上任务以原目录结构输出到`dst`目录,保持原有文件名不变\n\n###### 3.3 压缩js\n```js\ngulp.task(\"js\",function() {\n    return gulp.src([\"public/**/*.js\",\"!public/**/*.min.js\"])\n    .pipe(plugins.uglify())\n    .pipe(gulp.dest(\"./dst/\"));\n});\n```\n###### 3.4 压缩html\n```js\ngulp.task(\"html\",function() {\n    return gulp.src(\"public/**/*.html\")\n    .pipe(plugins.minifyHtml())\n    .pipe(gulp.dest(\"./dst/\");\n});\n```\n以上三个任务基本上就将博客的所有静态文件都优化压缩过了,当然如果博客内还有本地图片的话,还可以对图片进行压缩.\n为了更加方便的进行代码的优化压缩,有必要定义默认任务以及文件监听.\n###### 3.5 默认任务\n```js\ngulp.task(\"default\",[\"css\",\"js\",\"html\"],function() {\n    console.log(\"gulp task finished!\");\n});\n```\n以上默认任务依赖前述定义的所有任务,在依次执行完所有任务后仅输出任务完成提示.\n###### 3.6 文件监听\n每次手动执行还是不够高效,我们再来定义一个监听任务,让Hexo每次编译之后自动进行优化.\n```js\ngulp.task(\"watch\",function() {\n    gulp.watch(\"public/*\",[\"default\"]);\n});\n```\n上述监听任务可以使用`nohup gulp watch`运行在后台,一旦public目录有变动就会自动运行`default`任务,即整个博客的优化任务.\n###### 3.7 代码替换\n优化以后的代码存在在`dst`目录下,我们还需要将他们移回到`public`目录下才可以生效.由于没找到原地优化的方法,因此只能先存在到别的地方再移回去,如果你有更好的方法,欢迎分享.\n```js\ngulp.task(\"mv\",function() {\n    return gulp.src(\"./dst/*\")\n    .pipe(plugins.shell([\n        \"cp -r ./dst/* ./public/\"\n    ]));\n});\n```\n###### 3.8 额外的说明\n需要说明的是,由于`mv`任务会将优化后的文件移回`public`目录,如果运行了`watch`任务,可能会造成循环任务.我没有开启后台监听任务,我是在外包shell脚本中运行`gulp`任务并提交代码.\n另外,`clean`任务,`mv`任务和其他任务之间是有顺序依赖的,`clean`任务需要最先执行,`mv`任务最后执行,如果写在一个任务中(如作为`default`任务的依赖),可能会由于异步执行的原因导致一些不可预期的结果.\n###### 3.9 优化效果\n我的博客目前所有静态文件均经过了优化压缩,可以通过右键查看源码.\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f14m6xopnuj21gl0dsk1w.jpg)\n\n\n#### 3.14日更新\n针对上述`3.8`节额外说明第二点任务依赖的问题，随着近期gulp实践中的进一步了解，有了更好的解决方式，将此种情形下的\"半自动化\"提升到\"全自动化\"方式。免去了需要人为先执行一遍`clean`任务的步骤。\n\n可以通过gulp的`stream`来解决任务依赖。亦即使gulp变成串行运行任务。\n```\ngulp.task(\"clean\",function(){\n    ...\n});\n\ngulp.task(\"js\",[\"clean\"],function(){\n    var stream = gulp.src(...)          //执行操作\n        .pipe(...)\n        .pipe(...);\n    return stream;                      //返回stream表示任务已经完成\n});\n\ngulp.task(\"css\",[\"clean\"],function(){ \n    var stream = gulp.src(...)\n        .pipe(...);\n    return stream;\n});\n\ngulp.task(\"defaul\",[\"css\",\"js\"]);       //虽然clean任务作为依赖被调用了两次但并不会被执行两次，\n                                        //css和js任务将异步执行，clean任务作为依赖将在执行完以后再执行主体任务\n```\n\n","source":"_posts/gulp-minify-blog.md","raw":"title: 使用gulp精简hexo博客代码\nshow: true\ndate: 2016-02-19 13:16:20\ntags: [\"hexo\",\"gulp\",\"minify\",\"代码精简\",\"Hexo博客优化\",\"压缩\"]\ncategories: 技术人生\n---\n#### 背景\nNext主题在Hexo引擎解析md时生成的代码会包含大量的无用空白,见下图.\n![](http://ww3.sinaimg.cn/mw690/62d95157gw1f14j30rf5xj20z00kv76i.jpg)\n这对有完美主义倾向的我们来说是个很折磨的体验,并且多余的空白也会增加文档的大小,使得网站在响应上不够迅速,影响体验.\n[上一篇博文](/2016/02/19/gulp-learning/)提到了使用gulp压缩前端代码,本篇博文趁热打铁,就gulp在Hexo博客优化上进行一番实践.\n\n#### 优化实践\n##### 1. 博客根目录下创建gulpfile.js文件\n##### 2. 安装gulp以及依赖插件并保存到项目依赖\n```js\nnpm install -d --save gulp gulp-clean gulp-load-plugins gulp-minify-css gulp-minify-html gulp-rename gulp-uglify gulp-shell\n```\n##### 3. 编写gulp优化任务\n\n<!--more--> \n\nhexo编译后生成的代码文件都在`public`目录下,因此我们的待优化源文件都在该目录下.并且所有的子目录下的文件也都要被优化,并且开源的库文件比如jquery等一般已经是优化压缩过的,不需要再压缩,因此需要将带有`.min`后缀的文件排除.于是待优化源文件的路径就可以确定了.\n优化过的文件统一输出到项目根目录下的`dst`目录下.\n###### 3.1 清理任务\n```js\ngulp.task(\"clean\",function() {\n    return gulp.src(\"./dst/*\")\n    .pipe(plugins.clean());           //plugins为加载的gulp-load-plugins插件,它可以自动加载项目依赖(package.json定义)\n});\n```\n以上任务清空`dst`目录\n\n###### 3.2 压缩css\n```js\ngulp.task(\"css\",function() {\n    return gulp.src([\"public/**/*.css\",\"!public/**/*.min.css\"])\n    .pipe(plugins.minifyCss({compatibility: \"ie8\"}))\n    .pipe(gulp.dest(\"./dst/\"));      \n});\n```\n以上任务以原目录结构输出到`dst`目录,保持原有文件名不变\n\n###### 3.3 压缩js\n```js\ngulp.task(\"js\",function() {\n    return gulp.src([\"public/**/*.js\",\"!public/**/*.min.js\"])\n    .pipe(plugins.uglify())\n    .pipe(gulp.dest(\"./dst/\"));\n});\n```\n###### 3.4 压缩html\n```js\ngulp.task(\"html\",function() {\n    return gulp.src(\"public/**/*.html\")\n    .pipe(plugins.minifyHtml())\n    .pipe(gulp.dest(\"./dst/\");\n});\n```\n以上三个任务基本上就将博客的所有静态文件都优化压缩过了,当然如果博客内还有本地图片的话,还可以对图片进行压缩.\n为了更加方便的进行代码的优化压缩,有必要定义默认任务以及文件监听.\n###### 3.5 默认任务\n```js\ngulp.task(\"default\",[\"css\",\"js\",\"html\"],function() {\n    console.log(\"gulp task finished!\");\n});\n```\n以上默认任务依赖前述定义的所有任务,在依次执行完所有任务后仅输出任务完成提示.\n###### 3.6 文件监听\n每次手动执行还是不够高效,我们再来定义一个监听任务,让Hexo每次编译之后自动进行优化.\n```js\ngulp.task(\"watch\",function() {\n    gulp.watch(\"public/*\",[\"default\"]);\n});\n```\n上述监听任务可以使用`nohup gulp watch`运行在后台,一旦public目录有变动就会自动运行`default`任务,即整个博客的优化任务.\n###### 3.7 代码替换\n优化以后的代码存在在`dst`目录下,我们还需要将他们移回到`public`目录下才可以生效.由于没找到原地优化的方法,因此只能先存在到别的地方再移回去,如果你有更好的方法,欢迎分享.\n```js\ngulp.task(\"mv\",function() {\n    return gulp.src(\"./dst/*\")\n    .pipe(plugins.shell([\n        \"cp -r ./dst/* ./public/\"\n    ]));\n});\n```\n###### 3.8 额外的说明\n需要说明的是,由于`mv`任务会将优化后的文件移回`public`目录,如果运行了`watch`任务,可能会造成循环任务.我没有开启后台监听任务,我是在外包shell脚本中运行`gulp`任务并提交代码.\n另外,`clean`任务,`mv`任务和其他任务之间是有顺序依赖的,`clean`任务需要最先执行,`mv`任务最后执行,如果写在一个任务中(如作为`default`任务的依赖),可能会由于异步执行的原因导致一些不可预期的结果.\n###### 3.9 优化效果\n我的博客目前所有静态文件均经过了优化压缩,可以通过右键查看源码.\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f14m6xopnuj21gl0dsk1w.jpg)\n\n\n#### 3.14日更新\n针对上述`3.8`节额外说明第二点任务依赖的问题，随着近期gulp实践中的进一步了解，有了更好的解决方式，将此种情形下的\"半自动化\"提升到\"全自动化\"方式。免去了需要人为先执行一遍`clean`任务的步骤。\n\n可以通过gulp的`stream`来解决任务依赖。亦即使gulp变成串行运行任务。\n```\ngulp.task(\"clean\",function(){\n    ...\n});\n\ngulp.task(\"js\",[\"clean\"],function(){\n    var stream = gulp.src(...)          //执行操作\n        .pipe(...)\n        .pipe(...);\n    return stream;                      //返回stream表示任务已经完成\n});\n\ngulp.task(\"css\",[\"clean\"],function(){ \n    var stream = gulp.src(...)\n        .pipe(...);\n    return stream;\n});\n\ngulp.task(\"defaul\",[\"css\",\"js\"]);       //虽然clean任务作为依赖被调用了两次但并不会被执行两次，\n                                        //css和js任务将异步执行，clean任务作为依赖将在执行完以后再执行主体任务\n```\n\n","slug":"gulp-minify-blog","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzui002dfnpvvmoqu0ik","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>Next主题在Hexo引擎解析md时生成的代码会包含大量的无用空白,见下图.<br><img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1f14j30rf5xj20z00kv76i.jpg\" alt=\"\"><br>这对有完美主义倾向的我们来说是个很折磨的体验,并且多余的空白也会增加文档的大小,使得网站在响应上不够迅速,影响体验.<br><a href=\"/2016/02/19/gulp-learning/\">上一篇博文</a>提到了使用gulp压缩前端代码,本篇博文趁热打铁,就gulp在Hexo博客优化上进行一番实践.</p>\n<h4 id=\"优化实践\"><a href=\"#优化实践\" class=\"headerlink\" title=\"优化实践\"></a>优化实践</h4><h5 id=\"1-博客根目录下创建gulpfile-js文件\"><a href=\"#1-博客根目录下创建gulpfile-js文件\" class=\"headerlink\" title=\"1. 博客根目录下创建gulpfile.js文件\"></a>1. 博客根目录下创建gulpfile.js文件</h5><h5 id=\"2-安装gulp以及依赖插件并保存到项目依赖\"><a href=\"#2-安装gulp以及依赖插件并保存到项目依赖\" class=\"headerlink\" title=\"2. 安装gulp以及依赖插件并保存到项目依赖\"></a>2. 安装gulp以及依赖插件并保存到项目依赖</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -d --save gulp gulp-clean gulp-load-plugins gulp-minify-css gulp-minify-html gulp-rename gulp-uglify gulp-shell</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-编写gulp优化任务\"><a href=\"#3-编写gulp优化任务\" class=\"headerlink\" title=\"3. 编写gulp优化任务\"></a>3. 编写gulp优化任务</h5><a id=\"more\"></a> \n<p>hexo编译后生成的代码文件都在<code>public</code>目录下,因此我们的待优化源文件都在该目录下.并且所有的子目录下的文件也都要被优化,并且开源的库文件比如jquery等一般已经是优化压缩过的,不需要再压缩,因此需要将带有<code>.min</code>后缀的文件排除.于是待优化源文件的路径就可以确定了.<br>优化过的文件统一输出到项目根目录下的<code>dst</code>目录下.</p>\n<h6 id=\"3-1-清理任务\"><a href=\"#3-1-清理任务\" class=\"headerlink\" title=\"3.1 清理任务\"></a>3.1 清理任务</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"clean\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"./dst/*\"</span>)</span><br><span class=\"line\">    .pipe(plugins.clean());           <span class=\"comment\">//plugins为加载的gulp-load-plugins插件,它可以自动加载项目依赖(package.json定义)</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上任务清空<code>dst</code>目录</p>\n<h6 id=\"3-2-压缩css\"><a href=\"#3-2-压缩css\" class=\"headerlink\" title=\"3.2 压缩css\"></a>3.2 压缩css</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"css\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">\"public/**/*.css\"</span>,<span class=\"string\">\"!public/**/*.min.css\"</span>])</span><br><span class=\"line\">    .pipe(plugins.minifyCss(&#123;<span class=\"attr\">compatibility</span>: <span class=\"string\">\"ie8\"</span>&#125;))</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"./dst/\"</span>));      </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上任务以原目录结构输出到<code>dst</code>目录,保持原有文件名不变</p>\n<h6 id=\"3-3-压缩js\"><a href=\"#3-3-压缩js\" class=\"headerlink\" title=\"3.3 压缩js\"></a>3.3 压缩js</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">\"public/**/*.js\"</span>,<span class=\"string\">\"!public/**/*.min.js\"</span>])</span><br><span class=\"line\">    .pipe(plugins.uglify())</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"./dst/\"</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h6 id=\"3-4-压缩html\"><a href=\"#3-4-压缩html\" class=\"headerlink\" title=\"3.4 压缩html\"></a>3.4 压缩html</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"html\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"public/**/*.html\"</span>)</span><br><span class=\"line\">    .pipe(plugins.minifyHtml())</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"./dst/\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上三个任务基本上就将博客的所有静态文件都优化压缩过了,当然如果博客内还有本地图片的话,还可以对图片进行压缩.<br>为了更加方便的进行代码的优化压缩,有必要定义默认任务以及文件监听.</p>\n<h6 id=\"3-5-默认任务\"><a href=\"#3-5-默认任务\" class=\"headerlink\" title=\"3.5 默认任务\"></a>3.5 默认任务</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"default\"</span>,[<span class=\"string\">\"css\"</span>,<span class=\"string\">\"js\"</span>,<span class=\"string\">\"html\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"gulp task finished!\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上默认任务依赖前述定义的所有任务,在依次执行完所有任务后仅输出任务完成提示.</p>\n<h6 id=\"3-6-文件监听\"><a href=\"#3-6-文件监听\" class=\"headerlink\" title=\"3.6 文件监听\"></a>3.6 文件监听</h6><p>每次手动执行还是不够高效,我们再来定义一个监听任务,让Hexo每次编译之后自动进行优化.<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"watch\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">\"public/*\"</span>,[<span class=\"string\">\"default\"</span>]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上述监听任务可以使用<code>nohup gulp watch</code>运行在后台,一旦public目录有变动就会自动运行<code>default</code>任务,即整个博客的优化任务.</p>\n<h6 id=\"3-7-代码替换\"><a href=\"#3-7-代码替换\" class=\"headerlink\" title=\"3.7 代码替换\"></a>3.7 代码替换</h6><p>优化以后的代码存在在<code>dst</code>目录下,我们还需要将他们移回到<code>public</code>目录下才可以生效.由于没找到原地优化的方法,因此只能先存在到别的地方再移回去,如果你有更好的方法,欢迎分享.<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"mv\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"./dst/*\"</span>)</span><br><span class=\"line\">    .pipe(plugins.shell([</span><br><span class=\"line\">        <span class=\"string\">\"cp -r ./dst/* ./public/\"</span></span><br><span class=\"line\">    ]));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3-8-额外的说明\"><a href=\"#3-8-额外的说明\" class=\"headerlink\" title=\"3.8 额外的说明\"></a>3.8 额外的说明</h6><p>需要说明的是,由于<code>mv</code>任务会将优化后的文件移回<code>public</code>目录,如果运行了<code>watch</code>任务,可能会造成循环任务.我没有开启后台监听任务,我是在外包shell脚本中运行<code>gulp</code>任务并提交代码.<br>另外,<code>clean</code>任务,<code>mv</code>任务和其他任务之间是有顺序依赖的,<code>clean</code>任务需要最先执行,<code>mv</code>任务最后执行,如果写在一个任务中(如作为<code>default</code>任务的依赖),可能会由于异步执行的原因导致一些不可预期的结果.</p>\n<h6 id=\"3-9-优化效果\"><a href=\"#3-9-优化效果\" class=\"headerlink\" title=\"3.9 优化效果\"></a>3.9 优化效果</h6><p>我的博客目前所有静态文件均经过了优化压缩,可以通过右键查看源码.<br><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f14m6xopnuj21gl0dsk1w.jpg\" alt=\"\"></p>\n<h4 id=\"3-14日更新\"><a href=\"#3-14日更新\" class=\"headerlink\" title=\"3.14日更新\"></a>3.14日更新</h4><p>针对上述<code>3.8</code>节额外说明第二点任务依赖的问题，随着近期gulp实践中的进一步了解，有了更好的解决方式，将此种情形下的”半自动化”提升到”全自动化”方式。免去了需要人为先执行一遍<code>clean</code>任务的步骤。</p>\n<p>可以通过gulp的<code>stream</code>来解决任务依赖。亦即使gulp变成串行运行任务。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"clean\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"js\"</span>,[<span class=\"string\">\"clean\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> stream = gulp.src(...)          <span class=\"comment\">//执行操作</span></span><br><span class=\"line\">        .pipe(...)</span><br><span class=\"line\">        .pipe(...);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> stream;                      <span class=\"comment\">//返回stream表示任务已经完成</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"css\"</span>,[<span class=\"string\">\"clean\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">var</span> stream = gulp.src(...)</span><br><span class=\"line\">        .pipe(...);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> stream;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"defaul\"</span>,[<span class=\"string\">\"css\"</span>,<span class=\"string\">\"js\"</span>]);       <span class=\"comment\">//虽然clean任务作为依赖被调用了两次但并不会被执行两次，</span></span><br><span class=\"line\">                                        <span class=\"comment\">//css和js任务将异步执行，clean任务作为依赖将在执行完以后再执行主体任务</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>Next主题在Hexo引擎解析md时生成的代码会包含大量的无用空白,见下图.<br><img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1f14j30rf5xj20z00kv76i.jpg\" alt=\"\"><br>这对有完美主义倾向的我们来说是个很折磨的体验,并且多余的空白也会增加文档的大小,使得网站在响应上不够迅速,影响体验.<br><a href=\"/2016/02/19/gulp-learning/\">上一篇博文</a>提到了使用gulp压缩前端代码,本篇博文趁热打铁,就gulp在Hexo博客优化上进行一番实践.</p>\n<h4 id=\"优化实践\"><a href=\"#优化实践\" class=\"headerlink\" title=\"优化实践\"></a>优化实践</h4><h5 id=\"1-博客根目录下创建gulpfile-js文件\"><a href=\"#1-博客根目录下创建gulpfile-js文件\" class=\"headerlink\" title=\"1. 博客根目录下创建gulpfile.js文件\"></a>1. 博客根目录下创建gulpfile.js文件</h5><h5 id=\"2-安装gulp以及依赖插件并保存到项目依赖\"><a href=\"#2-安装gulp以及依赖插件并保存到项目依赖\" class=\"headerlink\" title=\"2. 安装gulp以及依赖插件并保存到项目依赖\"></a>2. 安装gulp以及依赖插件并保存到项目依赖</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -d --save gulp gulp-clean gulp-load-plugins gulp-minify-css gulp-minify-html gulp-rename gulp-uglify gulp-shell</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-编写gulp优化任务\"><a href=\"#3-编写gulp优化任务\" class=\"headerlink\" title=\"3. 编写gulp优化任务\"></a>3. 编写gulp优化任务</h5>","more":"<p>hexo编译后生成的代码文件都在<code>public</code>目录下,因此我们的待优化源文件都在该目录下.并且所有的子目录下的文件也都要被优化,并且开源的库文件比如jquery等一般已经是优化压缩过的,不需要再压缩,因此需要将带有<code>.min</code>后缀的文件排除.于是待优化源文件的路径就可以确定了.<br>优化过的文件统一输出到项目根目录下的<code>dst</code>目录下.</p>\n<h6 id=\"3-1-清理任务\"><a href=\"#3-1-清理任务\" class=\"headerlink\" title=\"3.1 清理任务\"></a>3.1 清理任务</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"clean\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"./dst/*\"</span>)</span><br><span class=\"line\">    .pipe(plugins.clean());           <span class=\"comment\">//plugins为加载的gulp-load-plugins插件,它可以自动加载项目依赖(package.json定义)</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上任务清空<code>dst</code>目录</p>\n<h6 id=\"3-2-压缩css\"><a href=\"#3-2-压缩css\" class=\"headerlink\" title=\"3.2 压缩css\"></a>3.2 压缩css</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"css\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">\"public/**/*.css\"</span>,<span class=\"string\">\"!public/**/*.min.css\"</span>])</span><br><span class=\"line\">    .pipe(plugins.minifyCss(&#123;<span class=\"attr\">compatibility</span>: <span class=\"string\">\"ie8\"</span>&#125;))</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"./dst/\"</span>));      </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上任务以原目录结构输出到<code>dst</code>目录,保持原有文件名不变</p>\n<h6 id=\"3-3-压缩js\"><a href=\"#3-3-压缩js\" class=\"headerlink\" title=\"3.3 压缩js\"></a>3.3 压缩js</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">\"public/**/*.js\"</span>,<span class=\"string\">\"!public/**/*.min.js\"</span>])</span><br><span class=\"line\">    .pipe(plugins.uglify())</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"./dst/\"</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h6 id=\"3-4-压缩html\"><a href=\"#3-4-压缩html\" class=\"headerlink\" title=\"3.4 压缩html\"></a>3.4 压缩html</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"html\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"public/**/*.html\"</span>)</span><br><span class=\"line\">    .pipe(plugins.minifyHtml())</span><br><span class=\"line\">    .pipe(gulp.dest(<span class=\"string\">\"./dst/\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上三个任务基本上就将博客的所有静态文件都优化压缩过了,当然如果博客内还有本地图片的话,还可以对图片进行压缩.<br>为了更加方便的进行代码的优化压缩,有必要定义默认任务以及文件监听.</p>\n<h6 id=\"3-5-默认任务\"><a href=\"#3-5-默认任务\" class=\"headerlink\" title=\"3.5 默认任务\"></a>3.5 默认任务</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"default\"</span>,[<span class=\"string\">\"css\"</span>,<span class=\"string\">\"js\"</span>,<span class=\"string\">\"html\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"gulp task finished!\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上默认任务依赖前述定义的所有任务,在依次执行完所有任务后仅输出任务完成提示.</p>\n<h6 id=\"3-6-文件监听\"><a href=\"#3-6-文件监听\" class=\"headerlink\" title=\"3.6 文件监听\"></a>3.6 文件监听</h6><p>每次手动执行还是不够高效,我们再来定义一个监听任务,让Hexo每次编译之后自动进行优化.<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"watch\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.watch(<span class=\"string\">\"public/*\"</span>,[<span class=\"string\">\"default\"</span>]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上述监听任务可以使用<code>nohup gulp watch</code>运行在后台,一旦public目录有变动就会自动运行<code>default</code>任务,即整个博客的优化任务.</p>\n<h6 id=\"3-7-代码替换\"><a href=\"#3-7-代码替换\" class=\"headerlink\" title=\"3.7 代码替换\"></a>3.7 代码替换</h6><p>优化以后的代码存在在<code>dst</code>目录下,我们还需要将他们移回到<code>public</code>目录下才可以生效.由于没找到原地优化的方法,因此只能先存在到别的地方再移回去,如果你有更好的方法,欢迎分享.<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"mv\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">\"./dst/*\"</span>)</span><br><span class=\"line\">    .pipe(plugins.shell([</span><br><span class=\"line\">        <span class=\"string\">\"cp -r ./dst/* ./public/\"</span></span><br><span class=\"line\">    ]));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3-8-额外的说明\"><a href=\"#3-8-额外的说明\" class=\"headerlink\" title=\"3.8 额外的说明\"></a>3.8 额外的说明</h6><p>需要说明的是,由于<code>mv</code>任务会将优化后的文件移回<code>public</code>目录,如果运行了<code>watch</code>任务,可能会造成循环任务.我没有开启后台监听任务,我是在外包shell脚本中运行<code>gulp</code>任务并提交代码.<br>另外,<code>clean</code>任务,<code>mv</code>任务和其他任务之间是有顺序依赖的,<code>clean</code>任务需要最先执行,<code>mv</code>任务最后执行,如果写在一个任务中(如作为<code>default</code>任务的依赖),可能会由于异步执行的原因导致一些不可预期的结果.</p>\n<h6 id=\"3-9-优化效果\"><a href=\"#3-9-优化效果\" class=\"headerlink\" title=\"3.9 优化效果\"></a>3.9 优化效果</h6><p>我的博客目前所有静态文件均经过了优化压缩,可以通过右键查看源码.<br><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f14m6xopnuj21gl0dsk1w.jpg\" alt=\"\"></p>\n<h4 id=\"3-14日更新\"><a href=\"#3-14日更新\" class=\"headerlink\" title=\"3.14日更新\"></a>3.14日更新</h4><p>针对上述<code>3.8</code>节额外说明第二点任务依赖的问题，随着近期gulp实践中的进一步了解，有了更好的解决方式，将此种情形下的”半自动化”提升到”全自动化”方式。免去了需要人为先执行一遍<code>clean</code>任务的步骤。</p>\n<p>可以通过gulp的<code>stream</code>来解决任务依赖。亦即使gulp变成串行运行任务。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(<span class=\"string\">\"clean\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"js\"</span>,[<span class=\"string\">\"clean\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> stream = gulp.src(...)          <span class=\"comment\">//执行操作</span></span><br><span class=\"line\">        .pipe(...)</span><br><span class=\"line\">        .pipe(...);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> stream;                      <span class=\"comment\">//返回stream表示任务已经完成</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"css\"</span>,[<span class=\"string\">\"clean\"</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">var</span> stream = gulp.src(...)</span><br><span class=\"line\">        .pipe(...);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> stream;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">\"defaul\"</span>,[<span class=\"string\">\"css\"</span>,<span class=\"string\">\"js\"</span>]);       <span class=\"comment\">//虽然clean任务作为依赖被调用了两次但并不会被执行两次，</span></span><br><span class=\"line\">                                        <span class=\"comment\">//css和js任务将异步执行，clean任务作为依赖将在执行完以后再执行主体任务</span></span><br></pre></td></tr></table></figure></p>","sticky":0},{"title":"Hello World","date":"2015-06-25T06:27:31.000Z","show":true,"_content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n<!--more-->\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"title: Hello World\ndate: 2015-06-25 14:27:31\nshow: true\n---\nWelcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n<!--more-->\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzuk002gfnpvu4lhtqmk","content":"<p>Welcome to <a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"http://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"http://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><a id=\"more\"></a>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"http://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"http://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2>","more":"<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"http://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>","sticky":0},{"title":"给hexo博客文章添加阅读次数统计","show":true,"date":"2016-04-12T05:38:49.000Z","_content":"#### 背景\nHexo作为纯静态的博客系统决定了它要想实现一些诸如评论、统计等需要后台支持的功能时只能依赖第三方服务了。\n站点的访问量统计，我使用的是\"站长统计\"，但有时候我们写了博客文章也想更方便的查看每篇文章的阅读量。这时候站长统计就不太方便了，要是能在每篇博文上直观地展现阅读量数据就好了。\n\n网上搜索了下\"hexo 访问统计\"绝大部分都是提到了一个叫做\"卜算子\"的第三方服务，但使用个人的工具总是不那么让我放心，于是一直没有采用还是决定自己动手，鉴于不想自己搭建后端服务(穷，买不起vps...)，还是想找找看有没有更专业点的第三方服务。于是一番搜寻后还真找到个：[firebase](https://www.firebase.com)。\n本篇博文即是在firebase的基础上，为hexo博客增加文章阅读量统计，适用于\"Next\"主题，其他主题可供参考。\n\n#### firebase使用\n1. 首先需要注册一个firebase账户\n访问[firebase官网](https://www.firebase.com/)，注册账户\n![](http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlJ6Vm5qY3o5S2JJcFdVWjdtSFNjUkY1ZTJOTS9TZVNsSHhKbmZVWElhd0ZRPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0&type=jpg%7Cwatermark&type=2&text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&font=bXN5aA==&gravity=southwest&dissolve=30&fontsize=240&dx=8&dy=10&stripmeta=0)\n点击右上角\"SIGN UP WITH GOOGLE\"\n\n2. 创建应用\n注册以后会自动创建一个应用，也可以自己创建一个新的应用\n![](http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlE5YVFRWXMxd1YyZlBWMGVkWXZaem1qd1BQYy9iaElJOExuSXhYYnVlL2tRPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0&type=jpg%7Cwatermark&type=2&text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&font=bXN5aA==&gravity=southwest&dissolve=30&fontsize=240&dx=8&dy=10&stripmeta=0)\n\n3. 官网提供了[QuickStart文档](https://www.firebase.com/docs/web/quickstart.html)，可以看看，也可以直接跟着我下面的步骤操作\n\n4. 读写数据API\n根据官方的文档，写入数据通过`set`命令，读取数据通过`on(value)`触发。`transaction`方法可以在原有基础上修改数据，这个方法正好可以给我们用来统计阅读量。\n全部的API见[这里](https://www.firebase.com/docs/web/api/),我们只用上述的`on`和`transaction`在合适的时候触发更新数据即可。\n\n<!--more-->\n\n#### 博客修改操作\n1. 引入firebase.js\n`<script src='https://cdn.firebase.com/js/client/2.0.4/firebase.js'></script>`\n考虑到国外网站访问速度问题，建议将上述js文件下载到本地，再本地引用。\n以下是我的修改操作，供参考，引入部分在`visit.swig`内：\n```\n//主题配置文件_config.yml中增加开关\nfirebase: true\n//修改layout/_partials/footer.swig，在最后增加\n{% if theme.firebase %}\n    {% include '../_scripts/analytics/visit.swig' %}\n{% endif %}\n```\n\n2. 增加文件调用firebase实现统计记录\n在第一步的代码中，我在`_scripts/analytics/`目录下创建了`visit.swig`文件，该文件就是实现统计记录的业务文件。\n\n##### 思路\n- 考虑到代码的简洁性，首页文章摘要列表内不显示访问统计，只在具体文章页显示访问统计\n- 使用页面的url作为`key`\n- 每次访问时，总数和当前页面数据+1\n\n##### 容器修改\n修改html容器增加统计数据字段\n```html\n<!--修改layout/_macro/post.swig，在post-meta部分新增统计数据字段根据开关以及是否是首页来判断是否显示-->\n{% if theme.firebase and not is_home() %}\n    <span class=\"post-visit-count\">\n      &nbsp; | &nbsp; \n      <!--眼睛图标-->\n      <i class=\"fa fa-eye\"></i>&nbsp;\n      <span id=\"detail_cnt\">1</span>\n    </span>\n{% endif %}\n```\n\n##### 统计代码\n\n```js\n//首先新建自己的firebase对象,使用自己创建应用时给的那个firebase URL\nvar firebase = new Firebase(\"http://zhangjh.firebaseio.com\");\n\n//获取当前url作为记录的key，将\"/\"替换未\"_\"，并decode\nvar curUrl = decodeURI(window.location.pathname.replace(/\\/|\\./g,\"_\"));\n\n//获取总数展示\n//这里的意思是获取firebase实例下的`sum`字段值\nfirebase.child(\"sum\").on(\"value\",function(data){\n    var curCnt = data.val();\n    if(curCnt > 1){\n        if($(\"#totalCnt\").length){\n            $(\"#totalCnt\").remove();\n        }\n        //我将总量放在了底部，当然位置是随意的\n        $(\"span.author\").append(\" | <span id='totalCnt'>总访问量：\" + curCnt + \"次\");\n    }\n});\n\n//获取page明细\n//这里的意思是获取firebase实例下的`page`字段下`cruUrl`key对应的值\nfirebase.child(\"page/\" + curUrl).on(\"value\",function(data){\n    var pageCnt = data.val();\n    if(pageCnt > 1){\n        $(\"#detail_cnt\").text(pageCnt);\n    }\n});\n\n//将访问总数和明细+1\nfirebase.child(\"sum\").transaction(function(curCnt){\n    return (curCnt || 0) + 1;\n});\n\nfirebase.child(\"page/\" + curUrl).transaction(function(curCnt){\n    return (curCnt || 0) + 1;\n});\n```\n\n##### 设置后的效果\n\n添加完后刷新访问几下，可以看到这货竟然是实时更新的，很强大\n![](http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlJzMUlTK2FYQmd5QVdYY0ttTU95S2RBbUNuNGZZeVJSQXhzQkNIbHc2VU93PT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0&type=jpg%7Cwatermark&type=2&text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&font=bXN5aA==&gravity=southwest&dissolve=30&fontsize=240&dx=8&dy=10&stripmeta=0)\n\n![](http://imglf0.nosdn0.126.net/img/ODVTOGEyRktTQlFhcHpqVlZkZDdtZzBwYkhiRldWZDN3ZGl3N3JNNHVjWUpNZjhJM3Z6M1VRPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0&type=jpg%7Cwatermark&type=2&text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&font=bXN5aA==&gravity=southwest&dissolve=30&fontsize=240&dx=8&dy=10&stripmeta=0)\n看见那个小眼睛了没？\n","source":"_posts/hexo-visit-analytics-md.md","raw":"title: 给hexo博客文章添加阅读次数统计\nshow: true\ndate: 2016-04-12 13:38:49\ntags: [hexo,访问统计,阅读量，文章浏览统计]\ncategories: 技术人生\n---\n#### 背景\nHexo作为纯静态的博客系统决定了它要想实现一些诸如评论、统计等需要后台支持的功能时只能依赖第三方服务了。\n站点的访问量统计，我使用的是\"站长统计\"，但有时候我们写了博客文章也想更方便的查看每篇文章的阅读量。这时候站长统计就不太方便了，要是能在每篇博文上直观地展现阅读量数据就好了。\n\n网上搜索了下\"hexo 访问统计\"绝大部分都是提到了一个叫做\"卜算子\"的第三方服务，但使用个人的工具总是不那么让我放心，于是一直没有采用还是决定自己动手，鉴于不想自己搭建后端服务(穷，买不起vps...)，还是想找找看有没有更专业点的第三方服务。于是一番搜寻后还真找到个：[firebase](https://www.firebase.com)。\n本篇博文即是在firebase的基础上，为hexo博客增加文章阅读量统计，适用于\"Next\"主题，其他主题可供参考。\n\n#### firebase使用\n1. 首先需要注册一个firebase账户\n访问[firebase官网](https://www.firebase.com/)，注册账户\n![](http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlJ6Vm5qY3o5S2JJcFdVWjdtSFNjUkY1ZTJOTS9TZVNsSHhKbmZVWElhd0ZRPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0&type=jpg%7Cwatermark&type=2&text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&font=bXN5aA==&gravity=southwest&dissolve=30&fontsize=240&dx=8&dy=10&stripmeta=0)\n点击右上角\"SIGN UP WITH GOOGLE\"\n\n2. 创建应用\n注册以后会自动创建一个应用，也可以自己创建一个新的应用\n![](http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlE5YVFRWXMxd1YyZlBWMGVkWXZaem1qd1BQYy9iaElJOExuSXhYYnVlL2tRPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0&type=jpg%7Cwatermark&type=2&text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&font=bXN5aA==&gravity=southwest&dissolve=30&fontsize=240&dx=8&dy=10&stripmeta=0)\n\n3. 官网提供了[QuickStart文档](https://www.firebase.com/docs/web/quickstart.html)，可以看看，也可以直接跟着我下面的步骤操作\n\n4. 读写数据API\n根据官方的文档，写入数据通过`set`命令，读取数据通过`on(value)`触发。`transaction`方法可以在原有基础上修改数据，这个方法正好可以给我们用来统计阅读量。\n全部的API见[这里](https://www.firebase.com/docs/web/api/),我们只用上述的`on`和`transaction`在合适的时候触发更新数据即可。\n\n<!--more-->\n\n#### 博客修改操作\n1. 引入firebase.js\n`<script src='https://cdn.firebase.com/js/client/2.0.4/firebase.js'></script>`\n考虑到国外网站访问速度问题，建议将上述js文件下载到本地，再本地引用。\n以下是我的修改操作，供参考，引入部分在`visit.swig`内：\n```\n//主题配置文件_config.yml中增加开关\nfirebase: true\n//修改layout/_partials/footer.swig，在最后增加\n{% if theme.firebase %}\n    {% include '../_scripts/analytics/visit.swig' %}\n{% endif %}\n```\n\n2. 增加文件调用firebase实现统计记录\n在第一步的代码中，我在`_scripts/analytics/`目录下创建了`visit.swig`文件，该文件就是实现统计记录的业务文件。\n\n##### 思路\n- 考虑到代码的简洁性，首页文章摘要列表内不显示访问统计，只在具体文章页显示访问统计\n- 使用页面的url作为`key`\n- 每次访问时，总数和当前页面数据+1\n\n##### 容器修改\n修改html容器增加统计数据字段\n```html\n<!--修改layout/_macro/post.swig，在post-meta部分新增统计数据字段根据开关以及是否是首页来判断是否显示-->\n{% if theme.firebase and not is_home() %}\n    <span class=\"post-visit-count\">\n      &nbsp; | &nbsp; \n      <!--眼睛图标-->\n      <i class=\"fa fa-eye\"></i>&nbsp;\n      <span id=\"detail_cnt\">1</span>\n    </span>\n{% endif %}\n```\n\n##### 统计代码\n\n```js\n//首先新建自己的firebase对象,使用自己创建应用时给的那个firebase URL\nvar firebase = new Firebase(\"http://zhangjh.firebaseio.com\");\n\n//获取当前url作为记录的key，将\"/\"替换未\"_\"，并decode\nvar curUrl = decodeURI(window.location.pathname.replace(/\\/|\\./g,\"_\"));\n\n//获取总数展示\n//这里的意思是获取firebase实例下的`sum`字段值\nfirebase.child(\"sum\").on(\"value\",function(data){\n    var curCnt = data.val();\n    if(curCnt > 1){\n        if($(\"#totalCnt\").length){\n            $(\"#totalCnt\").remove();\n        }\n        //我将总量放在了底部，当然位置是随意的\n        $(\"span.author\").append(\" | <span id='totalCnt'>总访问量：\" + curCnt + \"次\");\n    }\n});\n\n//获取page明细\n//这里的意思是获取firebase实例下的`page`字段下`cruUrl`key对应的值\nfirebase.child(\"page/\" + curUrl).on(\"value\",function(data){\n    var pageCnt = data.val();\n    if(pageCnt > 1){\n        $(\"#detail_cnt\").text(pageCnt);\n    }\n});\n\n//将访问总数和明细+1\nfirebase.child(\"sum\").transaction(function(curCnt){\n    return (curCnt || 0) + 1;\n});\n\nfirebase.child(\"page/\" + curUrl).transaction(function(curCnt){\n    return (curCnt || 0) + 1;\n});\n```\n\n##### 设置后的效果\n\n添加完后刷新访问几下，可以看到这货竟然是实时更新的，很强大\n![](http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlJzMUlTK2FYQmd5QVdYY0ttTU95S2RBbUNuNGZZeVJSQXhzQkNIbHc2VU93PT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0&type=jpg%7Cwatermark&type=2&text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&font=bXN5aA==&gravity=southwest&dissolve=30&fontsize=240&dx=8&dy=10&stripmeta=0)\n\n![](http://imglf0.nosdn0.126.net/img/ODVTOGEyRktTQlFhcHpqVlZkZDdtZzBwYkhiRldWZDN3ZGl3N3JNNHVjWUpNZjhJM3Z6M1VRPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0&type=jpg%7Cwatermark&type=2&text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&font=bXN5aA==&gravity=southwest&dissolve=30&fontsize=240&dx=8&dy=10&stripmeta=0)\n看见那个小眼睛了没？\n","slug":"hexo-visit-analytics-md","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzun002jfnpvn163y3vn","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>Hexo作为纯静态的博客系统决定了它要想实现一些诸如评论、统计等需要后台支持的功能时只能依赖第三方服务了。<br>站点的访问量统计，我使用的是”站长统计”，但有时候我们写了博客文章也想更方便的查看每篇文章的阅读量。这时候站长统计就不太方便了，要是能在每篇博文上直观地展现阅读量数据就好了。</p>\n<p>网上搜索了下”hexo 访问统计”绝大部分都是提到了一个叫做”卜算子”的第三方服务，但使用个人的工具总是不那么让我放心，于是一直没有采用还是决定自己动手，鉴于不想自己搭建后端服务(穷，买不起vps…)，还是想找找看有没有更专业点的第三方服务。于是一番搜寻后还真找到个：<a href=\"https://www.firebase.com\" target=\"_blank\" rel=\"noopener\">firebase</a>。<br>本篇博文即是在firebase的基础上，为hexo博客增加文章阅读量统计，适用于”Next”主题，其他主题可供参考。</p>\n<h4 id=\"firebase使用\"><a href=\"#firebase使用\" class=\"headerlink\" title=\"firebase使用\"></a>firebase使用</h4><ol>\n<li><p>首先需要注册一个firebase账户<br>访问<a href=\"https://www.firebase.com/\" target=\"_blank\" rel=\"noopener\">firebase官网</a>，注册账户<br><img src=\"http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlJ6Vm5qY3o5S2JJcFdVWjdtSFNjUkY1ZTJOTS9TZVNsSHhKbmZVWElhd0ZRPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2&amp;text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&amp;font=bXN5aA==&amp;gravity=southwest&amp;dissolve=30&amp;fontsize=240&amp;dx=8&amp;dy=10&amp;stripmeta=0\" alt=\"\"><br>点击右上角”SIGN UP WITH GOOGLE”</p>\n</li>\n<li><p>创建应用<br>注册以后会自动创建一个应用，也可以自己创建一个新的应用<br><img src=\"http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlE5YVFRWXMxd1YyZlBWMGVkWXZaem1qd1BQYy9iaElJOExuSXhYYnVlL2tRPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2&amp;text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&amp;font=bXN5aA==&amp;gravity=southwest&amp;dissolve=30&amp;fontsize=240&amp;dx=8&amp;dy=10&amp;stripmeta=0\" alt=\"\"></p>\n</li>\n<li><p>官网提供了<a href=\"https://www.firebase.com/docs/web/quickstart.html\" target=\"_blank\" rel=\"noopener\">QuickStart文档</a>，可以看看，也可以直接跟着我下面的步骤操作</p>\n</li>\n<li><p>读写数据API<br>根据官方的文档，写入数据通过<code>set</code>命令，读取数据通过<code>on(value)</code>触发。<code>transaction</code>方法可以在原有基础上修改数据，这个方法正好可以给我们用来统计阅读量。<br>全部的API见<a href=\"https://www.firebase.com/docs/web/api/\" target=\"_blank\" rel=\"noopener\">这里</a>,我们只用上述的<code>on</code>和<code>transaction</code>在合适的时候触发更新数据即可。</p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h4 id=\"博客修改操作\"><a href=\"#博客修改操作\" class=\"headerlink\" title=\"博客修改操作\"></a>博客修改操作</h4><ol>\n<li><p>引入firebase.js<br><code>&lt;script src=&#39;https://cdn.firebase.com/js/client/2.0.4/firebase.js&#39;&gt;&lt;/script&gt;</code><br>考虑到国外网站访问速度问题，建议将上述js文件下载到本地，再本地引用。<br>以下是我的修改操作，供参考，引入部分在<code>visit.swig</code>内：</p>\n<figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//主题配置文件_config.yml中增加开关</span></span><br><span class=\"line\"><span class=\"xml\">firebase: true</span></span><br><span class=\"line\"><span class=\"xml\">//修改layout/_partials/footer.swig，在最后增加</span></span><br><span class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> theme.firebase %&#125;</span><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">    </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">include</span></span> '../_scripts/analytics/visit.swig' %&#125;</span><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>增加文件调用firebase实现统计记录<br>在第一步的代码中，我在<code>_scripts/analytics/</code>目录下创建了<code>visit.swig</code>文件，该文件就是实现统计记录的业务文件。</p>\n</li>\n</ol>\n<h5 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h5><ul>\n<li>考虑到代码的简洁性，首页文章摘要列表内不显示访问统计，只在具体文章页显示访问统计</li>\n<li>使用页面的url作为<code>key</code></li>\n<li>每次访问时，总数和当前页面数据+1</li>\n</ul>\n<h5 id=\"容器修改\"><a href=\"#容器修改\" class=\"headerlink\" title=\"容器修改\"></a>容器修改</h5><p>修改html容器增加统计数据字段<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--修改layout/_macro/post.swig，在post-meta部分新增统计数据字段根据开关以及是否是首页来判断是否显示--&gt;</span></span><br><span class=\"line\">&#123;% if theme.firebase and not is_home() %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-visit-count\"</span>&gt;</span></span><br><span class=\"line\">      &amp;nbsp; | &amp;nbsp; </span><br><span class=\"line\">      <span class=\"comment\">&lt;!--眼睛图标--&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fa fa-eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>&amp;nbsp;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"detail_cnt\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"统计代码\"><a href=\"#统计代码\" class=\"headerlink\" title=\"统计代码\"></a>统计代码</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首先新建自己的firebase对象,使用自己创建应用时给的那个firebase URL</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> firebase = <span class=\"keyword\">new</span> Firebase(<span class=\"string\">\"http://zhangjh.firebaseio.com\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取当前url作为记录的key，将\"/\"替换未\"_\"，并decode</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> curUrl = <span class=\"built_in\">decodeURI</span>(<span class=\"built_in\">window</span>.location.pathname.replace(<span class=\"regexp\">/\\/|\\./g</span>,<span class=\"string\">\"_\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取总数展示</span></span><br><span class=\"line\"><span class=\"comment\">//这里的意思是获取firebase实例下的`sum`字段值</span></span><br><span class=\"line\">firebase.child(<span class=\"string\">\"sum\"</span>).on(<span class=\"string\">\"value\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> curCnt = data.val();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(curCnt &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($(<span class=\"string\">\"#totalCnt\"</span>).length)&#123;</span><br><span class=\"line\">            $(<span class=\"string\">\"#totalCnt\"</span>).remove();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//我将总量放在了底部，当然位置是随意的</span></span><br><span class=\"line\">        $(<span class=\"string\">\"span.author\"</span>).append(<span class=\"string\">\" | &lt;span id='totalCnt'&gt;总访问量：\"</span> + curCnt + <span class=\"string\">\"次\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取page明细</span></span><br><span class=\"line\"><span class=\"comment\">//这里的意思是获取firebase实例下的`page`字段下`cruUrl`key对应的值</span></span><br><span class=\"line\">firebase.child(<span class=\"string\">\"page/\"</span> + curUrl).on(<span class=\"string\">\"value\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> pageCnt = data.val();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pageCnt &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        $(<span class=\"string\">\"#detail_cnt\"</span>).text(pageCnt);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将访问总数和明细+1</span></span><br><span class=\"line\">firebase.child(<span class=\"string\">\"sum\"</span>).transaction(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">curCnt</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (curCnt || <span class=\"number\">0</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">firebase.child(<span class=\"string\">\"page/\"</span> + curUrl).transaction(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">curCnt</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (curCnt || <span class=\"number\">0</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"设置后的效果\"><a href=\"#设置后的效果\" class=\"headerlink\" title=\"设置后的效果\"></a>设置后的效果</h5><p>添加完后刷新访问几下，可以看到这货竟然是实时更新的，很强大<br><img src=\"http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlJzMUlTK2FYQmd5QVdYY0ttTU95S2RBbUNuNGZZeVJSQXhzQkNIbHc2VU93PT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2&amp;text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&amp;font=bXN5aA==&amp;gravity=southwest&amp;dissolve=30&amp;fontsize=240&amp;dx=8&amp;dy=10&amp;stripmeta=0\" alt=\"\"></p>\n<p><img src=\"http://imglf0.nosdn0.126.net/img/ODVTOGEyRktTQlFhcHpqVlZkZDdtZzBwYkhiRldWZDN3ZGl3N3JNNHVjWUpNZjhJM3Z6M1VRPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2&amp;text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&amp;font=bXN5aA==&amp;gravity=southwest&amp;dissolve=30&amp;fontsize=240&amp;dx=8&amp;dy=10&amp;stripmeta=0\" alt=\"\"><br>看见那个小眼睛了没？</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>Hexo作为纯静态的博客系统决定了它要想实现一些诸如评论、统计等需要后台支持的功能时只能依赖第三方服务了。<br>站点的访问量统计，我使用的是”站长统计”，但有时候我们写了博客文章也想更方便的查看每篇文章的阅读量。这时候站长统计就不太方便了，要是能在每篇博文上直观地展现阅读量数据就好了。</p>\n<p>网上搜索了下”hexo 访问统计”绝大部分都是提到了一个叫做”卜算子”的第三方服务，但使用个人的工具总是不那么让我放心，于是一直没有采用还是决定自己动手，鉴于不想自己搭建后端服务(穷，买不起vps…)，还是想找找看有没有更专业点的第三方服务。于是一番搜寻后还真找到个：<a href=\"https://www.firebase.com\" target=\"_blank\" rel=\"noopener\">firebase</a>。<br>本篇博文即是在firebase的基础上，为hexo博客增加文章阅读量统计，适用于”Next”主题，其他主题可供参考。</p>\n<h4 id=\"firebase使用\"><a href=\"#firebase使用\" class=\"headerlink\" title=\"firebase使用\"></a>firebase使用</h4><ol>\n<li><p>首先需要注册一个firebase账户<br>访问<a href=\"https://www.firebase.com/\" target=\"_blank\" rel=\"noopener\">firebase官网</a>，注册账户<br><img src=\"http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlJ6Vm5qY3o5S2JJcFdVWjdtSFNjUkY1ZTJOTS9TZVNsSHhKbmZVWElhd0ZRPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2&amp;text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&amp;font=bXN5aA==&amp;gravity=southwest&amp;dissolve=30&amp;fontsize=240&amp;dx=8&amp;dy=10&amp;stripmeta=0\" alt=\"\"><br>点击右上角”SIGN UP WITH GOOGLE”</p>\n</li>\n<li><p>创建应用<br>注册以后会自动创建一个应用，也可以自己创建一个新的应用<br><img src=\"http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlE5YVFRWXMxd1YyZlBWMGVkWXZaem1qd1BQYy9iaElJOExuSXhYYnVlL2tRPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2&amp;text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&amp;font=bXN5aA==&amp;gravity=southwest&amp;dissolve=30&amp;fontsize=240&amp;dx=8&amp;dy=10&amp;stripmeta=0\" alt=\"\"></p>\n</li>\n<li><p>官网提供了<a href=\"https://www.firebase.com/docs/web/quickstart.html\" target=\"_blank\" rel=\"noopener\">QuickStart文档</a>，可以看看，也可以直接跟着我下面的步骤操作</p>\n</li>\n<li><p>读写数据API<br>根据官方的文档，写入数据通过<code>set</code>命令，读取数据通过<code>on(value)</code>触发。<code>transaction</code>方法可以在原有基础上修改数据，这个方法正好可以给我们用来统计阅读量。<br>全部的API见<a href=\"https://www.firebase.com/docs/web/api/\" target=\"_blank\" rel=\"noopener\">这里</a>,我们只用上述的<code>on</code>和<code>transaction</code>在合适的时候触发更新数据即可。</p>\n</li>\n</ol>","more":"<h4 id=\"博客修改操作\"><a href=\"#博客修改操作\" class=\"headerlink\" title=\"博客修改操作\"></a>博客修改操作</h4><ol>\n<li><p>引入firebase.js<br><code>&lt;script src=&#39;https://cdn.firebase.com/js/client/2.0.4/firebase.js&#39;&gt;&lt;/script&gt;</code><br>考虑到国外网站访问速度问题，建议将上述js文件下载到本地，再本地引用。<br>以下是我的修改操作，供参考，引入部分在<code>visit.swig</code>内：</p>\n<figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\">//主题配置文件_config.yml中增加开关</span></span><br><span class=\"line\"><span class=\"xml\">firebase: true</span></span><br><span class=\"line\"><span class=\"xml\">//修改layout/_partials/footer.swig，在最后增加</span></span><br><span class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">if</span></span> theme.firebase %&#125;</span><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">    </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">include</span></span> '../_scripts/analytics/visit.swig' %&#125;</span><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endif</span></span> %&#125;</span><span class=\"xml\"></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>增加文件调用firebase实现统计记录<br>在第一步的代码中，我在<code>_scripts/analytics/</code>目录下创建了<code>visit.swig</code>文件，该文件就是实现统计记录的业务文件。</p>\n</li>\n</ol>\n<h5 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h5><ul>\n<li>考虑到代码的简洁性，首页文章摘要列表内不显示访问统计，只在具体文章页显示访问统计</li>\n<li>使用页面的url作为<code>key</code></li>\n<li>每次访问时，总数和当前页面数据+1</li>\n</ul>\n<h5 id=\"容器修改\"><a href=\"#容器修改\" class=\"headerlink\" title=\"容器修改\"></a>容器修改</h5><p>修改html容器增加统计数据字段<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--修改layout/_macro/post.swig，在post-meta部分新增统计数据字段根据开关以及是否是首页来判断是否显示--&gt;</span></span><br><span class=\"line\">&#123;% if theme.firebase and not is_home() %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post-visit-count\"</span>&gt;</span></span><br><span class=\"line\">      &amp;nbsp; | &amp;nbsp; </span><br><span class=\"line\">      <span class=\"comment\">&lt;!--眼睛图标--&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fa fa-eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>&amp;nbsp;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"detail_cnt\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"统计代码\"><a href=\"#统计代码\" class=\"headerlink\" title=\"统计代码\"></a>统计代码</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首先新建自己的firebase对象,使用自己创建应用时给的那个firebase URL</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> firebase = <span class=\"keyword\">new</span> Firebase(<span class=\"string\">\"http://zhangjh.firebaseio.com\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取当前url作为记录的key，将\"/\"替换未\"_\"，并decode</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> curUrl = <span class=\"built_in\">decodeURI</span>(<span class=\"built_in\">window</span>.location.pathname.replace(<span class=\"regexp\">/\\/|\\./g</span>,<span class=\"string\">\"_\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取总数展示</span></span><br><span class=\"line\"><span class=\"comment\">//这里的意思是获取firebase实例下的`sum`字段值</span></span><br><span class=\"line\">firebase.child(<span class=\"string\">\"sum\"</span>).on(<span class=\"string\">\"value\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> curCnt = data.val();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(curCnt &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($(<span class=\"string\">\"#totalCnt\"</span>).length)&#123;</span><br><span class=\"line\">            $(<span class=\"string\">\"#totalCnt\"</span>).remove();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//我将总量放在了底部，当然位置是随意的</span></span><br><span class=\"line\">        $(<span class=\"string\">\"span.author\"</span>).append(<span class=\"string\">\" | &lt;span id='totalCnt'&gt;总访问量：\"</span> + curCnt + <span class=\"string\">\"次\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取page明细</span></span><br><span class=\"line\"><span class=\"comment\">//这里的意思是获取firebase实例下的`page`字段下`cruUrl`key对应的值</span></span><br><span class=\"line\">firebase.child(<span class=\"string\">\"page/\"</span> + curUrl).on(<span class=\"string\">\"value\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> pageCnt = data.val();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pageCnt &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        $(<span class=\"string\">\"#detail_cnt\"</span>).text(pageCnt);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将访问总数和明细+1</span></span><br><span class=\"line\">firebase.child(<span class=\"string\">\"sum\"</span>).transaction(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">curCnt</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (curCnt || <span class=\"number\">0</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">firebase.child(<span class=\"string\">\"page/\"</span> + curUrl).transaction(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">curCnt</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (curCnt || <span class=\"number\">0</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"设置后的效果\"><a href=\"#设置后的效果\" class=\"headerlink\" title=\"设置后的效果\"></a>设置后的效果</h5><p>添加完后刷新访问几下，可以看到这货竟然是实时更新的，很强大<br><img src=\"http://imglf.nosdn0.126.net/img/ODVTOGEyRktTQlJzMUlTK2FYQmd5QVdYY0ttTU95S2RBbUNuNGZZeVJSQXhzQkNIbHc2VU93PT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2&amp;text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&amp;font=bXN5aA==&amp;gravity=southwest&amp;dissolve=30&amp;fontsize=240&amp;dx=8&amp;dy=10&amp;stripmeta=0\" alt=\"\"></p>\n<p><img src=\"http://imglf0.nosdn0.126.net/img/ODVTOGEyRktTQlFhcHpqVlZkZDdtZzBwYkhiRldWZDN3ZGl3N3JNNHVjWUpNZjhJM3Z6M1VRPT0.png?imageView&amp;thumbnail=500x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg%7Cwatermark&amp;type=2&amp;text=wqkgSEVMTE8gV09STETvvIEgLyBqaHNwaWRlci5sb2Z0ZXIuY29t&amp;font=bXN5aA==&amp;gravity=southwest&amp;dissolve=30&amp;fontsize=240&amp;dx=8&amp;dy=10&amp;stripmeta=0\" alt=\"\"><br>看见那个小眼睛了没？</p>","sticky":0},{"title":"html5学习--控制摄像头","date":"2015-08-20T02:10:29.000Z","show":true,"_content":"最近对html5萌生了兴趣，起初是因为在学习全栈时见识到了html5的强大威力。如下面这个例子：\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <input type=\"date\">\n</body>\n</html>\n```\n仅仅一个\"date\"类型的input框就解决了html插入日期控件的工作，而且造型还挺风骚。\n![](http://ww4.sinaimg.cn/large/62d95157gw1ev8v865h61j207t06v3ys.jpg)\n<!--more-->\n\n考虑到html5还可以直接操纵硬件，诸如摄像头、麦克风之类，立马让人玩心大增。\n下面是我学习使用html5控制摄像头的一段demo，我的一些学习实验性的代码会放在这里：[**戳**](https://github.com/zhangjh/practice)。\n参考的文章是：\n1. [w3cschool html5教程](http://www.w3school.com.cn/html5/index.asp)\n2. [Eric Bidelman的html5视频音频操作的博文](http://www.html5rocks.com/zh/tutorials/getusermedia/intro/)\n\nLets Go！\n\n首先先添加几个控件：\n```\n<video id=\"video\" autoplay>\n</video>\n<button id=\"snap\">拍摄</button>\n<canvas id=\"canvas\" style=\"border:2px solid #000099\" width=\"640\" height=\"480\">\n    no canvas availabel\n</canvas>\n```\nvideo用来流式的显示摄像头的实时图像，canvas用来显示截图。\nOk了，html5的布局就这么几句话。关键的javascript语句用来获取操作摄像头权限，获取实时图像，截图并绘图等操作。\n关键的媒体捕获的语句为：getUserMedia(),不过\"前端第二定理\"告诉我们：任何好用的东西都不会全部兼容。。，同样的，不同浏览器对这个的实现也不一样，IE内核的浏览器下是getUserMedia，webkit内核的浏览器下是webkitGetUser，firefox下是mozGetUserMedia。因此要为不同的浏览器做适配：调用不同的接口来操作。\n\n```\nif(navigator.getUserMedia){\n    navigator.getUserMedia(videoObj,function(stream){\n        video.src = stream;\n        video.play();\n    },errcb);\n}else if(navigator.webkitGetUserMedia){\n    navigator.webkitGetUserMedia(videoObj,function(stream){\n        video.src = window.webkitURL.createObjectURL(stream);\n        video.play();\n    },errcb);\n}else if(navigator.mozGetUserMedia){\n    navigator.mozGetUserMedia(videoObj,function(stream){\n        video.src = window.URL.createObjectURL(stream);\n        video.play();\n    },errcb);\n}\n```\ngetUserMedia函数接收的第一个参数是个多媒体设备对象，这篇文章里是视频设备，写作`{\"video\":true}`，第二个参数是获取设备成功时的回调函数，第三个参数是获取失败时的回调函数。\n\n值得说明的是，绑定video的数据流的方法也是多浏览器特性的。看代码即可。\n\n至此，应该已经可以通过获取摄像头获得实时的图像展示到video控件里了。\n\n如果需要截图还需要利用到html5的canvas绘图功能。\n\n```\nvar canvas = document.getElementById(\"canvas\"),\n    context = canvas.getContext(\"2d\");\ndocument.getElementById(\"snap\").addEventListener(\"click\",function(){\n    context.drawImage(video,0,0,640,480);\n})\n```\n首先通过getContext方法返回一个用户在画布上绘图的环境，参数指明了要在画布上绘图的类型，当前的唯一合法值是`\"2d\"`；然后调用drawImage绘图，第一个参数规定要使用的图像或视频，这里使用的是视频，第二、三个参数指明剪切的x，y坐标，第四、五个参数指明被剪切图像的宽度和高度。是不是很简单？\n\n将代码组合起来即可运行了~值得注意的是：\n1. 如果是本机调试将会发现调用摄像头无效，不会弹出控制摄像头的权限申请\n2. 如果跟我一样使用hexo部署调试的页面也不会出现权限申请\n具体的原因我还没弄清楚，目前只有在服务器上部署才可以，firefox、chrome下调试成功。\n\n[可戳此处运行demo](/capture_demo.html)\n\n","source":"_posts/html5-camera.md","raw":"title: html5学习--控制摄像头\ndate: 2015-08-20 10:10:29\ntags: html5 摄像头\ncategories: 技术人生\nshow: true\n---\n最近对html5萌生了兴趣，起初是因为在学习全栈时见识到了html5的强大威力。如下面这个例子：\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n    <input type=\"date\">\n</body>\n</html>\n```\n仅仅一个\"date\"类型的input框就解决了html插入日期控件的工作，而且造型还挺风骚。\n![](http://ww4.sinaimg.cn/large/62d95157gw1ev8v865h61j207t06v3ys.jpg)\n<!--more-->\n\n考虑到html5还可以直接操纵硬件，诸如摄像头、麦克风之类，立马让人玩心大增。\n下面是我学习使用html5控制摄像头的一段demo，我的一些学习实验性的代码会放在这里：[**戳**](https://github.com/zhangjh/practice)。\n参考的文章是：\n1. [w3cschool html5教程](http://www.w3school.com.cn/html5/index.asp)\n2. [Eric Bidelman的html5视频音频操作的博文](http://www.html5rocks.com/zh/tutorials/getusermedia/intro/)\n\nLets Go！\n\n首先先添加几个控件：\n```\n<video id=\"video\" autoplay>\n</video>\n<button id=\"snap\">拍摄</button>\n<canvas id=\"canvas\" style=\"border:2px solid #000099\" width=\"640\" height=\"480\">\n    no canvas availabel\n</canvas>\n```\nvideo用来流式的显示摄像头的实时图像，canvas用来显示截图。\nOk了，html5的布局就这么几句话。关键的javascript语句用来获取操作摄像头权限，获取实时图像，截图并绘图等操作。\n关键的媒体捕获的语句为：getUserMedia(),不过\"前端第二定理\"告诉我们：任何好用的东西都不会全部兼容。。，同样的，不同浏览器对这个的实现也不一样，IE内核的浏览器下是getUserMedia，webkit内核的浏览器下是webkitGetUser，firefox下是mozGetUserMedia。因此要为不同的浏览器做适配：调用不同的接口来操作。\n\n```\nif(navigator.getUserMedia){\n    navigator.getUserMedia(videoObj,function(stream){\n        video.src = stream;\n        video.play();\n    },errcb);\n}else if(navigator.webkitGetUserMedia){\n    navigator.webkitGetUserMedia(videoObj,function(stream){\n        video.src = window.webkitURL.createObjectURL(stream);\n        video.play();\n    },errcb);\n}else if(navigator.mozGetUserMedia){\n    navigator.mozGetUserMedia(videoObj,function(stream){\n        video.src = window.URL.createObjectURL(stream);\n        video.play();\n    },errcb);\n}\n```\ngetUserMedia函数接收的第一个参数是个多媒体设备对象，这篇文章里是视频设备，写作`{\"video\":true}`，第二个参数是获取设备成功时的回调函数，第三个参数是获取失败时的回调函数。\n\n值得说明的是，绑定video的数据流的方法也是多浏览器特性的。看代码即可。\n\n至此，应该已经可以通过获取摄像头获得实时的图像展示到video控件里了。\n\n如果需要截图还需要利用到html5的canvas绘图功能。\n\n```\nvar canvas = document.getElementById(\"canvas\"),\n    context = canvas.getContext(\"2d\");\ndocument.getElementById(\"snap\").addEventListener(\"click\",function(){\n    context.drawImage(video,0,0,640,480);\n})\n```\n首先通过getContext方法返回一个用户在画布上绘图的环境，参数指明了要在画布上绘图的类型，当前的唯一合法值是`\"2d\"`；然后调用drawImage绘图，第一个参数规定要使用的图像或视频，这里使用的是视频，第二、三个参数指明剪切的x，y坐标，第四、五个参数指明被剪切图像的宽度和高度。是不是很简单？\n\n将代码组合起来即可运行了~值得注意的是：\n1. 如果是本机调试将会发现调用摄像头无效，不会弹出控制摄像头的权限申请\n2. 如果跟我一样使用hexo部署调试的页面也不会出现权限申请\n具体的原因我还没弄清楚，目前只有在服务器上部署才可以，firefox、chrome下调试成功。\n\n[可戳此处运行demo](/capture_demo.html)\n\n","slug":"html5-camera","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzup002nfnpvkhcw3zz0","content":"<p>最近对html5萌生了兴趣，起初是因为在学习全栈时见识到了html5的强大威力。如下面这个例子：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"date\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>仅仅一个”date”类型的input框就解决了html插入日期控件的工作，而且造型还挺风骚。<br><img src=\"http://ww4.sinaimg.cn/large/62d95157gw1ev8v865h61j207t06v3ys.jpg\" alt=\"\"><br><a id=\"more\"></a></p>\n<p>考虑到html5还可以直接操纵硬件，诸如摄像头、麦克风之类，立马让人玩心大增。<br>下面是我学习使用html5控制摄像头的一段demo，我的一些学习实验性的代码会放在这里：<a href=\"https://github.com/zhangjh/practice\" target=\"_blank\" rel=\"noopener\"><strong>戳</strong></a>。<br>参考的文章是：</p>\n<ol>\n<li><a href=\"http://www.w3school.com.cn/html5/index.asp\" target=\"_blank\" rel=\"noopener\">w3cschool html5教程</a></li>\n<li><a href=\"http://www.html5rocks.com/zh/tutorials/getusermedia/intro/\" target=\"_blank\" rel=\"noopener\">Eric Bidelman的html5视频音频操作的博文</a></li>\n</ol>\n<p>Lets Go！</p>\n<p>首先先添加几个控件：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">video</span> id=<span class=\"string\">\"video\"</span> autoplay&gt;</span><br><span class=\"line\">&lt;/video&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">button</span> id=<span class=\"string\">\"snap\"</span>&gt;拍摄&lt;/button&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">canvas</span> id=<span class=\"string\">\"canvas\"</span> style=<span class=\"string\">\"border:2px solid #000099\"</span> <span class=\"attribute\">width</span>=<span class=\"string\">\"640\"</span> height=<span class=\"string\">\"480\"</span>&gt;</span><br><span class=\"line\">    no <span class=\"selector-tag\">canvas</span> availabel</span><br><span class=\"line\">&lt;/canvas&gt;</span><br></pre></td></tr></table></figure></p>\n<p>video用来流式的显示摄像头的实时图像，canvas用来显示截图。<br>Ok了，html5的布局就这么几句话。关键的javascript语句用来获取操作摄像头权限，获取实时图像，截图并绘图等操作。<br>关键的媒体捕获的语句为：getUserMedia(),不过”前端第二定理”告诉我们：任何好用的东西都不会全部兼容。。，同样的，不同浏览器对这个的实现也不一样，IE内核的浏览器下是getUserMedia，webkit内核的浏览器下是webkitGetUser，firefox下是mozGetUserMedia。因此要为不同的浏览器做适配：调用不同的接口来操作。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(navigator.getUserMedia)&#123;</span><br><span class=\"line\">    navigator.getUserMedia(videoObj,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">stream</span>)</span>&#123;</span><br><span class=\"line\">        video.src = stream;</span><br><span class=\"line\">        video.play();</span><br><span class=\"line\">    &#125;,errcb);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(navigator.webkitGetUserMedia)&#123;</span><br><span class=\"line\">    navigator.webkitGetUserMedia(videoObj,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">stream</span>)</span>&#123;</span><br><span class=\"line\">        video.src = <span class=\"built_in\">window</span>.webkitURL.createObjectURL(stream);</span><br><span class=\"line\">        video.play();</span><br><span class=\"line\">    &#125;,errcb);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(navigator.mozGetUserMedia)&#123;</span><br><span class=\"line\">    navigator.mozGetUserMedia(videoObj,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">stream</span>)</span>&#123;</span><br><span class=\"line\">        video.src = <span class=\"built_in\">window</span>.URL.createObjectURL(stream);</span><br><span class=\"line\">        video.play();</span><br><span class=\"line\">    &#125;,errcb);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>getUserMedia函数接收的第一个参数是个多媒体设备对象，这篇文章里是视频设备，写作<code>{&quot;video&quot;:true}</code>，第二个参数是获取设备成功时的回调函数，第三个参数是获取失败时的回调函数。</p>\n<p>值得说明的是，绑定video的数据流的方法也是多浏览器特性的。看代码即可。</p>\n<p>至此，应该已经可以通过获取摄像头获得实时的图像展示到video控件里了。</p>\n<p>如果需要截图还需要利用到html5的canvas绘图功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>),</span><br><span class=\"line\">    context = canvas.getContext(<span class=\"string\">\"2d\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"snap\"</span>).addEventListener(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    context.drawImage(video,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">640</span>,<span class=\"number\">480</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>首先通过getContext方法返回一个用户在画布上绘图的环境，参数指明了要在画布上绘图的类型，当前的唯一合法值是<code>&quot;2d&quot;</code>；然后调用drawImage绘图，第一个参数规定要使用的图像或视频，这里使用的是视频，第二、三个参数指明剪切的x，y坐标，第四、五个参数指明被剪切图像的宽度和高度。是不是很简单？</p>\n<p>将代码组合起来即可运行了~值得注意的是：</p>\n<ol>\n<li>如果是本机调试将会发现调用摄像头无效，不会弹出控制摄像头的权限申请</li>\n<li>如果跟我一样使用hexo部署调试的页面也不会出现权限申请<br>具体的原因我还没弄清楚，目前只有在服务器上部署才可以，firefox、chrome下调试成功。</li>\n</ol>\n<p><a href=\"/capture_demo.html\">可戳此处运行demo</a></p>\n","site":{"data":{}},"excerpt":"<p>最近对html5萌生了兴趣，起初是因为在学习全栈时见识到了html5的强大威力。如下面这个例子：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"date\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>仅仅一个”date”类型的input框就解决了html插入日期控件的工作，而且造型还挺风骚。<br><img src=\"http://ww4.sinaimg.cn/large/62d95157gw1ev8v865h61j207t06v3ys.jpg\" alt=\"\"><br>","more":"</p>\n<p>考虑到html5还可以直接操纵硬件，诸如摄像头、麦克风之类，立马让人玩心大增。<br>下面是我学习使用html5控制摄像头的一段demo，我的一些学习实验性的代码会放在这里：<a href=\"https://github.com/zhangjh/practice\" target=\"_blank\" rel=\"noopener\"><strong>戳</strong></a>。<br>参考的文章是：</p>\n<ol>\n<li><a href=\"http://www.w3school.com.cn/html5/index.asp\" target=\"_blank\" rel=\"noopener\">w3cschool html5教程</a></li>\n<li><a href=\"http://www.html5rocks.com/zh/tutorials/getusermedia/intro/\" target=\"_blank\" rel=\"noopener\">Eric Bidelman的html5视频音频操作的博文</a></li>\n</ol>\n<p>Lets Go！</p>\n<p>首先先添加几个控件：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">video</span> id=<span class=\"string\">\"video\"</span> autoplay&gt;</span><br><span class=\"line\">&lt;/video&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">button</span> id=<span class=\"string\">\"snap\"</span>&gt;拍摄&lt;/button&gt;</span><br><span class=\"line\">&lt;<span class=\"selector-tag\">canvas</span> id=<span class=\"string\">\"canvas\"</span> style=<span class=\"string\">\"border:2px solid #000099\"</span> <span class=\"attribute\">width</span>=<span class=\"string\">\"640\"</span> height=<span class=\"string\">\"480\"</span>&gt;</span><br><span class=\"line\">    no <span class=\"selector-tag\">canvas</span> availabel</span><br><span class=\"line\">&lt;/canvas&gt;</span><br></pre></td></tr></table></figure></p>\n<p>video用来流式的显示摄像头的实时图像，canvas用来显示截图。<br>Ok了，html5的布局就这么几句话。关键的javascript语句用来获取操作摄像头权限，获取实时图像，截图并绘图等操作。<br>关键的媒体捕获的语句为：getUserMedia(),不过”前端第二定理”告诉我们：任何好用的东西都不会全部兼容。。，同样的，不同浏览器对这个的实现也不一样，IE内核的浏览器下是getUserMedia，webkit内核的浏览器下是webkitGetUser，firefox下是mozGetUserMedia。因此要为不同的浏览器做适配：调用不同的接口来操作。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(navigator.getUserMedia)&#123;</span><br><span class=\"line\">    navigator.getUserMedia(videoObj,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">stream</span>)</span>&#123;</span><br><span class=\"line\">        video.src = stream;</span><br><span class=\"line\">        video.play();</span><br><span class=\"line\">    &#125;,errcb);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(navigator.webkitGetUserMedia)&#123;</span><br><span class=\"line\">    navigator.webkitGetUserMedia(videoObj,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">stream</span>)</span>&#123;</span><br><span class=\"line\">        video.src = <span class=\"built_in\">window</span>.webkitURL.createObjectURL(stream);</span><br><span class=\"line\">        video.play();</span><br><span class=\"line\">    &#125;,errcb);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(navigator.mozGetUserMedia)&#123;</span><br><span class=\"line\">    navigator.mozGetUserMedia(videoObj,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">stream</span>)</span>&#123;</span><br><span class=\"line\">        video.src = <span class=\"built_in\">window</span>.URL.createObjectURL(stream);</span><br><span class=\"line\">        video.play();</span><br><span class=\"line\">    &#125;,errcb);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>getUserMedia函数接收的第一个参数是个多媒体设备对象，这篇文章里是视频设备，写作<code>{&quot;video&quot;:true}</code>，第二个参数是获取设备成功时的回调函数，第三个参数是获取失败时的回调函数。</p>\n<p>值得说明的是，绑定video的数据流的方法也是多浏览器特性的。看代码即可。</p>\n<p>至此，应该已经可以通过获取摄像头获得实时的图像展示到video控件里了。</p>\n<p>如果需要截图还需要利用到html5的canvas绘图功能。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>),</span><br><span class=\"line\">    context = canvas.getContext(<span class=\"string\">\"2d\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"snap\"</span>).addEventListener(<span class=\"string\">\"click\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    context.drawImage(video,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">640</span>,<span class=\"number\">480</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>首先通过getContext方法返回一个用户在画布上绘图的环境，参数指明了要在画布上绘图的类型，当前的唯一合法值是<code>&quot;2d&quot;</code>；然后调用drawImage绘图，第一个参数规定要使用的图像或视频，这里使用的是视频，第二、三个参数指明剪切的x，y坐标，第四、五个参数指明被剪切图像的宽度和高度。是不是很简单？</p>\n<p>将代码组合起来即可运行了~值得注意的是：</p>\n<ol>\n<li>如果是本机调试将会发现调用摄像头无效，不会弹出控制摄像头的权限申请</li>\n<li>如果跟我一样使用hexo部署调试的页面也不会出现权限申请<br>具体的原因我还没弄清楚，目前只有在服务器上部署才可以，firefox、chrome下调试成功。</li>\n</ol>\n<p><a href=\"/capture_demo.html\">可戳此处运行demo</a></p>","sticky":0},{"title":"idea调整jvm参数加快启动编译速度","show":true,"date":"2016-12-08T02:09:57.000Z","_content":"## 背景\n最近换了个团队，被逼搞起了java+react。在使用webpack打包编译react代码或者使用maven启动java的时候，IntelliJ IDEA卡的跟孙子似的，人生就在这一分一秒的等待中度过，真是让人焦虑的不行。可是我大Think carbon x1可是8G的大内存机器，怎么会这么慢呢。。一开始听说idea就是内存杀手的我还以为是正常的，直到又一次项目直接起不来，并且还报错内存不够用，这真是让人不能接受了，8G的内存起个java说内存不够用？于是听说过jvm参数一说的我怀疑了下是不是idea设置的不太对。。\n\n## JVM参数\n设置JVM内存的参数有四个：\n1. -Xmx    Java Heap最大值，默认为物理内存的四分之一\n2. -Xms    Java Heap初始值，最好将-Xmx和-Xms设置为相同值，避免垃圾回收时由于差值造成时间开销增大\n3. -Xmn    Java Heap Young区大小，最好保留默认值\n4. -Xss    每隔线程Stack的大小，最好保留默认值\n\n## 修改Idea JVM参数\n打开idea的安装目录，切换到bin目录下，找到jvm的参数配置文件，32位程序为`idea.exe.vmoptions`，64位位`idea64.exe.vmoptions`\n我的打开后看了下，-Xmx和-Xms默认都是设置了128m。。尼玛，什么年代了，给分配128兆内存，怪不得卡成翔。\n果断调整设置分配4096m，其他保持默认不修改。\n\n```\n\t-Xms4096m\n\t-Xmx4096m\n\t-XX:ReservedCodeCacheSize=240m\n\t-XX:+UseConcMarkSweepGC\n\t-XX:SoftRefLRUPolicyMSPerMB=50\n\t-ea\n\t-Dsun.io.useCanonCaches=false\n\t-Djava.net.preferIPv4Stack=true\n\t-XX:+HeapDumpOnOutOfMemoryError\n\t-XX:-OmitStackTraceInFastThrow\n\t-Xverify:none                  //关闭Java字节码验证，从而加快了类装入的速度，并使得在仅为验证目的而启动的过程中无需装入类，缩短了启动时间。\n```\n\n如果想提高启动速度，还可以将idea打开时默认加载的插件去掉一些自己不用的。路径是`File->Settings->Plugins`，勾掉自己不常用的。\n\n关闭重启idea，那酸爽，没系安全带的我差点翻了车。。再试一下webpack打包，那是飞一样的感觉~~\t\n","source":"_posts/idea-jvm.md","raw":"title: idea调整jvm参数加快启动编译速度\nshow: true\ndate: 2016-12-08 10:09:57\ntags: [idea,jvm]\ncategories: 技术人生\n---\n## 背景\n最近换了个团队，被逼搞起了java+react。在使用webpack打包编译react代码或者使用maven启动java的时候，IntelliJ IDEA卡的跟孙子似的，人生就在这一分一秒的等待中度过，真是让人焦虑的不行。可是我大Think carbon x1可是8G的大内存机器，怎么会这么慢呢。。一开始听说idea就是内存杀手的我还以为是正常的，直到又一次项目直接起不来，并且还报错内存不够用，这真是让人不能接受了，8G的内存起个java说内存不够用？于是听说过jvm参数一说的我怀疑了下是不是idea设置的不太对。。\n\n## JVM参数\n设置JVM内存的参数有四个：\n1. -Xmx    Java Heap最大值，默认为物理内存的四分之一\n2. -Xms    Java Heap初始值，最好将-Xmx和-Xms设置为相同值，避免垃圾回收时由于差值造成时间开销增大\n3. -Xmn    Java Heap Young区大小，最好保留默认值\n4. -Xss    每隔线程Stack的大小，最好保留默认值\n\n## 修改Idea JVM参数\n打开idea的安装目录，切换到bin目录下，找到jvm的参数配置文件，32位程序为`idea.exe.vmoptions`，64位位`idea64.exe.vmoptions`\n我的打开后看了下，-Xmx和-Xms默认都是设置了128m。。尼玛，什么年代了，给分配128兆内存，怪不得卡成翔。\n果断调整设置分配4096m，其他保持默认不修改。\n\n```\n\t-Xms4096m\n\t-Xmx4096m\n\t-XX:ReservedCodeCacheSize=240m\n\t-XX:+UseConcMarkSweepGC\n\t-XX:SoftRefLRUPolicyMSPerMB=50\n\t-ea\n\t-Dsun.io.useCanonCaches=false\n\t-Djava.net.preferIPv4Stack=true\n\t-XX:+HeapDumpOnOutOfMemoryError\n\t-XX:-OmitStackTraceInFastThrow\n\t-Xverify:none                  //关闭Java字节码验证，从而加快了类装入的速度，并使得在仅为验证目的而启动的过程中无需装入类，缩短了启动时间。\n```\n\n如果想提高启动速度，还可以将idea打开时默认加载的插件去掉一些自己不用的。路径是`File->Settings->Plugins`，勾掉自己不常用的。\n\n关闭重启idea，那酸爽，没系安全带的我差点翻了车。。再试一下webpack打包，那是飞一样的感觉~~\t\n","slug":"idea-jvm","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzuq002pfnpvcu8jicnf","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近换了个团队，被逼搞起了java+react。在使用webpack打包编译react代码或者使用maven启动java的时候，IntelliJ IDEA卡的跟孙子似的，人生就在这一分一秒的等待中度过，真是让人焦虑的不行。可是我大Think carbon x1可是8G的大内存机器，怎么会这么慢呢。。一开始听说idea就是内存杀手的我还以为是正常的，直到又一次项目直接起不来，并且还报错内存不够用，这真是让人不能接受了，8G的内存起个java说内存不够用？于是听说过jvm参数一说的我怀疑了下是不是idea设置的不太对。。</p>\n<h2 id=\"JVM参数\"><a href=\"#JVM参数\" class=\"headerlink\" title=\"JVM参数\"></a>JVM参数</h2><p>设置JVM内存的参数有四个：</p>\n<ol>\n<li>-Xmx    Java Heap最大值，默认为物理内存的四分之一</li>\n<li>-Xms    Java Heap初始值，最好将-Xmx和-Xms设置为相同值，避免垃圾回收时由于差值造成时间开销增大</li>\n<li>-Xmn    Java Heap Young区大小，最好保留默认值</li>\n<li>-Xss    每隔线程Stack的大小，最好保留默认值</li>\n</ol>\n<h2 id=\"修改Idea-JVM参数\"><a href=\"#修改Idea-JVM参数\" class=\"headerlink\" title=\"修改Idea JVM参数\"></a>修改Idea JVM参数</h2><p>打开idea的安装目录，切换到bin目录下，找到jvm的参数配置文件，32位程序为<code>idea.exe.vmoptions</code>，64位位<code>idea64.exe.vmoptions</code><br>我的打开后看了下，-Xmx和-Xms默认都是设置了128m。。尼玛，什么年代了，给分配128兆内存，怪不得卡成翔。<br>果断调整设置分配4096m，其他保持默认不修改。</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"ruby\">Xms4096m</span></span><br><span class=\"line\"><span class=\"ruby\">-Xmx4096m</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>ReservedCodeCacheSize=<span class=\"number\">240</span>m</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>+UseConcMarkSweepGC</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>SoftRefLRUPolicyMSPerMB=<span class=\"number\">50</span></span></span><br><span class=\"line\"><span class=\"ruby\">-ea</span></span><br><span class=\"line\"><span class=\"ruby\">-Dsun.io.useCanonCaches=<span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"ruby\">-Djava.net.preferIPv4Stack=<span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>+HeapDumpOnOutOfMemoryError</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>-OmitStackTraceInFastThrow</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">Xverify:</span>none                  /<span class=\"regexp\">/关闭Java字节码验证，从而加快了类装入的速度，并使得在仅为验证目的而启动的过程中无需装入类，缩短了启动时间。</span></span></span><br></pre></td></tr></table></figure>\n<p>如果想提高启动速度，还可以将idea打开时默认加载的插件去掉一些自己不用的。路径是<code>File-&gt;Settings-&gt;Plugins</code>，勾掉自己不常用的。</p>\n<p>关闭重启idea，那酸爽，没系安全带的我差点翻了车。。再试一下webpack打包，那是飞一样的感觉~~    </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近换了个团队，被逼搞起了java+react。在使用webpack打包编译react代码或者使用maven启动java的时候，IntelliJ IDEA卡的跟孙子似的，人生就在这一分一秒的等待中度过，真是让人焦虑的不行。可是我大Think carbon x1可是8G的大内存机器，怎么会这么慢呢。。一开始听说idea就是内存杀手的我还以为是正常的，直到又一次项目直接起不来，并且还报错内存不够用，这真是让人不能接受了，8G的内存起个java说内存不够用？于是听说过jvm参数一说的我怀疑了下是不是idea设置的不太对。。</p>\n<h2 id=\"JVM参数\"><a href=\"#JVM参数\" class=\"headerlink\" title=\"JVM参数\"></a>JVM参数</h2><p>设置JVM内存的参数有四个：</p>\n<ol>\n<li>-Xmx    Java Heap最大值，默认为物理内存的四分之一</li>\n<li>-Xms    Java Heap初始值，最好将-Xmx和-Xms设置为相同值，避免垃圾回收时由于差值造成时间开销增大</li>\n<li>-Xmn    Java Heap Young区大小，最好保留默认值</li>\n<li>-Xss    每隔线程Stack的大小，最好保留默认值</li>\n</ol>\n<h2 id=\"修改Idea-JVM参数\"><a href=\"#修改Idea-JVM参数\" class=\"headerlink\" title=\"修改Idea JVM参数\"></a>修改Idea JVM参数</h2><p>打开idea的安装目录，切换到bin目录下，找到jvm的参数配置文件，32位程序为<code>idea.exe.vmoptions</code>，64位位<code>idea64.exe.vmoptions</code><br>我的打开后看了下，-Xmx和-Xms默认都是设置了128m。。尼玛，什么年代了，给分配128兆内存，怪不得卡成翔。<br>果断调整设置分配4096m，其他保持默认不修改。</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"ruby\">Xms4096m</span></span><br><span class=\"line\"><span class=\"ruby\">-Xmx4096m</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>ReservedCodeCacheSize=<span class=\"number\">240</span>m</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>+UseConcMarkSweepGC</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>SoftRefLRUPolicyMSPerMB=<span class=\"number\">50</span></span></span><br><span class=\"line\"><span class=\"ruby\">-ea</span></span><br><span class=\"line\"><span class=\"ruby\">-Dsun.io.useCanonCaches=<span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"ruby\">-Djava.net.preferIPv4Stack=<span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>+HeapDumpOnOutOfMemoryError</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">XX:</span>-OmitStackTraceInFastThrow</span></span><br><span class=\"line\"><span class=\"ruby\">-<span class=\"symbol\">Xverify:</span>none                  /<span class=\"regexp\">/关闭Java字节码验证，从而加快了类装入的速度，并使得在仅为验证目的而启动的过程中无需装入类，缩短了启动时间。</span></span></span><br></pre></td></tr></table></figure>\n<p>如果想提高启动速度，还可以将idea打开时默认加载的插件去掉一些自己不用的。路径是<code>File-&gt;Settings-&gt;Plugins</code>，勾掉自己不常用的。</p>\n<p>关闭重启idea，那酸爽，没系安全带的我差点翻了车。。再试一下webpack打包，那是飞一样的感觉~~    </p>\n","sticky":0},{"title":"使用IntelliJ Idea进行远程调试","show":true,"date":"2016-12-15T06:29:30.000Z","_content":"\n最近接手了一个烂摊子项目，据说是多少年前的了，没有人会部署本地环境，只能在服务器上通过脚本部署。这么一来就没法使用IDE的调试功能了，排查问题很不方便，跟同事一沟通，发现他们之前是用远程调试来排查问题。用了这么久Idea了，今天还是第一次知道还有远程调试这个功能。本篇就记录一下怎么在Idea里开启远程调试。\n\n1. 开启远程访问端口启动服务\n以java应用启动为例，启动参数里要添加这条额外的命令：\n\t```\n\t-Xrunjdwp:transport=dt_socket,address=8089,server=y,suspend=n\n\t```\n\t其中的address就是要开启的远程访问端口\n\n<!-- more -->\n\n2. Idea打开工程，保证待调试代码和远程版本一致\n\t编辑debug配置，如下图，在Remote处\n\t![](http://ww1.sinaimg.cn/mw690/62d95157gw1farh0k000zj20uc0kqtbt.jpg)\n\thost填写远程机器地址，port填写8089\n\n3. 添加该远程调试，开启debug调试\n\t![](http://ww1.sinaimg.cn/mw690/62d95157gw1farh0kp4ayj20uc0kqgo5.jpg)\n\t添加刚刚配置好的远程调试，点击Debug开启调试\n\n4. 添加断点进行调试\n\t然后就跟本地调试一样啦\n","source":"_posts/idea-remote-debug.md","raw":"title: 使用IntelliJ Idea进行远程调试\nshow: true\ndate: 2016-12-15 14:29:30\ntags: [idea,远程调试]\ncategories: 技术人生\n---\n\n最近接手了一个烂摊子项目，据说是多少年前的了，没有人会部署本地环境，只能在服务器上通过脚本部署。这么一来就没法使用IDE的调试功能了，排查问题很不方便，跟同事一沟通，发现他们之前是用远程调试来排查问题。用了这么久Idea了，今天还是第一次知道还有远程调试这个功能。本篇就记录一下怎么在Idea里开启远程调试。\n\n1. 开启远程访问端口启动服务\n以java应用启动为例，启动参数里要添加这条额外的命令：\n\t```\n\t-Xrunjdwp:transport=dt_socket,address=8089,server=y,suspend=n\n\t```\n\t其中的address就是要开启的远程访问端口\n\n<!-- more -->\n\n2. Idea打开工程，保证待调试代码和远程版本一致\n\t编辑debug配置，如下图，在Remote处\n\t![](http://ww1.sinaimg.cn/mw690/62d95157gw1farh0k000zj20uc0kqtbt.jpg)\n\thost填写远程机器地址，port填写8089\n\n3. 添加该远程调试，开启debug调试\n\t![](http://ww1.sinaimg.cn/mw690/62d95157gw1farh0kp4ayj20uc0kqgo5.jpg)\n\t添加刚刚配置好的远程调试，点击Debug开启调试\n\n4. 添加断点进行调试\n\t然后就跟本地调试一样啦\n","slug":"idea-remote-debug","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzus002sfnpvjfqdf7gj","content":"<p>最近接手了一个烂摊子项目，据说是多少年前的了，没有人会部署本地环境，只能在服务器上通过脚本部署。这么一来就没法使用IDE的调试功能了，排查问题很不方便，跟同事一沟通，发现他们之前是用远程调试来排查问题。用了这么久Idea了，今天还是第一次知道还有远程调试这个功能。本篇就记录一下怎么在Idea里开启远程调试。</p>\n<ol>\n<li><p>开启远程访问端口启动服务<br>以java应用启动为例，启动参数里要添加这条额外的命令：</p>\n <figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Xrunjd<span class=\"symbol\">wp:tr</span>ansport=dt_socket,<span class=\"built_in\">address</span>=<span class=\"number\">8089</span>,server=y,suspend=<span class=\"built_in\">n</span></span><br></pre></td></tr></table></figure>\n<p> 其中的address就是要开启的远程访问端口</p>\n</li>\n</ol>\n<a id=\"more\"></a>\n<ol start=\"2\">\n<li><p>Idea打开工程，保证待调试代码和远程版本一致<br> 编辑debug配置，如下图，在Remote处<br> <img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1farh0k000zj20uc0kqtbt.jpg\" alt=\"\"><br> host填写远程机器地址，port填写8089</p>\n</li>\n<li><p>添加该远程调试，开启debug调试<br> <img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1farh0kp4ayj20uc0kqgo5.jpg\" alt=\"\"><br> 添加刚刚配置好的远程调试，点击Debug开启调试</p>\n</li>\n<li><p>添加断点进行调试<br> 然后就跟本地调试一样啦</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>最近接手了一个烂摊子项目，据说是多少年前的了，没有人会部署本地环境，只能在服务器上通过脚本部署。这么一来就没法使用IDE的调试功能了，排查问题很不方便，跟同事一沟通，发现他们之前是用远程调试来排查问题。用了这么久Idea了，今天还是第一次知道还有远程调试这个功能。本篇就记录一下怎么在Idea里开启远程调试。</p>\n<ol>\n<li><p>开启远程访问端口启动服务<br>以java应用启动为例，启动参数里要添加这条额外的命令：</p>\n <figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Xrunjd<span class=\"symbol\">wp:tr</span>ansport=dt_socket,<span class=\"built_in\">address</span>=<span class=\"number\">8089</span>,server=y,suspend=<span class=\"built_in\">n</span></span><br></pre></td></tr></table></figure>\n<p> 其中的address就是要开启的远程访问端口</p>\n</li>\n</ol>","more":"<ol start=\"2\">\n<li><p>Idea打开工程，保证待调试代码和远程版本一致<br> 编辑debug配置，如下图，在Remote处<br> <img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1farh0k000zj20uc0kqtbt.jpg\" alt=\"\"><br> host填写远程机器地址，port填写8089</p>\n</li>\n<li><p>添加该远程调试，开启debug调试<br> <img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1farh0kp4ayj20uc0kqgo5.jpg\" alt=\"\"><br> 添加刚刚配置好的远程调试，点击Debug开启调试</p>\n</li>\n<li><p>添加断点进行调试<br> 然后就跟本地调试一样啦</p>\n</li>\n</ol>","sticky":0},{"title":"Welcome to our wedding!","date":"2015-12-01T12:14:00.000Z","show":false,"_content":"<html>\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n\t<title>Welcome to our wedding!</title>\n\t<style type=\"text/css\">\n\t\tbody, html{\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin:0;\n\t\t\tfont-family:\"微软雅黑\";\n\t\t}\n\t\t#l-map{\n\t\t\theight:300px;\n\t\t\twidth:100%;\n/*\t\t\tmargin-left: 15%;\n\t\t\tmargin-top: 5%;*/\n\t\t}\n\t\t#r-result,#r-result table{\n\t\t\twidth:100%;\n\t\t\tfont-size:12px;\n\t\t\t/*margin-left: 15%;*/\n\t\t}\n\t\t#cover {\n\t\t\tmargin-left: -5%;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\n\t\t.pic {\n\t\t\tmargin: 10px;\n\t\t}\n\n\t\t/*#r-result table {\n\t\t\tmargin-left: 0;\n\t\t}*/\n\n\t</style>\n\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=E577a29e33bc8df7619f6c364501fd09\"></script>\n\t<title>展示公交换乘的结果面板</title>\n</head>\n<body>\n\t<div>\n\t\t<div id=\"cover\">\n\t\t\t<ul>\n\t\t\t\t<li><a href=\"#invitation\">请柬</a></li>\n\t\t\t\t<li><a href=\"#l-map\">地图</a></li>\n\t\t\t\t<li><a href=\"#pics\">图片Show</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<h2>请柬：</h2>\n\t\t<div id=\"invitation\">\n\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eykb39k8ekj20rh0gtq7b.jpg\" style=\"width: 100%\">\n\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyletlnzxlg20sg0i7n1v.gif\" style=\"width: 100%\">\n\t\t\t<p>\n\t\t\t\t关键词再次强调：<b>2016年1月1日 南京市江宁区唐老鸭大酒店 中午12点 </b>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t路线信息请下拉。\n\t\t\t</p>\n\t\t</div>\n\t\t<h2>地图：</h2>\n\t\t<p>\n\t\t\t下述地图起点从南京南站起，s1机场线到翔宇南路下，地铁口3,4号口出，转861路到横溪站下往前步行150米左右即达。（遇十字路口左转）耗时大概在45分钟左右。\n\t\t</p>\n\t\t<p>\n\t\t\ts1线运营时间：<b>6：00 - 22:00</b> ；861路运营时间：<b>6:00 - 21:20</b>\n\t\t</p>\n\t\t<div id=\"l-map\" name=\"map\"></div>\n\t\t<div id=\"r-result\"></div>\n\t\t<h2>图片Show：</h2>\n\t\t<p>没有PS过的哦</p>\n\t\t<div id=\"pics\">\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eylcdzl2qmj24c02w07wt.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eylcdvcfk6j22u04907wr.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eylfvm5m2pj22rj45a1l3.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t</div>\n\t\t<li><a href=\"#cover\">返回顶部</a></li>\n\t</div>\n\n\t<hr />\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\" >\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n</div>\n\n</body>\n\t<script type=\"text/javascript\">\n\t\t// 百度地图API功能\n\t\tvar map = new BMap.Map(\"l-map\");\n\t\tmap.centerAndZoom(new BMap.Point(118.804381,31.976318), 12);\n\n\t\tvar transit = new BMap.TransitRoute(map, {\n\t\t\trenderOptions: {map: map, panel: \"r-result\"}\n\t\t});\n\t\ttransit.search(\"南京南站\", \"南京市江宁区唐老鸭大酒店\");\n\t</script>\n\t\n</html>\n","source":"_posts/invite.html","raw":"title: Welcome to our wedding!\ncategories: 图片廊\ndate: 2015-12-01 20:14:00 \ntags: 请柬\nshow: false\n---\n<html>\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n\t<title>Welcome to our wedding!</title>\n\t<style type=\"text/css\">\n\t\tbody, html{\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin:0;\n\t\t\tfont-family:\"微软雅黑\";\n\t\t}\n\t\t#l-map{\n\t\t\theight:300px;\n\t\t\twidth:100%;\n/*\t\t\tmargin-left: 15%;\n\t\t\tmargin-top: 5%;*/\n\t\t}\n\t\t#r-result,#r-result table{\n\t\t\twidth:100%;\n\t\t\tfont-size:12px;\n\t\t\t/*margin-left: 15%;*/\n\t\t}\n\t\t#cover {\n\t\t\tmargin-left: -5%;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\n\t\t.pic {\n\t\t\tmargin: 10px;\n\t\t}\n\n\t\t/*#r-result table {\n\t\t\tmargin-left: 0;\n\t\t}*/\n\n\t</style>\n\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=E577a29e33bc8df7619f6c364501fd09\"></script>\n\t<title>展示公交换乘的结果面板</title>\n</head>\n<body>\n\t<div>\n\t\t<div id=\"cover\">\n\t\t\t<ul>\n\t\t\t\t<li><a href=\"#invitation\">请柬</a></li>\n\t\t\t\t<li><a href=\"#l-map\">地图</a></li>\n\t\t\t\t<li><a href=\"#pics\">图片Show</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<h2>请柬：</h2>\n\t\t<div id=\"invitation\">\n\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eykb39k8ekj20rh0gtq7b.jpg\" style=\"width: 100%\">\n\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyletlnzxlg20sg0i7n1v.gif\" style=\"width: 100%\">\n\t\t\t<p>\n\t\t\t\t关键词再次强调：<b>2016年1月1日 南京市江宁区唐老鸭大酒店 中午12点 </b>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t路线信息请下拉。\n\t\t\t</p>\n\t\t</div>\n\t\t<h2>地图：</h2>\n\t\t<p>\n\t\t\t下述地图起点从南京南站起，s1机场线到翔宇南路下，地铁口3,4号口出，转861路到横溪站下往前步行150米左右即达。（遇十字路口左转）耗时大概在45分钟左右。\n\t\t</p>\n\t\t<p>\n\t\t\ts1线运营时间：<b>6：00 - 22:00</b> ；861路运营时间：<b>6:00 - 21:20</b>\n\t\t</p>\n\t\t<div id=\"l-map\" name=\"map\"></div>\n\t\t<div id=\"r-result\"></div>\n\t\t<h2>图片Show：</h2>\n\t\t<p>没有PS过的哦</p>\n\t\t<div id=\"pics\">\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eylcdzl2qmj24c02w07wt.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eylcdvcfk6j22u04907wr.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eylfvm5m2pj22rj45a1l3.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t</div>\n\t\t<li><a href=\"#cover\">返回顶部</a></li>\n\t</div>\n\n\t<hr />\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\" >\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n</div>\n\n</body>\n\t<script type=\"text/javascript\">\n\t\t// 百度地图API功能\n\t\tvar map = new BMap.Map(\"l-map\");\n\t\tmap.centerAndZoom(new BMap.Point(118.804381,31.976318), 12);\n\n\t\tvar transit = new BMap.TransitRoute(map, {\n\t\t\trenderOptions: {map: map, panel: \"r-result\"}\n\t\t});\n\t\ttransit.search(\"南京南站\", \"南京市江宁区唐老鸭大酒店\");\n\t</script>\n\t\n</html>\n","slug":"invite","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzuu002ufnpvh88jtfxu","content":"<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n\t<title>Welcome to our wedding!</title>\n\t<style type=\"text/css\">\n\t\tbody, html{\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin:0;\n\t\t\tfont-family:\"微软雅黑\";\n\t\t}\n\t\t#l-map{\n\t\t\theight:300px;\n\t\t\twidth:100%;\n/*\t\t\tmargin-left: 15%;\n\t\t\tmargin-top: 5%;*/\n\t\t}\n\t\t#r-result,#r-result table{\n\t\t\twidth:100%;\n\t\t\tfont-size:12px;\n\t\t\t/*margin-left: 15%;*/\n\t\t}\n\t\t#cover {\n\t\t\tmargin-left: -5%;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\n\t\t.pic {\n\t\t\tmargin: 10px;\n\t\t}\n\n\t\t/*#r-result table {\n\t\t\tmargin-left: 0;\n\t\t}*/\n\n\t</style>\n\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=E577a29e33bc8df7619f6c364501fd09\"></script>\n\t<title>展示公交换乘的结果面板</title>\n</head>\n<body>\n\t<div>\n\t\t<div id=\"cover\">\n\t\t\t<ul>\n\t\t\t\t<li><a href=\"#invitation\">请柬</a></li>\n\t\t\t\t<li><a href=\"#l-map\">地图</a></li>\n\t\t\t\t<li><a href=\"#pics\">图片Show</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<h2>请柬：</h2>\n\t\t<div id=\"invitation\">\n\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eykb39k8ekj20rh0gtq7b.jpg\" style=\"width: 100%\">\n\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyletlnzxlg20sg0i7n1v.gif\" style=\"width: 100%\">\n\t\t\t<p>\n\t\t\t\t关键词再次强调：<b>2016年1月1日 南京市江宁区唐老鸭大酒店 中午12点 </b>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t路线信息请下拉。\n\t\t\t</p>\n\t\t</div>\n\t\t<h2>地图：</h2>\n\t\t<p>\n\t\t\t下述地图起点从南京南站起，s1机场线到翔宇南路下，地铁口3,4号口出，转861路到横溪站下往前步行150米左右即达。（遇十字路口左转）耗时大概在45分钟左右。\n\t\t</p>\n\t\t<p>\n\t\t\ts1线运营时间：<b>6：00 - 22:00</b> ；861路运营时间：<b>6:00 - 21:20</b>\n\t\t</p>\n\t\t<div id=\"l-map\" name=\"map\"></div>\n\t\t<div id=\"r-result\"></div>\n\t\t<h2>图片Show：</h2>\n\t\t<p>没有PS过的哦</p>\n\t\t<div id=\"pics\">\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eylcdzl2qmj24c02w07wt.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eylcdvcfk6j22u04907wr.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eylfvm5m2pj22rj45a1l3.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t</div>\n\t\t<li><a href=\"#cover\">返回顶部</a></li>\n\t</div>\n\n\t<hr>\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\n</body>\n\t<script type=\"text/javascript\">\n\t\t// 百度地图API功能\n\t\tvar map = new BMap.Map(\"l-map\");\n\t\tmap.centerAndZoom(new BMap.Point(118.804381,31.976318), 12);\n\n\t\tvar transit = new BMap.TransitRoute(map, {\n\t\t\trenderOptions: {map: map, panel: \"r-result\"}\n\t\t});\n\t\ttransit.search(\"南京南站\", \"南京市江宁区唐老鸭大酒店\");\n\t</script>\n\t\n</html>\n","site":{"data":{}},"excerpt":"","more":"<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n\t<title>Welcome to our wedding!</title>\n\t<style type=\"text/css\">\n\t\tbody, html{\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tmargin:0;\n\t\t\tfont-family:\"微软雅黑\";\n\t\t}\n\t\t#l-map{\n\t\t\theight:300px;\n\t\t\twidth:100%;\n/*\t\t\tmargin-left: 15%;\n\t\t\tmargin-top: 5%;*/\n\t\t}\n\t\t#r-result,#r-result table{\n\t\t\twidth:100%;\n\t\t\tfont-size:12px;\n\t\t\t/*margin-left: 15%;*/\n\t\t}\n\t\t#cover {\n\t\t\tmargin-left: -5%;\n\t\t\tmargin-bottom: 10px;\n\t\t}\n\n\t\t.pic {\n\t\t\tmargin: 10px;\n\t\t}\n\n\t\t/*#r-result table {\n\t\t\tmargin-left: 0;\n\t\t}*/\n\n\t</style>\n\t<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=E577a29e33bc8df7619f6c364501fd09\"></script>\n\t<title>展示公交换乘的结果面板</title>\n</head>\n<body>\n\t<div>\n\t\t<div id=\"cover\">\n\t\t\t<ul>\n\t\t\t\t<li><a href=\"#invitation\">请柬</a></li>\n\t\t\t\t<li><a href=\"#l-map\">地图</a></li>\n\t\t\t\t<li><a href=\"#pics\">图片Show</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<h2>请柬：</h2>\n\t\t<div id=\"invitation\">\n\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eykb39k8ekj20rh0gtq7b.jpg\" style=\"width: 100%\">\n\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyletlnzxlg20sg0i7n1v.gif\" style=\"width: 100%\">\n\t\t\t<p>\n\t\t\t\t关键词再次强调：<b>2016年1月1日 南京市江宁区唐老鸭大酒店 中午12点 </b>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t路线信息请下拉。\n\t\t\t</p>\n\t\t</div>\n\t\t<h2>地图：</h2>\n\t\t<p>\n\t\t\t下述地图起点从南京南站起，s1机场线到翔宇南路下，地铁口3,4号口出，转861路到横溪站下往前步行150米左右即达。（遇十字路口左转）耗时大概在45分钟左右。\n\t\t</p>\n\t\t<p>\n\t\t\ts1线运营时间：<b>6：00 - 22:00</b> ；861路运营时间：<b>6:00 - 21:20</b>\n\t\t</p>\n\t\t<div id=\"l-map\" name=\"map\"></div>\n\t\t<div id=\"r-result\"></div>\n\t\t<h2>图片Show：</h2>\n\t\t<p>没有PS过的哦</p>\n\t\t<div id=\"pics\">\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eylcdzl2qmj24c02w07wt.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eylcdvcfk6j22u04907wr.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t\t<div class=\"pic\">\n\t\t\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eylfvm5m2pj22rj45a1l3.jpg\" style=\"width: 100%\">\n\t\t\t</div>\n\t\t</div>\n\t\t<li><a href=\"#cover\">返回顶部</a></li>\n\t</div>\n\n\t<hr>\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\n</body>\n\t<script type=\"text/javascript\">\n\t\t// 百度地图API功能\n\t\tvar map = new BMap.Map(\"l-map\");\n\t\tmap.centerAndZoom(new BMap.Point(118.804381,31.976318), 12);\n\n\t\tvar transit = new BMap.TransitRoute(map, {\n\t\t\trenderOptions: {map: map, panel: \"r-result\"}\n\t\t});\n\t\ttransit.search(\"南京南站\", \"南京市江宁区唐老鸭大酒店\");\n\t</script>\n\t\n</html>\n","sticky":0},{"title":"iptables端口转发","date":"2015-07-14T12:26:20.000Z","show":true,"_content":"# 背景\n我有个网站部署在我linux服务器的自己账户下，我们都知道，如果要以1000以下的端口启动服务需要root权限。而我又没有root权限。\n所以我的网站应用启动在8090端口上，然而访问的时候url带端口的方式看起来很山寨，很土贼，能不能不带端口访问到我的服务呢？\n\n# iptables端口转发\n使用linux的iptables可以设置端口转发，于是百度查了下，可惜试了很多条都没有生效。于是将我尝试可用的做法记录已备忘。\n\n<!--more-->\n\n- 机器环境\n`uname -a`\n> Linux xxx(mac name) 2.6.32-220.23.2.ali878.el6.x86_64 #1 SMP Mon Jan 28 17:12:52 CST 2013 x86_64 x86_64 x86_64 GNU/Linux\n\n- 查看当前iptables状态\n`sudo service iptables status`\n> Chain PREROUTING (policy ACCEPT)\n>\n> Chain POSTROUTING (policy ACCEPT)\n> num  target     prot opt source               destination         \n>\n> Chain OUTPUT (policy ACCEPT)\n> num  target     prot opt source               destination        \n\n- 配置端口转发\n将本机80端口的访问请求转发到8090端口上\n`sudo /sbin/iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8090`\n\n- 保存配置\n`sudo service iptables save`\n> iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]\n\n- 重启iptables[可能不需要，确保]\n`sudo service iptables restart`\n> Flushing firewall rules:                                   [  OK  ]\n> Setting chains to policy ACCEPT: nat                       [  OK  ]\n> Unloading iptables modules:                                [  OK  ]\n> Applying iptables firewall rules:                          [  OK  ]\n\n- 再次查看当前iptables状态\n确认是否多了下面这条内容：\n> Table: nat\n>Chain PREROUTING (policy ACCEPT)\n> num  target     prot opt source               destination         \n> 1    REDIRECT   tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpt:80 redir ports 8090 \n\n\n试试看是不是可以不加端口访问了呢？\n","source":"_posts/iptables.md","raw":"title: iptables端口转发\ndate: 2015-07-14 20:26:20\ntags: [iptables,端口转发]\ncategories: 技术人生\nshow: true\n---\n# 背景\n我有个网站部署在我linux服务器的自己账户下，我们都知道，如果要以1000以下的端口启动服务需要root权限。而我又没有root权限。\n所以我的网站应用启动在8090端口上，然而访问的时候url带端口的方式看起来很山寨，很土贼，能不能不带端口访问到我的服务呢？\n\n# iptables端口转发\n使用linux的iptables可以设置端口转发，于是百度查了下，可惜试了很多条都没有生效。于是将我尝试可用的做法记录已备忘。\n\n<!--more-->\n\n- 机器环境\n`uname -a`\n> Linux xxx(mac name) 2.6.32-220.23.2.ali878.el6.x86_64 #1 SMP Mon Jan 28 17:12:52 CST 2013 x86_64 x86_64 x86_64 GNU/Linux\n\n- 查看当前iptables状态\n`sudo service iptables status`\n> Chain PREROUTING (policy ACCEPT)\n>\n> Chain POSTROUTING (policy ACCEPT)\n> num  target     prot opt source               destination         \n>\n> Chain OUTPUT (policy ACCEPT)\n> num  target     prot opt source               destination        \n\n- 配置端口转发\n将本机80端口的访问请求转发到8090端口上\n`sudo /sbin/iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8090`\n\n- 保存配置\n`sudo service iptables save`\n> iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]\n\n- 重启iptables[可能不需要，确保]\n`sudo service iptables restart`\n> Flushing firewall rules:                                   [  OK  ]\n> Setting chains to policy ACCEPT: nat                       [  OK  ]\n> Unloading iptables modules:                                [  OK  ]\n> Applying iptables firewall rules:                          [  OK  ]\n\n- 再次查看当前iptables状态\n确认是否多了下面这条内容：\n> Table: nat\n>Chain PREROUTING (policy ACCEPT)\n> num  target     prot opt source               destination         \n> 1    REDIRECT   tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpt:80 redir ports 8090 \n\n\n试试看是不是可以不加端口访问了呢？\n","slug":"iptables","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzux002xfnpvxaap3irx","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>我有个网站部署在我linux服务器的自己账户下，我们都知道，如果要以1000以下的端口启动服务需要root权限。而我又没有root权限。<br>所以我的网站应用启动在8090端口上，然而访问的时候url带端口的方式看起来很山寨，很土贼，能不能不带端口访问到我的服务呢？</p>\n<h1 id=\"iptables端口转发\"><a href=\"#iptables端口转发\" class=\"headerlink\" title=\"iptables端口转发\"></a>iptables端口转发</h1><p>使用linux的iptables可以设置端口转发，于是百度查了下，可惜试了很多条都没有生效。于是将我尝试可用的做法记录已备忘。</p>\n<a id=\"more\"></a>\n<ul>\n<li><p>机器环境<br><code>uname -a</code></p>\n<blockquote>\n<p>Linux xxx(mac name) 2.6.32-220.23.2.ali878.el6.x86_64 #1 SMP Mon Jan 28 17:12:52 CST 2013 x86_64 x86_64 x86_64 GNU/Linux</p>\n</blockquote>\n</li>\n<li><p>查看当前iptables状态<br><code>sudo service iptables status</code></p>\n<blockquote>\n<p>Chain PREROUTING (policy ACCEPT)</p>\n<p>Chain POSTROUTING (policy ACCEPT)<br>num  target     prot opt source               destination         </p>\n<p>Chain OUTPUT (policy ACCEPT)<br>num  target     prot opt source               destination        </p>\n</blockquote>\n</li>\n<li><p>配置端口转发<br>将本机80端口的访问请求转发到8090端口上<br><code>sudo /sbin/iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8090</code></p>\n</li>\n<li><p>保存配置<br><code>sudo service iptables save</code></p>\n<blockquote>\n<p>iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]</p>\n</blockquote>\n</li>\n<li><p>重启iptables[可能不需要，确保]<br><code>sudo service iptables restart</code></p>\n<blockquote>\n<p>Flushing firewall rules:                                   [  OK  ]<br>Setting chains to policy ACCEPT: nat                       [  OK  ]<br>Unloading iptables modules:                                [  OK  ]<br>Applying iptables firewall rules:                          [  OK  ]</p>\n</blockquote>\n</li>\n<li><p>再次查看当前iptables状态<br>确认是否多了下面这条内容：</p>\n<blockquote>\n<p>Table: nat<br>Chain PREROUTING (policy ACCEPT)<br>num  target     prot opt source               destination<br>1    REDIRECT   tcp  –  0.0.0.0/0            0.0.0.0/0           tcp dpt:80 redir ports 8090 </p>\n</blockquote>\n</li>\n</ul>\n<p>试试看是不是可以不加端口访问了呢？</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>我有个网站部署在我linux服务器的自己账户下，我们都知道，如果要以1000以下的端口启动服务需要root权限。而我又没有root权限。<br>所以我的网站应用启动在8090端口上，然而访问的时候url带端口的方式看起来很山寨，很土贼，能不能不带端口访问到我的服务呢？</p>\n<h1 id=\"iptables端口转发\"><a href=\"#iptables端口转发\" class=\"headerlink\" title=\"iptables端口转发\"></a>iptables端口转发</h1><p>使用linux的iptables可以设置端口转发，于是百度查了下，可惜试了很多条都没有生效。于是将我尝试可用的做法记录已备忘。</p>","more":"<ul>\n<li><p>机器环境<br><code>uname -a</code></p>\n<blockquote>\n<p>Linux xxx(mac name) 2.6.32-220.23.2.ali878.el6.x86_64 #1 SMP Mon Jan 28 17:12:52 CST 2013 x86_64 x86_64 x86_64 GNU/Linux</p>\n</blockquote>\n</li>\n<li><p>查看当前iptables状态<br><code>sudo service iptables status</code></p>\n<blockquote>\n<p>Chain PREROUTING (policy ACCEPT)</p>\n<p>Chain POSTROUTING (policy ACCEPT)<br>num  target     prot opt source               destination         </p>\n<p>Chain OUTPUT (policy ACCEPT)<br>num  target     prot opt source               destination        </p>\n</blockquote>\n</li>\n<li><p>配置端口转发<br>将本机80端口的访问请求转发到8090端口上<br><code>sudo /sbin/iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8090</code></p>\n</li>\n<li><p>保存配置<br><code>sudo service iptables save</code></p>\n<blockquote>\n<p>iptables: Saving firewall rules to /etc/sysconfig/iptables:[  OK  ]</p>\n</blockquote>\n</li>\n<li><p>重启iptables[可能不需要，确保]<br><code>sudo service iptables restart</code></p>\n<blockquote>\n<p>Flushing firewall rules:                                   [  OK  ]<br>Setting chains to policy ACCEPT: nat                       [  OK  ]<br>Unloading iptables modules:                                [  OK  ]<br>Applying iptables firewall rules:                          [  OK  ]</p>\n</blockquote>\n</li>\n<li><p>再次查看当前iptables状态<br>确认是否多了下面这条内容：</p>\n<blockquote>\n<p>Table: nat<br>Chain PREROUTING (policy ACCEPT)<br>num  target     prot opt source               destination<br>1    REDIRECT   tcp  –  0.0.0.0/0            0.0.0.0/0           tcp dpt:80 redir ports 8090 </p>\n</blockquote>\n</li>\n</ul>\n<p>试试看是不是可以不加端口访问了呢？</p>","sticky":0},{"title":"使用jenkins构建自动化任务","show":true,"date":"2016-03-05T07:11:33.000Z","photos":["http://www.searchsoa.com.cn/upload/article/2011/2011-07-26-13-40-50.gif"],"_content":"#### 背景\njenkins是一个基于Java开发的持续集成工具，通常用于监控持续重复的工作，用于自动化测试领域再合适不过了。\n本文是我利用jnekins来进行任务分发而做的一篇关于jenkins的学习使用初步入门。\n通常在进行简单的远程任务调度上，我们可以使用`ssh`进行远程操作运行命令，但一旦机器增加（多机器调度）或者运行命令复杂（多参数任务）时，`ssh`就显得不那么方便了：命令写起来麻烦，参数的各种转义也很容易出错，可读性变差。这时候通过jenkins来管理多机器调度就显得很方便了。\n\n#### 安装\n###### 1. [依赖及安装](https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins)\n以下以`Red Hat`发行版为例，其他安装方式可以戳标题链接查看\njenkins依赖Java7及以上版本，可以通过[java官网](http://www.java.com/en/download/)安装也可以通过命令行安装\n以`yum`安装为例\n`sudo yum install java`\n\n然后安装jenkins：\n```sh\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nsudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\nsudo yum install jenkins\n```\n\n<!-- more -->\n\n###### 2. 服务启停\n安装完毕启动服务：\n```sh\nsudo service jenkins start/stop/restart\nsudo chkconfig jenkins on          //添加开机启动\n```\n如果`Java`安装没有问题，这时候应该提示`Starting Jenkins OK`\n\n服务启动后，打开`http://<serverhost>:<port>`即可看到jenkins的界面了，默认端口是`8080`。\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1f1m12mt99wj21hh0hbadq.jpg)\n\n###### 3. 安装语言包汉化界面\n毕竟不是学英语，汉化一下还是有必要的。\n打开jenkins页面，进入`Manage Jenkins`->`Manage Plugins`安装下语言插件，搜索并安装`Locale Plugin`即可。\n安装完毕后回到`Manage Jenkins`->`Congigure System`，在`Locale`设置项下将`Default Language`值设置为`zh_CN`。\n\n#### 节点管理\n安装完成后，jenkins的安装机器默认为`master`节点，此外我们还可以给jenkins定义额外的节点，这样就可以让jenkins将任务分发到不同的机器上去。\n进入系统管理->管理节点->新建节点\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1f1m1hjz30kj21ha0lodi4.jpg)\n在上图中的`Host`处填写要绑定的节点`IP`，`name`处为节点定义名字，设置jenkins的远程工作目录，并设置任务的并发数目（`# of executors`）。\n添加完成以后如下图所示：\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1f1m1ljf2u5j216v070t9l.jpg)\n\n#### 创建任务\n返回jenkins页面，点击新建任务，弹出的选项中选择合适的项目类型，以自由风格为例：\n大部分待填项都很明了，简单说明几处：\n源码管理部分，可以设置一个代码库，一旦检测到代码库有变动则自动触发一次构建。支持`cvs`和`svn`不支持`git`。\n\n如果需要严格设置任务需要在哪个机器上运行，可以勾选`Restrict where this project can be run`，然后在`Label Expression`中填入节点管理中给节点设置的`Label`名。即当时填写的`Name`字段。\n\n我的需求是让jenkins分发并运行一段`shell`脚本，因此在`增加构建步骤`中添加`Excute shell`，在`Command`中填入我要运行的`shell`命令。由于脚本需要接收很多参数，因此还要勾选`参数化构建过程`，并`添加参数`选择`String parameter`，填写好参数名字并可以给参数设置默认值，在运行的命令中可以使用`${name}`方式调用传递进来的参数。\n\n当然，还可以`增加构建后操作步骤`，如`收集运行报告`，`发送通知邮件`等功能，jenkins都提供了相应的插件来支持。\n\n#### jenkins API\n至此，一个jenkins任务就配置成功了，点击立即构建就可以run起来了。网上很多的教程文章也就到此为止了。。作为使用svn来作为触发器的当然是没问题了，而我并没有使用源码管理器，那么要怎么触发jenkins进行构建呢？我需要的是可以使用命令行的方式进行触发。好在jenkins还提供了相当强大的`REST API`。\n\n首先，让我们来看一下如何通过命令行方式触发一个要接收参数的jenkins任务。\n```html\nhttp://<serverhost>:<port>/job/<jobName>/buildWithParameters?<key=value>&<key=value>...\n```\n发送一个上述`http`请求即可触发一次jenkins构建了。\n\n然后，如果我们需要自动获取此次构建的日志，那么只有获取了此次构建的id号才行，jenkins任务每次构建，id都会自增一次，如何才能获取到呢？\n```html\nhttp://<serverhost>:<port>/job/<jobName>/api/json\n```\n请求上述`URL`，我们可以看到关于jenkins的很多信息：\n![](http://ww1.sinaimg.cn/mw690/62d95157jw9f1m2y61besj20hc0lhtbg.jpg)\n\n`nextBuildNumber`即为下一次构建的id号。知道了构建号，再通过\n```html\nhttp://<serverhost>:<port>/job/<jobName>/<buildNumber>/api/json\n```\n我们可以看到关于本次构建的很多信息：\n![](http://ww1.sinaimg.cn/mw690/62d95157jw9f1m32trbbuj20fk0glac0.jpg)\n`duration`:运行时间\n`result`：运行状态\n\n有了上述接口，我们通过自动化手段触发以及轮询任务状态都不是问题了。\n\n有的人也许会觉得`记住API也太不人道了 && 如果我不用json接口怎么办`，其实在jenkins的页面上就提供了，看看右下角：\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f1m3aib1ovj20cq01jwee.jpg)\n点开就是API页面：\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1f1m3br27n5j20w40dd410.jpg)\n不但有`json`的，还有`XML`和`python`的，是不是很良心？\n\n\n","source":"_posts/jenkins-autobuild.md","raw":"title: 使用jenkins构建自动化任务\nshow: true\ndate: 2016-03-05 15:11:33\ntags: [jenkins]\ncategories: 技术人生\nphotos:\n    - http://www.searchsoa.com.cn/upload/article/2011/2011-07-26-13-40-50.gif\n---\n#### 背景\njenkins是一个基于Java开发的持续集成工具，通常用于监控持续重复的工作，用于自动化测试领域再合适不过了。\n本文是我利用jnekins来进行任务分发而做的一篇关于jenkins的学习使用初步入门。\n通常在进行简单的远程任务调度上，我们可以使用`ssh`进行远程操作运行命令，但一旦机器增加（多机器调度）或者运行命令复杂（多参数任务）时，`ssh`就显得不那么方便了：命令写起来麻烦，参数的各种转义也很容易出错，可读性变差。这时候通过jenkins来管理多机器调度就显得很方便了。\n\n#### 安装\n###### 1. [依赖及安装](https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins)\n以下以`Red Hat`发行版为例，其他安装方式可以戳标题链接查看\njenkins依赖Java7及以上版本，可以通过[java官网](http://www.java.com/en/download/)安装也可以通过命令行安装\n以`yum`安装为例\n`sudo yum install java`\n\n然后安装jenkins：\n```sh\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nsudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\nsudo yum install jenkins\n```\n\n<!-- more -->\n\n###### 2. 服务启停\n安装完毕启动服务：\n```sh\nsudo service jenkins start/stop/restart\nsudo chkconfig jenkins on          //添加开机启动\n```\n如果`Java`安装没有问题，这时候应该提示`Starting Jenkins OK`\n\n服务启动后，打开`http://<serverhost>:<port>`即可看到jenkins的界面了，默认端口是`8080`。\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1f1m12mt99wj21hh0hbadq.jpg)\n\n###### 3. 安装语言包汉化界面\n毕竟不是学英语，汉化一下还是有必要的。\n打开jenkins页面，进入`Manage Jenkins`->`Manage Plugins`安装下语言插件，搜索并安装`Locale Plugin`即可。\n安装完毕后回到`Manage Jenkins`->`Congigure System`，在`Locale`设置项下将`Default Language`值设置为`zh_CN`。\n\n#### 节点管理\n安装完成后，jenkins的安装机器默认为`master`节点，此外我们还可以给jenkins定义额外的节点，这样就可以让jenkins将任务分发到不同的机器上去。\n进入系统管理->管理节点->新建节点\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1f1m1hjz30kj21ha0lodi4.jpg)\n在上图中的`Host`处填写要绑定的节点`IP`，`name`处为节点定义名字，设置jenkins的远程工作目录，并设置任务的并发数目（`# of executors`）。\n添加完成以后如下图所示：\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1f1m1ljf2u5j216v070t9l.jpg)\n\n#### 创建任务\n返回jenkins页面，点击新建任务，弹出的选项中选择合适的项目类型，以自由风格为例：\n大部分待填项都很明了，简单说明几处：\n源码管理部分，可以设置一个代码库，一旦检测到代码库有变动则自动触发一次构建。支持`cvs`和`svn`不支持`git`。\n\n如果需要严格设置任务需要在哪个机器上运行，可以勾选`Restrict where this project can be run`，然后在`Label Expression`中填入节点管理中给节点设置的`Label`名。即当时填写的`Name`字段。\n\n我的需求是让jenkins分发并运行一段`shell`脚本，因此在`增加构建步骤`中添加`Excute shell`，在`Command`中填入我要运行的`shell`命令。由于脚本需要接收很多参数，因此还要勾选`参数化构建过程`，并`添加参数`选择`String parameter`，填写好参数名字并可以给参数设置默认值，在运行的命令中可以使用`${name}`方式调用传递进来的参数。\n\n当然，还可以`增加构建后操作步骤`，如`收集运行报告`，`发送通知邮件`等功能，jenkins都提供了相应的插件来支持。\n\n#### jenkins API\n至此，一个jenkins任务就配置成功了，点击立即构建就可以run起来了。网上很多的教程文章也就到此为止了。。作为使用svn来作为触发器的当然是没问题了，而我并没有使用源码管理器，那么要怎么触发jenkins进行构建呢？我需要的是可以使用命令行的方式进行触发。好在jenkins还提供了相当强大的`REST API`。\n\n首先，让我们来看一下如何通过命令行方式触发一个要接收参数的jenkins任务。\n```html\nhttp://<serverhost>:<port>/job/<jobName>/buildWithParameters?<key=value>&<key=value>...\n```\n发送一个上述`http`请求即可触发一次jenkins构建了。\n\n然后，如果我们需要自动获取此次构建的日志，那么只有获取了此次构建的id号才行，jenkins任务每次构建，id都会自增一次，如何才能获取到呢？\n```html\nhttp://<serverhost>:<port>/job/<jobName>/api/json\n```\n请求上述`URL`，我们可以看到关于jenkins的很多信息：\n![](http://ww1.sinaimg.cn/mw690/62d95157jw9f1m2y61besj20hc0lhtbg.jpg)\n\n`nextBuildNumber`即为下一次构建的id号。知道了构建号，再通过\n```html\nhttp://<serverhost>:<port>/job/<jobName>/<buildNumber>/api/json\n```\n我们可以看到关于本次构建的很多信息：\n![](http://ww1.sinaimg.cn/mw690/62d95157jw9f1m32trbbuj20fk0glac0.jpg)\n`duration`:运行时间\n`result`：运行状态\n\n有了上述接口，我们通过自动化手段触发以及轮询任务状态都不是问题了。\n\n有的人也许会觉得`记住API也太不人道了 && 如果我不用json接口怎么办`，其实在jenkins的页面上就提供了，看看右下角：\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f1m3aib1ovj20cq01jwee.jpg)\n点开就是API页面：\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1f1m3br27n5j20w40dd410.jpg)\n不但有`json`的，还有`XML`和`python`的，是不是很良心？\n\n\n","slug":"jenkins-autobuild","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","link":"","_id":"cjnijyzv70031fnpv34mr23vy","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>jenkins是一个基于Java开发的持续集成工具，通常用于监控持续重复的工作，用于自动化测试领域再合适不过了。<br>本文是我利用jnekins来进行任务分发而做的一篇关于jenkins的学习使用初步入门。<br>通常在进行简单的远程任务调度上，我们可以使用<code>ssh</code>进行远程操作运行命令，但一旦机器增加（多机器调度）或者运行命令复杂（多参数任务）时，<code>ssh</code>就显得不那么方便了：命令写起来麻烦，参数的各种转义也很容易出错，可读性变差。这时候通过jenkins来管理多机器调度就显得很方便了。</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><h6 id=\"1-依赖及安装\"><a href=\"#1-依赖及安装\" class=\"headerlink\" title=\"1. 依赖及安装\"></a>1. <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins\" target=\"_blank\" rel=\"noopener\">依赖及安装</a></h6><p>以下以<code>Red Hat</code>发行版为例，其他安装方式可以戳标题链接查看<br>jenkins依赖Java7及以上版本，可以通过<a href=\"http://www.java.com/en/download/\" target=\"_blank\" rel=\"noopener\">java官网</a>安装也可以通过命令行安装<br>以<code>yum</code>安装为例<br><code>sudo yum install java</code></p>\n<p>然后安装jenkins：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo</span><br><span class=\"line\">sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key</span><br><span class=\"line\">sudo yum install jenkins</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h6 id=\"2-服务启停\"><a href=\"#2-服务启停\" class=\"headerlink\" title=\"2. 服务启停\"></a>2. 服务启停</h6><p>安装完毕启动服务：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service jenkins start/stop/restart</span><br><span class=\"line\">sudo chkconfig jenkins on          //添加开机启动</span><br></pre></td></tr></table></figure></p>\n<p>如果<code>Java</code>安装没有问题，这时候应该提示<code>Starting Jenkins OK</code></p>\n<p>服务启动后，打开<code>http://&lt;serverhost&gt;:&lt;port&gt;</code>即可看到jenkins的界面了，默认端口是<code>8080</code>。<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1f1m12mt99wj21hh0hbadq.jpg\" alt=\"\"></p>\n<h6 id=\"3-安装语言包汉化界面\"><a href=\"#3-安装语言包汉化界面\" class=\"headerlink\" title=\"3. 安装语言包汉化界面\"></a>3. 安装语言包汉化界面</h6><p>毕竟不是学英语，汉化一下还是有必要的。<br>打开jenkins页面，进入<code>Manage Jenkins</code>-&gt;<code>Manage Plugins</code>安装下语言插件，搜索并安装<code>Locale Plugin</code>即可。<br>安装完毕后回到<code>Manage Jenkins</code>-&gt;<code>Congigure System</code>，在<code>Locale</code>设置项下将<code>Default Language</code>值设置为<code>zh_CN</code>。</p>\n<h4 id=\"节点管理\"><a href=\"#节点管理\" class=\"headerlink\" title=\"节点管理\"></a>节点管理</h4><p>安装完成后，jenkins的安装机器默认为<code>master</code>节点，此外我们还可以给jenkins定义额外的节点，这样就可以让jenkins将任务分发到不同的机器上去。<br>进入系统管理-&gt;管理节点-&gt;新建节点<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1f1m1hjz30kj21ha0lodi4.jpg\" alt=\"\"><br>在上图中的<code>Host</code>处填写要绑定的节点<code>IP</code>，<code>name</code>处为节点定义名字，设置jenkins的远程工作目录，并设置任务的并发数目（<code># of executors</code>）。<br>添加完成以后如下图所示：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1f1m1ljf2u5j216v070t9l.jpg\" alt=\"\"></p>\n<h4 id=\"创建任务\"><a href=\"#创建任务\" class=\"headerlink\" title=\"创建任务\"></a>创建任务</h4><p>返回jenkins页面，点击新建任务，弹出的选项中选择合适的项目类型，以自由风格为例：<br>大部分待填项都很明了，简单说明几处：<br>源码管理部分，可以设置一个代码库，一旦检测到代码库有变动则自动触发一次构建。支持<code>cvs</code>和<code>svn</code>不支持<code>git</code>。</p>\n<p>如果需要严格设置任务需要在哪个机器上运行，可以勾选<code>Restrict where this project can be run</code>，然后在<code>Label Expression</code>中填入节点管理中给节点设置的<code>Label</code>名。即当时填写的<code>Name</code>字段。</p>\n<p>我的需求是让jenkins分发并运行一段<code>shell</code>脚本，因此在<code>增加构建步骤</code>中添加<code>Excute shell</code>，在<code>Command</code>中填入我要运行的<code>shell</code>命令。由于脚本需要接收很多参数，因此还要勾选<code>参数化构建过程</code>，并<code>添加参数</code>选择<code>String parameter</code>，填写好参数名字并可以给参数设置默认值，在运行的命令中可以使用<code>${name}</code>方式调用传递进来的参数。</p>\n<p>当然，还可以<code>增加构建后操作步骤</code>，如<code>收集运行报告</code>，<code>发送通知邮件</code>等功能，jenkins都提供了相应的插件来支持。</p>\n<h4 id=\"jenkins-API\"><a href=\"#jenkins-API\" class=\"headerlink\" title=\"jenkins API\"></a>jenkins API</h4><p>至此，一个jenkins任务就配置成功了，点击立即构建就可以run起来了。网上很多的教程文章也就到此为止了。。作为使用svn来作为触发器的当然是没问题了，而我并没有使用源码管理器，那么要怎么触发jenkins进行构建呢？我需要的是可以使用命令行的方式进行触发。好在jenkins还提供了相当强大的<code>REST API</code>。</p>\n<p>首先，让我们来看一下如何通过命令行方式触发一个要接收参数的jenkins任务。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://<span class=\"tag\">&lt;<span class=\"name\">serverhost</span>&gt;</span>:<span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>/job/<span class=\"tag\">&lt;<span class=\"name\">jobName</span>&gt;</span>/buildWithParameters?<span class=\"tag\">&lt;<span class=\"name\">key=value</span>&gt;</span>&amp;<span class=\"tag\">&lt;<span class=\"name\">key=value</span>&gt;</span>...</span><br></pre></td></tr></table></figure></p>\n<p>发送一个上述<code>http</code>请求即可触发一次jenkins构建了。</p>\n<p>然后，如果我们需要自动获取此次构建的日志，那么只有获取了此次构建的id号才行，jenkins任务每次构建，id都会自增一次，如何才能获取到呢？<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://<span class=\"tag\">&lt;<span class=\"name\">serverhost</span>&gt;</span>:<span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>/job/<span class=\"tag\">&lt;<span class=\"name\">jobName</span>&gt;</span>/api/json</span><br></pre></td></tr></table></figure></p>\n<p>请求上述<code>URL</code>，我们可以看到关于jenkins的很多信息：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157jw9f1m2y61besj20hc0lhtbg.jpg\" alt=\"\"></p>\n<p><code>nextBuildNumber</code>即为下一次构建的id号。知道了构建号，再通过<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://<span class=\"tag\">&lt;<span class=\"name\">serverhost</span>&gt;</span>:<span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>/job/<span class=\"tag\">&lt;<span class=\"name\">jobName</span>&gt;</span>/<span class=\"tag\">&lt;<span class=\"name\">buildNumber</span>&gt;</span>/api/json</span><br></pre></td></tr></table></figure></p>\n<p>我们可以看到关于本次构建的很多信息：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157jw9f1m32trbbuj20fk0glac0.jpg\" alt=\"\"><br><code>duration</code>:运行时间<br><code>result</code>：运行状态</p>\n<p>有了上述接口，我们通过自动化手段触发以及轮询任务状态都不是问题了。</p>\n<p>有的人也许会觉得<code>记住API也太不人道了 &amp;&amp; 如果我不用json接口怎么办</code>，其实在jenkins的页面上就提供了，看看右下角：<br><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f1m3aib1ovj20cq01jwee.jpg\" alt=\"\"><br>点开就是API页面：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1f1m3br27n5j20w40dd410.jpg\" alt=\"\"><br>不但有<code>json</code>的，还有<code>XML</code>和<code>python</code>的，是不是很良心？</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>jenkins是一个基于Java开发的持续集成工具，通常用于监控持续重复的工作，用于自动化测试领域再合适不过了。<br>本文是我利用jnekins来进行任务分发而做的一篇关于jenkins的学习使用初步入门。<br>通常在进行简单的远程任务调度上，我们可以使用<code>ssh</code>进行远程操作运行命令，但一旦机器增加（多机器调度）或者运行命令复杂（多参数任务）时，<code>ssh</code>就显得不那么方便了：命令写起来麻烦，参数的各种转义也很容易出错，可读性变差。这时候通过jenkins来管理多机器调度就显得很方便了。</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><h6 id=\"1-依赖及安装\"><a href=\"#1-依赖及安装\" class=\"headerlink\" title=\"1. 依赖及安装\"></a>1. <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins\" target=\"_blank\" rel=\"noopener\">依赖及安装</a></h6><p>以下以<code>Red Hat</code>发行版为例，其他安装方式可以戳标题链接查看<br>jenkins依赖Java7及以上版本，可以通过<a href=\"http://www.java.com/en/download/\" target=\"_blank\" rel=\"noopener\">java官网</a>安装也可以通过命令行安装<br>以<code>yum</code>安装为例<br><code>sudo yum install java</code></p>\n<p>然后安装jenkins：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo</span><br><span class=\"line\">sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key</span><br><span class=\"line\">sudo yum install jenkins</span><br></pre></td></tr></table></figure></p>","more":"<h6 id=\"2-服务启停\"><a href=\"#2-服务启停\" class=\"headerlink\" title=\"2. 服务启停\"></a>2. 服务启停</h6><p>安装完毕启动服务：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service jenkins start/stop/restart</span><br><span class=\"line\">sudo chkconfig jenkins on          //添加开机启动</span><br></pre></td></tr></table></figure></p>\n<p>如果<code>Java</code>安装没有问题，这时候应该提示<code>Starting Jenkins OK</code></p>\n<p>服务启动后，打开<code>http://&lt;serverhost&gt;:&lt;port&gt;</code>即可看到jenkins的界面了，默认端口是<code>8080</code>。<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1f1m12mt99wj21hh0hbadq.jpg\" alt=\"\"></p>\n<h6 id=\"3-安装语言包汉化界面\"><a href=\"#3-安装语言包汉化界面\" class=\"headerlink\" title=\"3. 安装语言包汉化界面\"></a>3. 安装语言包汉化界面</h6><p>毕竟不是学英语，汉化一下还是有必要的。<br>打开jenkins页面，进入<code>Manage Jenkins</code>-&gt;<code>Manage Plugins</code>安装下语言插件，搜索并安装<code>Locale Plugin</code>即可。<br>安装完毕后回到<code>Manage Jenkins</code>-&gt;<code>Congigure System</code>，在<code>Locale</code>设置项下将<code>Default Language</code>值设置为<code>zh_CN</code>。</p>\n<h4 id=\"节点管理\"><a href=\"#节点管理\" class=\"headerlink\" title=\"节点管理\"></a>节点管理</h4><p>安装完成后，jenkins的安装机器默认为<code>master</code>节点，此外我们还可以给jenkins定义额外的节点，这样就可以让jenkins将任务分发到不同的机器上去。<br>进入系统管理-&gt;管理节点-&gt;新建节点<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1f1m1hjz30kj21ha0lodi4.jpg\" alt=\"\"><br>在上图中的<code>Host</code>处填写要绑定的节点<code>IP</code>，<code>name</code>处为节点定义名字，设置jenkins的远程工作目录，并设置任务的并发数目（<code># of executors</code>）。<br>添加完成以后如下图所示：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1f1m1ljf2u5j216v070t9l.jpg\" alt=\"\"></p>\n<h4 id=\"创建任务\"><a href=\"#创建任务\" class=\"headerlink\" title=\"创建任务\"></a>创建任务</h4><p>返回jenkins页面，点击新建任务，弹出的选项中选择合适的项目类型，以自由风格为例：<br>大部分待填项都很明了，简单说明几处：<br>源码管理部分，可以设置一个代码库，一旦检测到代码库有变动则自动触发一次构建。支持<code>cvs</code>和<code>svn</code>不支持<code>git</code>。</p>\n<p>如果需要严格设置任务需要在哪个机器上运行，可以勾选<code>Restrict where this project can be run</code>，然后在<code>Label Expression</code>中填入节点管理中给节点设置的<code>Label</code>名。即当时填写的<code>Name</code>字段。</p>\n<p>我的需求是让jenkins分发并运行一段<code>shell</code>脚本，因此在<code>增加构建步骤</code>中添加<code>Excute shell</code>，在<code>Command</code>中填入我要运行的<code>shell</code>命令。由于脚本需要接收很多参数，因此还要勾选<code>参数化构建过程</code>，并<code>添加参数</code>选择<code>String parameter</code>，填写好参数名字并可以给参数设置默认值，在运行的命令中可以使用<code>${name}</code>方式调用传递进来的参数。</p>\n<p>当然，还可以<code>增加构建后操作步骤</code>，如<code>收集运行报告</code>，<code>发送通知邮件</code>等功能，jenkins都提供了相应的插件来支持。</p>\n<h4 id=\"jenkins-API\"><a href=\"#jenkins-API\" class=\"headerlink\" title=\"jenkins API\"></a>jenkins API</h4><p>至此，一个jenkins任务就配置成功了，点击立即构建就可以run起来了。网上很多的教程文章也就到此为止了。。作为使用svn来作为触发器的当然是没问题了，而我并没有使用源码管理器，那么要怎么触发jenkins进行构建呢？我需要的是可以使用命令行的方式进行触发。好在jenkins还提供了相当强大的<code>REST API</code>。</p>\n<p>首先，让我们来看一下如何通过命令行方式触发一个要接收参数的jenkins任务。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://<span class=\"tag\">&lt;<span class=\"name\">serverhost</span>&gt;</span>:<span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>/job/<span class=\"tag\">&lt;<span class=\"name\">jobName</span>&gt;</span>/buildWithParameters?<span class=\"tag\">&lt;<span class=\"name\">key=value</span>&gt;</span>&amp;<span class=\"tag\">&lt;<span class=\"name\">key=value</span>&gt;</span>...</span><br></pre></td></tr></table></figure></p>\n<p>发送一个上述<code>http</code>请求即可触发一次jenkins构建了。</p>\n<p>然后，如果我们需要自动获取此次构建的日志，那么只有获取了此次构建的id号才行，jenkins任务每次构建，id都会自增一次，如何才能获取到呢？<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://<span class=\"tag\">&lt;<span class=\"name\">serverhost</span>&gt;</span>:<span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>/job/<span class=\"tag\">&lt;<span class=\"name\">jobName</span>&gt;</span>/api/json</span><br></pre></td></tr></table></figure></p>\n<p>请求上述<code>URL</code>，我们可以看到关于jenkins的很多信息：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157jw9f1m2y61besj20hc0lhtbg.jpg\" alt=\"\"></p>\n<p><code>nextBuildNumber</code>即为下一次构建的id号。知道了构建号，再通过<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://<span class=\"tag\">&lt;<span class=\"name\">serverhost</span>&gt;</span>:<span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>/job/<span class=\"tag\">&lt;<span class=\"name\">jobName</span>&gt;</span>/<span class=\"tag\">&lt;<span class=\"name\">buildNumber</span>&gt;</span>/api/json</span><br></pre></td></tr></table></figure></p>\n<p>我们可以看到关于本次构建的很多信息：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157jw9f1m32trbbuj20fk0glac0.jpg\" alt=\"\"><br><code>duration</code>:运行时间<br><code>result</code>：运行状态</p>\n<p>有了上述接口，我们通过自动化手段触发以及轮询任务状态都不是问题了。</p>\n<p>有的人也许会觉得<code>记住API也太不人道了 &amp;&amp; 如果我不用json接口怎么办</code>，其实在jenkins的页面上就提供了，看看右下角：<br><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f1m3aib1ovj20cq01jwee.jpg\" alt=\"\"><br>点开就是API页面：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1f1m3br27n5j20w40dd410.jpg\" alt=\"\"><br>不但有<code>json</code>的，还有<code>XML</code>和<code>python</code>的，是不是很良心？</p>","sticky":0},{"title":"深究浏览器长整型数值精度丢失问题","show":true,"date":"2017-07-05T06:06:36.000Z","_content":"\n> `alert(28443422041709109)`会输出什么？\n\n# 背景\n在[上一篇博文](/2017/06/06/js-max-number/)里我记录了一个诡异的前后端数据不一致的问题，最终定位为前端js精度丢失。但只说了原因及结论并没有深入研究这个问题。\n这一篇博文准备在此基础上，深入探寻一番，彻底弄清楚这个问题发生的本质。\n\n# 引子\n让我们先来看几个小问题热热身：\n```\n## js环境下运行,输出结果是什么？\n1. console.log(1 === 1.0);\n\n2. console.log(0.1 + 0.2 === 0.3);\n\n3. console.log(9007199254740992);\n\n4. console.log(9007199254740992 + 1);\n\n5. console.log(9007199254740992 + 2);\n\n6. console.log(9007199254740992 + 3);\n\n7. console.log(9007199254740992 + 4);\n... ...\n```\n浏览器环境下运行下看看是不是有点颠覆了三观？\n\n<!--more-->\n\n# JS数值的基础知识\n在JS中，所有数值都是以64位浮点数形式保存的，所以1和1.0是相同的，是同一个数值。\n浮点数不是精确的数值，也正因为此，`0.1+0.2`才不等于`0.3`。\n\n根据浮点数表示的标准：\n```\n第1位：符号位，0表示正数，1表示负数\n第2-12位：指数部分\n第13-64位：尾数部分（即有效数字）\n```\n符号位决定了正负，指数决定了数值大小，尾数决定了精度。\n\n## 精度范围\n其中有效数字第一位默认总是1，不保存在64位浮点数之中，也就是说有效数字总是`1.xxx..`的形式，最长可能为52位。加上默认的1，js中提供的有效数字最长为53个二进制位。\nJS中数值浮点数表示形式公式为：\n```\n(-1)^符号位 * 1.xxx... * 2^指数位\n```\n\n因此精度最多只能表示到53个二进制位，即`-(2^53 - 1) ~ 2^53`。超过该范围的数值不能被精确表示。\n\n## 数值范围\n指数部分11位，最大值为2047（2^11 - 1），则数值范围为`2^-1023 ~ 2^1024`，超过该范围则无法表示。\n\n# 分析问题\n了解了JS中数值表示的方法后，我们回过头来分析具体的问题。\n引言中`alert(28443422041709109)`为什么会输出`28443422041709108`呢？\n转换为2进制为`1100101000011010010010001000010111111100001101000110100`，这串二进制数字我们使用进制转换工具转换一下可以得到`28443422041709108`，也就是说`28443422041709108`可以精确表示，而`28443422041709109`就不能精确表示了。为什么会这样，我们可以看一个更直观的例子：\n\n让我们看一下引子中的几个问题：\n`9007199254740992`是有效精度范围内最大的数，即2^53，二进制表示为`100...0`，1后面跟53个0。\n`9007199254740992 + 1`则表示为`100...01`，使用浮点数表示法表示时，最后一位的1将由于超出位数被舍去，因此`9007199254740992 + 1`和`9007199254740992`的表示一致，因此也就相等了。\n而`9007199254740992 + 2`则表示为`100..10`，使用浮点数表示法表示时，1被保留下来，因此`9007199254740992 + 2`反而是可以精确表示的。\n\n同样地，`28443422041709108`可以被精确地表示，而`28443422041709109`的最后两位被舍为了0，因此他们的二进制表示是一样的，也就造成了诡异的`28443422041709108 === 28443422041709109`问题。\n\n# 结论&解决方案\n当数值使用浮点数表示法表示精度位数超过53位时，就会存在精度丢失。大整数能够精确表示的上限是`9007199254740992`，超过则可能存在精度丢失。\n\nJAVA的Long型整数超过了JS可以精确表示的大数范围，所以后端在涉及到和前端交互大数值时，建议使用String类型替换Long，否则可能会由于精度丢失导致产生奇怪的问题。\n\n有时候项目中使用的类库中定义了Long型的大整数，由于封装特性我们没法直接修改，在跟前端交互时，吐出的数据一定要转为String返回给浏览器。目前只有交易订单号超过了位数，在处理订单号时一定要注意返回给浏览器时要将Long型转为String。\n","source":"_posts/js-big-number.md","raw":"title: 深究浏览器长整型数值精度丢失问题\nshow: true\ndate: 2017-07-05 14:06:36\ntags: [js,java,精度丢失,数值]\ncategories: 技术人生\n---\n\n> `alert(28443422041709109)`会输出什么？\n\n# 背景\n在[上一篇博文](/2017/06/06/js-max-number/)里我记录了一个诡异的前后端数据不一致的问题，最终定位为前端js精度丢失。但只说了原因及结论并没有深入研究这个问题。\n这一篇博文准备在此基础上，深入探寻一番，彻底弄清楚这个问题发生的本质。\n\n# 引子\n让我们先来看几个小问题热热身：\n```\n## js环境下运行,输出结果是什么？\n1. console.log(1 === 1.0);\n\n2. console.log(0.1 + 0.2 === 0.3);\n\n3. console.log(9007199254740992);\n\n4. console.log(9007199254740992 + 1);\n\n5. console.log(9007199254740992 + 2);\n\n6. console.log(9007199254740992 + 3);\n\n7. console.log(9007199254740992 + 4);\n... ...\n```\n浏览器环境下运行下看看是不是有点颠覆了三观？\n\n<!--more-->\n\n# JS数值的基础知识\n在JS中，所有数值都是以64位浮点数形式保存的，所以1和1.0是相同的，是同一个数值。\n浮点数不是精确的数值，也正因为此，`0.1+0.2`才不等于`0.3`。\n\n根据浮点数表示的标准：\n```\n第1位：符号位，0表示正数，1表示负数\n第2-12位：指数部分\n第13-64位：尾数部分（即有效数字）\n```\n符号位决定了正负，指数决定了数值大小，尾数决定了精度。\n\n## 精度范围\n其中有效数字第一位默认总是1，不保存在64位浮点数之中，也就是说有效数字总是`1.xxx..`的形式，最长可能为52位。加上默认的1，js中提供的有效数字最长为53个二进制位。\nJS中数值浮点数表示形式公式为：\n```\n(-1)^符号位 * 1.xxx... * 2^指数位\n```\n\n因此精度最多只能表示到53个二进制位，即`-(2^53 - 1) ~ 2^53`。超过该范围的数值不能被精确表示。\n\n## 数值范围\n指数部分11位，最大值为2047（2^11 - 1），则数值范围为`2^-1023 ~ 2^1024`，超过该范围则无法表示。\n\n# 分析问题\n了解了JS中数值表示的方法后，我们回过头来分析具体的问题。\n引言中`alert(28443422041709109)`为什么会输出`28443422041709108`呢？\n转换为2进制为`1100101000011010010010001000010111111100001101000110100`，这串二进制数字我们使用进制转换工具转换一下可以得到`28443422041709108`，也就是说`28443422041709108`可以精确表示，而`28443422041709109`就不能精确表示了。为什么会这样，我们可以看一个更直观的例子：\n\n让我们看一下引子中的几个问题：\n`9007199254740992`是有效精度范围内最大的数，即2^53，二进制表示为`100...0`，1后面跟53个0。\n`9007199254740992 + 1`则表示为`100...01`，使用浮点数表示法表示时，最后一位的1将由于超出位数被舍去，因此`9007199254740992 + 1`和`9007199254740992`的表示一致，因此也就相等了。\n而`9007199254740992 + 2`则表示为`100..10`，使用浮点数表示法表示时，1被保留下来，因此`9007199254740992 + 2`反而是可以精确表示的。\n\n同样地，`28443422041709108`可以被精确地表示，而`28443422041709109`的最后两位被舍为了0，因此他们的二进制表示是一样的，也就造成了诡异的`28443422041709108 === 28443422041709109`问题。\n\n# 结论&解决方案\n当数值使用浮点数表示法表示精度位数超过53位时，就会存在精度丢失。大整数能够精确表示的上限是`9007199254740992`，超过则可能存在精度丢失。\n\nJAVA的Long型整数超过了JS可以精确表示的大数范围，所以后端在涉及到和前端交互大数值时，建议使用String类型替换Long，否则可能会由于精度丢失导致产生奇怪的问题。\n\n有时候项目中使用的类库中定义了Long型的大整数，由于封装特性我们没法直接修改，在跟前端交互时，吐出的数据一定要转为String返回给浏览器。目前只有交易订单号超过了位数，在处理订单号时一定要注意返回给浏览器时要将Long型转为String。\n","slug":"js-big-number","published":1,"updated":"2018-10-19T18:30:07.979Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzv90035fnpvnm23uxxo","content":"<blockquote>\n<p><code>alert(28443422041709109)</code>会输出什么？</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>在<a href=\"/2017/06/06/js-max-number/\">上一篇博文</a>里我记录了一个诡异的前后端数据不一致的问题，最终定位为前端js精度丢失。但只说了原因及结论并没有深入研究这个问题。<br>这一篇博文准备在此基础上，深入探寻一番，彻底弄清楚这个问题发生的本质。</p>\n<h1 id=\"引子\"><a href=\"#引子\" class=\"headerlink\" title=\"引子\"></a>引子</h1><p>让我们先来看几个小问题热热身：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## js环境下运行,输出结果是什么？</span><br><span class=\"line\"><span class=\"number\">1.</span> console.log(<span class=\"number\">1</span> === <span class=\"number\">1.0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> console.log(<span class=\"number\">0.1</span> + <span class=\"number\">0.2</span> === <span class=\"number\">0.3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> console.log(<span class=\"number\">9007199254740992</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span> console.log(<span class=\"number\">9007199254740992</span> + <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5.</span> console.log(<span class=\"number\">9007199254740992</span> + <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">6.</span> console.log(<span class=\"number\">9007199254740992</span> + <span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">7.</span> console.log(<span class=\"number\">9007199254740992</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">... ...</span><br></pre></td></tr></table></figure></p>\n<p>浏览器环境下运行下看看是不是有点颠覆了三观？</p>\n<a id=\"more\"></a>\n<h1 id=\"JS数值的基础知识\"><a href=\"#JS数值的基础知识\" class=\"headerlink\" title=\"JS数值的基础知识\"></a>JS数值的基础知识</h1><p>在JS中，所有数值都是以64位浮点数形式保存的，所以1和1.0是相同的，是同一个数值。<br>浮点数不是精确的数值，也正因为此，<code>0.1+0.2</code>才不等于<code>0.3</code>。</p>\n<p>根据浮点数表示的标准：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第<span class=\"number\">1</span>位：符号位，<span class=\"number\">0</span>表示正数，<span class=\"number\">1</span>表示负数</span><br><span class=\"line\">第<span class=\"number\">2</span><span class=\"number\">-12</span>位：指数部分</span><br><span class=\"line\">第<span class=\"number\">13</span><span class=\"number\">-64</span>位：尾数部分（即有效数字）</span><br></pre></td></tr></table></figure></p>\n<p>符号位决定了正负，指数决定了数值大小，尾数决定了精度。</p>\n<h2 id=\"精度范围\"><a href=\"#精度范围\" class=\"headerlink\" title=\"精度范围\"></a>精度范围</h2><p>其中有效数字第一位默认总是1，不保存在64位浮点数之中，也就是说有效数字总是<code>1.xxx..</code>的形式，最长可能为52位。加上默认的1，js中提供的有效数字最长为53个二进制位。<br>JS中数值浮点数表示形式公式为：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"number\">-1</span>)^符号位 * <span class=\"number\">1.</span>xxx... * <span class=\"number\">2</span>^指数位</span><br></pre></td></tr></table></figure></p>\n<p>因此精度最多只能表示到53个二进制位，即<code>-(2^53 - 1) ~ 2^53</code>。超过该范围的数值不能被精确表示。</p>\n<h2 id=\"数值范围\"><a href=\"#数值范围\" class=\"headerlink\" title=\"数值范围\"></a>数值范围</h2><p>指数部分11位，最大值为2047（2^11 - 1），则数值范围为<code>2^-1023 ~ 2^1024</code>，超过该范围则无法表示。</p>\n<h1 id=\"分析问题\"><a href=\"#分析问题\" class=\"headerlink\" title=\"分析问题\"></a>分析问题</h1><p>了解了JS中数值表示的方法后，我们回过头来分析具体的问题。<br>引言中<code>alert(28443422041709109)</code>为什么会输出<code>28443422041709108</code>呢？<br>转换为2进制为<code>1100101000011010010010001000010111111100001101000110100</code>，这串二进制数字我们使用进制转换工具转换一下可以得到<code>28443422041709108</code>，也就是说<code>28443422041709108</code>可以精确表示，而<code>28443422041709109</code>就不能精确表示了。为什么会这样，我们可以看一个更直观的例子：</p>\n<p>让我们看一下引子中的几个问题：<br><code>9007199254740992</code>是有效精度范围内最大的数，即2^53，二进制表示为<code>100...0</code>，1后面跟53个0。<br><code>9007199254740992 + 1</code>则表示为<code>100...01</code>，使用浮点数表示法表示时，最后一位的1将由于超出位数被舍去，因此<code>9007199254740992 + 1</code>和<code>9007199254740992</code>的表示一致，因此也就相等了。<br>而<code>9007199254740992 + 2</code>则表示为<code>100..10</code>，使用浮点数表示法表示时，1被保留下来，因此<code>9007199254740992 + 2</code>反而是可以精确表示的。</p>\n<p>同样地，<code>28443422041709108</code>可以被精确地表示，而<code>28443422041709109</code>的最后两位被舍为了0，因此他们的二进制表示是一样的，也就造成了诡异的<code>28443422041709108 === 28443422041709109</code>问题。</p>\n<h1 id=\"结论-amp-解决方案\"><a href=\"#结论-amp-解决方案\" class=\"headerlink\" title=\"结论&amp;解决方案\"></a>结论&amp;解决方案</h1><p>当数值使用浮点数表示法表示精度位数超过53位时，就会存在精度丢失。大整数能够精确表示的上限是<code>9007199254740992</code>，超过则可能存在精度丢失。</p>\n<p>JAVA的Long型整数超过了JS可以精确表示的大数范围，所以后端在涉及到和前端交互大数值时，建议使用String类型替换Long，否则可能会由于精度丢失导致产生奇怪的问题。</p>\n<p>有时候项目中使用的类库中定义了Long型的大整数，由于封装特性我们没法直接修改，在跟前端交互时，吐出的数据一定要转为String返回给浏览器。目前只有交易订单号超过了位数，在处理订单号时一定要注意返回给浏览器时要将Long型转为String。</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p><code>alert(28443422041709109)</code>会输出什么？</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>在<a href=\"/2017/06/06/js-max-number/\">上一篇博文</a>里我记录了一个诡异的前后端数据不一致的问题，最终定位为前端js精度丢失。但只说了原因及结论并没有深入研究这个问题。<br>这一篇博文准备在此基础上，深入探寻一番，彻底弄清楚这个问题发生的本质。</p>\n<h1 id=\"引子\"><a href=\"#引子\" class=\"headerlink\" title=\"引子\"></a>引子</h1><p>让我们先来看几个小问题热热身：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## js环境下运行,输出结果是什么？</span><br><span class=\"line\"><span class=\"number\">1.</span> console.log(<span class=\"number\">1</span> === <span class=\"number\">1.0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">2.</span> console.log(<span class=\"number\">0.1</span> + <span class=\"number\">0.2</span> === <span class=\"number\">0.3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">3.</span> console.log(<span class=\"number\">9007199254740992</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">4.</span> console.log(<span class=\"number\">9007199254740992</span> + <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">5.</span> console.log(<span class=\"number\">9007199254740992</span> + <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">6.</span> console.log(<span class=\"number\">9007199254740992</span> + <span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">7.</span> console.log(<span class=\"number\">9007199254740992</span> + <span class=\"number\">4</span>);</span><br><span class=\"line\">... ...</span><br></pre></td></tr></table></figure></p>\n<p>浏览器环境下运行下看看是不是有点颠覆了三观？</p>","more":"<h1 id=\"JS数值的基础知识\"><a href=\"#JS数值的基础知识\" class=\"headerlink\" title=\"JS数值的基础知识\"></a>JS数值的基础知识</h1><p>在JS中，所有数值都是以64位浮点数形式保存的，所以1和1.0是相同的，是同一个数值。<br>浮点数不是精确的数值，也正因为此，<code>0.1+0.2</code>才不等于<code>0.3</code>。</p>\n<p>根据浮点数表示的标准：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第<span class=\"number\">1</span>位：符号位，<span class=\"number\">0</span>表示正数，<span class=\"number\">1</span>表示负数</span><br><span class=\"line\">第<span class=\"number\">2</span><span class=\"number\">-12</span>位：指数部分</span><br><span class=\"line\">第<span class=\"number\">13</span><span class=\"number\">-64</span>位：尾数部分（即有效数字）</span><br></pre></td></tr></table></figure></p>\n<p>符号位决定了正负，指数决定了数值大小，尾数决定了精度。</p>\n<h2 id=\"精度范围\"><a href=\"#精度范围\" class=\"headerlink\" title=\"精度范围\"></a>精度范围</h2><p>其中有效数字第一位默认总是1，不保存在64位浮点数之中，也就是说有效数字总是<code>1.xxx..</code>的形式，最长可能为52位。加上默认的1，js中提供的有效数字最长为53个二进制位。<br>JS中数值浮点数表示形式公式为：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"number\">-1</span>)^符号位 * <span class=\"number\">1.</span>xxx... * <span class=\"number\">2</span>^指数位</span><br></pre></td></tr></table></figure></p>\n<p>因此精度最多只能表示到53个二进制位，即<code>-(2^53 - 1) ~ 2^53</code>。超过该范围的数值不能被精确表示。</p>\n<h2 id=\"数值范围\"><a href=\"#数值范围\" class=\"headerlink\" title=\"数值范围\"></a>数值范围</h2><p>指数部分11位，最大值为2047（2^11 - 1），则数值范围为<code>2^-1023 ~ 2^1024</code>，超过该范围则无法表示。</p>\n<h1 id=\"分析问题\"><a href=\"#分析问题\" class=\"headerlink\" title=\"分析问题\"></a>分析问题</h1><p>了解了JS中数值表示的方法后，我们回过头来分析具体的问题。<br>引言中<code>alert(28443422041709109)</code>为什么会输出<code>28443422041709108</code>呢？<br>转换为2进制为<code>1100101000011010010010001000010111111100001101000110100</code>，这串二进制数字我们使用进制转换工具转换一下可以得到<code>28443422041709108</code>，也就是说<code>28443422041709108</code>可以精确表示，而<code>28443422041709109</code>就不能精确表示了。为什么会这样，我们可以看一个更直观的例子：</p>\n<p>让我们看一下引子中的几个问题：<br><code>9007199254740992</code>是有效精度范围内最大的数，即2^53，二进制表示为<code>100...0</code>，1后面跟53个0。<br><code>9007199254740992 + 1</code>则表示为<code>100...01</code>，使用浮点数表示法表示时，最后一位的1将由于超出位数被舍去，因此<code>9007199254740992 + 1</code>和<code>9007199254740992</code>的表示一致，因此也就相等了。<br>而<code>9007199254740992 + 2</code>则表示为<code>100..10</code>，使用浮点数表示法表示时，1被保留下来，因此<code>9007199254740992 + 2</code>反而是可以精确表示的。</p>\n<p>同样地，<code>28443422041709108</code>可以被精确地表示，而<code>28443422041709109</code>的最后两位被舍为了0，因此他们的二进制表示是一样的，也就造成了诡异的<code>28443422041709108 === 28443422041709109</code>问题。</p>\n<h1 id=\"结论-amp-解决方案\"><a href=\"#结论-amp-解决方案\" class=\"headerlink\" title=\"结论&amp;解决方案\"></a>结论&amp;解决方案</h1><p>当数值使用浮点数表示法表示精度位数超过53位时，就会存在精度丢失。大整数能够精确表示的上限是<code>9007199254740992</code>，超过则可能存在精度丢失。</p>\n<p>JAVA的Long型整数超过了JS可以精确表示的大数范围，所以后端在涉及到和前端交互大数值时，建议使用String类型替换Long，否则可能会由于精度丢失导致产生奇怪的问题。</p>\n<p>有时候项目中使用的类库中定义了Long型的大整数，由于封装特性我们没法直接修改，在跟前端交互时，吐出的数据一定要转为String返回给浏览器。目前只有交易订单号超过了位数，在处理订单号时一定要注意返回给浏览器时要将Long型转为String。</p>","sticky":0},{"title":"js区分访问设备","show":true,"date":"2015-12-10T02:55:32.000Z","_content":"{% cq %} 需求是王道，有需求才有折腾的动力。  {% endcq %}\n\n昨天在写结婚照分享的页面时，布局采用了一行三章的方式，于是每张照片的宽度定义为33%。\n\nPC下访问一切ok，但是换用手机端访问后发现有问题，三张照片有两张在一行上，另一张就掉到下一行去了。看起来很怪异。\n于是想给PC访问和移动端访问做一个自适应设计。移动端屏幕下，一行就显示一张就可以了。\n\n#### 判断方法\n判断访问终端是手机还是PC，大体上有以下几种方法：\n1. 终端平台\n2. 操作系统\n3. 浏览器内核\n4. userAgent\n......\n\n<!--more-->\n\n这几种方法都需要利用到js的navigator对象来获取相应的信息，具体的navigator知识可以参考：[w3school Navigator对象](http://www.w3school.com.cn/jsref/dom_obj_navigator.asp)\nnavigator都有哪些可以使用的属性可以在浏览器的终端里查看下。![](http://ww1.sinaimg.cn/mw690/62d95157gw1eyue0nqiegj209n07kaab.jpg)\n经我实验，appName，platform，appVersion，useragent等可以获得当前设备信息。\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1eyue4s75yjj20oz05gjrx.jpg)\n但有些信息准确度上就不好说了。appName和platform的误差可能会有，上图中我的64bit Chrome，appName和platform分别是\"Netscape\"、\"Win32\"。\n\n#### 代码实例\n采用userAgent获取设备信息判断终端类型\n```js\n\tfunction isPc(){\n\t\tvar userAgentInfo = navigator.userAgent;\n\t\t//可识别的移动终端，支持以下\n\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\tvar flag = true;\n\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn flag;\n\t}\n```\n\n获取到了设备信息后，在判断出是移动端访问后，将宽度33%的设置去除，恢复100%，于是移动端的访问体验也恢复了。\n","source":"_posts/js-device.md","raw":"title: js区分访问设备\nshow: true\ndate: 2015-12-10 10:55:32\ntags: [js,javascript,区分访问设备,获取访问设备]\ncategories: 技术人生\n---\n{% cq %} 需求是王道，有需求才有折腾的动力。  {% endcq %}\n\n昨天在写结婚照分享的页面时，布局采用了一行三章的方式，于是每张照片的宽度定义为33%。\n\nPC下访问一切ok，但是换用手机端访问后发现有问题，三张照片有两张在一行上，另一张就掉到下一行去了。看起来很怪异。\n于是想给PC访问和移动端访问做一个自适应设计。移动端屏幕下，一行就显示一张就可以了。\n\n#### 判断方法\n判断访问终端是手机还是PC，大体上有以下几种方法：\n1. 终端平台\n2. 操作系统\n3. 浏览器内核\n4. userAgent\n......\n\n<!--more-->\n\n这几种方法都需要利用到js的navigator对象来获取相应的信息，具体的navigator知识可以参考：[w3school Navigator对象](http://www.w3school.com.cn/jsref/dom_obj_navigator.asp)\nnavigator都有哪些可以使用的属性可以在浏览器的终端里查看下。![](http://ww1.sinaimg.cn/mw690/62d95157gw1eyue0nqiegj209n07kaab.jpg)\n经我实验，appName，platform，appVersion，useragent等可以获得当前设备信息。\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1eyue4s75yjj20oz05gjrx.jpg)\n但有些信息准确度上就不好说了。appName和platform的误差可能会有，上图中我的64bit Chrome，appName和platform分别是\"Netscape\"、\"Win32\"。\n\n#### 代码实例\n采用userAgent获取设备信息判断终端类型\n```js\n\tfunction isPc(){\n\t\tvar userAgentInfo = navigator.userAgent;\n\t\t//可识别的移动终端，支持以下\n\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\tvar flag = true;\n\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn flag;\n\t}\n```\n\n获取到了设备信息后，在判断出是移动端访问后，将宽度33%的设置去除，恢复100%，于是移动端的访问体验也恢复了。\n","slug":"js-device","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvb0038fnpv2nbvds6u","content":"<blockquote class=\"blockquote-center\"><p>需求是王道，有需求才有折腾的动力。  </p>\n</blockquote>\n<p>昨天在写结婚照分享的页面时，布局采用了一行三章的方式，于是每张照片的宽度定义为33%。</p>\n<p>PC下访问一切ok，但是换用手机端访问后发现有问题，三张照片有两张在一行上，另一张就掉到下一行去了。看起来很怪异。<br>于是想给PC访问和移动端访问做一个自适应设计。移动端屏幕下，一行就显示一张就可以了。</p>\n<h4 id=\"判断方法\"><a href=\"#判断方法\" class=\"headerlink\" title=\"判断方法\"></a>判断方法</h4><p>判断访问终端是手机还是PC，大体上有以下几种方法：</p>\n<ol>\n<li>终端平台</li>\n<li>操作系统</li>\n<li>浏览器内核</li>\n<li>userAgent<br>……</li>\n</ol>\n<a id=\"more\"></a>\n<p>这几种方法都需要利用到js的navigator对象来获取相应的信息，具体的navigator知识可以参考：<a href=\"http://www.w3school.com.cn/jsref/dom_obj_navigator.asp\" target=\"_blank\" rel=\"noopener\">w3school Navigator对象</a><br>navigator都有哪些可以使用的属性可以在浏览器的终端里查看下。<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyue0nqiegj209n07kaab.jpg\" alt=\"\"><br>经我实验，appName，platform，appVersion，useragent等可以获得当前设备信息。<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyue4s75yjj20oz05gjrx.jpg\" alt=\"\"><br>但有些信息准确度上就不好说了。appName和platform的误差可能会有，上图中我的64bit Chrome，appName和platform分别是”Netscape”、”Win32”。</p>\n<h4 id=\"代码实例\"><a href=\"#代码实例\" class=\"headerlink\" title=\"代码实例\"></a>代码实例</h4><p>采用userAgent获取设备信息判断终端类型<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPc</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> userAgentInfo = navigator.userAgent;</span><br><span class=\"line\">\t<span class=\"comment\">//可识别的移动终端，支持以下</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> agents = [<span class=\"string\">\"Android\"</span>, <span class=\"string\">\"iPhone\"</span>, <span class=\"string\">\"SymbianOS\"</span>, <span class=\"string\">\"Windows Phone\"</span>, <span class=\"string\">\"iPad\"</span>, <span class=\"string\">\"iPod\"</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=agents.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(userAgentInfo.indexOf(agents[i]) != <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>获取到了设备信息后，在判断出是移动端访问后，将宽度33%的设置去除，恢复100%，于是移动端的访问体验也恢复了。</p>\n","site":{"data":{}},"excerpt":"<blockquote class=\"blockquote-center\"><p>需求是王道，有需求才有折腾的动力。  </p>\n</blockquote>\n<p>昨天在写结婚照分享的页面时，布局采用了一行三章的方式，于是每张照片的宽度定义为33%。</p>\n<p>PC下访问一切ok，但是换用手机端访问后发现有问题，三张照片有两张在一行上，另一张就掉到下一行去了。看起来很怪异。<br>于是想给PC访问和移动端访问做一个自适应设计。移动端屏幕下，一行就显示一张就可以了。</p>\n<h4 id=\"判断方法\"><a href=\"#判断方法\" class=\"headerlink\" title=\"判断方法\"></a>判断方法</h4><p>判断访问终端是手机还是PC，大体上有以下几种方法：</p>\n<ol>\n<li>终端平台</li>\n<li>操作系统</li>\n<li>浏览器内核</li>\n<li>userAgent<br>……</li>\n</ol>","more":"<p>这几种方法都需要利用到js的navigator对象来获取相应的信息，具体的navigator知识可以参考：<a href=\"http://www.w3school.com.cn/jsref/dom_obj_navigator.asp\" target=\"_blank\" rel=\"noopener\">w3school Navigator对象</a><br>navigator都有哪些可以使用的属性可以在浏览器的终端里查看下。<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyue0nqiegj209n07kaab.jpg\" alt=\"\"><br>经我实验，appName，platform，appVersion，useragent等可以获得当前设备信息。<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyue4s75yjj20oz05gjrx.jpg\" alt=\"\"><br>但有些信息准确度上就不好说了。appName和platform的误差可能会有，上图中我的64bit Chrome，appName和platform分别是”Netscape”、”Win32”。</p>\n<h4 id=\"代码实例\"><a href=\"#代码实例\" class=\"headerlink\" title=\"代码实例\"></a>代码实例</h4><p>采用userAgent获取设备信息判断终端类型<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPc</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> userAgentInfo = navigator.userAgent;</span><br><span class=\"line\">\t<span class=\"comment\">//可识别的移动终端，支持以下</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> agents = [<span class=\"string\">\"Android\"</span>, <span class=\"string\">\"iPhone\"</span>, <span class=\"string\">\"SymbianOS\"</span>, <span class=\"string\">\"Windows Phone\"</span>, <span class=\"string\">\"iPad\"</span>, <span class=\"string\">\"iPod\"</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,len=agents.length;i&lt;len;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(userAgentInfo.indexOf(agents[i]) != <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\tflag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>获取到了设备信息后，在判断出是移动端访问后，将宽度33%的设置去除，恢复100%，于是移动端的访问体验也恢复了。</p>","sticky":0},{"title":"javascript中几个编码函数encodeURI、encodeURIComponent以及escape的区别","date":"2015-08-03T11:58:58.000Z","show":true,"_content":"#### 背景\n今天平台在向调用的平台发送回调请求的时候，发现有问题，排查了一会儿发现并不是所有的回调请求都会有问题。基本上纯字母或数字的回调都没有问题，而出问题的请求包含\"&\",\"-\"等特殊字符，于是第一时间想到是不是解析特殊字符的问题。\n\n于是跟接收方约定，我将请求encode后发送，接收方接收后decode后再解析。\n\n#### TEST1\n代码片段：\n```js\nvar resParams = {\"name\":encodeURI(out.name),\"blockId\":blockId,\"total\":1,\"detail\":encodeURI(reportPath)};\n```\n发布后，重新触发，查看日志：\n\n```js\n...\"detail\":\"http://(绿色围墙)/detail?id=1&suffix=1438601805325\"...}\n```\n怎么貌似请求串没有改变？\n\n第一反应，怀疑是不是编码没有成功，但我之前一直都是使用`encodeURI`编码，并不会别的什么方法，于是百度了下，发现还有个`encodeURIComponent以及escape的区别`方法。\n\n#### TEST2\n```js\nvar resParams = {\"name\":encodeURIComponent(out.name),\"blockId\":blockId,\"total\":1,\"detail\":encodeURIComponent(reportPath)};\n```\n发布后，重新触发，查看日志：\n```js\n...\"detail\":\"http://(绿色围墙)/detail%3Fid%3D1%26suffix%3D1438601805325\"...}\n```\n起效了~\n\n#### 总结\n> javascript中有三种编码的函数，分别是：*`escape()`*,*`encodeURI()`*以及*`encodeURIComponent()`*。\n\n1. escape\n该方法不对ASCII字母和数字编码，也不会对ASCII标点符号编码，除此之外的所有字符均会被编码。\n基本上该方法已经被javascript标准所遗弃，从ECMAScript v3开始，标准就建议使用encodeURI和encodeURIComponent代替。\n\n2. encodeURI\n该方法不会对字母和数字编码，也不会对这些ASCII标点符号编码：** -_.!~*'() **\n该方法的目的是对URI进行完整的编码，对URI中具有特殊含义的标点符号不进行转义。\n因此正如我遇到的问题一样，如果URI中含有分隔符，则应当使用`encodeURIComponent`方法编码。\n\n3. encodeURIComponent\n该方法不会对字母和数字编码，也不会对这些ASCII标点符号编码：** -_.!~*'() **\n其他字符，如** ;/?:@&=+$,# **这些用于分隔 URI 组件的标点符号，都会由十六进制转义替换。\nencodeURIComponent除了编码标准的URI之外，对于它的参数也都一并进行处理。\n\n他们对应的解码函数分别是：\n*`unescape()`*,*`decodeURI()`*,*`decodeURIComponent()`*\n","source":"_posts/js-encode.md","raw":"title: javascript中几个编码函数encodeURI、encodeURIComponent以及escape的区别\ndate: 2015-08-03 19:58:58\ntags: [javascript,encode]\ncategories: 技术人生\nshow: true\n---\n#### 背景\n今天平台在向调用的平台发送回调请求的时候，发现有问题，排查了一会儿发现并不是所有的回调请求都会有问题。基本上纯字母或数字的回调都没有问题，而出问题的请求包含\"&\",\"-\"等特殊字符，于是第一时间想到是不是解析特殊字符的问题。\n\n于是跟接收方约定，我将请求encode后发送，接收方接收后decode后再解析。\n\n#### TEST1\n代码片段：\n```js\nvar resParams = {\"name\":encodeURI(out.name),\"blockId\":blockId,\"total\":1,\"detail\":encodeURI(reportPath)};\n```\n发布后，重新触发，查看日志：\n\n```js\n...\"detail\":\"http://(绿色围墙)/detail?id=1&suffix=1438601805325\"...}\n```\n怎么貌似请求串没有改变？\n\n第一反应，怀疑是不是编码没有成功，但我之前一直都是使用`encodeURI`编码，并不会别的什么方法，于是百度了下，发现还有个`encodeURIComponent以及escape的区别`方法。\n\n#### TEST2\n```js\nvar resParams = {\"name\":encodeURIComponent(out.name),\"blockId\":blockId,\"total\":1,\"detail\":encodeURIComponent(reportPath)};\n```\n发布后，重新触发，查看日志：\n```js\n...\"detail\":\"http://(绿色围墙)/detail%3Fid%3D1%26suffix%3D1438601805325\"...}\n```\n起效了~\n\n#### 总结\n> javascript中有三种编码的函数，分别是：*`escape()`*,*`encodeURI()`*以及*`encodeURIComponent()`*。\n\n1. escape\n该方法不对ASCII字母和数字编码，也不会对ASCII标点符号编码，除此之外的所有字符均会被编码。\n基本上该方法已经被javascript标准所遗弃，从ECMAScript v3开始，标准就建议使用encodeURI和encodeURIComponent代替。\n\n2. encodeURI\n该方法不会对字母和数字编码，也不会对这些ASCII标点符号编码：** -_.!~*'() **\n该方法的目的是对URI进行完整的编码，对URI中具有特殊含义的标点符号不进行转义。\n因此正如我遇到的问题一样，如果URI中含有分隔符，则应当使用`encodeURIComponent`方法编码。\n\n3. encodeURIComponent\n该方法不会对字母和数字编码，也不会对这些ASCII标点符号编码：** -_.!~*'() **\n其他字符，如** ;/?:@&=+$,# **这些用于分隔 URI 组件的标点符号，都会由十六进制转义替换。\nencodeURIComponent除了编码标准的URI之外，对于它的参数也都一并进行处理。\n\n他们对应的解码函数分别是：\n*`unescape()`*,*`decodeURI()`*,*`decodeURIComponent()`*\n","slug":"js-encode","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvd003bfnpv5l8wq9dc","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>今天平台在向调用的平台发送回调请求的时候，发现有问题，排查了一会儿发现并不是所有的回调请求都会有问题。基本上纯字母或数字的回调都没有问题，而出问题的请求包含”&amp;”,”-“等特殊字符，于是第一时间想到是不是解析特殊字符的问题。</p>\n<p>于是跟接收方约定，我将请求encode后发送，接收方接收后decode后再解析。</p>\n<h4 id=\"TEST1\"><a href=\"#TEST1\" class=\"headerlink\" title=\"TEST1\"></a>TEST1</h4><p>代码片段：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> resParams = &#123;<span class=\"string\">\"name\"</span>:<span class=\"built_in\">encodeURI</span>(out.name),<span class=\"string\">\"blockId\"</span>:blockId,<span class=\"string\">\"total\"</span>:<span class=\"number\">1</span>,<span class=\"string\">\"detail\"</span>:<span class=\"built_in\">encodeURI</span>(reportPath)&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>发布后，重新触发，查看日志：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...<span class=\"string\">\"detail\"</span>:<span class=\"string\">\"http://(绿色围墙)/detail?id=1&amp;suffix=1438601805325\"</span>...&#125;</span><br></pre></td></tr></table></figure>\n<p>怎么貌似请求串没有改变？</p>\n<p>第一反应，怀疑是不是编码没有成功，但我之前一直都是使用<code>encodeURI</code>编码，并不会别的什么方法，于是百度了下，发现还有个<code>encodeURIComponent以及escape的区别</code>方法。</p>\n<h4 id=\"TEST2\"><a href=\"#TEST2\" class=\"headerlink\" title=\"TEST2\"></a>TEST2</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> resParams = &#123;<span class=\"string\">\"name\"</span>:<span class=\"built_in\">encodeURIComponent</span>(out.name),<span class=\"string\">\"blockId\"</span>:blockId,<span class=\"string\">\"total\"</span>:<span class=\"number\">1</span>,<span class=\"string\">\"detail\"</span>:<span class=\"built_in\">encodeURIComponent</span>(reportPath)&#125;;</span><br></pre></td></tr></table></figure>\n<p>发布后，重新触发，查看日志：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...<span class=\"string\">\"detail\"</span>:<span class=\"string\">\"http://(绿色围墙)/detail%3Fid%3D1%26suffix%3D1438601805325\"</span>...&#125;</span><br></pre></td></tr></table></figure></p>\n<p>起效了~</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><blockquote>\n<p>javascript中有三种编码的函数，分别是：<em><code>escape()</code></em>,<em><code>encodeURI()</code></em>以及<em><code>encodeURIComponent()</code></em>。</p>\n</blockquote>\n<ol>\n<li><p>escape<br>该方法不对ASCII字母和数字编码，也不会对ASCII标点符号编码，除此之外的所有字符均会被编码。<br>基本上该方法已经被javascript标准所遗弃，从ECMAScript v3开始，标准就建议使用encodeURI和encodeURIComponent代替。</p>\n</li>\n<li><p>encodeURI<br>该方法不会对字母和数字编码，也不会对这些ASCII标点符号编码：<strong> -_.!~*’() </strong><br>该方法的目的是对URI进行完整的编码，对URI中具有特殊含义的标点符号不进行转义。<br>因此正如我遇到的问题一样，如果URI中含有分隔符，则应当使用<code>encodeURIComponent</code>方法编码。</p>\n</li>\n<li><p>encodeURIComponent<br>该方法不会对字母和数字编码，也不会对这些ASCII标点符号编码：<strong> -_.!~*’() </strong><br>其他字符，如<strong> ;/?:@&amp;=+$,# </strong>这些用于分隔 URI 组件的标点符号，都会由十六进制转义替换。<br>encodeURIComponent除了编码标准的URI之外，对于它的参数也都一并进行处理。</p>\n</li>\n</ol>\n<p>他们对应的解码函数分别是：<br><em><code>unescape()</code></em>,<em><code>decodeURI()</code></em>,<em><code>decodeURIComponent()</code></em></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>今天平台在向调用的平台发送回调请求的时候，发现有问题，排查了一会儿发现并不是所有的回调请求都会有问题。基本上纯字母或数字的回调都没有问题，而出问题的请求包含”&amp;”,”-“等特殊字符，于是第一时间想到是不是解析特殊字符的问题。</p>\n<p>于是跟接收方约定，我将请求encode后发送，接收方接收后decode后再解析。</p>\n<h4 id=\"TEST1\"><a href=\"#TEST1\" class=\"headerlink\" title=\"TEST1\"></a>TEST1</h4><p>代码片段：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> resParams = &#123;<span class=\"string\">\"name\"</span>:<span class=\"built_in\">encodeURI</span>(out.name),<span class=\"string\">\"blockId\"</span>:blockId,<span class=\"string\">\"total\"</span>:<span class=\"number\">1</span>,<span class=\"string\">\"detail\"</span>:<span class=\"built_in\">encodeURI</span>(reportPath)&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>发布后，重新触发，查看日志：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...<span class=\"string\">\"detail\"</span>:<span class=\"string\">\"http://(绿色围墙)/detail?id=1&amp;suffix=1438601805325\"</span>...&#125;</span><br></pre></td></tr></table></figure>\n<p>怎么貌似请求串没有改变？</p>\n<p>第一反应，怀疑是不是编码没有成功，但我之前一直都是使用<code>encodeURI</code>编码，并不会别的什么方法，于是百度了下，发现还有个<code>encodeURIComponent以及escape的区别</code>方法。</p>\n<h4 id=\"TEST2\"><a href=\"#TEST2\" class=\"headerlink\" title=\"TEST2\"></a>TEST2</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> resParams = &#123;<span class=\"string\">\"name\"</span>:<span class=\"built_in\">encodeURIComponent</span>(out.name),<span class=\"string\">\"blockId\"</span>:blockId,<span class=\"string\">\"total\"</span>:<span class=\"number\">1</span>,<span class=\"string\">\"detail\"</span>:<span class=\"built_in\">encodeURIComponent</span>(reportPath)&#125;;</span><br></pre></td></tr></table></figure>\n<p>发布后，重新触发，查看日志：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...<span class=\"string\">\"detail\"</span>:<span class=\"string\">\"http://(绿色围墙)/detail%3Fid%3D1%26suffix%3D1438601805325\"</span>...&#125;</span><br></pre></td></tr></table></figure></p>\n<p>起效了~</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><blockquote>\n<p>javascript中有三种编码的函数，分别是：<em><code>escape()</code></em>,<em><code>encodeURI()</code></em>以及<em><code>encodeURIComponent()</code></em>。</p>\n</blockquote>\n<ol>\n<li><p>escape<br>该方法不对ASCII字母和数字编码，也不会对ASCII标点符号编码，除此之外的所有字符均会被编码。<br>基本上该方法已经被javascript标准所遗弃，从ECMAScript v3开始，标准就建议使用encodeURI和encodeURIComponent代替。</p>\n</li>\n<li><p>encodeURI<br>该方法不会对字母和数字编码，也不会对这些ASCII标点符号编码：<strong> -_.!~*’() </strong><br>该方法的目的是对URI进行完整的编码，对URI中具有特殊含义的标点符号不进行转义。<br>因此正如我遇到的问题一样，如果URI中含有分隔符，则应当使用<code>encodeURIComponent</code>方法编码。</p>\n</li>\n<li><p>encodeURIComponent<br>该方法不会对字母和数字编码，也不会对这些ASCII标点符号编码：<strong> -_.!~*’() </strong><br>其他字符，如<strong> ;/?:@&amp;=+$,# </strong>这些用于分隔 URI 组件的标点符号，都会由十六进制转义替换。<br>encodeURIComponent除了编码标准的URI之外，对于它的参数也都一并进行处理。</p>\n</li>\n</ol>\n<p>他们对应的解码函数分别是：<br><em><code>unescape()</code></em>,<em><code>decodeURI()</code></em>,<em><code>decodeURIComponent()</code></em></p>\n","sticky":0},{"title":"javascript中for..in循环获取对象属性顺序问题的探讨","date":"2015-07-13T05:58:37.000Z","show":true,"_content":"#背景\n在项目开发过程中，有一个需求是这样的：\n> 平台接受用户输入的一串JSON字符，然后解析JSON串的key-value展示到平台上，并支持用户修改value值再更新。\n\n效果图如下：\n![](http://ww3.sinaimg.cn/large/62d95157gw1eu1746ujtwj20km064gml.jpg)\n在调试过程中发现，一旦提交更新展示的字段顺序就跟前一次不一样，再提交一次更新貌似又能恢复，这是咋回事呢？\n\n<!--more-->\n\n#原因\nJSON对象本身是集合，而集合是无序的，因此for...in遍历对象属性时也是无序的，或者说是不可预期的。\n\n#替代方式\n正如我的需求一样，就是对对象的顺序有依赖，否则在更新value时就会出现key与value对应不上的问题。\n因此只能将key事先遍历出来进行排序，后面在有需要用到key时不再用for...in遍历，而是直接使用预先遍历出来的key数组。\n\n```js\nvar keyArr = new Array();\nfor(var item in params){\n\tkeyArr.push(item);\n}\nkeyArr = keyArr.sort();\n...\nfor(var i=0;i<keyArr.length;i++){\n\tparams[keyArr]...\n}\n```\n\n","source":"_posts/js-for-in.md","raw":"title: javascript中for..in循环获取对象属性顺序问题的探讨\ndate: 2015-07-13 13:58:37\ntags: [javascript,for..in] \ncategories: 技术人生\nshow: true\n---\n#背景\n在项目开发过程中，有一个需求是这样的：\n> 平台接受用户输入的一串JSON字符，然后解析JSON串的key-value展示到平台上，并支持用户修改value值再更新。\n\n效果图如下：\n![](http://ww3.sinaimg.cn/large/62d95157gw1eu1746ujtwj20km064gml.jpg)\n在调试过程中发现，一旦提交更新展示的字段顺序就跟前一次不一样，再提交一次更新貌似又能恢复，这是咋回事呢？\n\n<!--more-->\n\n#原因\nJSON对象本身是集合，而集合是无序的，因此for...in遍历对象属性时也是无序的，或者说是不可预期的。\n\n#替代方式\n正如我的需求一样，就是对对象的顺序有依赖，否则在更新value时就会出现key与value对应不上的问题。\n因此只能将key事先遍历出来进行排序，后面在有需要用到key时不再用for...in遍历，而是直接使用预先遍历出来的key数组。\n\n```js\nvar keyArr = new Array();\nfor(var item in params){\n\tkeyArr.push(item);\n}\nkeyArr = keyArr.sort();\n...\nfor(var i=0;i<keyArr.length;i++){\n\tparams[keyArr]...\n}\n```\n\n","slug":"js-for-in","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvf003efnpvgapfptfy","content":"<p>#背景<br>在项目开发过程中，有一个需求是这样的：</p>\n<blockquote>\n<p>平台接受用户输入的一串JSON字符，然后解析JSON串的key-value展示到平台上，并支持用户修改value值再更新。</p>\n</blockquote>\n<p>效果图如下：<br><img src=\"http://ww3.sinaimg.cn/large/62d95157gw1eu1746ujtwj20km064gml.jpg\" alt=\"\"><br>在调试过程中发现，一旦提交更新展示的字段顺序就跟前一次不一样，再提交一次更新貌似又能恢复，这是咋回事呢？</p>\n<a id=\"more\"></a>\n<p>#原因<br>JSON对象本身是集合，而集合是无序的，因此for…in遍历对象属性时也是无序的，或者说是不可预期的。</p>\n<p>#替代方式<br>正如我的需求一样，就是对对象的顺序有依赖，否则在更新value时就会出现key与value对应不上的问题。<br>因此只能将key事先遍历出来进行排序，后面在有需要用到key时不再用for…in遍历，而是直接使用预先遍历出来的key数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> keyArr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> params)&#123;</span><br><span class=\"line\">\tkeyArr.push(item);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">keyArr = keyArr.sort();</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;keyArr.length;i++)&#123;</span><br><span class=\"line\">\tparams[keyArr]...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>#背景<br>在项目开发过程中，有一个需求是这样的：</p>\n<blockquote>\n<p>平台接受用户输入的一串JSON字符，然后解析JSON串的key-value展示到平台上，并支持用户修改value值再更新。</p>\n</blockquote>\n<p>效果图如下：<br><img src=\"http://ww3.sinaimg.cn/large/62d95157gw1eu1746ujtwj20km064gml.jpg\" alt=\"\"><br>在调试过程中发现，一旦提交更新展示的字段顺序就跟前一次不一样，再提交一次更新貌似又能恢复，这是咋回事呢？</p>","more":"<p>#原因<br>JSON对象本身是集合，而集合是无序的，因此for…in遍历对象属性时也是无序的，或者说是不可预期的。</p>\n<p>#替代方式<br>正如我的需求一样，就是对对象的顺序有依赖，否则在更新value时就会出现key与value对应不上的问题。<br>因此只能将key事先遍历出来进行排序，后面在有需要用到key时不再用for…in遍历，而是直接使用预先遍历出来的key数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> keyArr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> params)&#123;</span><br><span class=\"line\">\tkeyArr.push(item);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">keyArr = keyArr.sort();</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;keyArr.length;i++)&#123;</span><br><span class=\"line\">\tparams[keyArr]...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","sticky":0},{"title":"分享我收藏的小而美JS库[一] -- notie","show":true,"date":"2018-05-27T12:11:24.000Z","_content":"<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  14/53，每周一篇博，坚持！\n\n每周一篇博文的目标还是比较艰巨的，有时候时间比较紧张的时候根本来不及想主题。。<img class=\"emoji\" src=\"https://emojipedia-us.s3.amazonaws.com/thumbs/320/apple/129/face-with-tears-of-joy_1f602.png\" align=\"absmiddle\">\n\n准备开一个系列，介绍下我收藏的那些小而美的JS开源库。这是第一篇，关于一个设计良好的美观实用PC、移动兼容良好的弹框库--[notie](https://github.com/jaredreich/notie)。\n\n#### 关于notie\n众所周知，浏览器默认的弹框--alert是异常丑陋的，我们在业务中通常是不会直接使用alert来显示应用弹框消息的，一般都会重新设计应用自己的弹框来替代之。\nnotie就是一款用来替代alert的消息弹框库。\n\n<!--more-->\n\n它的几项主要功能：\n1. alert的功能：提醒用户\n2. 弹出选项让用户确认\n3. 允许用户输入信息\n4. 允许用户选择选项\n5. 允许用户选择日期\n\n放一张官网的demo图看一下notie的效果，还是非常优雅的：\n ![](https://github.com/jaredreich/notie/blob/master/demo.gif?raw=true)\n \n#### 使用方式\n既然是小而美的库，使用起来也是相当方便的：\n1. 安装\n    在HTML内加载notie文件，并加载notie的样式文件\n    ```html\n    <head>\n      ...\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/notie/dist/notie.min.css\">\n      <style>\n        /* override styles here */\n        .notie-container {\n          box-shadow: none;\n        }\n      </style>\n    </head>\n    <body>\n      ...\n      <!-- Bottom of body -->\n      <script src=\"https://unpkg.com/notie\"></script>\n    </body>\n    ```\n\n2. 业务调用 \n    在业务js中调用notie API：\n    ```js\n    notie.alert({\n      type: Number|String, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']\n      text: String,\n      stay: Boolean, // optional, default = false\n      time: Number, // optional, default = 3, minimum = 1,\n      position: String // optional, default = 'top', enum: ['top', 'bottom']\n    })\n    \n    notie.force({\n      type: Number|String, // optional, default = 5, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']\n      text: String,\n      buttonText: String, // optional, default = 'OK'\n      position: String, // optional, default = 'top', enum: ['top', 'bottom']\n      callback: Function // optional\n    }, callbackOptional())\n    \n    notie.confirm({\n      text: String,\n      submitText: String, // optional, default = 'Yes'\n      cancelText: String, // optional, default = 'Cancel'\n      position: String, // optional, default = 'top', enum: ['top', 'bottom']\n      submitCallback: Function, // optional\n      cancelCallback: Function // optional\n    }, submitCallbackOptional(), cancelCallbackOptional())\n    \n    notie.input({\n      text: String,\n      submitText: String, // optional, default = 'Submit'\n      cancelText: String, // optional, default = 'Cancel'\n      position: String, // optional, default = 'top', enum: ['top', 'bottom']\n      submitCallback: Function(value), // optional\n      cancelCallback: Function(value), // optional\n      autocapitalize: 'words', // default: 'none'\n      autocomplete: 'on', // default: 'off'\n      autocorrect: 'off', // default: 'off'\n      autofocus: 'true', // default: 'true'\n      inputmode: 'latin', // default: 'verbatim'\n      max: '10000',// default: ''\n      maxlength: '10', // default: ''\n      min: '5', // default: ''\n      minlength: '1', // default: ''\n      placeholder: 'Jane Smith', // default: ''\n      spellcheck: 'false', // default: 'default'\n      step: '5', // default: 'any'\n      type: 'text', // default: 'text'\n      allowed: ['an', 's'] // Default: null, 'an' = alphanumeric, 'a' = alpha, 'n' = numeric, 's' = spaces allowed. Can be custom RegExp, ex. allowed: new RegExp('[^0-9]', 'g')\n    }, submitCallbackOptional(value), cancelCallbackOptional(value))\n    \n    notie.select({\n      text: String,\n      cancelText: String, // optional, default = 'Cancel'\n      position: String, // optional, default = 'bottom', enum: ['top', 'bottom']\n      choices: [\n        {\n          type: Number|String, // optional, default = 1\n          text: String,\n          handler: Function\n        }\n        ...\n      ],\n      cancelCallback: Function // optional\n    }, cancelCallbackOptional())\n    \n    notie.date({\n      value: Date,\n      submitText: String, // optional, default = 'OK'\n      cancelText: String, // optional, default = 'Cancel'\n      position: String, // optional, default = 'top', enum: ['top', 'bottom']\n      submitCallback: Function(date), // optional\n      cancelCallback: Function(date) // optional\n    }, submitCallbackOptional(date), cancelCallbackOptional(date))\n    ```\n    最常用的还是alert了。\n    如果我们想弹出一个成功的提示消息给用户只需简单调用如下：\n    ```js\n       notie.alert({\n           type: 1,\n           text: \"Success\",\n           stay: true\n       });\n    ```\n    使用的时候可以多多尝试，看看哪个效果是自己需要的。\n    \n3. 在React等前端框架下使用\n    在如今前端工程化的背景下，notie同样也支持在如React等前端框架下使用。\n    首先要使用npm安装notie：\n    ```js\n       npm install notie\n    ```\n    然后引入notie并加载需要使用的notie组件:\n    ```js\n       // 加载全部\n       import notie from 'notie';\n       // 加载部分\n       import {alert, force, confirm, input, selecct, date, setOptions, hideAlerts} from 'notie';\n    ```\n    调用API的方式和浏览器使用方式一致。","source":"_posts/js-lib-share.md","raw":"title: 分享我收藏的小而美JS库[一] -- notie\nshow: true\ndate: 2018-05-27 20:11:24\ntags: [JS库]\ncategories: 技术人生\n---\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  14/53，每周一篇博，坚持！\n\n每周一篇博文的目标还是比较艰巨的，有时候时间比较紧张的时候根本来不及想主题。。<img class=\"emoji\" src=\"https://emojipedia-us.s3.amazonaws.com/thumbs/320/apple/129/face-with-tears-of-joy_1f602.png\" align=\"absmiddle\">\n\n准备开一个系列，介绍下我收藏的那些小而美的JS开源库。这是第一篇，关于一个设计良好的美观实用PC、移动兼容良好的弹框库--[notie](https://github.com/jaredreich/notie)。\n\n#### 关于notie\n众所周知，浏览器默认的弹框--alert是异常丑陋的，我们在业务中通常是不会直接使用alert来显示应用弹框消息的，一般都会重新设计应用自己的弹框来替代之。\nnotie就是一款用来替代alert的消息弹框库。\n\n<!--more-->\n\n它的几项主要功能：\n1. alert的功能：提醒用户\n2. 弹出选项让用户确认\n3. 允许用户输入信息\n4. 允许用户选择选项\n5. 允许用户选择日期\n\n放一张官网的demo图看一下notie的效果，还是非常优雅的：\n ![](https://github.com/jaredreich/notie/blob/master/demo.gif?raw=true)\n \n#### 使用方式\n既然是小而美的库，使用起来也是相当方便的：\n1. 安装\n    在HTML内加载notie文件，并加载notie的样式文件\n    ```html\n    <head>\n      ...\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/notie/dist/notie.min.css\">\n      <style>\n        /* override styles here */\n        .notie-container {\n          box-shadow: none;\n        }\n      </style>\n    </head>\n    <body>\n      ...\n      <!-- Bottom of body -->\n      <script src=\"https://unpkg.com/notie\"></script>\n    </body>\n    ```\n\n2. 业务调用 \n    在业务js中调用notie API：\n    ```js\n    notie.alert({\n      type: Number|String, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']\n      text: String,\n      stay: Boolean, // optional, default = false\n      time: Number, // optional, default = 3, minimum = 1,\n      position: String // optional, default = 'top', enum: ['top', 'bottom']\n    })\n    \n    notie.force({\n      type: Number|String, // optional, default = 5, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']\n      text: String,\n      buttonText: String, // optional, default = 'OK'\n      position: String, // optional, default = 'top', enum: ['top', 'bottom']\n      callback: Function // optional\n    }, callbackOptional())\n    \n    notie.confirm({\n      text: String,\n      submitText: String, // optional, default = 'Yes'\n      cancelText: String, // optional, default = 'Cancel'\n      position: String, // optional, default = 'top', enum: ['top', 'bottom']\n      submitCallback: Function, // optional\n      cancelCallback: Function // optional\n    }, submitCallbackOptional(), cancelCallbackOptional())\n    \n    notie.input({\n      text: String,\n      submitText: String, // optional, default = 'Submit'\n      cancelText: String, // optional, default = 'Cancel'\n      position: String, // optional, default = 'top', enum: ['top', 'bottom']\n      submitCallback: Function(value), // optional\n      cancelCallback: Function(value), // optional\n      autocapitalize: 'words', // default: 'none'\n      autocomplete: 'on', // default: 'off'\n      autocorrect: 'off', // default: 'off'\n      autofocus: 'true', // default: 'true'\n      inputmode: 'latin', // default: 'verbatim'\n      max: '10000',// default: ''\n      maxlength: '10', // default: ''\n      min: '5', // default: ''\n      minlength: '1', // default: ''\n      placeholder: 'Jane Smith', // default: ''\n      spellcheck: 'false', // default: 'default'\n      step: '5', // default: 'any'\n      type: 'text', // default: 'text'\n      allowed: ['an', 's'] // Default: null, 'an' = alphanumeric, 'a' = alpha, 'n' = numeric, 's' = spaces allowed. Can be custom RegExp, ex. allowed: new RegExp('[^0-9]', 'g')\n    }, submitCallbackOptional(value), cancelCallbackOptional(value))\n    \n    notie.select({\n      text: String,\n      cancelText: String, // optional, default = 'Cancel'\n      position: String, // optional, default = 'bottom', enum: ['top', 'bottom']\n      choices: [\n        {\n          type: Number|String, // optional, default = 1\n          text: String,\n          handler: Function\n        }\n        ...\n      ],\n      cancelCallback: Function // optional\n    }, cancelCallbackOptional())\n    \n    notie.date({\n      value: Date,\n      submitText: String, // optional, default = 'OK'\n      cancelText: String, // optional, default = 'Cancel'\n      position: String, // optional, default = 'top', enum: ['top', 'bottom']\n      submitCallback: Function(date), // optional\n      cancelCallback: Function(date) // optional\n    }, submitCallbackOptional(date), cancelCallbackOptional(date))\n    ```\n    最常用的还是alert了。\n    如果我们想弹出一个成功的提示消息给用户只需简单调用如下：\n    ```js\n       notie.alert({\n           type: 1,\n           text: \"Success\",\n           stay: true\n       });\n    ```\n    使用的时候可以多多尝试，看看哪个效果是自己需要的。\n    \n3. 在React等前端框架下使用\n    在如今前端工程化的背景下，notie同样也支持在如React等前端框架下使用。\n    首先要使用npm安装notie：\n    ```js\n       npm install notie\n    ```\n    然后引入notie并加载需要使用的notie组件:\n    ```js\n       // 加载全部\n       import notie from 'notie';\n       // 加载部分\n       import {alert, force, confirm, input, selecct, date, setOptions, hideAlerts} from 'notie';\n    ```\n    调用API的方式和浏览器使用方式一致。","slug":"js-lib-share","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvh003gfnpvk9yrcys3","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  14/53，每周一篇博，坚持！</p>\n<p>每周一篇博文的目标还是比较艰巨的，有时候时间比较紧张的时候根本来不及想主题。。<img class=\"emoji\" src=\"https://emojipedia-us.s3.amazonaws.com/thumbs/320/apple/129/face-with-tears-of-joy_1f602.png\" align=\"absmiddle\"></p>\n<p>准备开一个系列，介绍下我收藏的那些小而美的JS开源库。这是第一篇，关于一个设计良好的美观实用PC、移动兼容良好的弹框库–<a href=\"https://github.com/jaredreich/notie\" target=\"_blank\" rel=\"noopener\">notie</a>。</p>\n<h4 id=\"关于notie\"><a href=\"#关于notie\" class=\"headerlink\" title=\"关于notie\"></a>关于notie</h4><p>众所周知，浏览器默认的弹框–alert是异常丑陋的，我们在业务中通常是不会直接使用alert来显示应用弹框消息的，一般都会重新设计应用自己的弹框来替代之。<br>notie就是一款用来替代alert的消息弹框库。</p>\n<a id=\"more\"></a>\n<p>它的几项主要功能：</p>\n<ol>\n<li>alert的功能：提醒用户</li>\n<li>弹出选项让用户确认</li>\n<li>允许用户输入信息</li>\n<li>允许用户选择选项</li>\n<li>允许用户选择日期</li>\n</ol>\n<p>放一张官网的demo图看一下notie的效果，还是非常优雅的：<br> <img src=\"https://github.com/jaredreich/notie/blob/master/demo.gif?raw=true\" alt=\"\"></p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><p>既然是小而美的库，使用起来也是相当方便的：</p>\n<ol>\n<li><p>安装<br> 在HTML内加载notie文件，并加载notie的样式文件</p>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://unpkg.com/notie/dist/notie.min.css\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"comment\">/* override styles here */</span></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.notie-container</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      box-shadow: none;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Bottom of body --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://unpkg.com/notie\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>业务调用<br> 在业务js中调用notie API：</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notie.alert(&#123;</span><br><span class=\"line\">  type: <span class=\"built_in\">Number</span>|<span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']</span></span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  stay: <span class=\"built_in\">Boolean</span>, <span class=\"comment\">// optional, default = false</span></span><br><span class=\"line\">  time: <span class=\"built_in\">Number</span>, <span class=\"comment\">// optional, default = 3, minimum = 1,</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span> <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">notie.force(&#123;</span><br><span class=\"line\">  type: <span class=\"built_in\">Number</span>|<span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 5, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']</span></span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  buttonText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'OK'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  callback: <span class=\"built_in\">Function</span> <span class=\"comment\">// optional</span></span><br><span class=\"line\">&#125;, callbackOptional())</span><br><span class=\"line\"></span><br><span class=\"line\">notie.confirm(&#123;</span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  submitText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Yes'</span></span><br><span class=\"line\">  cancelText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Cancel'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  submitCallback: <span class=\"built_in\">Function</span>, <span class=\"comment\">// optional</span></span><br><span class=\"line\">  cancelCallback: <span class=\"built_in\">Function</span> <span class=\"comment\">// optional</span></span><br><span class=\"line\">&#125;, submitCallbackOptional(), cancelCallbackOptional())</span><br><span class=\"line\"></span><br><span class=\"line\">notie.input(&#123;</span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  submitText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Submit'</span></span><br><span class=\"line\">  cancelText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Cancel'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  submitCallback: <span class=\"built_in\">Function</span>(value), <span class=\"comment\">// optional</span></span><br><span class=\"line\">  cancelCallback: <span class=\"built_in\">Function</span>(value), <span class=\"comment\">// optional</span></span><br><span class=\"line\">  autocapitalize: <span class=\"string\">'words'</span>, <span class=\"comment\">// default: 'none'</span></span><br><span class=\"line\">  autocomplete: <span class=\"string\">'on'</span>, <span class=\"comment\">// default: 'off'</span></span><br><span class=\"line\">  autocorrect: <span class=\"string\">'off'</span>, <span class=\"comment\">// default: 'off'</span></span><br><span class=\"line\">  autofocus: <span class=\"string\">'true'</span>, <span class=\"comment\">// default: 'true'</span></span><br><span class=\"line\">  inputmode: <span class=\"string\">'latin'</span>, <span class=\"comment\">// default: 'verbatim'</span></span><br><span class=\"line\">  max: <span class=\"string\">'10000'</span>,<span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  maxlength: <span class=\"string\">'10'</span>, <span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  min: <span class=\"string\">'5'</span>, <span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  minlength: <span class=\"string\">'1'</span>, <span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  placeholder: <span class=\"string\">'Jane Smith'</span>, <span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  spellcheck: <span class=\"string\">'false'</span>, <span class=\"comment\">// default: 'default'</span></span><br><span class=\"line\">  step: <span class=\"string\">'5'</span>, <span class=\"comment\">// default: 'any'</span></span><br><span class=\"line\">  type: <span class=\"string\">'text'</span>, <span class=\"comment\">// default: 'text'</span></span><br><span class=\"line\">  allowed: [<span class=\"string\">'an'</span>, <span class=\"string\">'s'</span>] <span class=\"comment\">// Default: null, 'an' = alphanumeric, 'a' = alpha, 'n' = numeric, 's' = spaces allowed. Can be custom RegExp, ex. allowed: new RegExp('[^0-9]', 'g')</span></span><br><span class=\"line\">&#125;, submitCallbackOptional(value), cancelCallbackOptional(value))</span><br><span class=\"line\"></span><br><span class=\"line\">notie.select(&#123;</span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  cancelText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Cancel'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'bottom', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  choices: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"built_in\">Number</span>|<span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 1</span></span><br><span class=\"line\">      text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">      handler: <span class=\"built_in\">Function</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  cancelCallback: <span class=\"built_in\">Function</span> <span class=\"comment\">// optional</span></span><br><span class=\"line\">&#125;, cancelCallbackOptional())</span><br><span class=\"line\"></span><br><span class=\"line\">notie.date(&#123;</span><br><span class=\"line\">  value: <span class=\"built_in\">Date</span>,</span><br><span class=\"line\">  submitText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'OK'</span></span><br><span class=\"line\">  cancelText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Cancel'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  submitCallback: <span class=\"built_in\">Function</span>(date), <span class=\"comment\">// optional</span></span><br><span class=\"line\">  cancelCallback: <span class=\"built_in\">Function</span>(date) <span class=\"comment\">// optional</span></span><br><span class=\"line\">&#125;, submitCallbackOptional(date), cancelCallbackOptional(date))</span><br></pre></td></tr></table></figure>\n<p> 最常用的还是alert了。<br> 如果我们想弹出一个成功的提示消息给用户只需简单调用如下：</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notie.alert(&#123;</span><br><span class=\"line\">    type: <span class=\"number\">1</span>,</span><br><span class=\"line\">    text: <span class=\"string\">\"Success\"</span>,</span><br><span class=\"line\">    stay: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 使用的时候可以多多尝试，看看哪个效果是自己需要的。</p>\n</li>\n<li><p>在React等前端框架下使用<br> 在如今前端工程化的背景下，notie同样也支持在如React等前端框架下使用。<br> 首先要使用npm安装notie：</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install notie</span><br></pre></td></tr></table></figure>\n<p> 然后引入notie并加载需要使用的notie组件:</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 加载全部</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> notie <span class=\"keyword\">from</span> <span class=\"string\">'notie'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 加载部分</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;alert, force, confirm, input, selecct, date, setOptions, hideAlerts&#125; <span class=\"keyword\">from</span> <span class=\"string\">'notie'</span>;</span><br></pre></td></tr></table></figure>\n<p> 调用API的方式和浏览器使用方式一致。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  14/53，每周一篇博，坚持！</p>\n<p>每周一篇博文的目标还是比较艰巨的，有时候时间比较紧张的时候根本来不及想主题。。<img class=\"emoji\" src=\"https://emojipedia-us.s3.amazonaws.com/thumbs/320/apple/129/face-with-tears-of-joy_1f602.png\" align=\"absmiddle\"></p>\n<p>准备开一个系列，介绍下我收藏的那些小而美的JS开源库。这是第一篇，关于一个设计良好的美观实用PC、移动兼容良好的弹框库–<a href=\"https://github.com/jaredreich/notie\" target=\"_blank\" rel=\"noopener\">notie</a>。</p>\n<h4 id=\"关于notie\"><a href=\"#关于notie\" class=\"headerlink\" title=\"关于notie\"></a>关于notie</h4><p>众所周知，浏览器默认的弹框–alert是异常丑陋的，我们在业务中通常是不会直接使用alert来显示应用弹框消息的，一般都会重新设计应用自己的弹框来替代之。<br>notie就是一款用来替代alert的消息弹框库。</p>","more":"<p>它的几项主要功能：</p>\n<ol>\n<li>alert的功能：提醒用户</li>\n<li>弹出选项让用户确认</li>\n<li>允许用户输入信息</li>\n<li>允许用户选择选项</li>\n<li>允许用户选择日期</li>\n</ol>\n<p>放一张官网的demo图看一下notie的效果，还是非常优雅的：<br> <img src=\"https://github.com/jaredreich/notie/blob/master/demo.gif?raw=true\" alt=\"\"></p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><p>既然是小而美的库，使用起来也是相当方便的：</p>\n<ol>\n<li><p>安装<br> 在HTML内加载notie文件，并加载notie的样式文件</p>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://unpkg.com/notie/dist/notie.min.css\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"comment\">/* override styles here */</span></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.notie-container</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      box-shadow: none;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Bottom of body --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://unpkg.com/notie\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>业务调用<br> 在业务js中调用notie API：</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notie.alert(&#123;</span><br><span class=\"line\">  type: <span class=\"built_in\">Number</span>|<span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']</span></span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  stay: <span class=\"built_in\">Boolean</span>, <span class=\"comment\">// optional, default = false</span></span><br><span class=\"line\">  time: <span class=\"built_in\">Number</span>, <span class=\"comment\">// optional, default = 3, minimum = 1,</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span> <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">notie.force(&#123;</span><br><span class=\"line\">  type: <span class=\"built_in\">Number</span>|<span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 5, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']</span></span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  buttonText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'OK'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  callback: <span class=\"built_in\">Function</span> <span class=\"comment\">// optional</span></span><br><span class=\"line\">&#125;, callbackOptional())</span><br><span class=\"line\"></span><br><span class=\"line\">notie.confirm(&#123;</span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  submitText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Yes'</span></span><br><span class=\"line\">  cancelText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Cancel'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  submitCallback: <span class=\"built_in\">Function</span>, <span class=\"comment\">// optional</span></span><br><span class=\"line\">  cancelCallback: <span class=\"built_in\">Function</span> <span class=\"comment\">// optional</span></span><br><span class=\"line\">&#125;, submitCallbackOptional(), cancelCallbackOptional())</span><br><span class=\"line\"></span><br><span class=\"line\">notie.input(&#123;</span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  submitText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Submit'</span></span><br><span class=\"line\">  cancelText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Cancel'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  submitCallback: <span class=\"built_in\">Function</span>(value), <span class=\"comment\">// optional</span></span><br><span class=\"line\">  cancelCallback: <span class=\"built_in\">Function</span>(value), <span class=\"comment\">// optional</span></span><br><span class=\"line\">  autocapitalize: <span class=\"string\">'words'</span>, <span class=\"comment\">// default: 'none'</span></span><br><span class=\"line\">  autocomplete: <span class=\"string\">'on'</span>, <span class=\"comment\">// default: 'off'</span></span><br><span class=\"line\">  autocorrect: <span class=\"string\">'off'</span>, <span class=\"comment\">// default: 'off'</span></span><br><span class=\"line\">  autofocus: <span class=\"string\">'true'</span>, <span class=\"comment\">// default: 'true'</span></span><br><span class=\"line\">  inputmode: <span class=\"string\">'latin'</span>, <span class=\"comment\">// default: 'verbatim'</span></span><br><span class=\"line\">  max: <span class=\"string\">'10000'</span>,<span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  maxlength: <span class=\"string\">'10'</span>, <span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  min: <span class=\"string\">'5'</span>, <span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  minlength: <span class=\"string\">'1'</span>, <span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  placeholder: <span class=\"string\">'Jane Smith'</span>, <span class=\"comment\">// default: ''</span></span><br><span class=\"line\">  spellcheck: <span class=\"string\">'false'</span>, <span class=\"comment\">// default: 'default'</span></span><br><span class=\"line\">  step: <span class=\"string\">'5'</span>, <span class=\"comment\">// default: 'any'</span></span><br><span class=\"line\">  type: <span class=\"string\">'text'</span>, <span class=\"comment\">// default: 'text'</span></span><br><span class=\"line\">  allowed: [<span class=\"string\">'an'</span>, <span class=\"string\">'s'</span>] <span class=\"comment\">// Default: null, 'an' = alphanumeric, 'a' = alpha, 'n' = numeric, 's' = spaces allowed. Can be custom RegExp, ex. allowed: new RegExp('[^0-9]', 'g')</span></span><br><span class=\"line\">&#125;, submitCallbackOptional(value), cancelCallbackOptional(value))</span><br><span class=\"line\"></span><br><span class=\"line\">notie.select(&#123;</span><br><span class=\"line\">  text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  cancelText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Cancel'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'bottom', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  choices: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      type: <span class=\"built_in\">Number</span>|<span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 1</span></span><br><span class=\"line\">      text: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">      handler: <span class=\"built_in\">Function</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  cancelCallback: <span class=\"built_in\">Function</span> <span class=\"comment\">// optional</span></span><br><span class=\"line\">&#125;, cancelCallbackOptional())</span><br><span class=\"line\"></span><br><span class=\"line\">notie.date(&#123;</span><br><span class=\"line\">  value: <span class=\"built_in\">Date</span>,</span><br><span class=\"line\">  submitText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'OK'</span></span><br><span class=\"line\">  cancelText: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'Cancel'</span></span><br><span class=\"line\">  position: <span class=\"built_in\">String</span>, <span class=\"comment\">// optional, default = 'top', enum: ['top', 'bottom']</span></span><br><span class=\"line\">  submitCallback: <span class=\"built_in\">Function</span>(date), <span class=\"comment\">// optional</span></span><br><span class=\"line\">  cancelCallback: <span class=\"built_in\">Function</span>(date) <span class=\"comment\">// optional</span></span><br><span class=\"line\">&#125;, submitCallbackOptional(date), cancelCallbackOptional(date))</span><br></pre></td></tr></table></figure>\n<p> 最常用的还是alert了。<br> 如果我们想弹出一个成功的提示消息给用户只需简单调用如下：</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notie.alert(&#123;</span><br><span class=\"line\">    type: <span class=\"number\">1</span>,</span><br><span class=\"line\">    text: <span class=\"string\">\"Success\"</span>,</span><br><span class=\"line\">    stay: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 使用的时候可以多多尝试，看看哪个效果是自己需要的。</p>\n</li>\n<li><p>在React等前端框架下使用<br> 在如今前端工程化的背景下，notie同样也支持在如React等前端框架下使用。<br> 首先要使用npm安装notie：</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install notie</span><br></pre></td></tr></table></figure>\n<p> 然后引入notie并加载需要使用的notie组件:</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 加载全部</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> notie <span class=\"keyword\">from</span> <span class=\"string\">'notie'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 加载部分</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;alert, force, confirm, input, selecct, date, setOptions, hideAlerts&#125; <span class=\"keyword\">from</span> <span class=\"string\">'notie'</span>;</span><br></pre></td></tr></table></figure>\n<p> 调用API的方式和浏览器使用方式一致。</p>\n</li>\n</ol>","sticky":0},{"title":"分享我收藏的小而美JS库[二] -- KeyPress","show":true,"date":"2018-06-18T13:11:24.000Z","_content":"<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  17/53，每周一篇博，坚持！\n\n这一篇博文是小而美的库分享第二篇，准备分享一个JS键盘事件捕获的库，名字就叫做[KeyPress](http://dmauro.github.io/Keypress/)。\n\n#### 关于KeyPress\n我们在web开发过程中，为了给用户带来良好的用户体验，通常就不仅仅需要响应用户的鼠标操作，更多的是需要响应用户的键盘操作。通常这时候我们总是需要各种搜索查询键盘上各个按键对应的键码。\n这是一个很繁琐而又没什么技术含量的事。而\"KeyPress\"这个库基本上就让我们摆脱了查询键码的繁琐过程，托管了我们对键盘映射的响应。\n\"非常容易使用，大小合理(9kb)，没有任何依赖，健壮性良好的键盘输入捕获JS库\"，这是KeyPress的自我评价。\n<!--more-->\n\n它能提供的功能特性包括：\n1. 触发按键按下或释放\n2. 任意的按键都可以作为触发按键\n3. 特别地连击计算\n4. 按键序列的组合\n5. 其他的一些特性\n\n什么意思？我们上例子看下\n\n#### 使用方式\n1. 首先需要下载它的库文件：[ZIP](https://github.com/dmauro/Keypress/zipball/master)\n2. 在前端页面中引用该JS库文件\n3. 初始化一个事件监听器\n  ```js\n  var listener = new window.keypress.Listener();\n  ```\n4. 接下来就可以注册相应按键的事件监听了，我们看几个例子，妙就妙在这里\n  4.1 简单按键组合\n    ```js\n    listener.simple_combo(\"shift s\",function(){\n      console.log(\"You pressed shift and s\");\n    });\n    ```\n    simple_combo是库函数的API，第一个参数表示监听的是shift键和s键的按下，你可以写一系列的键，以空格分隔，这样是不是就脱离了查询键码组合了，直接识别键名称！\n    第二个参数是回调函数，就不多解释了。\n\n  4.2 计数\n    ```js\n   listener.counting_combo(\"tab space\",function(e,count){\n      console.log(\"You've pressed this \" + count + \"times.\");\n   });\n    ```\n    这段代码调用counting_combo API创建了一个计数器，可以统计tab space键按下的总次数。\n\n  4.3 按键序列\n  大家都玩过魂斗罗吧？我们都知道魂斗罗里面有个按键组合，如果正确按下了就会触发30条命。这种功能就可以使用按键序列事件来监听。\n  ```js\n  listener.sequence_combo(\"up up down down left right left right b a enter\", function() {\n    lives = 30;\n  }, true);\n  ```\n\n 如上的一些已经完全够我们在web开发过程中自由发挥了，毕竟我们在开发过程中大部分都是用来监听用户的按键组合。\n\n KeyPress还有一些高级用法，这里仅举几个例子说明用法，虽然实际中可能不会存在这样的场景：\n register_combo：使用该API注册一系列事件动作。\n ```js\n listener.register_combo({\n    // 按键组合，空格分隔或者字符数组\n    \"keys\"              : null,\n    // 按键按下时的回调函数（都针对keys设置的按键组合）\n    \"on_keydown\"        : null,\n    // 按键释放时的回调函数\n    \"on_keyup\"          : null,\n    // 等价于回调函数设置event.preventDefault()，而且如果是组合按键的话，针对每个按键都event.preventDefault()了\n    \"prevent_default\"   : false,\n    ... ...\n  });\n ```\n\n 这个库最方便的地方便在于不用记忆键码也可以写事件监听，并且支持任意的按键组合，让我们可以专心写事件回调逻辑，按键事件监听的事都交给库来解决。这会很大程度上提高我们编码的效率。\n\n 更详细的用法大家可以查看官方文档。\n","source":"_posts/js-lib-share2.md","raw":"title: 分享我收藏的小而美JS库[二] -- KeyPress\nshow: true\ndate: 2018-06-18 21:11:24\ntags: [JS库]\ncategories: 技术人生\n---\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  17/53，每周一篇博，坚持！\n\n这一篇博文是小而美的库分享第二篇，准备分享一个JS键盘事件捕获的库，名字就叫做[KeyPress](http://dmauro.github.io/Keypress/)。\n\n#### 关于KeyPress\n我们在web开发过程中，为了给用户带来良好的用户体验，通常就不仅仅需要响应用户的鼠标操作，更多的是需要响应用户的键盘操作。通常这时候我们总是需要各种搜索查询键盘上各个按键对应的键码。\n这是一个很繁琐而又没什么技术含量的事。而\"KeyPress\"这个库基本上就让我们摆脱了查询键码的繁琐过程，托管了我们对键盘映射的响应。\n\"非常容易使用，大小合理(9kb)，没有任何依赖，健壮性良好的键盘输入捕获JS库\"，这是KeyPress的自我评价。\n<!--more-->\n\n它能提供的功能特性包括：\n1. 触发按键按下或释放\n2. 任意的按键都可以作为触发按键\n3. 特别地连击计算\n4. 按键序列的组合\n5. 其他的一些特性\n\n什么意思？我们上例子看下\n\n#### 使用方式\n1. 首先需要下载它的库文件：[ZIP](https://github.com/dmauro/Keypress/zipball/master)\n2. 在前端页面中引用该JS库文件\n3. 初始化一个事件监听器\n  ```js\n  var listener = new window.keypress.Listener();\n  ```\n4. 接下来就可以注册相应按键的事件监听了，我们看几个例子，妙就妙在这里\n  4.1 简单按键组合\n    ```js\n    listener.simple_combo(\"shift s\",function(){\n      console.log(\"You pressed shift and s\");\n    });\n    ```\n    simple_combo是库函数的API，第一个参数表示监听的是shift键和s键的按下，你可以写一系列的键，以空格分隔，这样是不是就脱离了查询键码组合了，直接识别键名称！\n    第二个参数是回调函数，就不多解释了。\n\n  4.2 计数\n    ```js\n   listener.counting_combo(\"tab space\",function(e,count){\n      console.log(\"You've pressed this \" + count + \"times.\");\n   });\n    ```\n    这段代码调用counting_combo API创建了一个计数器，可以统计tab space键按下的总次数。\n\n  4.3 按键序列\n  大家都玩过魂斗罗吧？我们都知道魂斗罗里面有个按键组合，如果正确按下了就会触发30条命。这种功能就可以使用按键序列事件来监听。\n  ```js\n  listener.sequence_combo(\"up up down down left right left right b a enter\", function() {\n    lives = 30;\n  }, true);\n  ```\n\n 如上的一些已经完全够我们在web开发过程中自由发挥了，毕竟我们在开发过程中大部分都是用来监听用户的按键组合。\n\n KeyPress还有一些高级用法，这里仅举几个例子说明用法，虽然实际中可能不会存在这样的场景：\n register_combo：使用该API注册一系列事件动作。\n ```js\n listener.register_combo({\n    // 按键组合，空格分隔或者字符数组\n    \"keys\"              : null,\n    // 按键按下时的回调函数（都针对keys设置的按键组合）\n    \"on_keydown\"        : null,\n    // 按键释放时的回调函数\n    \"on_keyup\"          : null,\n    // 等价于回调函数设置event.preventDefault()，而且如果是组合按键的话，针对每个按键都event.preventDefault()了\n    \"prevent_default\"   : false,\n    ... ...\n  });\n ```\n\n 这个库最方便的地方便在于不用记忆键码也可以写事件监听，并且支持任意的按键组合，让我们可以专心写事件回调逻辑，按键事件监听的事都交给库来解决。这会很大程度上提高我们编码的效率。\n\n 更详细的用法大家可以查看官方文档。\n","slug":"js-lib-share2","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvj003jfnpvxcp3urf1","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  17/53，每周一篇博，坚持！</p>\n<p>这一篇博文是小而美的库分享第二篇，准备分享一个JS键盘事件捕获的库，名字就叫做<a href=\"http://dmauro.github.io/Keypress/\" target=\"_blank\" rel=\"noopener\">KeyPress</a>。</p>\n<h4 id=\"关于KeyPress\"><a href=\"#关于KeyPress\" class=\"headerlink\" title=\"关于KeyPress\"></a>关于KeyPress</h4><p>我们在web开发过程中，为了给用户带来良好的用户体验，通常就不仅仅需要响应用户的鼠标操作，更多的是需要响应用户的键盘操作。通常这时候我们总是需要各种搜索查询键盘上各个按键对应的键码。<br>这是一个很繁琐而又没什么技术含量的事。而”KeyPress”这个库基本上就让我们摆脱了查询键码的繁琐过程，托管了我们对键盘映射的响应。<br>“非常容易使用，大小合理(9kb)，没有任何依赖，健壮性良好的键盘输入捕获JS库”，这是KeyPress的自我评价。<br><a id=\"more\"></a></p>\n<p>它能提供的功能特性包括：</p>\n<ol>\n<li>触发按键按下或释放</li>\n<li>任意的按键都可以作为触发按键</li>\n<li>特别地连击计算</li>\n<li>按键序列的组合</li>\n<li>其他的一些特性</li>\n</ol>\n<p>什么意思？我们上例子看下</p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><ol>\n<li>首先需要下载它的库文件：<a href=\"https://github.com/dmauro/Keypress/zipball/master\" target=\"_blank\" rel=\"noopener\">ZIP</a></li>\n<li>在前端页面中引用该JS库文件</li>\n<li><p>初始化一个事件监听器</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> listener = <span class=\"keyword\">new</span> <span class=\"built_in\">window</span>.keypress.Listener();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接下来就可以注册相应按键的事件监听了，我们看几个例子，妙就妙在这里<br>4.1 简单按键组合</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.simple_combo(<span class=\"string\">\"shift s\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"You pressed shift and s\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> simple_combo是库函数的API，第一个参数表示监听的是shift键和s键的按下，你可以写一系列的键，以空格分隔，这样是不是就脱离了查询键码组合了，直接识别键名称！<br> 第二个参数是回调函数，就不多解释了。</p>\n<p>4.2 计数</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.counting_combo(<span class=\"string\">\"tab space\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e,count</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"You've pressed this \"</span> + count + <span class=\"string\">\"times.\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 这段代码调用counting_combo API创建了一个计数器，可以统计tab space键按下的总次数。</p>\n<p>4.3 按键序列<br>大家都玩过魂斗罗吧？我们都知道魂斗罗里面有个按键组合，如果正确按下了就会触发30条命。这种功能就可以使用按键序列事件来监听。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.sequence_combo(<span class=\"string\">\"up up down down left right left right b a enter\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  lives = <span class=\"number\">30</span>;</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n<p>如上的一些已经完全够我们在web开发过程中自由发挥了，毕竟我们在开发过程中大部分都是用来监听用户的按键组合。</p>\n<p>KeyPress还有一些高级用法，这里仅举几个例子说明用法，虽然实际中可能不会存在这样的场景：<br>register_combo：使用该API注册一系列事件动作。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.register_combo(&#123;</span><br><span class=\"line\">   <span class=\"comment\">// 按键组合，空格分隔或者字符数组</span></span><br><span class=\"line\">   <span class=\"string\">\"keys\"</span>              : <span class=\"literal\">null</span>,</span><br><span class=\"line\">   <span class=\"comment\">// 按键按下时的回调函数（都针对keys设置的按键组合）</span></span><br><span class=\"line\">   <span class=\"string\">\"on_keydown\"</span>        : <span class=\"literal\">null</span>,</span><br><span class=\"line\">   <span class=\"comment\">// 按键释放时的回调函数</span></span><br><span class=\"line\">   <span class=\"string\">\"on_keyup\"</span>          : <span class=\"literal\">null</span>,</span><br><span class=\"line\">   <span class=\"comment\">// 等价于回调函数设置event.preventDefault()，而且如果是组合按键的话，针对每个按键都event.preventDefault()了</span></span><br><span class=\"line\">   <span class=\"string\">\"prevent_default\"</span>   : <span class=\"literal\">false</span>,</span><br><span class=\"line\">   ... ...</span><br><span class=\"line\"> &#125;);</span><br></pre></td></tr></table></figure>\n<p>这个库最方便的地方便在于不用记忆键码也可以写事件监听，并且支持任意的按键组合，让我们可以专心写事件回调逻辑，按键事件监听的事都交给库来解决。这会很大程度上提高我们编码的效率。</p>\n<p>更详细的用法大家可以查看官方文档。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  17/53，每周一篇博，坚持！</p>\n<p>这一篇博文是小而美的库分享第二篇，准备分享一个JS键盘事件捕获的库，名字就叫做<a href=\"http://dmauro.github.io/Keypress/\" target=\"_blank\" rel=\"noopener\">KeyPress</a>。</p>\n<h4 id=\"关于KeyPress\"><a href=\"#关于KeyPress\" class=\"headerlink\" title=\"关于KeyPress\"></a>关于KeyPress</h4><p>我们在web开发过程中，为了给用户带来良好的用户体验，通常就不仅仅需要响应用户的鼠标操作，更多的是需要响应用户的键盘操作。通常这时候我们总是需要各种搜索查询键盘上各个按键对应的键码。<br>这是一个很繁琐而又没什么技术含量的事。而”KeyPress”这个库基本上就让我们摆脱了查询键码的繁琐过程，托管了我们对键盘映射的响应。<br>“非常容易使用，大小合理(9kb)，没有任何依赖，健壮性良好的键盘输入捕获JS库”，这是KeyPress的自我评价。<br>","more":"</p>\n<p>它能提供的功能特性包括：</p>\n<ol>\n<li>触发按键按下或释放</li>\n<li>任意的按键都可以作为触发按键</li>\n<li>特别地连击计算</li>\n<li>按键序列的组合</li>\n<li>其他的一些特性</li>\n</ol>\n<p>什么意思？我们上例子看下</p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><ol>\n<li>首先需要下载它的库文件：<a href=\"https://github.com/dmauro/Keypress/zipball/master\" target=\"_blank\" rel=\"noopener\">ZIP</a></li>\n<li>在前端页面中引用该JS库文件</li>\n<li><p>初始化一个事件监听器</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> listener = <span class=\"keyword\">new</span> <span class=\"built_in\">window</span>.keypress.Listener();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接下来就可以注册相应按键的事件监听了，我们看几个例子，妙就妙在这里<br>4.1 简单按键组合</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.simple_combo(<span class=\"string\">\"shift s\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"You pressed shift and s\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> simple_combo是库函数的API，第一个参数表示监听的是shift键和s键的按下，你可以写一系列的键，以空格分隔，这样是不是就脱离了查询键码组合了，直接识别键名称！<br> 第二个参数是回调函数，就不多解释了。</p>\n<p>4.2 计数</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.counting_combo(<span class=\"string\">\"tab space\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e,count</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"You've pressed this \"</span> + count + <span class=\"string\">\"times.\"</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 这段代码调用counting_combo API创建了一个计数器，可以统计tab space键按下的总次数。</p>\n<p>4.3 按键序列<br>大家都玩过魂斗罗吧？我们都知道魂斗罗里面有个按键组合，如果正确按下了就会触发30条命。这种功能就可以使用按键序列事件来监听。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.sequence_combo(<span class=\"string\">\"up up down down left right left right b a enter\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  lives = <span class=\"number\">30</span>;</span><br><span class=\"line\">&#125;, <span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure>\n<p>如上的一些已经完全够我们在web开发过程中自由发挥了，毕竟我们在开发过程中大部分都是用来监听用户的按键组合。</p>\n<p>KeyPress还有一些高级用法，这里仅举几个例子说明用法，虽然实际中可能不会存在这样的场景：<br>register_combo：使用该API注册一系列事件动作。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listener.register_combo(&#123;</span><br><span class=\"line\">   <span class=\"comment\">// 按键组合，空格分隔或者字符数组</span></span><br><span class=\"line\">   <span class=\"string\">\"keys\"</span>              : <span class=\"literal\">null</span>,</span><br><span class=\"line\">   <span class=\"comment\">// 按键按下时的回调函数（都针对keys设置的按键组合）</span></span><br><span class=\"line\">   <span class=\"string\">\"on_keydown\"</span>        : <span class=\"literal\">null</span>,</span><br><span class=\"line\">   <span class=\"comment\">// 按键释放时的回调函数</span></span><br><span class=\"line\">   <span class=\"string\">\"on_keyup\"</span>          : <span class=\"literal\">null</span>,</span><br><span class=\"line\">   <span class=\"comment\">// 等价于回调函数设置event.preventDefault()，而且如果是组合按键的话，针对每个按键都event.preventDefault()了</span></span><br><span class=\"line\">   <span class=\"string\">\"prevent_default\"</span>   : <span class=\"literal\">false</span>,</span><br><span class=\"line\">   ... ...</span><br><span class=\"line\"> &#125;);</span><br></pre></td></tr></table></figure>\n<p>这个库最方便的地方便在于不用记忆键码也可以写事件监听，并且支持任意的按键组合，让我们可以专心写事件回调逻辑，按键事件监听的事都交给库来解决。这会很大程度上提高我们编码的效率。</p>\n<p>更详细的用法大家可以查看官方文档。</p>\n</li>\n</ol>","sticky":0},{"title":"分享我收藏的小而美JS库[三] -- Vivid.js","show":true,"date":"2018-07-01T11:00:00.000Z","_content":"<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  18/53，每周一篇博，坚持！\n\n今天七月一号了，不知不觉2018年又已经过去了一半了，工作后压力大感觉时间都过的快了些。想来也是，上了年纪了，现在的一年占你所剩人生的比例越来越重了，不由得让人对时间的流逝关注起来。大家都加油，与诸君共勉。\n\n这一篇博文是小而美的库分享第三篇，准备分享一个SVG图标的库，名字叫做[Vivid.js](https://webkul.github.io/vivid/)。\n\n#### 关于Vivid.js\n现如今，我们在web开发过程中，需要用到图标的时候已经很少直接插入一张图片了，更多的时候使用的都是SVG、iconfont形式的图标了。这种图标的好处就是可以自定义大小、颜色等样式。\n这其中，国内有阿里开源的[阿里巴巴矢量图标库](http://iconfont.cn/home/index)，也有[bootstrap](https://v3.bootcss.com/)之类好用的图标库。\nVivid.js也是一款优秀的矢量图标库，可以作为备选之一。\n\n<!--more-->\n\n它有近百个自带的图标，自定义样式方式也非常方便，可以直接在元素上定义属性，使用起来也是相当轻量。\n\n#### 使用方式\n1. 首先在前端页面中依赖Vivid.js的库文件\n    `<script src=\"https://cdn.jsdelivr.net/npm/vivid-icons\" type=\"text/javascript\"></script>`\n2. 找到所需使用图标的名字，如'doc'\n3. 加载图标\n    `<i data-vi=\"doc\"></i>`\n  就会在页面中渲染一个书页的图标了。\n  \n4. 自定义图标样式\n  有时候原生的样式并不能满足我们的需求，如何进行一些样式的自定义呢？\n  \n  4.1 自定义大小\n  自定义图标的大小，只需要在图标上增加属性：`data-vi-size=\"number\"`,number为要指定的像素大小值，如：\n  `<i data-vi=\"doc\" data-vi-size=\"96\"></i>`\n  \n  4.2 自定义颜色\n  每个Vivid图标由三种颜色构成：primary，accent，prop。每一种颜色构成都可以单独自定义。\n  这就有点像画家可以通过自己调节红黄蓝三原色的组成形成新颜色似的。\n  组合的方式为：\n      ```html\n        data-vi-primary=\"#hexcode\"\n        data-vi-accent=\"#hexcode\"\n        data-vi-prop=\"#hexcode\"\n      ```\n  在元素上修改相应属性即可。这里我试验过不一定非要16进制的颜色代码，跟我们写css时一样，颜色代码如\"red\",\"green\"等也是可以的。\n  有点让人费解的就是，primary、accent、prop等控制的是图标的哪个部分，这个文档没有详细说明，primary和accent倒还是好\"望文生义\"，就是这个\"prop\"颜色成分是控制哪儿的不太能搞清，只能自己用的时候试下了。\n  \n5. 默认样式的自定义\n  如果嫌每次重新定义图标的样式都要增加属性的方式比较麻烦，可以直接修改图标库文件。这个也是比较简单的。\n  \n  5.1 安装必备环境\n    5.1.1 安装node，不再赘述\n    5.1.2 安装npm-run-all\n      `npm i npm-run-all --save-dev`\n      一定要安装该库，官方文档里没有提到，不安装运行`npm run build`时必报错：\"sh: run-s: command not found\"\n    5.1.3 安装webpack-cli\n      `npm i webpack-cli -g`\n      全局安装webpack-cli，编译的时候需要用到，否则会报：\"It needs to be installed alongside webpack to use the CLI\"\n  5.2 下载图标库源码\n    `npm install vivid-icons`\n    安装前需要保证当前目录下存在package.json文件，所以先运行：\n    `npm init`\n    一路回车即可\n  5.2 进入图标库目录并安装依赖\n    `cd node_modules/vivid-icons && npm install`\n  5.3 修改配置\n    `cd src && vi config.js`\n    配置文件的内容：\n    ```\n        export let iconConfig = { \n            size: \"48\", \n            primaryColor: \"#FF6E6E\", \n            accentColor: \"#0C0058\", \n            propColor: \"#FFFFFF\" \n         } \n    ```\n    修改对应的属性值\n  5.4 编译\n    `npm run build`\n  5.5 使用编译的源码库\n    编译完成后项目会生成新的图标库资源，路径在\"dist/vivid-icons.min.js\"\n    \n6. 增加图标\n  有时候官方的图标不够用，自己想要增加图标该如何做呢？\n  继续上述第五步的操作，可以任意增删改icons目录下的图标文件，需要注意的是SVG图标文件的每个SVG元素都必须包含\"vi-primary\",\"vi-accent\"类，以至于才可以在\"src/config.js\"里自定义颜色。\n  如增加一个\"chat\"图标:\n  ```html\n     <svg id=\"chat\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n         <defs>\n             <style>\n             .vi-primary {\n                 fill: #ffb400;\n             }\n     \n             .vi-accent {\n                 fill: #070c2b;\n             }\n             </style>\n         </defs>\n         <path class=\"vi-primary\" d=\"M24,39.765A18.556,18.556,0,0,1,13.924,37.1L7,44V23.882l0.012,0.006C7.011,23.791,7,23.7,7,23.6,7,14.369,13.247,8,24,8s17,6.652,17,15.882S34.753,39.765,24,39.765Z\"/>   \n         <path class=\"vi-accent\" d=\"M31.994,20.99a3,3,0,1,1-3,3A3,3,0,0,1,31.994,20.99ZM24,21a3,3,0,1,1-3,3A3,3,0,0,1,24,21Zm-8,0a3,3,0,1,1-3,3A3,3,0,0,1,16,21Z\"/>   \n      </svg>\n  ```\n  运行：`npm run build`，引入\"dist/vivid-icons.min.js\"文件后就可以使用新加的图标了。\n    \n","source":"_posts/js-lib-share3.md","raw":"title: 分享我收藏的小而美JS库[三] -- Vivid.js\nshow: true\ndate: 2018-07-01 19:00:00\ntags: [JS库]\ncategories: 技术人生\n---\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  18/53，每周一篇博，坚持！\n\n今天七月一号了，不知不觉2018年又已经过去了一半了，工作后压力大感觉时间都过的快了些。想来也是，上了年纪了，现在的一年占你所剩人生的比例越来越重了，不由得让人对时间的流逝关注起来。大家都加油，与诸君共勉。\n\n这一篇博文是小而美的库分享第三篇，准备分享一个SVG图标的库，名字叫做[Vivid.js](https://webkul.github.io/vivid/)。\n\n#### 关于Vivid.js\n现如今，我们在web开发过程中，需要用到图标的时候已经很少直接插入一张图片了，更多的时候使用的都是SVG、iconfont形式的图标了。这种图标的好处就是可以自定义大小、颜色等样式。\n这其中，国内有阿里开源的[阿里巴巴矢量图标库](http://iconfont.cn/home/index)，也有[bootstrap](https://v3.bootcss.com/)之类好用的图标库。\nVivid.js也是一款优秀的矢量图标库，可以作为备选之一。\n\n<!--more-->\n\n它有近百个自带的图标，自定义样式方式也非常方便，可以直接在元素上定义属性，使用起来也是相当轻量。\n\n#### 使用方式\n1. 首先在前端页面中依赖Vivid.js的库文件\n    `<script src=\"https://cdn.jsdelivr.net/npm/vivid-icons\" type=\"text/javascript\"></script>`\n2. 找到所需使用图标的名字，如'doc'\n3. 加载图标\n    `<i data-vi=\"doc\"></i>`\n  就会在页面中渲染一个书页的图标了。\n  \n4. 自定义图标样式\n  有时候原生的样式并不能满足我们的需求，如何进行一些样式的自定义呢？\n  \n  4.1 自定义大小\n  自定义图标的大小，只需要在图标上增加属性：`data-vi-size=\"number\"`,number为要指定的像素大小值，如：\n  `<i data-vi=\"doc\" data-vi-size=\"96\"></i>`\n  \n  4.2 自定义颜色\n  每个Vivid图标由三种颜色构成：primary，accent，prop。每一种颜色构成都可以单独自定义。\n  这就有点像画家可以通过自己调节红黄蓝三原色的组成形成新颜色似的。\n  组合的方式为：\n      ```html\n        data-vi-primary=\"#hexcode\"\n        data-vi-accent=\"#hexcode\"\n        data-vi-prop=\"#hexcode\"\n      ```\n  在元素上修改相应属性即可。这里我试验过不一定非要16进制的颜色代码，跟我们写css时一样，颜色代码如\"red\",\"green\"等也是可以的。\n  有点让人费解的就是，primary、accent、prop等控制的是图标的哪个部分，这个文档没有详细说明，primary和accent倒还是好\"望文生义\"，就是这个\"prop\"颜色成分是控制哪儿的不太能搞清，只能自己用的时候试下了。\n  \n5. 默认样式的自定义\n  如果嫌每次重新定义图标的样式都要增加属性的方式比较麻烦，可以直接修改图标库文件。这个也是比较简单的。\n  \n  5.1 安装必备环境\n    5.1.1 安装node，不再赘述\n    5.1.2 安装npm-run-all\n      `npm i npm-run-all --save-dev`\n      一定要安装该库，官方文档里没有提到，不安装运行`npm run build`时必报错：\"sh: run-s: command not found\"\n    5.1.3 安装webpack-cli\n      `npm i webpack-cli -g`\n      全局安装webpack-cli，编译的时候需要用到，否则会报：\"It needs to be installed alongside webpack to use the CLI\"\n  5.2 下载图标库源码\n    `npm install vivid-icons`\n    安装前需要保证当前目录下存在package.json文件，所以先运行：\n    `npm init`\n    一路回车即可\n  5.2 进入图标库目录并安装依赖\n    `cd node_modules/vivid-icons && npm install`\n  5.3 修改配置\n    `cd src && vi config.js`\n    配置文件的内容：\n    ```\n        export let iconConfig = { \n            size: \"48\", \n            primaryColor: \"#FF6E6E\", \n            accentColor: \"#0C0058\", \n            propColor: \"#FFFFFF\" \n         } \n    ```\n    修改对应的属性值\n  5.4 编译\n    `npm run build`\n  5.5 使用编译的源码库\n    编译完成后项目会生成新的图标库资源，路径在\"dist/vivid-icons.min.js\"\n    \n6. 增加图标\n  有时候官方的图标不够用，自己想要增加图标该如何做呢？\n  继续上述第五步的操作，可以任意增删改icons目录下的图标文件，需要注意的是SVG图标文件的每个SVG元素都必须包含\"vi-primary\",\"vi-accent\"类，以至于才可以在\"src/config.js\"里自定义颜色。\n  如增加一个\"chat\"图标:\n  ```html\n     <svg id=\"chat\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n         <defs>\n             <style>\n             .vi-primary {\n                 fill: #ffb400;\n             }\n     \n             .vi-accent {\n                 fill: #070c2b;\n             }\n             </style>\n         </defs>\n         <path class=\"vi-primary\" d=\"M24,39.765A18.556,18.556,0,0,1,13.924,37.1L7,44V23.882l0.012,0.006C7.011,23.791,7,23.7,7,23.6,7,14.369,13.247,8,24,8s17,6.652,17,15.882S34.753,39.765,24,39.765Z\"/>   \n         <path class=\"vi-accent\" d=\"M31.994,20.99a3,3,0,1,1-3,3A3,3,0,0,1,31.994,20.99ZM24,21a3,3,0,1,1-3,3A3,3,0,0,1,24,21Zm-8,0a3,3,0,1,1-3,3A3,3,0,0,1,16,21Z\"/>   \n      </svg>\n  ```\n  运行：`npm run build`，引入\"dist/vivid-icons.min.js\"文件后就可以使用新加的图标了。\n    \n","slug":"js-lib-share3","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvp003mfnpv9thl6jiy","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  18/53，每周一篇博，坚持！</p>\n<p>今天七月一号了，不知不觉2018年又已经过去了一半了，工作后压力大感觉时间都过的快了些。想来也是，上了年纪了，现在的一年占你所剩人生的比例越来越重了，不由得让人对时间的流逝关注起来。大家都加油，与诸君共勉。</p>\n<p>这一篇博文是小而美的库分享第三篇，准备分享一个SVG图标的库，名字叫做<a href=\"https://webkul.github.io/vivid/\" target=\"_blank\" rel=\"noopener\">Vivid.js</a>。</p>\n<h4 id=\"关于Vivid-js\"><a href=\"#关于Vivid-js\" class=\"headerlink\" title=\"关于Vivid.js\"></a>关于Vivid.js</h4><p>现如今，我们在web开发过程中，需要用到图标的时候已经很少直接插入一张图片了，更多的时候使用的都是SVG、iconfont形式的图标了。这种图标的好处就是可以自定义大小、颜色等样式。<br>这其中，国内有阿里开源的<a href=\"http://iconfont.cn/home/index\" target=\"_blank\" rel=\"noopener\">阿里巴巴矢量图标库</a>，也有<a href=\"https://v3.bootcss.com/\" target=\"_blank\" rel=\"noopener\">bootstrap</a>之类好用的图标库。<br>Vivid.js也是一款优秀的矢量图标库，可以作为备选之一。</p>\n<a id=\"more\"></a>\n<p>它有近百个自带的图标，自定义样式方式也非常方便，可以直接在元素上定义属性，使用起来也是相当轻量。</p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><ol>\n<li>首先在前端页面中依赖Vivid.js的库文件<br> <code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vivid-icons&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</code></li>\n<li>找到所需使用图标的名字，如’doc’</li>\n<li><p>加载图标<br> <code>&lt;i data-vi=&quot;doc&quot;&gt;&lt;/i&gt;</code><br>就会在页面中渲染一个书页的图标了。</p>\n</li>\n<li><p>自定义图标样式<br>有时候原生的样式并不能满足我们的需求，如何进行一些样式的自定义呢？</p>\n<p>4.1 自定义大小<br>自定义图标的大小，只需要在图标上增加属性：<code>data-vi-size=&quot;number&quot;</code>,number为要指定的像素大小值，如：<br><code>&lt;i data-vi=&quot;doc&quot; data-vi-size=&quot;96&quot;&gt;&lt;/i&gt;</code></p>\n<p>4.2 自定义颜色<br>每个Vivid图标由三种颜色构成：primary，accent，prop。每一种颜色构成都可以单独自定义。<br>这就有点像画家可以通过自己调节红黄蓝三原色的组成形成新颜色似的。<br>组合的方式为：</p>\n   <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data-vi-primary=\"#hexcode\"</span><br><span class=\"line\">data-vi-accent=\"#hexcode\"</span><br><span class=\"line\">data-vi-prop=\"#hexcode\"</span><br></pre></td></tr></table></figure>\n<p>在元素上修改相应属性即可。这里我试验过不一定非要16进制的颜色代码，跟我们写css时一样，颜色代码如”red”,”green”等也是可以的。<br>有点让人费解的就是，primary、accent、prop等控制的是图标的哪个部分，这个文档没有详细说明，primary和accent倒还是好”望文生义”，就是这个”prop”颜色成分是控制哪儿的不太能搞清，只能自己用的时候试下了。</p>\n</li>\n<li><p>默认样式的自定义<br>如果嫌每次重新定义图标的样式都要增加属性的方式比较麻烦，可以直接修改图标库文件。这个也是比较简单的。</p>\n<p>5.1 安装必备环境<br> 5.1.1 安装node，不再赘述<br> 5.1.2 安装npm-run-all<br>   <code>npm i npm-run-all --save-dev</code><br>   一定要安装该库，官方文档里没有提到，不安装运行<code>npm run build</code>时必报错：”sh: run-s: command not found”<br> 5.1.3 安装webpack-cli<br>   <code>npm i webpack-cli -g</code><br>   全局安装webpack-cli，编译的时候需要用到，否则会报：”It needs to be installed alongside webpack to use the CLI”<br>5.2 下载图标库源码<br> <code>npm install vivid-icons</code><br> 安装前需要保证当前目录下存在package.json文件，所以先运行：<br> <code>npm init</code><br> 一路回车即可<br>5.2 进入图标库目录并安装依赖<br> <code>cd node_modules/vivid-icons &amp;&amp; npm install</code><br>5.3 修改配置<br> <code>cd src &amp;&amp; vi config.js</code><br> 配置文件的内容：</p>\n <figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export let iconConfig = &#123; </span><br><span class=\"line\"><span class=\"symbol\">    size:</span> <span class=\"string\">\"48\"</span>, </span><br><span class=\"line\"><span class=\"symbol\">    primaryColor:</span> <span class=\"string\">\"#FF6E6E\"</span>, </span><br><span class=\"line\"><span class=\"symbol\">    accentColor:</span> <span class=\"string\">\"#0C0058\"</span>, </span><br><span class=\"line\"><span class=\"symbol\">    propColor:</span> <span class=\"string\">\"#FFFFFF\"</span> </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p> 修改对应的属性值<br>5.4 编译<br> <code>npm run build</code><br>5.5 使用编译的源码库<br> 编译完成后项目会生成新的图标库资源，路径在”dist/vivid-icons.min.js”</p>\n</li>\n<li><p>增加图标<br>有时候官方的图标不够用，自己想要增加图标该如何做呢？<br>继续上述第五步的操作，可以任意增删改icons目录下的图标文件，需要注意的是SVG图标文件的每个SVG元素都必须包含”vi-primary”,”vi-accent”类，以至于才可以在”src/config.js”里自定义颜色。<br>如增加一个”chat”图标:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chat\"</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/2000/svg\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"48\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"48\"</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">\"0 0 48 48\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.vi-primary</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">fill</span>: <span class=\"selector-id\">#ffb400</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.vi-accent</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">fill</span>: <span class=\"selector-id\">#070c2b</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">class</span>=<span class=\"string\">\"vi-primary\"</span> <span class=\"attr\">d</span>=<span class=\"string\">\"M24,39.765A18.556,18.556,0,0,1,13.924,37.1L7,44V23.882l0.012,0.006C7.011,23.791,7,23.7,7,23.6,7,14.369,13.247,8,24,8s17,6.652,17,15.882S34.753,39.765,24,39.765Z\"</span>/&gt;</span>   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">class</span>=<span class=\"string\">\"vi-accent\"</span> <span class=\"attr\">d</span>=<span class=\"string\">\"M31.994,20.99a3,3,0,1,1-3,3A3,3,0,0,1,31.994,20.99ZM24,21a3,3,0,1,1-3,3A3,3,0,0,1,24,21Zm-8,0a3,3,0,1,1-3,3A3,3,0,0,1,16,21Z\"</span>/&gt;</span>   </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>运行：<code>npm run build</code>，引入”dist/vivid-icons.min.js”文件后就可以使用新加的图标了。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  18/53，每周一篇博，坚持！</p>\n<p>今天七月一号了，不知不觉2018年又已经过去了一半了，工作后压力大感觉时间都过的快了些。想来也是，上了年纪了，现在的一年占你所剩人生的比例越来越重了，不由得让人对时间的流逝关注起来。大家都加油，与诸君共勉。</p>\n<p>这一篇博文是小而美的库分享第三篇，准备分享一个SVG图标的库，名字叫做<a href=\"https://webkul.github.io/vivid/\" target=\"_blank\" rel=\"noopener\">Vivid.js</a>。</p>\n<h4 id=\"关于Vivid-js\"><a href=\"#关于Vivid-js\" class=\"headerlink\" title=\"关于Vivid.js\"></a>关于Vivid.js</h4><p>现如今，我们在web开发过程中，需要用到图标的时候已经很少直接插入一张图片了，更多的时候使用的都是SVG、iconfont形式的图标了。这种图标的好处就是可以自定义大小、颜色等样式。<br>这其中，国内有阿里开源的<a href=\"http://iconfont.cn/home/index\" target=\"_blank\" rel=\"noopener\">阿里巴巴矢量图标库</a>，也有<a href=\"https://v3.bootcss.com/\" target=\"_blank\" rel=\"noopener\">bootstrap</a>之类好用的图标库。<br>Vivid.js也是一款优秀的矢量图标库，可以作为备选之一。</p>","more":"<p>它有近百个自带的图标，自定义样式方式也非常方便，可以直接在元素上定义属性，使用起来也是相当轻量。</p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><ol>\n<li>首先在前端页面中依赖Vivid.js的库文件<br> <code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vivid-icons&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</code></li>\n<li>找到所需使用图标的名字，如’doc’</li>\n<li><p>加载图标<br> <code>&lt;i data-vi=&quot;doc&quot;&gt;&lt;/i&gt;</code><br>就会在页面中渲染一个书页的图标了。</p>\n</li>\n<li><p>自定义图标样式<br>有时候原生的样式并不能满足我们的需求，如何进行一些样式的自定义呢？</p>\n<p>4.1 自定义大小<br>自定义图标的大小，只需要在图标上增加属性：<code>data-vi-size=&quot;number&quot;</code>,number为要指定的像素大小值，如：<br><code>&lt;i data-vi=&quot;doc&quot; data-vi-size=&quot;96&quot;&gt;&lt;/i&gt;</code></p>\n<p>4.2 自定义颜色<br>每个Vivid图标由三种颜色构成：primary，accent，prop。每一种颜色构成都可以单独自定义。<br>这就有点像画家可以通过自己调节红黄蓝三原色的组成形成新颜色似的。<br>组合的方式为：</p>\n   <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data-vi-primary=\"#hexcode\"</span><br><span class=\"line\">data-vi-accent=\"#hexcode\"</span><br><span class=\"line\">data-vi-prop=\"#hexcode\"</span><br></pre></td></tr></table></figure>\n<p>在元素上修改相应属性即可。这里我试验过不一定非要16进制的颜色代码，跟我们写css时一样，颜色代码如”red”,”green”等也是可以的。<br>有点让人费解的就是，primary、accent、prop等控制的是图标的哪个部分，这个文档没有详细说明，primary和accent倒还是好”望文生义”，就是这个”prop”颜色成分是控制哪儿的不太能搞清，只能自己用的时候试下了。</p>\n</li>\n<li><p>默认样式的自定义<br>如果嫌每次重新定义图标的样式都要增加属性的方式比较麻烦，可以直接修改图标库文件。这个也是比较简单的。</p>\n<p>5.1 安装必备环境<br> 5.1.1 安装node，不再赘述<br> 5.1.2 安装npm-run-all<br>   <code>npm i npm-run-all --save-dev</code><br>   一定要安装该库，官方文档里没有提到，不安装运行<code>npm run build</code>时必报错：”sh: run-s: command not found”<br> 5.1.3 安装webpack-cli<br>   <code>npm i webpack-cli -g</code><br>   全局安装webpack-cli，编译的时候需要用到，否则会报：”It needs to be installed alongside webpack to use the CLI”<br>5.2 下载图标库源码<br> <code>npm install vivid-icons</code><br> 安装前需要保证当前目录下存在package.json文件，所以先运行：<br> <code>npm init</code><br> 一路回车即可<br>5.2 进入图标库目录并安装依赖<br> <code>cd node_modules/vivid-icons &amp;&amp; npm install</code><br>5.3 修改配置<br> <code>cd src &amp;&amp; vi config.js</code><br> 配置文件的内容：</p>\n <figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export let iconConfig = &#123; </span><br><span class=\"line\"><span class=\"symbol\">    size:</span> <span class=\"string\">\"48\"</span>, </span><br><span class=\"line\"><span class=\"symbol\">    primaryColor:</span> <span class=\"string\">\"#FF6E6E\"</span>, </span><br><span class=\"line\"><span class=\"symbol\">    accentColor:</span> <span class=\"string\">\"#0C0058\"</span>, </span><br><span class=\"line\"><span class=\"symbol\">    propColor:</span> <span class=\"string\">\"#FFFFFF\"</span> </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p> 修改对应的属性值<br>5.4 编译<br> <code>npm run build</code><br>5.5 使用编译的源码库<br> 编译完成后项目会生成新的图标库资源，路径在”dist/vivid-icons.min.js”</p>\n</li>\n<li><p>增加图标<br>有时候官方的图标不够用，自己想要增加图标该如何做呢？<br>继续上述第五步的操作，可以任意增删改icons目录下的图标文件，需要注意的是SVG图标文件的每个SVG元素都必须包含”vi-primary”,”vi-accent”类，以至于才可以在”src/config.js”里自定义颜色。<br>如增加一个”chat”图标:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">svg</span> <span class=\"attr\">id</span>=<span class=\"string\">\"chat\"</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/2000/svg\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"48\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"48\"</span> <span class=\"attr\">viewBox</span>=<span class=\"string\">\"0 0 48 48\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.vi-primary</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">fill</span>: <span class=\"selector-id\">#ffb400</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-class\">.vi-accent</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">fill</span>: <span class=\"selector-id\">#070c2b</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">defs</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">class</span>=<span class=\"string\">\"vi-primary\"</span> <span class=\"attr\">d</span>=<span class=\"string\">\"M24,39.765A18.556,18.556,0,0,1,13.924,37.1L7,44V23.882l0.012,0.006C7.011,23.791,7,23.7,7,23.6,7,14.369,13.247,8,24,8s17,6.652,17,15.882S34.753,39.765,24,39.765Z\"</span>/&gt;</span>   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">class</span>=<span class=\"string\">\"vi-accent\"</span> <span class=\"attr\">d</span>=<span class=\"string\">\"M31.994,20.99a3,3,0,1,1-3,3A3,3,0,0,1,31.994,20.99ZM24,21a3,3,0,1,1-3,3A3,3,0,0,1,24,21Zm-8,0a3,3,0,1,1-3,3A3,3,0,0,1,16,21Z\"</span>/&gt;</span>   </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>运行：<code>npm run build</code>，引入”dist/vivid-icons.min.js”文件后就可以使用新加的图标了。</p>\n</li>\n</ol>","sticky":0},{"title":"一个诡异的前后端数据不一致问题的排查","show":true,"date":"2017-06-06T08:21:54.000Z","_content":"> 这是我转战JAVA以来的第一篇博文，纪念一下。\n\n# 背景\n组织变动，转战JAVA差不多有一个月了，做了一个小需求，遇到一个诡异的问题。本文记录一下排查经过，顺便提醒自己后续开发中避免这样的坑。\n\n# 问题描述\nJAVA后端需要给前端返回一串数据，其中有个交易订单号，该交易订单在返回给前端后跟后端吐出的值不一致。直观地来看，最后的几个数字被0取代了。\n一开始以为取错了交易订单号，然而从DEBUG的过程来看，后端的处理结果没有问题，返回了正确的结果给前端。\n如下图所示：\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fgblq39u2kj208l02x74g.jpg)\n![](http://wx1.sinaimg.cn/mw690/62d95157gy1fgblq2d5a7j20ho07ngmi.jpg)\n\n当时也并没有纠结问题的根本原因，下意识地将交易订单号类型从`List<Long>`换成了`List<String>`返回就正常了。\n\n发布以后觉得这里可能是个坑，于是研究了一下果然是有缘由的。\n\n<!--more-->\n\n# 问题原因\n既然将Long改为String就解决了问题，很自然地就想到是不是类型转换的过程中造成了精度丢失。但服务器返回的时候又是正确的，那么问题应该是出在浏览器端了。\n于是着手验证：\n浏览器终端上运行代码\n```\nvar t = 1000006221004368407;\nconsole.log(t);         // 输出1000006221004368400\nvar tt = 100000622100436847;\nconsole.log(tt);        // 输出100000622100436850\n```\n至此已经能够确定是前端在解析的时候丢失精度了。\n\n在网上搜索查到一段关于js整型大小的说明：\n```\n精度\n整数（不使用小数点或指数计数法）最多为 15 位。\n小数的最大位数是 17，但是浮点运算并不总是 100% 准确\n```\n\n问题解决了，巧合的是我们的项目里刚好id位数18位超过了js能够精确表达的最大位数。于是在将后端返回的数据JSON化渲染的过程中造成了精度丢失。\n如果不是这个巧合，这个问题可能还不会被发现。\n这也提示我们，**后续如果有超长位数数字需要显示的时候，数据结构最好定义为字符串类型。**\n","source":"_posts/js-max-number.md","raw":"title: 一个诡异的前后端数据不一致问题的排查\nshow: true\ndate: 2017-06-06 16:21:54\ntags: [java,js,整型]\ncategories: 技术人生\n---\n> 这是我转战JAVA以来的第一篇博文，纪念一下。\n\n# 背景\n组织变动，转战JAVA差不多有一个月了，做了一个小需求，遇到一个诡异的问题。本文记录一下排查经过，顺便提醒自己后续开发中避免这样的坑。\n\n# 问题描述\nJAVA后端需要给前端返回一串数据，其中有个交易订单号，该交易订单在返回给前端后跟后端吐出的值不一致。直观地来看，最后的几个数字被0取代了。\n一开始以为取错了交易订单号，然而从DEBUG的过程来看，后端的处理结果没有问题，返回了正确的结果给前端。\n如下图所示：\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fgblq39u2kj208l02x74g.jpg)\n![](http://wx1.sinaimg.cn/mw690/62d95157gy1fgblq2d5a7j20ho07ngmi.jpg)\n\n当时也并没有纠结问题的根本原因，下意识地将交易订单号类型从`List<Long>`换成了`List<String>`返回就正常了。\n\n发布以后觉得这里可能是个坑，于是研究了一下果然是有缘由的。\n\n<!--more-->\n\n# 问题原因\n既然将Long改为String就解决了问题，很自然地就想到是不是类型转换的过程中造成了精度丢失。但服务器返回的时候又是正确的，那么问题应该是出在浏览器端了。\n于是着手验证：\n浏览器终端上运行代码\n```\nvar t = 1000006221004368407;\nconsole.log(t);         // 输出1000006221004368400\nvar tt = 100000622100436847;\nconsole.log(tt);        // 输出100000622100436850\n```\n至此已经能够确定是前端在解析的时候丢失精度了。\n\n在网上搜索查到一段关于js整型大小的说明：\n```\n精度\n整数（不使用小数点或指数计数法）最多为 15 位。\n小数的最大位数是 17，但是浮点运算并不总是 100% 准确\n```\n\n问题解决了，巧合的是我们的项目里刚好id位数18位超过了js能够精确表达的最大位数。于是在将后端返回的数据JSON化渲染的过程中造成了精度丢失。\n如果不是这个巧合，这个问题可能还不会被发现。\n这也提示我们，**后续如果有超长位数数字需要显示的时候，数据结构最好定义为字符串类型。**\n","slug":"js-max-number","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvr003qfnpvap6qj643","content":"<blockquote>\n<p>这是我转战JAVA以来的第一篇博文，纪念一下。</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>组织变动，转战JAVA差不多有一个月了，做了一个小需求，遇到一个诡异的问题。本文记录一下排查经过，顺便提醒自己后续开发中避免这样的坑。</p>\n<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>JAVA后端需要给前端返回一串数据，其中有个交易订单号，该交易订单在返回给前端后跟后端吐出的值不一致。直观地来看，最后的几个数字被0取代了。<br>一开始以为取错了交易订单号，然而从DEBUG的过程来看，后端的处理结果没有问题，返回了正确的结果给前端。<br>如下图所示：<br><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fgblq39u2kj208l02x74g.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fgblq2d5a7j20ho07ngmi.jpg\" alt=\"\"></p>\n<p>当时也并没有纠结问题的根本原因，下意识地将交易订单号类型从<code>List&lt;Long&gt;</code>换成了<code>List&lt;String&gt;</code>返回就正常了。</p>\n<p>发布以后觉得这里可能是个坑，于是研究了一下果然是有缘由的。</p>\n<a id=\"more\"></a>\n<h1 id=\"问题原因\"><a href=\"#问题原因\" class=\"headerlink\" title=\"问题原因\"></a>问题原因</h1><p>既然将Long改为String就解决了问题，很自然地就想到是不是类型转换的过程中造成了精度丢失。但服务器返回的时候又是正确的，那么问题应该是出在浏览器端了。<br>于是着手验证：<br>浏览器终端上运行代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t = <span class=\"number\">1000006221004368407</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(t);         <span class=\"comment\">// 输出1000006221004368400</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> tt = <span class=\"number\">100000622100436847</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tt);        <span class=\"comment\">// 输出100000622100436850</span></span><br></pre></td></tr></table></figure></p>\n<p>至此已经能够确定是前端在解析的时候丢失精度了。</p>\n<p>在网上搜索查到一段关于js整型大小的说明：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">精度</span><br><span class=\"line\">整数（不使用小数点或指数计数法）最多为 <span class=\"number\">15</span> 位。</span><br><span class=\"line\">小数的最大位数是 <span class=\"number\">17</span>，但是浮点运算并不总是 <span class=\"number\">100</span>% 准确</span><br></pre></td></tr></table></figure></p>\n<p>问题解决了，巧合的是我们的项目里刚好id位数18位超过了js能够精确表达的最大位数。于是在将后端返回的数据JSON化渲染的过程中造成了精度丢失。<br>如果不是这个巧合，这个问题可能还不会被发现。<br>这也提示我们，<strong>后续如果有超长位数数字需要显示的时候，数据结构最好定义为字符串类型。</strong></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>这是我转战JAVA以来的第一篇博文，纪念一下。</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>组织变动，转战JAVA差不多有一个月了，做了一个小需求，遇到一个诡异的问题。本文记录一下排查经过，顺便提醒自己后续开发中避免这样的坑。</p>\n<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>JAVA后端需要给前端返回一串数据，其中有个交易订单号，该交易订单在返回给前端后跟后端吐出的值不一致。直观地来看，最后的几个数字被0取代了。<br>一开始以为取错了交易订单号，然而从DEBUG的过程来看，后端的处理结果没有问题，返回了正确的结果给前端。<br>如下图所示：<br><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fgblq39u2kj208l02x74g.jpg\" alt=\"\"><br><img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fgblq2d5a7j20ho07ngmi.jpg\" alt=\"\"></p>\n<p>当时也并没有纠结问题的根本原因，下意识地将交易订单号类型从<code>List&lt;Long&gt;</code>换成了<code>List&lt;String&gt;</code>返回就正常了。</p>\n<p>发布以后觉得这里可能是个坑，于是研究了一下果然是有缘由的。</p>","more":"<h1 id=\"问题原因\"><a href=\"#问题原因\" class=\"headerlink\" title=\"问题原因\"></a>问题原因</h1><p>既然将Long改为String就解决了问题，很自然地就想到是不是类型转换的过程中造成了精度丢失。但服务器返回的时候又是正确的，那么问题应该是出在浏览器端了。<br>于是着手验证：<br>浏览器终端上运行代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t = <span class=\"number\">1000006221004368407</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(t);         <span class=\"comment\">// 输出1000006221004368400</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> tt = <span class=\"number\">100000622100436847</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(tt);        <span class=\"comment\">// 输出100000622100436850</span></span><br></pre></td></tr></table></figure></p>\n<p>至此已经能够确定是前端在解析的时候丢失精度了。</p>\n<p>在网上搜索查到一段关于js整型大小的说明：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">精度</span><br><span class=\"line\">整数（不使用小数点或指数计数法）最多为 <span class=\"number\">15</span> 位。</span><br><span class=\"line\">小数的最大位数是 <span class=\"number\">17</span>，但是浮点运算并不总是 <span class=\"number\">100</span>% 准确</span><br></pre></td></tr></table></figure></p>\n<p>问题解决了，巧合的是我们的项目里刚好id位数18位超过了js能够精确表达的最大位数。于是在将后端返回的数据JSON化渲染的过程中造成了精度丢失。<br>如果不是这个巧合，这个问题可能还不会被发现。<br>这也提示我们，<strong>后续如果有超长位数数字需要显示的时候，数据结构最好定义为字符串类型。</strong></p>","sticky":0},{"title":"空巢老人的养老问题的一些思考","show":true,"date":"2018-03-19T13:50:23.000Z","_content":"<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  4/53，每周一篇博，坚持！\n\n##### 0. 楔子\n周末随老婆一起参加了她外公的葬礼，我这个人比较多愁善感，触景生情，由人及己，不免一阵唏嘘。现在自己也到了上有老下有小的年纪，未来二三十年将是我们要面对身边长辈陆续告别我们的时候，如何解决老人养老的问题让老人有个良好的晚年生活其实不光是我们要面对的问题，这已经是个社会问题。\n\n##### 1. 空巢问题\n情绪是复杂的，问题是现实的，按照现如今社会发展的现状：老龄化加剧、传统家庭结构解体、城镇化的发展、独生子女...不单单是我们要考虑父辈的养老问题，等到我们老了的时候我们自己的养老也会成为一个棘手的问题。\n\n中国是个有\"孝\"文化传统的国家，在过去\"养儿防老\"，老了跟子女住一起由子女赡养让这一问题不那么显著。随着社会的发展，\"养儿防老\"被认为是封建腐朽思想了，城镇化让子女都离开身边独立发展了，年轻人都喜欢独立空间不喜欢和父母一起住，即使有愿意的也有层层原因限制: 不谈传统文化在年轻一代身上印记不明显，夫妻观念是否一致，单单独生子女需要赡养四个老人的经济压力就足够喝一壶了，有意愿的也没条件。年轻人自己要生活要奋斗，于是乎，老人们在散发了自己的光和热后就被\"空巢\"了。助推这一现象加剧的除了城镇化之外，计划生育政策导致的独生子女问题也在政策施行几十年后即将迎来可见的影响。\n\n在这样的社会现状下，可以预想大多数人的晚年生活都将不会多么的有质量，有尊严。当子女远离自己，老两口只能相依为命，一方面是情感上的缺失，另一方面是无人照顾的困局。年岁日增后总有老而无力的时候，到时候生活自理都将成问题。请保姆照顾算是一个途径，然而请保姆这行当算是一个以钱财换良心的行当，谁也不能保证老人付出不菲的金钱后换来的不是保姆关起门来作威作福。敬老院则是另一个大多数人生最后的归宿，相比起私人请来的保姆，相对会更可靠些。那些经济不允许的可能就只能自求多福，难保不会被逼入绝境想不开。想来令人心酸。\n\n##### 2. 如何应对？\n虽然现在年轻一代传统孝感有所淡漠，但面对实实在在的城镇化进程以及独生子女带来的家庭结构问题，每个人自己的生存都很不容易，实在是不能在道德层面对不能尽孝的人做过多责备，试图让一对年轻人承担起抚养子女，双方父母甚至祖父母的责任，实在是不太现实。\n\n虽然我们这一辈不得不面对大多数老人晚年无法享受子孙绕膝，不得不接受大部分时候情感缺失的现状，但是否能在既有问题下提高老人们的晚年生活质量呢？\n\n欧美等发达国家的养老体系主要是社区型福利机构，类似于养老院，以老养老，老人们群居不至于无人照顾或者感觉孤独。\n\n但中国国情不同，大部分的老人还是不愿意住养老院的，一方面住养老院需要一定的经济条件，另一方面养老院不是家，人之暮年对亲情的渴望是不以人的意志为转移的，住养老院有一种被家人抛弃的感觉。作为子女，一方面是要尽量多赚钱，给赡养父母提供经济上的支持，另一方面也要给老人正面的引导。这个社会问题，更需要国家政策健全养老体系制度来解决。希望以后能越来越好吧，也希望我们80后是历史上唯一的一批独生子女。\n\n这个问题我真的不愿多想，但也不得不想...\n","source":"_posts/kclr.md","raw":"title: 空巢老人的养老问题的一些思考\nshow: true\ndate: 2018-03-19 21:50:23\ntags: [养老,空巢老人]\ncategories: 心情杂感\n---\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  4/53，每周一篇博，坚持！\n\n##### 0. 楔子\n周末随老婆一起参加了她外公的葬礼，我这个人比较多愁善感，触景生情，由人及己，不免一阵唏嘘。现在自己也到了上有老下有小的年纪，未来二三十年将是我们要面对身边长辈陆续告别我们的时候，如何解决老人养老的问题让老人有个良好的晚年生活其实不光是我们要面对的问题，这已经是个社会问题。\n\n##### 1. 空巢问题\n情绪是复杂的，问题是现实的，按照现如今社会发展的现状：老龄化加剧、传统家庭结构解体、城镇化的发展、独生子女...不单单是我们要考虑父辈的养老问题，等到我们老了的时候我们自己的养老也会成为一个棘手的问题。\n\n中国是个有\"孝\"文化传统的国家，在过去\"养儿防老\"，老了跟子女住一起由子女赡养让这一问题不那么显著。随着社会的发展，\"养儿防老\"被认为是封建腐朽思想了，城镇化让子女都离开身边独立发展了，年轻人都喜欢独立空间不喜欢和父母一起住，即使有愿意的也有层层原因限制: 不谈传统文化在年轻一代身上印记不明显，夫妻观念是否一致，单单独生子女需要赡养四个老人的经济压力就足够喝一壶了，有意愿的也没条件。年轻人自己要生活要奋斗，于是乎，老人们在散发了自己的光和热后就被\"空巢\"了。助推这一现象加剧的除了城镇化之外，计划生育政策导致的独生子女问题也在政策施行几十年后即将迎来可见的影响。\n\n在这样的社会现状下，可以预想大多数人的晚年生活都将不会多么的有质量，有尊严。当子女远离自己，老两口只能相依为命，一方面是情感上的缺失，另一方面是无人照顾的困局。年岁日增后总有老而无力的时候，到时候生活自理都将成问题。请保姆照顾算是一个途径，然而请保姆这行当算是一个以钱财换良心的行当，谁也不能保证老人付出不菲的金钱后换来的不是保姆关起门来作威作福。敬老院则是另一个大多数人生最后的归宿，相比起私人请来的保姆，相对会更可靠些。那些经济不允许的可能就只能自求多福，难保不会被逼入绝境想不开。想来令人心酸。\n\n##### 2. 如何应对？\n虽然现在年轻一代传统孝感有所淡漠，但面对实实在在的城镇化进程以及独生子女带来的家庭结构问题，每个人自己的生存都很不容易，实在是不能在道德层面对不能尽孝的人做过多责备，试图让一对年轻人承担起抚养子女，双方父母甚至祖父母的责任，实在是不太现实。\n\n虽然我们这一辈不得不面对大多数老人晚年无法享受子孙绕膝，不得不接受大部分时候情感缺失的现状，但是否能在既有问题下提高老人们的晚年生活质量呢？\n\n欧美等发达国家的养老体系主要是社区型福利机构，类似于养老院，以老养老，老人们群居不至于无人照顾或者感觉孤独。\n\n但中国国情不同，大部分的老人还是不愿意住养老院的，一方面住养老院需要一定的经济条件，另一方面养老院不是家，人之暮年对亲情的渴望是不以人的意志为转移的，住养老院有一种被家人抛弃的感觉。作为子女，一方面是要尽量多赚钱，给赡养父母提供经济上的支持，另一方面也要给老人正面的引导。这个社会问题，更需要国家政策健全养老体系制度来解决。希望以后能越来越好吧，也希望我们80后是历史上唯一的一批独生子女。\n\n这个问题我真的不愿多想，但也不得不想...\n","slug":"kclr","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvt003tfnpvo6xobihi","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  4/53，每周一篇博，坚持！</p>\n<h5 id=\"0-楔子\"><a href=\"#0-楔子\" class=\"headerlink\" title=\"0. 楔子\"></a>0. 楔子</h5><p>周末随老婆一起参加了她外公的葬礼，我这个人比较多愁善感，触景生情，由人及己，不免一阵唏嘘。现在自己也到了上有老下有小的年纪，未来二三十年将是我们要面对身边长辈陆续告别我们的时候，如何解决老人养老的问题让老人有个良好的晚年生活其实不光是我们要面对的问题，这已经是个社会问题。</p>\n<h5 id=\"1-空巢问题\"><a href=\"#1-空巢问题\" class=\"headerlink\" title=\"1. 空巢问题\"></a>1. 空巢问题</h5><p>情绪是复杂的，问题是现实的，按照现如今社会发展的现状：老龄化加剧、传统家庭结构解体、城镇化的发展、独生子女…不单单是我们要考虑父辈的养老问题，等到我们老了的时候我们自己的养老也会成为一个棘手的问题。</p>\n<p>中国是个有”孝”文化传统的国家，在过去”养儿防老”，老了跟子女住一起由子女赡养让这一问题不那么显著。随着社会的发展，”养儿防老”被认为是封建腐朽思想了，城镇化让子女都离开身边独立发展了，年轻人都喜欢独立空间不喜欢和父母一起住，即使有愿意的也有层层原因限制: 不谈传统文化在年轻一代身上印记不明显，夫妻观念是否一致，单单独生子女需要赡养四个老人的经济压力就足够喝一壶了，有意愿的也没条件。年轻人自己要生活要奋斗，于是乎，老人们在散发了自己的光和热后就被”空巢”了。助推这一现象加剧的除了城镇化之外，计划生育政策导致的独生子女问题也在政策施行几十年后即将迎来可见的影响。</p>\n<p>在这样的社会现状下，可以预想大多数人的晚年生活都将不会多么的有质量，有尊严。当子女远离自己，老两口只能相依为命，一方面是情感上的缺失，另一方面是无人照顾的困局。年岁日增后总有老而无力的时候，到时候生活自理都将成问题。请保姆照顾算是一个途径，然而请保姆这行当算是一个以钱财换良心的行当，谁也不能保证老人付出不菲的金钱后换来的不是保姆关起门来作威作福。敬老院则是另一个大多数人生最后的归宿，相比起私人请来的保姆，相对会更可靠些。那些经济不允许的可能就只能自求多福，难保不会被逼入绝境想不开。想来令人心酸。</p>\n<h5 id=\"2-如何应对？\"><a href=\"#2-如何应对？\" class=\"headerlink\" title=\"2. 如何应对？\"></a>2. 如何应对？</h5><p>虽然现在年轻一代传统孝感有所淡漠，但面对实实在在的城镇化进程以及独生子女带来的家庭结构问题，每个人自己的生存都很不容易，实在是不能在道德层面对不能尽孝的人做过多责备，试图让一对年轻人承担起抚养子女，双方父母甚至祖父母的责任，实在是不太现实。</p>\n<p>虽然我们这一辈不得不面对大多数老人晚年无法享受子孙绕膝，不得不接受大部分时候情感缺失的现状，但是否能在既有问题下提高老人们的晚年生活质量呢？</p>\n<p>欧美等发达国家的养老体系主要是社区型福利机构，类似于养老院，以老养老，老人们群居不至于无人照顾或者感觉孤独。</p>\n<p>但中国国情不同，大部分的老人还是不愿意住养老院的，一方面住养老院需要一定的经济条件，另一方面养老院不是家，人之暮年对亲情的渴望是不以人的意志为转移的，住养老院有一种被家人抛弃的感觉。作为子女，一方面是要尽量多赚钱，给赡养父母提供经济上的支持，另一方面也要给老人正面的引导。这个社会问题，更需要国家政策健全养老体系制度来解决。希望以后能越来越好吧，也希望我们80后是历史上唯一的一批独生子女。</p>\n<p>这个问题我真的不愿多想，但也不得不想…</p>\n","site":{"data":{}},"excerpt":"","more":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  4/53，每周一篇博，坚持！</p>\n<h5 id=\"0-楔子\"><a href=\"#0-楔子\" class=\"headerlink\" title=\"0. 楔子\"></a>0. 楔子</h5><p>周末随老婆一起参加了她外公的葬礼，我这个人比较多愁善感，触景生情，由人及己，不免一阵唏嘘。现在自己也到了上有老下有小的年纪，未来二三十年将是我们要面对身边长辈陆续告别我们的时候，如何解决老人养老的问题让老人有个良好的晚年生活其实不光是我们要面对的问题，这已经是个社会问题。</p>\n<h5 id=\"1-空巢问题\"><a href=\"#1-空巢问题\" class=\"headerlink\" title=\"1. 空巢问题\"></a>1. 空巢问题</h5><p>情绪是复杂的，问题是现实的，按照现如今社会发展的现状：老龄化加剧、传统家庭结构解体、城镇化的发展、独生子女…不单单是我们要考虑父辈的养老问题，等到我们老了的时候我们自己的养老也会成为一个棘手的问题。</p>\n<p>中国是个有”孝”文化传统的国家，在过去”养儿防老”，老了跟子女住一起由子女赡养让这一问题不那么显著。随着社会的发展，”养儿防老”被认为是封建腐朽思想了，城镇化让子女都离开身边独立发展了，年轻人都喜欢独立空间不喜欢和父母一起住，即使有愿意的也有层层原因限制: 不谈传统文化在年轻一代身上印记不明显，夫妻观念是否一致，单单独生子女需要赡养四个老人的经济压力就足够喝一壶了，有意愿的也没条件。年轻人自己要生活要奋斗，于是乎，老人们在散发了自己的光和热后就被”空巢”了。助推这一现象加剧的除了城镇化之外，计划生育政策导致的独生子女问题也在政策施行几十年后即将迎来可见的影响。</p>\n<p>在这样的社会现状下，可以预想大多数人的晚年生活都将不会多么的有质量，有尊严。当子女远离自己，老两口只能相依为命，一方面是情感上的缺失，另一方面是无人照顾的困局。年岁日增后总有老而无力的时候，到时候生活自理都将成问题。请保姆照顾算是一个途径，然而请保姆这行当算是一个以钱财换良心的行当，谁也不能保证老人付出不菲的金钱后换来的不是保姆关起门来作威作福。敬老院则是另一个大多数人生最后的归宿，相比起私人请来的保姆，相对会更可靠些。那些经济不允许的可能就只能自求多福，难保不会被逼入绝境想不开。想来令人心酸。</p>\n<h5 id=\"2-如何应对？\"><a href=\"#2-如何应对？\" class=\"headerlink\" title=\"2. 如何应对？\"></a>2. 如何应对？</h5><p>虽然现在年轻一代传统孝感有所淡漠，但面对实实在在的城镇化进程以及独生子女带来的家庭结构问题，每个人自己的生存都很不容易，实在是不能在道德层面对不能尽孝的人做过多责备，试图让一对年轻人承担起抚养子女，双方父母甚至祖父母的责任，实在是不太现实。</p>\n<p>虽然我们这一辈不得不面对大多数老人晚年无法享受子孙绕膝，不得不接受大部分时候情感缺失的现状，但是否能在既有问题下提高老人们的晚年生活质量呢？</p>\n<p>欧美等发达国家的养老体系主要是社区型福利机构，类似于养老院，以老养老，老人们群居不至于无人照顾或者感觉孤独。</p>\n<p>但中国国情不同，大部分的老人还是不愿意住养老院的，一方面住养老院需要一定的经济条件，另一方面养老院不是家，人之暮年对亲情的渴望是不以人的意志为转移的，住养老院有一种被家人抛弃的感觉。作为子女，一方面是要尽量多赚钱，给赡养父母提供经济上的支持，另一方面也要给老人正面的引导。这个社会问题，更需要国家政策健全养老体系制度来解决。希望以后能越来越好吧，也希望我们80后是历史上唯一的一批独生子女。</p>\n<p>这个问题我真的不愿多想，但也不得不想…</p>\n","sticky":0},{"title":"[转载]程序员口才训练（二）","show":true,"date":"2018-03-30T12:50:00.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  6/53，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/03/24/kcxl/)\n\n##### 2. 表达能力\n你能够流利说话，接下来就需要提高自己的表达能力。\n\n什么是表达能力？\n\n就是你能够透过口头语言，把自己的思想准确表达出来，而且别人也能够理解到你所说的意思。\n\n在我们日常生活当中，口头表达大致可以分为两类：对话方式和独白方式。只要把这两种方式的表达能力提高，我们就可以应付生活上各种交流的需求。\n\n表达能力差的人，很难快速把看到、听到的客观事物，或者自己想到的意思，准确的给听众传递出来。例如你看完一部电影，你怎么告诉朋友这部电影是好看或者不好看呢？\n\n《金字塔原理》这本书提供的一个逻辑表达方案，就是先观点，后理由；而上一级的理由也是下一级的观点。\n\n简化之后的表达流程，就是观点，理由，例子（例子和理由调换次序也可以）。\n\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fpv5h6cotzj20rk0hy49y.jpg)\n\n但这个表达流程，看上去很容易，运用起来却并不是每个人都得心应手。究其原因，有两点没有做好。\n\n<!--more-->\n\n**第一，你每一确立你要表达的中心思想，也就是观点。**\n\n当外界的客观事物和你自己想到的事情，刺激你产生一种表达欲望后，这个时候你的大脑就会形成一个针对这次表达的中心思想。\n\n例如你看了一部电影，整个观影过程给予你非常愉快的观感（外界客观事物刺激），接着你就产生一种表达欲望，最后你就会因此形成一个表达的中心思想（这部电影很好看）。\n\n于是，你跟朋友聊天，你就会向朋友表达你这个电影好看的观点。如果你不知道你想要说什么，那是因为你还没有确立你要表达的中心思想。\n\n这样子你就很难发表自己的意见了。\n\n**第二，没有从已有的资料库里面，提取出可以印证你观点的材料，也就是里有。**\n\n你看完一部电影，而这部电影就是一个“资料库”。你要懂得从这个资料库里面，提取一些材料来印证你表达的观点。\n\n例如，这部电影是谁谁谁主演的，在电影里面的表演很厉害（材料一）；这部电影的剧情迂回曲折，你不看到后面根本不知道接下来会怎么发展，整个过程很有悬念（材料二）；这部电影的特效也很厉害，非常自然的融入到剧情里，没有为了炫技而炫技（材料三）；这部电影看完后，你会感到非常震撼，很容易被里面的角色打动（材料四）。\n\n当你能够把这些从外界获得的已有材料组合起来，就会形成一连串印证你观点的理由。\n\n这种表达，就是以中心思想为圆心，再围绕圆心附上相关材料的句群，从而形成的一次思想的交流传递。如果你不懂得从这个资料库里面提取相关的材料，你就很难继续表达下去。\n\n![](http://wx1.sinaimg.cn/large/62d95157gy1fpv5t6u1vaj20ps0kcn6o.jpg)\n\n那为什么你无法提取材料呢？\n\n原因有三：\n1. 你对现有资料库没有用心留意积累；（解决：专心用心去学习）\n\n2. 你对谈论的事情没有相关积累的资料库；（解决：多读多看多经历）\n\n3. 你还没有对已有的资料库获得自己的理解；（解决：多思考，学而不思则罔）\n\n当然，组合这些材料，在日常对话当中并没有特定的顺序，闲聊的时候想到什么就说什么就行。\n\n但一些特殊情况，最好是先说了重要的地方，再说一些次要的地方。就是先把重点说出来，其他细节再慢慢去补充。\n\n例如，你遇到交通意外，受了点皮外伤，你跟父母说起这件事，你应该先表明你没事这个重点，而不是依赖就描述你被小车撞倒在地，还受伤流血这样。尽管只是皮外伤，但你妈听到你这么说，肯定会吓死。\n\n那怎么提高我们的表达能力呢？\n\n就是背诵相关表达的文章，然后经常用自己的语言把这些文章复述出来。背诵是积累表达的框架，复述是按照这个框架说出自己的话。\n\n如果你不知道怎么描述一件事，就多读一读描述性的文章；如果你不知道怎么说明一件物品，就多读一读相关的说明文；如果你抒情的话说不出来，就多读一读抒情类的文章，培养自己的语感。不会讲故事，就多读一读讲故事的文章。\n\n有了这些文章的框架，再用自己的语言复述出来，长此以往，你的表达语感就会形成。这时你的表达能力就会大大提高了。\n\n\n","source":"_posts/kcxl-2.md","raw":"title: '[转载]程序员口才训练（二）'\nshow: true\ndate: 2018-03-30 20:50:00\ntags: 口才\ncategories: 文摘采撷\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  6/53，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/03/24/kcxl/)\n\n##### 2. 表达能力\n你能够流利说话，接下来就需要提高自己的表达能力。\n\n什么是表达能力？\n\n就是你能够透过口头语言，把自己的思想准确表达出来，而且别人也能够理解到你所说的意思。\n\n在我们日常生活当中，口头表达大致可以分为两类：对话方式和独白方式。只要把这两种方式的表达能力提高，我们就可以应付生活上各种交流的需求。\n\n表达能力差的人，很难快速把看到、听到的客观事物，或者自己想到的意思，准确的给听众传递出来。例如你看完一部电影，你怎么告诉朋友这部电影是好看或者不好看呢？\n\n《金字塔原理》这本书提供的一个逻辑表达方案，就是先观点，后理由；而上一级的理由也是下一级的观点。\n\n简化之后的表达流程，就是观点，理由，例子（例子和理由调换次序也可以）。\n\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fpv5h6cotzj20rk0hy49y.jpg)\n\n但这个表达流程，看上去很容易，运用起来却并不是每个人都得心应手。究其原因，有两点没有做好。\n\n<!--more-->\n\n**第一，你每一确立你要表达的中心思想，也就是观点。**\n\n当外界的客观事物和你自己想到的事情，刺激你产生一种表达欲望后，这个时候你的大脑就会形成一个针对这次表达的中心思想。\n\n例如你看了一部电影，整个观影过程给予你非常愉快的观感（外界客观事物刺激），接着你就产生一种表达欲望，最后你就会因此形成一个表达的中心思想（这部电影很好看）。\n\n于是，你跟朋友聊天，你就会向朋友表达你这个电影好看的观点。如果你不知道你想要说什么，那是因为你还没有确立你要表达的中心思想。\n\n这样子你就很难发表自己的意见了。\n\n**第二，没有从已有的资料库里面，提取出可以印证你观点的材料，也就是里有。**\n\n你看完一部电影，而这部电影就是一个“资料库”。你要懂得从这个资料库里面，提取一些材料来印证你表达的观点。\n\n例如，这部电影是谁谁谁主演的，在电影里面的表演很厉害（材料一）；这部电影的剧情迂回曲折，你不看到后面根本不知道接下来会怎么发展，整个过程很有悬念（材料二）；这部电影的特效也很厉害，非常自然的融入到剧情里，没有为了炫技而炫技（材料三）；这部电影看完后，你会感到非常震撼，很容易被里面的角色打动（材料四）。\n\n当你能够把这些从外界获得的已有材料组合起来，就会形成一连串印证你观点的理由。\n\n这种表达，就是以中心思想为圆心，再围绕圆心附上相关材料的句群，从而形成的一次思想的交流传递。如果你不懂得从这个资料库里面提取相关的材料，你就很难继续表达下去。\n\n![](http://wx1.sinaimg.cn/large/62d95157gy1fpv5t6u1vaj20ps0kcn6o.jpg)\n\n那为什么你无法提取材料呢？\n\n原因有三：\n1. 你对现有资料库没有用心留意积累；（解决：专心用心去学习）\n\n2. 你对谈论的事情没有相关积累的资料库；（解决：多读多看多经历）\n\n3. 你还没有对已有的资料库获得自己的理解；（解决：多思考，学而不思则罔）\n\n当然，组合这些材料，在日常对话当中并没有特定的顺序，闲聊的时候想到什么就说什么就行。\n\n但一些特殊情况，最好是先说了重要的地方，再说一些次要的地方。就是先把重点说出来，其他细节再慢慢去补充。\n\n例如，你遇到交通意外，受了点皮外伤，你跟父母说起这件事，你应该先表明你没事这个重点，而不是依赖就描述你被小车撞倒在地，还受伤流血这样。尽管只是皮外伤，但你妈听到你这么说，肯定会吓死。\n\n那怎么提高我们的表达能力呢？\n\n就是背诵相关表达的文章，然后经常用自己的语言把这些文章复述出来。背诵是积累表达的框架，复述是按照这个框架说出自己的话。\n\n如果你不知道怎么描述一件事，就多读一读描述性的文章；如果你不知道怎么说明一件物品，就多读一读相关的说明文；如果你抒情的话说不出来，就多读一读抒情类的文章，培养自己的语感。不会讲故事，就多读一读讲故事的文章。\n\n有了这些文章的框架，再用自己的语言复述出来，长此以往，你的表达语感就会形成。这时你的表达能力就会大大提高了。\n\n\n","slug":"kcxl-2","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvv003wfnpvxl98bunj","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  6/53，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/03/24/kcxl/\">续上篇</a></p>\n<h5 id=\"2-表达能力\"><a href=\"#2-表达能力\" class=\"headerlink\" title=\"2. 表达能力\"></a>2. 表达能力</h5><p>你能够流利说话，接下来就需要提高自己的表达能力。</p>\n<p>什么是表达能力？</p>\n<p>就是你能够透过口头语言，把自己的思想准确表达出来，而且别人也能够理解到你所说的意思。</p>\n<p>在我们日常生活当中，口头表达大致可以分为两类：对话方式和独白方式。只要把这两种方式的表达能力提高，我们就可以应付生活上各种交流的需求。</p>\n<p>表达能力差的人，很难快速把看到、听到的客观事物，或者自己想到的意思，准确的给听众传递出来。例如你看完一部电影，你怎么告诉朋友这部电影是好看或者不好看呢？</p>\n<p>《金字塔原理》这本书提供的一个逻辑表达方案，就是先观点，后理由；而上一级的理由也是下一级的观点。</p>\n<p>简化之后的表达流程，就是观点，理由，例子（例子和理由调换次序也可以）。</p>\n<p><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fpv5h6cotzj20rk0hy49y.jpg\" alt=\"\"></p>\n<p>但这个表达流程，看上去很容易，运用起来却并不是每个人都得心应手。究其原因，有两点没有做好。</p>\n<a id=\"more\"></a>\n<p><strong>第一，你每一确立你要表达的中心思想，也就是观点。</strong></p>\n<p>当外界的客观事物和你自己想到的事情，刺激你产生一种表达欲望后，这个时候你的大脑就会形成一个针对这次表达的中心思想。</p>\n<p>例如你看了一部电影，整个观影过程给予你非常愉快的观感（外界客观事物刺激），接着你就产生一种表达欲望，最后你就会因此形成一个表达的中心思想（这部电影很好看）。</p>\n<p>于是，你跟朋友聊天，你就会向朋友表达你这个电影好看的观点。如果你不知道你想要说什么，那是因为你还没有确立你要表达的中心思想。</p>\n<p>这样子你就很难发表自己的意见了。</p>\n<p><strong>第二，没有从已有的资料库里面，提取出可以印证你观点的材料，也就是里有。</strong></p>\n<p>你看完一部电影，而这部电影就是一个“资料库”。你要懂得从这个资料库里面，提取一些材料来印证你表达的观点。</p>\n<p>例如，这部电影是谁谁谁主演的，在电影里面的表演很厉害（材料一）；这部电影的剧情迂回曲折，你不看到后面根本不知道接下来会怎么发展，整个过程很有悬念（材料二）；这部电影的特效也很厉害，非常自然的融入到剧情里，没有为了炫技而炫技（材料三）；这部电影看完后，你会感到非常震撼，很容易被里面的角色打动（材料四）。</p>\n<p>当你能够把这些从外界获得的已有材料组合起来，就会形成一连串印证你观点的理由。</p>\n<p>这种表达，就是以中心思想为圆心，再围绕圆心附上相关材料的句群，从而形成的一次思想的交流传递。如果你不懂得从这个资料库里面提取相关的材料，你就很难继续表达下去。</p>\n<p><img src=\"http://wx1.sinaimg.cn/large/62d95157gy1fpv5t6u1vaj20ps0kcn6o.jpg\" alt=\"\"></p>\n<p>那为什么你无法提取材料呢？</p>\n<p>原因有三：</p>\n<ol>\n<li><p>你对现有资料库没有用心留意积累；（解决：专心用心去学习）</p>\n</li>\n<li><p>你对谈论的事情没有相关积累的资料库；（解决：多读多看多经历）</p>\n</li>\n<li><p>你还没有对已有的资料库获得自己的理解；（解决：多思考，学而不思则罔）</p>\n</li>\n</ol>\n<p>当然，组合这些材料，在日常对话当中并没有特定的顺序，闲聊的时候想到什么就说什么就行。</p>\n<p>但一些特殊情况，最好是先说了重要的地方，再说一些次要的地方。就是先把重点说出来，其他细节再慢慢去补充。</p>\n<p>例如，你遇到交通意外，受了点皮外伤，你跟父母说起这件事，你应该先表明你没事这个重点，而不是依赖就描述你被小车撞倒在地，还受伤流血这样。尽管只是皮外伤，但你妈听到你这么说，肯定会吓死。</p>\n<p>那怎么提高我们的表达能力呢？</p>\n<p>就是背诵相关表达的文章，然后经常用自己的语言把这些文章复述出来。背诵是积累表达的框架，复述是按照这个框架说出自己的话。</p>\n<p>如果你不知道怎么描述一件事，就多读一读描述性的文章；如果你不知道怎么说明一件物品，就多读一读相关的说明文；如果你抒情的话说不出来，就多读一读抒情类的文章，培养自己的语感。不会讲故事，就多读一读讲故事的文章。</p>\n<p>有了这些文章的框架，再用自己的语言复述出来，长此以往，你的表达语感就会形成。这时你的表达能力就会大大提高了。</p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  6/53，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/03/24/kcxl/\">续上篇</a></p>\n<h5 id=\"2-表达能力\"><a href=\"#2-表达能力\" class=\"headerlink\" title=\"2. 表达能力\"></a>2. 表达能力</h5><p>你能够流利说话，接下来就需要提高自己的表达能力。</p>\n<p>什么是表达能力？</p>\n<p>就是你能够透过口头语言，把自己的思想准确表达出来，而且别人也能够理解到你所说的意思。</p>\n<p>在我们日常生活当中，口头表达大致可以分为两类：对话方式和独白方式。只要把这两种方式的表达能力提高，我们就可以应付生活上各种交流的需求。</p>\n<p>表达能力差的人，很难快速把看到、听到的客观事物，或者自己想到的意思，准确的给听众传递出来。例如你看完一部电影，你怎么告诉朋友这部电影是好看或者不好看呢？</p>\n<p>《金字塔原理》这本书提供的一个逻辑表达方案，就是先观点，后理由；而上一级的理由也是下一级的观点。</p>\n<p>简化之后的表达流程，就是观点，理由，例子（例子和理由调换次序也可以）。</p>\n<p><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fpv5h6cotzj20rk0hy49y.jpg\" alt=\"\"></p>\n<p>但这个表达流程，看上去很容易，运用起来却并不是每个人都得心应手。究其原因，有两点没有做好。</p>","more":"<p><strong>第一，你每一确立你要表达的中心思想，也就是观点。</strong></p>\n<p>当外界的客观事物和你自己想到的事情，刺激你产生一种表达欲望后，这个时候你的大脑就会形成一个针对这次表达的中心思想。</p>\n<p>例如你看了一部电影，整个观影过程给予你非常愉快的观感（外界客观事物刺激），接着你就产生一种表达欲望，最后你就会因此形成一个表达的中心思想（这部电影很好看）。</p>\n<p>于是，你跟朋友聊天，你就会向朋友表达你这个电影好看的观点。如果你不知道你想要说什么，那是因为你还没有确立你要表达的中心思想。</p>\n<p>这样子你就很难发表自己的意见了。</p>\n<p><strong>第二，没有从已有的资料库里面，提取出可以印证你观点的材料，也就是里有。</strong></p>\n<p>你看完一部电影，而这部电影就是一个“资料库”。你要懂得从这个资料库里面，提取一些材料来印证你表达的观点。</p>\n<p>例如，这部电影是谁谁谁主演的，在电影里面的表演很厉害（材料一）；这部电影的剧情迂回曲折，你不看到后面根本不知道接下来会怎么发展，整个过程很有悬念（材料二）；这部电影的特效也很厉害，非常自然的融入到剧情里，没有为了炫技而炫技（材料三）；这部电影看完后，你会感到非常震撼，很容易被里面的角色打动（材料四）。</p>\n<p>当你能够把这些从外界获得的已有材料组合起来，就会形成一连串印证你观点的理由。</p>\n<p>这种表达，就是以中心思想为圆心，再围绕圆心附上相关材料的句群，从而形成的一次思想的交流传递。如果你不懂得从这个资料库里面提取相关的材料，你就很难继续表达下去。</p>\n<p><img src=\"http://wx1.sinaimg.cn/large/62d95157gy1fpv5t6u1vaj20ps0kcn6o.jpg\" alt=\"\"></p>\n<p>那为什么你无法提取材料呢？</p>\n<p>原因有三：</p>\n<ol>\n<li><p>你对现有资料库没有用心留意积累；（解决：专心用心去学习）</p>\n</li>\n<li><p>你对谈论的事情没有相关积累的资料库；（解决：多读多看多经历）</p>\n</li>\n<li><p>你还没有对已有的资料库获得自己的理解；（解决：多思考，学而不思则罔）</p>\n</li>\n</ol>\n<p>当然，组合这些材料，在日常对话当中并没有特定的顺序，闲聊的时候想到什么就说什么就行。</p>\n<p>但一些特殊情况，最好是先说了重要的地方，再说一些次要的地方。就是先把重点说出来，其他细节再慢慢去补充。</p>\n<p>例如，你遇到交通意外，受了点皮外伤，你跟父母说起这件事，你应该先表明你没事这个重点，而不是依赖就描述你被小车撞倒在地，还受伤流血这样。尽管只是皮外伤，但你妈听到你这么说，肯定会吓死。</p>\n<p>那怎么提高我们的表达能力呢？</p>\n<p>就是背诵相关表达的文章，然后经常用自己的语言把这些文章复述出来。背诵是积累表达的框架，复述是按照这个框架说出自己的话。</p>\n<p>如果你不知道怎么描述一件事，就多读一读描述性的文章；如果你不知道怎么说明一件物品，就多读一读相关的说明文；如果你抒情的话说不出来，就多读一读抒情类的文章，培养自己的语感。不会讲故事，就多读一读讲故事的文章。</p>\n<p>有了这些文章的框架，再用自己的语言复述出来，长此以往，你的表达语感就会形成。这时你的表达能力就会大大提高了。</p>","sticky":0},{"title":"[转载]程序员口才训练（三）","show":true,"date":"2018-04-08T12:34:58.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  7/53，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/03/20/kcxl-2)\n\n##### 3. 沟通能力\n有了表达能力的加持，你的沟通能力就可以在此基础上培养了。\n\n沟通的目的，就是透过语言交流，最终让彼此的思想都能够达成一致共识，取得某些效果。例如你跟家人沟通，就是希望对方能够按照你的想法去做，又或者你希望透过沟通，能够解决到对方不开心这个问题。\n\n也就是说，沟通不像闲聊，可以天南地北的任意胡侃，而是需要透过你的语言，跟交流对象一起寻求最适合彼此的解决方案。\n\n看到朋友失恋，你跟她沟通，就是希望可以让对方振作起来；看到孩子不听话，你跟他沟通，就是希望还在能够安分守己一点；看到老板这么苛刻，你跟他沟通，就是希望员工能够获得更好的待遇。\n\n一篇文章讲述沟通，基本上很困难。\n\n但一个好的沟通，应该做到五个方面：\n\n<!--more-->\n\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fq7uhiw7v1j20rg0d07db.jpg)\n\n例如你想让老板提高待遇，这是你的沟通目的，也是第一步。那怎么去沟通呢？\n\n你当然不能在对方刚失去一桩生意的情况下，贸然开口跟他说，结果只会失败；同样，如果你刚入职不久，就要求老板加工资，谁都不会理睬你，因为你没有这个资本。\n\n当你做出很多成绩，而薪金跟你的能力无法匹配的时候，这个时候你跟老板沟通，就会取得不错的效果。这就是要求你懂得识别什么时候才是最佳的沟通时机。\n\n正如你看到朋友不开心，你安慰都不去安慰人家，就要求对方帮你做事，谁会答应呢？\n\n第三步就是制定沟通策略。\n\n你看到朋友不开心，这个时候你是拍拍对方的肩膀，简单说几句“你不要这样子”，“你不要哭”，还是坐下来了解对方为什么不开心的原因，然后再针对性的为对方排忧解难呢？\n\n没有一种沟通策略是万全的，只能根据当下的情况，当下的对象来调整。对于别人来说最优的沟通策略，对于你也许就是最糟糕的。\n\n一旦你意识到自己按照当前这种沟通策略没有任何效果，就应该变换沟通方式，换过另一种策略跟对方沟通。\n\n在商界，这类型的沟通案例有很多。这一次大家无法达成共识，下一次调整一下谈判的沟通策略，于是就成事了。\n\n所以反馈的结果，就是对自身策略的调整。\n\n看看对方的底线在哪里，也看看自己的接受程度去到哪里。\n\n如果你跟女朋友说：“喂，给我倒杯水过来”，这个沟通策略很糟糕，超出对方接受的底线，这时你就要调整策略，换成这样说：“亲爱的，可以帮我倒杯水吗？”只要这样说，依然是你接受的程度范围内，牺牲一点脸皮，做出让步，未尝不是好策略。\n\n当双方都能够为了某个目的做出让步，例如不再伤心，不再要高价，不再这么顽固，这时候沟通就算完成任务了。\n\n沟通并不是万能的，不要奢求任何事情都能够透过沟通解决。但沟通，却是我们与外界构建和维持良好关系的有效手段。\n\n那怎么提高我们的沟通能力呢？\n\n提高你的情商，你的沟通能力也会随之提高的。\n\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fq7usrp8k8j20pq0pinar.jpg)\n","source":"_posts/kcxl-3.md","raw":"title: '[转载]程序员口才训练（三）'\nshow: true\ndate: 2018-04-8 20:34:58\ntags: 口才\ncategories: 文摘采撷\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  7/53，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/03/20/kcxl-2)\n\n##### 3. 沟通能力\n有了表达能力的加持，你的沟通能力就可以在此基础上培养了。\n\n沟通的目的，就是透过语言交流，最终让彼此的思想都能够达成一致共识，取得某些效果。例如你跟家人沟通，就是希望对方能够按照你的想法去做，又或者你希望透过沟通，能够解决到对方不开心这个问题。\n\n也就是说，沟通不像闲聊，可以天南地北的任意胡侃，而是需要透过你的语言，跟交流对象一起寻求最适合彼此的解决方案。\n\n看到朋友失恋，你跟她沟通，就是希望可以让对方振作起来；看到孩子不听话，你跟他沟通，就是希望还在能够安分守己一点；看到老板这么苛刻，你跟他沟通，就是希望员工能够获得更好的待遇。\n\n一篇文章讲述沟通，基本上很困难。\n\n但一个好的沟通，应该做到五个方面：\n\n<!--more-->\n\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fq7uhiw7v1j20rg0d07db.jpg)\n\n例如你想让老板提高待遇，这是你的沟通目的，也是第一步。那怎么去沟通呢？\n\n你当然不能在对方刚失去一桩生意的情况下，贸然开口跟他说，结果只会失败；同样，如果你刚入职不久，就要求老板加工资，谁都不会理睬你，因为你没有这个资本。\n\n当你做出很多成绩，而薪金跟你的能力无法匹配的时候，这个时候你跟老板沟通，就会取得不错的效果。这就是要求你懂得识别什么时候才是最佳的沟通时机。\n\n正如你看到朋友不开心，你安慰都不去安慰人家，就要求对方帮你做事，谁会答应呢？\n\n第三步就是制定沟通策略。\n\n你看到朋友不开心，这个时候你是拍拍对方的肩膀，简单说几句“你不要这样子”，“你不要哭”，还是坐下来了解对方为什么不开心的原因，然后再针对性的为对方排忧解难呢？\n\n没有一种沟通策略是万全的，只能根据当下的情况，当下的对象来调整。对于别人来说最优的沟通策略，对于你也许就是最糟糕的。\n\n一旦你意识到自己按照当前这种沟通策略没有任何效果，就应该变换沟通方式，换过另一种策略跟对方沟通。\n\n在商界，这类型的沟通案例有很多。这一次大家无法达成共识，下一次调整一下谈判的沟通策略，于是就成事了。\n\n所以反馈的结果，就是对自身策略的调整。\n\n看看对方的底线在哪里，也看看自己的接受程度去到哪里。\n\n如果你跟女朋友说：“喂，给我倒杯水过来”，这个沟通策略很糟糕，超出对方接受的底线，这时你就要调整策略，换成这样说：“亲爱的，可以帮我倒杯水吗？”只要这样说，依然是你接受的程度范围内，牺牲一点脸皮，做出让步，未尝不是好策略。\n\n当双方都能够为了某个目的做出让步，例如不再伤心，不再要高价，不再这么顽固，这时候沟通就算完成任务了。\n\n沟通并不是万能的，不要奢求任何事情都能够透过沟通解决。但沟通，却是我们与外界构建和维持良好关系的有效手段。\n\n那怎么提高我们的沟通能力呢？\n\n提高你的情商，你的沟通能力也会随之提高的。\n\n![](http://wx3.sinaimg.cn/mw690/62d95157gy1fq7usrp8k8j20pq0pinar.jpg)\n","slug":"kcxl-3","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvx003yfnpv01olm6cc","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  7/53，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/03/20/kcxl-2\">续上篇</a></p>\n<h5 id=\"3-沟通能力\"><a href=\"#3-沟通能力\" class=\"headerlink\" title=\"3. 沟通能力\"></a>3. 沟通能力</h5><p>有了表达能力的加持，你的沟通能力就可以在此基础上培养了。</p>\n<p>沟通的目的，就是透过语言交流，最终让彼此的思想都能够达成一致共识，取得某些效果。例如你跟家人沟通，就是希望对方能够按照你的想法去做，又或者你希望透过沟通，能够解决到对方不开心这个问题。</p>\n<p>也就是说，沟通不像闲聊，可以天南地北的任意胡侃，而是需要透过你的语言，跟交流对象一起寻求最适合彼此的解决方案。</p>\n<p>看到朋友失恋，你跟她沟通，就是希望可以让对方振作起来；看到孩子不听话，你跟他沟通，就是希望还在能够安分守己一点；看到老板这么苛刻，你跟他沟通，就是希望员工能够获得更好的待遇。</p>\n<p>一篇文章讲述沟通，基本上很困难。</p>\n<p>但一个好的沟通，应该做到五个方面：</p>\n<a id=\"more\"></a>\n<p><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fq7uhiw7v1j20rg0d07db.jpg\" alt=\"\"></p>\n<p>例如你想让老板提高待遇，这是你的沟通目的，也是第一步。那怎么去沟通呢？</p>\n<p>你当然不能在对方刚失去一桩生意的情况下，贸然开口跟他说，结果只会失败；同样，如果你刚入职不久，就要求老板加工资，谁都不会理睬你，因为你没有这个资本。</p>\n<p>当你做出很多成绩，而薪金跟你的能力无法匹配的时候，这个时候你跟老板沟通，就会取得不错的效果。这就是要求你懂得识别什么时候才是最佳的沟通时机。</p>\n<p>正如你看到朋友不开心，你安慰都不去安慰人家，就要求对方帮你做事，谁会答应呢？</p>\n<p>第三步就是制定沟通策略。</p>\n<p>你看到朋友不开心，这个时候你是拍拍对方的肩膀，简单说几句“你不要这样子”，“你不要哭”，还是坐下来了解对方为什么不开心的原因，然后再针对性的为对方排忧解难呢？</p>\n<p>没有一种沟通策略是万全的，只能根据当下的情况，当下的对象来调整。对于别人来说最优的沟通策略，对于你也许就是最糟糕的。</p>\n<p>一旦你意识到自己按照当前这种沟通策略没有任何效果，就应该变换沟通方式，换过另一种策略跟对方沟通。</p>\n<p>在商界，这类型的沟通案例有很多。这一次大家无法达成共识，下一次调整一下谈判的沟通策略，于是就成事了。</p>\n<p>所以反馈的结果，就是对自身策略的调整。</p>\n<p>看看对方的底线在哪里，也看看自己的接受程度去到哪里。</p>\n<p>如果你跟女朋友说：“喂，给我倒杯水过来”，这个沟通策略很糟糕，超出对方接受的底线，这时你就要调整策略，换成这样说：“亲爱的，可以帮我倒杯水吗？”只要这样说，依然是你接受的程度范围内，牺牲一点脸皮，做出让步，未尝不是好策略。</p>\n<p>当双方都能够为了某个目的做出让步，例如不再伤心，不再要高价，不再这么顽固，这时候沟通就算完成任务了。</p>\n<p>沟通并不是万能的，不要奢求任何事情都能够透过沟通解决。但沟通，却是我们与外界构建和维持良好关系的有效手段。</p>\n<p>那怎么提高我们的沟通能力呢？</p>\n<p>提高你的情商，你的沟通能力也会随之提高的。</p>\n<p><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fq7usrp8k8j20pq0pinar.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  7/53，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/03/20/kcxl-2\">续上篇</a></p>\n<h5 id=\"3-沟通能力\"><a href=\"#3-沟通能力\" class=\"headerlink\" title=\"3. 沟通能力\"></a>3. 沟通能力</h5><p>有了表达能力的加持，你的沟通能力就可以在此基础上培养了。</p>\n<p>沟通的目的，就是透过语言交流，最终让彼此的思想都能够达成一致共识，取得某些效果。例如你跟家人沟通，就是希望对方能够按照你的想法去做，又或者你希望透过沟通，能够解决到对方不开心这个问题。</p>\n<p>也就是说，沟通不像闲聊，可以天南地北的任意胡侃，而是需要透过你的语言，跟交流对象一起寻求最适合彼此的解决方案。</p>\n<p>看到朋友失恋，你跟她沟通，就是希望可以让对方振作起来；看到孩子不听话，你跟他沟通，就是希望还在能够安分守己一点；看到老板这么苛刻，你跟他沟通，就是希望员工能够获得更好的待遇。</p>\n<p>一篇文章讲述沟通，基本上很困难。</p>\n<p>但一个好的沟通，应该做到五个方面：</p>","more":"<p><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fq7uhiw7v1j20rg0d07db.jpg\" alt=\"\"></p>\n<p>例如你想让老板提高待遇，这是你的沟通目的，也是第一步。那怎么去沟通呢？</p>\n<p>你当然不能在对方刚失去一桩生意的情况下，贸然开口跟他说，结果只会失败；同样，如果你刚入职不久，就要求老板加工资，谁都不会理睬你，因为你没有这个资本。</p>\n<p>当你做出很多成绩，而薪金跟你的能力无法匹配的时候，这个时候你跟老板沟通，就会取得不错的效果。这就是要求你懂得识别什么时候才是最佳的沟通时机。</p>\n<p>正如你看到朋友不开心，你安慰都不去安慰人家，就要求对方帮你做事，谁会答应呢？</p>\n<p>第三步就是制定沟通策略。</p>\n<p>你看到朋友不开心，这个时候你是拍拍对方的肩膀，简单说几句“你不要这样子”，“你不要哭”，还是坐下来了解对方为什么不开心的原因，然后再针对性的为对方排忧解难呢？</p>\n<p>没有一种沟通策略是万全的，只能根据当下的情况，当下的对象来调整。对于别人来说最优的沟通策略，对于你也许就是最糟糕的。</p>\n<p>一旦你意识到自己按照当前这种沟通策略没有任何效果，就应该变换沟通方式，换过另一种策略跟对方沟通。</p>\n<p>在商界，这类型的沟通案例有很多。这一次大家无法达成共识，下一次调整一下谈判的沟通策略，于是就成事了。</p>\n<p>所以反馈的结果，就是对自身策略的调整。</p>\n<p>看看对方的底线在哪里，也看看自己的接受程度去到哪里。</p>\n<p>如果你跟女朋友说：“喂，给我倒杯水过来”，这个沟通策略很糟糕，超出对方接受的底线，这时你就要调整策略，换成这样说：“亲爱的，可以帮我倒杯水吗？”只要这样说，依然是你接受的程度范围内，牺牲一点脸皮，做出让步，未尝不是好策略。</p>\n<p>当双方都能够为了某个目的做出让步，例如不再伤心，不再要高价，不再这么顽固，这时候沟通就算完成任务了。</p>\n<p>沟通并不是万能的，不要奢求任何事情都能够透过沟通解决。但沟通，却是我们与外界构建和维持良好关系的有效手段。</p>\n<p>那怎么提高我们的沟通能力呢？</p>\n<p>提高你的情商，你的沟通能力也会随之提高的。</p>\n<p><img src=\"http://wx3.sinaimg.cn/mw690/62d95157gy1fq7usrp8k8j20pq0pinar.jpg\" alt=\"\"></p>","sticky":0},{"title":"[转载]程序员口才训练（一）","show":true,"date":"2018-03-24T07:04:39.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  5/53，每周一篇博，坚持！\n\n作为程序员，每天跟机器打交道的时间远超过跟人打交道，工作环境周边也很少有异性的存在，久而久之导致我们程序员群体大都是敏于行讷于言，钢铁直男般的存在。\n\n直来直往的沟通方式，以及没什么社交经验导致大部分的程序员口才都很一般，然而在职场打拼一段时间后，我们会发现，无论什么职业什么工种，良好的口才对我们个人的重要性不言而喻，小到跨部门沟通合作，大到汇报工作晋升答辩等等，口才对工作成败的加分非常可观。\n\n偶然在微博上看到了这篇程序员锻炼口才的[微博](https://weibo.com/3306361973/G8EXr45bF?filter=hot&root_comment_id=0&type=comment#_rnd1521793554304)，特将其转载在此，作为今年提升沟通能力目标的训练方法之一，一年后看成效如何。\n\n##### 0. 概述\n说好话，并不能让我们到达最终的目的，但通往每个最终目的的路上（如找对象，找工作），说好话可以给予我们更多的帮助。所以锻炼口才，就是为了提高我们获得这些帮助的几率，让我们更接近自己人生中的各种最终目的。\n\n但是很多人尽管知道自己需要恶补口才，却苦于不知道怎么着手开始锻炼。如果你没有一个系统性的计划，东一头练一下，西一头练一下，这样就很难出效果。\n\n锻炼口才，必须有针对性，更不能操之过急。\n\n最好的方法，就是按照一定的流程去练习。而这个流程一般分为四大部分。\n\n- 第一部分/ 基本功锻炼，旨在提升我们口齿伶俐的程度\n- 第二部分/ 表达能力锻炼，旨在提升我们组织言语表达自我思想的纯属度\n- 第三部分/ 沟通能力锻炼，旨在提升我们与人交往过程中双向交流的互动度\n- 第四部分/ 高级说话能力锻炼，旨在让我们掌握不同情况下各种说话形式的语言运用\n\n![](http://wx4.sinaimg.cn/mw690/62d95157gy1fpn2xf9o3yj20ru0s617j.jpg)\n\n这四个部分，在锻炼的时候最好循序渐进的各个击破，否则，前面的部分还没有掌握好就急于进入下一个部分练习，那一旦有个部分练习的不好，就会拉低我们口才的整体发挥效果。\n\n那每一个部分，应该怎么锻炼呢？\n\n<!--more-->\n\n##### 1. 基本功锻炼\n我们把话说出来，最基本的条件就是这个话要说得流利，清晰，悦耳。\n\n如果你说话磕磕碰碰，含糊不清，尖声刺耳，那么你的口才最好从基本功开始练起。\n\n基本功不好，很容易影响到我们传递出来的信息。千万不要以为你平时私底下说话没问题，就认为在所有情况下说话都没有问题。\n\n很简单的给自己做一次测试，现在让你用一种非常生气的情绪随便骂一段话，你能够以一种爆发的状态把话流利说出来吗？恐怕不能！因为在生气状态下说话，人的心理肯定很焦急，一焦急思维就会混乱，一混乱你就无法很顺畅的把话说出来了。\n\n尝试练习这段话：你这个卑鄙无耻的贱人，抢了我的爱人，抢了我的家庭，抢了我的生活，现在还敢出现在我面前？我这辈子都不会原谅你，请你立刻给我滚出去！\n\n这段话如果你磕磕碰碰地说出来，你能够表现出那种愤怒吗？相反，要是你能够非常流畅完整的把他们说出来，别人就很容易感受到你那种愤怒的情绪。当你基本功不好的时候，想骂人都骂不出来啊，可憋屈了！\n\n而让自己口齿流利起来的基本功锻炼，不外乎只有一个方法，就是重复的快速大声朗读。至于用来朗读的材料，一般是绕口令或者任何一段文字。\n\n![](http://wx1.sinaimg.cn/mw690/62d95157gy1fpn37rhhghj20qy0kmqsp.jpg)\n\n绕口令：\n1. \n山前有三十三棵死涩柿子树，\n山后有四十四只石狮子。\n山前的三十三棵死涩柿子树，\n涩死了山后的四十四只石狮子，\n山后的四十四只石狮子，\n咬死了山前的三十三棵死涩柿子树，\n死涩柿子树从此不结死涩大柿子。\n\n2. \n白石塔白石塔，\n白石搭白塔，\n白塔白石搭，\n搭好白石塔，\n白塔白又大。\n\n3. \n我家有个肥净白净八斤鸡，飞到张家后院里。\n张家院里有个肥净白净八斤狗，咬了我的肥净白净八斤鸡。\n我拿他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。\n\n4. \n打南边来了个喇嘛，手里提了五斤鳎目。\n打北边来了个哑巴，腰里别着个喇叭。\n提了鳎目的喇嘛要拿五斤鳎目去换北边哑巴腰里别着的喇叭，\n别着的喇叭的哑巴不愿意拿喇叭去换提了鳎目喇嘛他的鳎目。\n提了鳎目的喇嘛就急了，\n拿起了五斤鳎目打了别着喇叭哑巴一鳎目，\n别着的喇叭的哑巴也急了，顺腰里摘下喇叭，\n打了提着鳎目喇嘛一喇叭。\n也不知道喇嘛的鳎目打了别着的喇叭的哑巴一鳎目，\n还是别着的喇叭的哑巴打了提了鳎目的喇嘛一喇叭。\n喇嘛回家炖鳎目，哑巴回家吹喇叭。\n\n为什么重复的快速大声朗读，对于我们的流利有帮助呢？\n举个例子。\n\n外国人的名字，一般都很长又很难念。\n\n例如我们熟知的足球巨星C罗，全名是克里斯蒂亚诺罗纳尔多。你念得磕磕碰碰，而那些足球评论员却很顺口的就念出来，原因就是因为他们经常反复去念这些外国足球运动员的名字，不熟悉就念到熟悉，久而久之，熟能生巧，流利说出来自然就不在话下。\n\n锻炼口才也是如此。\n\n一开始首先锻炼自己的舌头，不断透过大声朗读材料锻炼自己的口齿流利程度，持续一段时间，我们说话就会减少“口吃”的现象。\n\n但值得注意的是，不同的文字材料对于我们说话的锻炼，会起到不同的效果。\n\n例如你念一些非常口语化的鸡汤文会很流利，可是念报纸上的新闻文章，也许就不会那么流畅了。因为前者的语言表达我们经常用到，后者那种报道性质的文体表达，我们平常生活很少会这么说，多说自然流利，少说自然卡壳。\n\n所以，多念绕口令或者多朗读不同的文章，会提高你口齿的伶俐程度。那怎么才算出师呢？\n\n我觉得，至少你能把是个绕口令和十篇短文朗读到不用看稿子都能脱口而出，这才算完成任务。\n\n如果你能够把这些材料都流利说出来，那就说明你已经具备了继续深造的条件，就可以进入到下一个阶段锻炼。\n\n当然，这个阶段的练习，任何时候都可以做。以后你要演讲，拿起写好的演讲稿，大声朗读它直到脱口而出，你就比其他人更能流利表达自己。\n\n","source":"_posts/kcxl.md","raw":"title: '[转载]程序员口才训练（一）'\nshow: true\ndate: 2018-03-24 15:04:39\ntags: 口才\ncategories: 文摘采撷\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  5/53，每周一篇博，坚持！\n\n作为程序员，每天跟机器打交道的时间远超过跟人打交道，工作环境周边也很少有异性的存在，久而久之导致我们程序员群体大都是敏于行讷于言，钢铁直男般的存在。\n\n直来直往的沟通方式，以及没什么社交经验导致大部分的程序员口才都很一般，然而在职场打拼一段时间后，我们会发现，无论什么职业什么工种，良好的口才对我们个人的重要性不言而喻，小到跨部门沟通合作，大到汇报工作晋升答辩等等，口才对工作成败的加分非常可观。\n\n偶然在微博上看到了这篇程序员锻炼口才的[微博](https://weibo.com/3306361973/G8EXr45bF?filter=hot&root_comment_id=0&type=comment#_rnd1521793554304)，特将其转载在此，作为今年提升沟通能力目标的训练方法之一，一年后看成效如何。\n\n##### 0. 概述\n说好话，并不能让我们到达最终的目的，但通往每个最终目的的路上（如找对象，找工作），说好话可以给予我们更多的帮助。所以锻炼口才，就是为了提高我们获得这些帮助的几率，让我们更接近自己人生中的各种最终目的。\n\n但是很多人尽管知道自己需要恶补口才，却苦于不知道怎么着手开始锻炼。如果你没有一个系统性的计划，东一头练一下，西一头练一下，这样就很难出效果。\n\n锻炼口才，必须有针对性，更不能操之过急。\n\n最好的方法，就是按照一定的流程去练习。而这个流程一般分为四大部分。\n\n- 第一部分/ 基本功锻炼，旨在提升我们口齿伶俐的程度\n- 第二部分/ 表达能力锻炼，旨在提升我们组织言语表达自我思想的纯属度\n- 第三部分/ 沟通能力锻炼，旨在提升我们与人交往过程中双向交流的互动度\n- 第四部分/ 高级说话能力锻炼，旨在让我们掌握不同情况下各种说话形式的语言运用\n\n![](http://wx4.sinaimg.cn/mw690/62d95157gy1fpn2xf9o3yj20ru0s617j.jpg)\n\n这四个部分，在锻炼的时候最好循序渐进的各个击破，否则，前面的部分还没有掌握好就急于进入下一个部分练习，那一旦有个部分练习的不好，就会拉低我们口才的整体发挥效果。\n\n那每一个部分，应该怎么锻炼呢？\n\n<!--more-->\n\n##### 1. 基本功锻炼\n我们把话说出来，最基本的条件就是这个话要说得流利，清晰，悦耳。\n\n如果你说话磕磕碰碰，含糊不清，尖声刺耳，那么你的口才最好从基本功开始练起。\n\n基本功不好，很容易影响到我们传递出来的信息。千万不要以为你平时私底下说话没问题，就认为在所有情况下说话都没有问题。\n\n很简单的给自己做一次测试，现在让你用一种非常生气的情绪随便骂一段话，你能够以一种爆发的状态把话流利说出来吗？恐怕不能！因为在生气状态下说话，人的心理肯定很焦急，一焦急思维就会混乱，一混乱你就无法很顺畅的把话说出来了。\n\n尝试练习这段话：你这个卑鄙无耻的贱人，抢了我的爱人，抢了我的家庭，抢了我的生活，现在还敢出现在我面前？我这辈子都不会原谅你，请你立刻给我滚出去！\n\n这段话如果你磕磕碰碰地说出来，你能够表现出那种愤怒吗？相反，要是你能够非常流畅完整的把他们说出来，别人就很容易感受到你那种愤怒的情绪。当你基本功不好的时候，想骂人都骂不出来啊，可憋屈了！\n\n而让自己口齿流利起来的基本功锻炼，不外乎只有一个方法，就是重复的快速大声朗读。至于用来朗读的材料，一般是绕口令或者任何一段文字。\n\n![](http://wx1.sinaimg.cn/mw690/62d95157gy1fpn37rhhghj20qy0kmqsp.jpg)\n\n绕口令：\n1. \n山前有三十三棵死涩柿子树，\n山后有四十四只石狮子。\n山前的三十三棵死涩柿子树，\n涩死了山后的四十四只石狮子，\n山后的四十四只石狮子，\n咬死了山前的三十三棵死涩柿子树，\n死涩柿子树从此不结死涩大柿子。\n\n2. \n白石塔白石塔，\n白石搭白塔，\n白塔白石搭，\n搭好白石塔，\n白塔白又大。\n\n3. \n我家有个肥净白净八斤鸡，飞到张家后院里。\n张家院里有个肥净白净八斤狗，咬了我的肥净白净八斤鸡。\n我拿他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。\n\n4. \n打南边来了个喇嘛，手里提了五斤鳎目。\n打北边来了个哑巴，腰里别着个喇叭。\n提了鳎目的喇嘛要拿五斤鳎目去换北边哑巴腰里别着的喇叭，\n别着的喇叭的哑巴不愿意拿喇叭去换提了鳎目喇嘛他的鳎目。\n提了鳎目的喇嘛就急了，\n拿起了五斤鳎目打了别着喇叭哑巴一鳎目，\n别着的喇叭的哑巴也急了，顺腰里摘下喇叭，\n打了提着鳎目喇嘛一喇叭。\n也不知道喇嘛的鳎目打了别着的喇叭的哑巴一鳎目，\n还是别着的喇叭的哑巴打了提了鳎目的喇嘛一喇叭。\n喇嘛回家炖鳎目，哑巴回家吹喇叭。\n\n为什么重复的快速大声朗读，对于我们的流利有帮助呢？\n举个例子。\n\n外国人的名字，一般都很长又很难念。\n\n例如我们熟知的足球巨星C罗，全名是克里斯蒂亚诺罗纳尔多。你念得磕磕碰碰，而那些足球评论员却很顺口的就念出来，原因就是因为他们经常反复去念这些外国足球运动员的名字，不熟悉就念到熟悉，久而久之，熟能生巧，流利说出来自然就不在话下。\n\n锻炼口才也是如此。\n\n一开始首先锻炼自己的舌头，不断透过大声朗读材料锻炼自己的口齿流利程度，持续一段时间，我们说话就会减少“口吃”的现象。\n\n但值得注意的是，不同的文字材料对于我们说话的锻炼，会起到不同的效果。\n\n例如你念一些非常口语化的鸡汤文会很流利，可是念报纸上的新闻文章，也许就不会那么流畅了。因为前者的语言表达我们经常用到，后者那种报道性质的文体表达，我们平常生活很少会这么说，多说自然流利，少说自然卡壳。\n\n所以，多念绕口令或者多朗读不同的文章，会提高你口齿的伶俐程度。那怎么才算出师呢？\n\n我觉得，至少你能把是个绕口令和十篇短文朗读到不用看稿子都能脱口而出，这才算完成任务。\n\n如果你能够把这些材料都流利说出来，那就说明你已经具备了继续深造的条件，就可以进入到下一个阶段锻炼。\n\n当然，这个阶段的练习，任何时候都可以做。以后你要演讲，拿起写好的演讲稿，大声朗读它直到脱口而出，你就比其他人更能流利表达自己。\n\n","slug":"kcxl","published":1,"updated":"2018-10-19T18:30:07.980Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzvz0041fnpvflkhuoit","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  5/53，每周一篇博，坚持！</p>\n<p>作为程序员，每天跟机器打交道的时间远超过跟人打交道，工作环境周边也很少有异性的存在，久而久之导致我们程序员群体大都是敏于行讷于言，钢铁直男般的存在。</p>\n<p>直来直往的沟通方式，以及没什么社交经验导致大部分的程序员口才都很一般，然而在职场打拼一段时间后，我们会发现，无论什么职业什么工种，良好的口才对我们个人的重要性不言而喻，小到跨部门沟通合作，大到汇报工作晋升答辩等等，口才对工作成败的加分非常可观。</p>\n<p>偶然在微博上看到了这篇程序员锻炼口才的<a href=\"https://weibo.com/3306361973/G8EXr45bF?filter=hot&amp;root_comment_id=0&amp;type=comment#_rnd1521793554304\" target=\"_blank\" rel=\"noopener\">微博</a>，特将其转载在此，作为今年提升沟通能力目标的训练方法之一，一年后看成效如何。</p>\n<h5 id=\"0-概述\"><a href=\"#0-概述\" class=\"headerlink\" title=\"0. 概述\"></a>0. 概述</h5><p>说好话，并不能让我们到达最终的目的，但通往每个最终目的的路上（如找对象，找工作），说好话可以给予我们更多的帮助。所以锻炼口才，就是为了提高我们获得这些帮助的几率，让我们更接近自己人生中的各种最终目的。</p>\n<p>但是很多人尽管知道自己需要恶补口才，却苦于不知道怎么着手开始锻炼。如果你没有一个系统性的计划，东一头练一下，西一头练一下，这样就很难出效果。</p>\n<p>锻炼口才，必须有针对性，更不能操之过急。</p>\n<p>最好的方法，就是按照一定的流程去练习。而这个流程一般分为四大部分。</p>\n<ul>\n<li>第一部分/ 基本功锻炼，旨在提升我们口齿伶俐的程度</li>\n<li>第二部分/ 表达能力锻炼，旨在提升我们组织言语表达自我思想的纯属度</li>\n<li>第三部分/ 沟通能力锻炼，旨在提升我们与人交往过程中双向交流的互动度</li>\n<li>第四部分/ 高级说话能力锻炼，旨在让我们掌握不同情况下各种说话形式的语言运用</li>\n</ul>\n<p><img src=\"http://wx4.sinaimg.cn/mw690/62d95157gy1fpn2xf9o3yj20ru0s617j.jpg\" alt=\"\"></p>\n<p>这四个部分，在锻炼的时候最好循序渐进的各个击破，否则，前面的部分还没有掌握好就急于进入下一个部分练习，那一旦有个部分练习的不好，就会拉低我们口才的整体发挥效果。</p>\n<p>那每一个部分，应该怎么锻炼呢？</p>\n<a id=\"more\"></a>\n<h5 id=\"1-基本功锻炼\"><a href=\"#1-基本功锻炼\" class=\"headerlink\" title=\"1. 基本功锻炼\"></a>1. 基本功锻炼</h5><p>我们把话说出来，最基本的条件就是这个话要说得流利，清晰，悦耳。</p>\n<p>如果你说话磕磕碰碰，含糊不清，尖声刺耳，那么你的口才最好从基本功开始练起。</p>\n<p>基本功不好，很容易影响到我们传递出来的信息。千万不要以为你平时私底下说话没问题，就认为在所有情况下说话都没有问题。</p>\n<p>很简单的给自己做一次测试，现在让你用一种非常生气的情绪随便骂一段话，你能够以一种爆发的状态把话流利说出来吗？恐怕不能！因为在生气状态下说话，人的心理肯定很焦急，一焦急思维就会混乱，一混乱你就无法很顺畅的把话说出来了。</p>\n<p>尝试练习这段话：你这个卑鄙无耻的贱人，抢了我的爱人，抢了我的家庭，抢了我的生活，现在还敢出现在我面前？我这辈子都不会原谅你，请你立刻给我滚出去！</p>\n<p>这段话如果你磕磕碰碰地说出来，你能够表现出那种愤怒吗？相反，要是你能够非常流畅完整的把他们说出来，别人就很容易感受到你那种愤怒的情绪。当你基本功不好的时候，想骂人都骂不出来啊，可憋屈了！</p>\n<p>而让自己口齿流利起来的基本功锻炼，不外乎只有一个方法，就是重复的快速大声朗读。至于用来朗读的材料，一般是绕口令或者任何一段文字。</p>\n<p><img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fpn37rhhghj20qy0kmqsp.jpg\" alt=\"\"></p>\n<p>绕口令：</p>\n<ol>\n<li><p>山前有三十三棵死涩柿子树，<br>山后有四十四只石狮子。<br>山前的三十三棵死涩柿子树，<br>涩死了山后的四十四只石狮子，<br>山后的四十四只石狮子，<br>咬死了山前的三十三棵死涩柿子树，<br>死涩柿子树从此不结死涩大柿子。</p>\n</li>\n<li><p>白石塔白石塔，<br>白石搭白塔，<br>白塔白石搭，<br>搭好白石塔，<br>白塔白又大。</p>\n</li>\n<li><p>我家有个肥净白净八斤鸡，飞到张家后院里。<br>张家院里有个肥净白净八斤狗，咬了我的肥净白净八斤鸡。<br>我拿他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。</p>\n</li>\n<li><p>打南边来了个喇嘛，手里提了五斤鳎目。<br>打北边来了个哑巴，腰里别着个喇叭。<br>提了鳎目的喇嘛要拿五斤鳎目去换北边哑巴腰里别着的喇叭，<br>别着的喇叭的哑巴不愿意拿喇叭去换提了鳎目喇嘛他的鳎目。<br>提了鳎目的喇嘛就急了，<br>拿起了五斤鳎目打了别着喇叭哑巴一鳎目，<br>别着的喇叭的哑巴也急了，顺腰里摘下喇叭，<br>打了提着鳎目喇嘛一喇叭。<br>也不知道喇嘛的鳎目打了别着的喇叭的哑巴一鳎目，<br>还是别着的喇叭的哑巴打了提了鳎目的喇嘛一喇叭。<br>喇嘛回家炖鳎目，哑巴回家吹喇叭。</p>\n</li>\n</ol>\n<p>为什么重复的快速大声朗读，对于我们的流利有帮助呢？<br>举个例子。</p>\n<p>外国人的名字，一般都很长又很难念。</p>\n<p>例如我们熟知的足球巨星C罗，全名是克里斯蒂亚诺罗纳尔多。你念得磕磕碰碰，而那些足球评论员却很顺口的就念出来，原因就是因为他们经常反复去念这些外国足球运动员的名字，不熟悉就念到熟悉，久而久之，熟能生巧，流利说出来自然就不在话下。</p>\n<p>锻炼口才也是如此。</p>\n<p>一开始首先锻炼自己的舌头，不断透过大声朗读材料锻炼自己的口齿流利程度，持续一段时间，我们说话就会减少“口吃”的现象。</p>\n<p>但值得注意的是，不同的文字材料对于我们说话的锻炼，会起到不同的效果。</p>\n<p>例如你念一些非常口语化的鸡汤文会很流利，可是念报纸上的新闻文章，也许就不会那么流畅了。因为前者的语言表达我们经常用到，后者那种报道性质的文体表达，我们平常生活很少会这么说，多说自然流利，少说自然卡壳。</p>\n<p>所以，多念绕口令或者多朗读不同的文章，会提高你口齿的伶俐程度。那怎么才算出师呢？</p>\n<p>我觉得，至少你能把是个绕口令和十篇短文朗读到不用看稿子都能脱口而出，这才算完成任务。</p>\n<p>如果你能够把这些材料都流利说出来，那就说明你已经具备了继续深造的条件，就可以进入到下一个阶段锻炼。</p>\n<p>当然，这个阶段的练习，任何时候都可以做。以后你要演讲，拿起写好的演讲稿，大声朗读它直到脱口而出，你就比其他人更能流利表达自己。</p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  5/53，每周一篇博，坚持！</p>\n<p>作为程序员，每天跟机器打交道的时间远超过跟人打交道，工作环境周边也很少有异性的存在，久而久之导致我们程序员群体大都是敏于行讷于言，钢铁直男般的存在。</p>\n<p>直来直往的沟通方式，以及没什么社交经验导致大部分的程序员口才都很一般，然而在职场打拼一段时间后，我们会发现，无论什么职业什么工种，良好的口才对我们个人的重要性不言而喻，小到跨部门沟通合作，大到汇报工作晋升答辩等等，口才对工作成败的加分非常可观。</p>\n<p>偶然在微博上看到了这篇程序员锻炼口才的<a href=\"https://weibo.com/3306361973/G8EXr45bF?filter=hot&amp;root_comment_id=0&amp;type=comment#_rnd1521793554304\" target=\"_blank\" rel=\"noopener\">微博</a>，特将其转载在此，作为今年提升沟通能力目标的训练方法之一，一年后看成效如何。</p>\n<h5 id=\"0-概述\"><a href=\"#0-概述\" class=\"headerlink\" title=\"0. 概述\"></a>0. 概述</h5><p>说好话，并不能让我们到达最终的目的，但通往每个最终目的的路上（如找对象，找工作），说好话可以给予我们更多的帮助。所以锻炼口才，就是为了提高我们获得这些帮助的几率，让我们更接近自己人生中的各种最终目的。</p>\n<p>但是很多人尽管知道自己需要恶补口才，却苦于不知道怎么着手开始锻炼。如果你没有一个系统性的计划，东一头练一下，西一头练一下，这样就很难出效果。</p>\n<p>锻炼口才，必须有针对性，更不能操之过急。</p>\n<p>最好的方法，就是按照一定的流程去练习。而这个流程一般分为四大部分。</p>\n<ul>\n<li>第一部分/ 基本功锻炼，旨在提升我们口齿伶俐的程度</li>\n<li>第二部分/ 表达能力锻炼，旨在提升我们组织言语表达自我思想的纯属度</li>\n<li>第三部分/ 沟通能力锻炼，旨在提升我们与人交往过程中双向交流的互动度</li>\n<li>第四部分/ 高级说话能力锻炼，旨在让我们掌握不同情况下各种说话形式的语言运用</li>\n</ul>\n<p><img src=\"http://wx4.sinaimg.cn/mw690/62d95157gy1fpn2xf9o3yj20ru0s617j.jpg\" alt=\"\"></p>\n<p>这四个部分，在锻炼的时候最好循序渐进的各个击破，否则，前面的部分还没有掌握好就急于进入下一个部分练习，那一旦有个部分练习的不好，就会拉低我们口才的整体发挥效果。</p>\n<p>那每一个部分，应该怎么锻炼呢？</p>","more":"<h5 id=\"1-基本功锻炼\"><a href=\"#1-基本功锻炼\" class=\"headerlink\" title=\"1. 基本功锻炼\"></a>1. 基本功锻炼</h5><p>我们把话说出来，最基本的条件就是这个话要说得流利，清晰，悦耳。</p>\n<p>如果你说话磕磕碰碰，含糊不清，尖声刺耳，那么你的口才最好从基本功开始练起。</p>\n<p>基本功不好，很容易影响到我们传递出来的信息。千万不要以为你平时私底下说话没问题，就认为在所有情况下说话都没有问题。</p>\n<p>很简单的给自己做一次测试，现在让你用一种非常生气的情绪随便骂一段话，你能够以一种爆发的状态把话流利说出来吗？恐怕不能！因为在生气状态下说话，人的心理肯定很焦急，一焦急思维就会混乱，一混乱你就无法很顺畅的把话说出来了。</p>\n<p>尝试练习这段话：你这个卑鄙无耻的贱人，抢了我的爱人，抢了我的家庭，抢了我的生活，现在还敢出现在我面前？我这辈子都不会原谅你，请你立刻给我滚出去！</p>\n<p>这段话如果你磕磕碰碰地说出来，你能够表现出那种愤怒吗？相反，要是你能够非常流畅完整的把他们说出来，别人就很容易感受到你那种愤怒的情绪。当你基本功不好的时候，想骂人都骂不出来啊，可憋屈了！</p>\n<p>而让自己口齿流利起来的基本功锻炼，不外乎只有一个方法，就是重复的快速大声朗读。至于用来朗读的材料，一般是绕口令或者任何一段文字。</p>\n<p><img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fpn37rhhghj20qy0kmqsp.jpg\" alt=\"\"></p>\n<p>绕口令：</p>\n<ol>\n<li><p>山前有三十三棵死涩柿子树，<br>山后有四十四只石狮子。<br>山前的三十三棵死涩柿子树，<br>涩死了山后的四十四只石狮子，<br>山后的四十四只石狮子，<br>咬死了山前的三十三棵死涩柿子树，<br>死涩柿子树从此不结死涩大柿子。</p>\n</li>\n<li><p>白石塔白石塔，<br>白石搭白塔，<br>白塔白石搭，<br>搭好白石塔，<br>白塔白又大。</p>\n</li>\n<li><p>我家有个肥净白净八斤鸡，飞到张家后院里。<br>张家院里有个肥净白净八斤狗，咬了我的肥净白净八斤鸡。<br>我拿他的肥净白净八斤狗，赔了我的肥净白净八斤鸡。</p>\n</li>\n<li><p>打南边来了个喇嘛，手里提了五斤鳎目。<br>打北边来了个哑巴，腰里别着个喇叭。<br>提了鳎目的喇嘛要拿五斤鳎目去换北边哑巴腰里别着的喇叭，<br>别着的喇叭的哑巴不愿意拿喇叭去换提了鳎目喇嘛他的鳎目。<br>提了鳎目的喇嘛就急了，<br>拿起了五斤鳎目打了别着喇叭哑巴一鳎目，<br>别着的喇叭的哑巴也急了，顺腰里摘下喇叭，<br>打了提着鳎目喇嘛一喇叭。<br>也不知道喇嘛的鳎目打了别着的喇叭的哑巴一鳎目，<br>还是别着的喇叭的哑巴打了提了鳎目的喇嘛一喇叭。<br>喇嘛回家炖鳎目，哑巴回家吹喇叭。</p>\n</li>\n</ol>\n<p>为什么重复的快速大声朗读，对于我们的流利有帮助呢？<br>举个例子。</p>\n<p>外国人的名字，一般都很长又很难念。</p>\n<p>例如我们熟知的足球巨星C罗，全名是克里斯蒂亚诺罗纳尔多。你念得磕磕碰碰，而那些足球评论员却很顺口的就念出来，原因就是因为他们经常反复去念这些外国足球运动员的名字，不熟悉就念到熟悉，久而久之，熟能生巧，流利说出来自然就不在话下。</p>\n<p>锻炼口才也是如此。</p>\n<p>一开始首先锻炼自己的舌头，不断透过大声朗读材料锻炼自己的口齿流利程度，持续一段时间，我们说话就会减少“口吃”的现象。</p>\n<p>但值得注意的是，不同的文字材料对于我们说话的锻炼，会起到不同的效果。</p>\n<p>例如你念一些非常口语化的鸡汤文会很流利，可是念报纸上的新闻文章，也许就不会那么流畅了。因为前者的语言表达我们经常用到，后者那种报道性质的文体表达，我们平常生活很少会这么说，多说自然流利，少说自然卡壳。</p>\n<p>所以，多念绕口令或者多朗读不同的文章，会提高你口齿的伶俐程度。那怎么才算出师呢？</p>\n<p>我觉得，至少你能把是个绕口令和十篇短文朗读到不用看稿子都能脱口而出，这才算完成任务。</p>\n<p>如果你能够把这些材料都流利说出来，那就说明你已经具备了继续深造的条件，就可以进入到下一个阶段锻炼。</p>\n<p>当然，这个阶段的练习，任何时候都可以做。以后你要演讲，拿起写好的演讲稿，大声朗读它直到脱口而出，你就比其他人更能流利表达自己。</p>","sticky":0},{"title":"延迟加载原理及实现","show":true,"date":"2016-01-28T07:36:13.000Z","_content":"#### 懒加载\n\"懒加载\"或谓\"延迟加载\"、\"按需加载\"是一种网页性能优化的技术。在很多场景下被使用，如微博的信息流，百度的图片搜索以及阿里巴巴的底部p4p，右侧p4p等，都是在用户访问到的时候才加载，这样可以避免在加载页面时加载过多资源造成页面渲染时间拉长，影响用户体验。\n一直想了解下p4p异步加载的实现方式，没有前端的代码权限，因此只能自己琢磨，本文即是在内部光年平台的开发过程中，探索并应用的一种懒加载方法。总结记录如下。\n\n#### 屏幕高宽相关属性\n正式开始前，首先总结一下，跟浏览器以及网页文档高宽相关的几个属性，这几个属性对于后文要说到的懒加载实现方法有重要意义。\n1. 网页可见区域宽\n`document.body.clientWidth`\n2. 网页可见区域高\n`document.body.clientHeight`\n3. 网页正文全文宽\n`document.body.scrollWidth`\n4. 网页正文全文高\n`document.body.scrollHeight`\n5. 网页被滚动的高\n`document.body.scrollTop`\n6. 网页被滚动的左\n`document.body.scrollLeft`\n5. 屏幕分辨率宽\n`window.screen.height`\n6. 屏幕分辨率高\n`window.screen.width`\n7. 网页元素绝对位置\n屏幕的坐标系原点位于屏幕左上角，所以一个元素的绝对位置指的是相对于屏幕左上角的坐标值。该值需要通过计算才能得到。\n每个元素都有offsetLeft和offsetTop属性，表示该元素的左上角相对父元素左上角的距离。因此只要将元素自身的offsetLeft，offsetTop和其父元素的值相加，即可得到该元素的绝对坐标。\n参见下图：\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1f0jtsa67o9g20dw0aewec.gif)\n有一些属性在懒加载实现方法中并未用到，考虑到比较常用，一并整理在此以作备忘。\n\n<!--more-->\n\n#### 懒加载原理\n朴素的想法来看，要想实现懒加载，那么只要将非首屏内容异步加载，在用户访问到的时候再发出请求即可。当某个模块容器到达了网页可见区域时，使用ajax异步请求将请求内容渲染出来即可。于是问题转换为模块容器何时到达可见区域。\n\n模块容器与网页可见区域相互交叠时，模块容器即到达了可见区。此时触发请求。\n\n#### 判断模块是否到达可视区\n根据上述分析，问题进一步转换为判断两个长方形何时发生\"碰撞\"。\n两个长方形发生\"碰撞\"的两种临界情形如下图所示：\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f13h0mc6nrj20em0hq3z4.jpg)\n我们先来看下第一种情形。\n在此临界情形下，分别取两个长方形的中线，两根中线的距离差应该刚好等于两个长方形宽度和的一半。\n即有如下公式成立：\n```\nm1 = left1 + width1/2\nm2 = left2 + width2/2\n|m1 - m2| = (width1 + width2) / 2\n```\n当`|m1 - m2| < (width1 + width2) / 2`时，两个长方形发生了\"碰撞\"。\n\n同理，如果在高度方向上发生碰撞，则有：\n```\nm1 = top1 + height1 / 2\nm2 = top2 + height2 / 2\n|m1 - m2| < (height1 + height2) / 2\n```\n\n#### 获取元素绝对位置\n根据上述分析，将元素与其父元素左上角的偏离坐标和其父元素离坐标原点的偏离位置累加即可。\n```\nfunction getDstResource(p){\n    var l = 0,t = 0,w,h;\n    w = p.offsetWidth;\n    h = p.offsetHeight;\n    while (p.offsetParent){\n        l += p.offsetLeft;\n        t += p.offsetTop;\n        p = p.offsetParent;\n    }\n    return {'left':l,'top':t,'width':w,'height':h};\n}\n```\n\n#### 完整示例\n```\n//获取可视区\nfunction getVisiableZone(){\n    var l,t,w,h;\n    l = document.documentElement.scrollLeft || document.body.scrollLeft;\n    t = document.documentElement.scrollTop || document.body.scrollTop;\n    w = document.documentElement.clientWidth;\n    h = document.documentElement.clientHeight;\n    return {'left':l,'top':t,'width':w,'height':h};\n}\n\n//获取元素绝对位置\nfunction getDstResource(p){\n    var l = 0,t = 0,w,h;\n    w = p.offsetWidth;\n    h = p.offsetHeight;\n    while (p.offsetParent){\n        l += p.offsetLeft;\n        t += p.offsetTop;\n        p = p.offsetParent;\n    }\n    return {'left':l,'top':t,'width':w,'height':h};\n}\n\n//判断两个长方形是否交叠\nfunction overlap(rect1,rect2){\n    var l1,l2,t1,t2,w,h;\n    l1 = rect1.left + rect1.width / 2;\n    l2 = rect2.left + rect2.width / 2;\n    t1 = rect1.top + rect1.height / 2;\n    t2 = rect2.top + rect2.height / 2;\n    w = (rect1.width + rect2.width) / 2;\n    h = (rect1.height + rect2.height) / 2;\n    return Math.abs(l1 - l2) < w && Math.abs(t1 - t2) < h;\n}\n\n//异步加载\nif(overlap(getVisiableZone(),getDstResource(document.getElementById(\"xxx\")))){\n\t$.ajax();\n\t......\n}\n```\n\n","source":"_posts/lazy-load.md","raw":"title: 延迟加载原理及实现\nshow: true\ndate: 2016-01-28 15:36:13\ntags: [\"懒加载\",\"延迟加载\",\"jquery\",\"lazyload\"]\ncategories: 技术人生\n---\n#### 懒加载\n\"懒加载\"或谓\"延迟加载\"、\"按需加载\"是一种网页性能优化的技术。在很多场景下被使用，如微博的信息流，百度的图片搜索以及阿里巴巴的底部p4p，右侧p4p等，都是在用户访问到的时候才加载，这样可以避免在加载页面时加载过多资源造成页面渲染时间拉长，影响用户体验。\n一直想了解下p4p异步加载的实现方式，没有前端的代码权限，因此只能自己琢磨，本文即是在内部光年平台的开发过程中，探索并应用的一种懒加载方法。总结记录如下。\n\n#### 屏幕高宽相关属性\n正式开始前，首先总结一下，跟浏览器以及网页文档高宽相关的几个属性，这几个属性对于后文要说到的懒加载实现方法有重要意义。\n1. 网页可见区域宽\n`document.body.clientWidth`\n2. 网页可见区域高\n`document.body.clientHeight`\n3. 网页正文全文宽\n`document.body.scrollWidth`\n4. 网页正文全文高\n`document.body.scrollHeight`\n5. 网页被滚动的高\n`document.body.scrollTop`\n6. 网页被滚动的左\n`document.body.scrollLeft`\n5. 屏幕分辨率宽\n`window.screen.height`\n6. 屏幕分辨率高\n`window.screen.width`\n7. 网页元素绝对位置\n屏幕的坐标系原点位于屏幕左上角，所以一个元素的绝对位置指的是相对于屏幕左上角的坐标值。该值需要通过计算才能得到。\n每个元素都有offsetLeft和offsetTop属性，表示该元素的左上角相对父元素左上角的距离。因此只要将元素自身的offsetLeft，offsetTop和其父元素的值相加，即可得到该元素的绝对坐标。\n参见下图：\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1f0jtsa67o9g20dw0aewec.gif)\n有一些属性在懒加载实现方法中并未用到，考虑到比较常用，一并整理在此以作备忘。\n\n<!--more-->\n\n#### 懒加载原理\n朴素的想法来看，要想实现懒加载，那么只要将非首屏内容异步加载，在用户访问到的时候再发出请求即可。当某个模块容器到达了网页可见区域时，使用ajax异步请求将请求内容渲染出来即可。于是问题转换为模块容器何时到达可见区域。\n\n模块容器与网页可见区域相互交叠时，模块容器即到达了可见区。此时触发请求。\n\n#### 判断模块是否到达可视区\n根据上述分析，问题进一步转换为判断两个长方形何时发生\"碰撞\"。\n两个长方形发生\"碰撞\"的两种临界情形如下图所示：\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f13h0mc6nrj20em0hq3z4.jpg)\n我们先来看下第一种情形。\n在此临界情形下，分别取两个长方形的中线，两根中线的距离差应该刚好等于两个长方形宽度和的一半。\n即有如下公式成立：\n```\nm1 = left1 + width1/2\nm2 = left2 + width2/2\n|m1 - m2| = (width1 + width2) / 2\n```\n当`|m1 - m2| < (width1 + width2) / 2`时，两个长方形发生了\"碰撞\"。\n\n同理，如果在高度方向上发生碰撞，则有：\n```\nm1 = top1 + height1 / 2\nm2 = top2 + height2 / 2\n|m1 - m2| < (height1 + height2) / 2\n```\n\n#### 获取元素绝对位置\n根据上述分析，将元素与其父元素左上角的偏离坐标和其父元素离坐标原点的偏离位置累加即可。\n```\nfunction getDstResource(p){\n    var l = 0,t = 0,w,h;\n    w = p.offsetWidth;\n    h = p.offsetHeight;\n    while (p.offsetParent){\n        l += p.offsetLeft;\n        t += p.offsetTop;\n        p = p.offsetParent;\n    }\n    return {'left':l,'top':t,'width':w,'height':h};\n}\n```\n\n#### 完整示例\n```\n//获取可视区\nfunction getVisiableZone(){\n    var l,t,w,h;\n    l = document.documentElement.scrollLeft || document.body.scrollLeft;\n    t = document.documentElement.scrollTop || document.body.scrollTop;\n    w = document.documentElement.clientWidth;\n    h = document.documentElement.clientHeight;\n    return {'left':l,'top':t,'width':w,'height':h};\n}\n\n//获取元素绝对位置\nfunction getDstResource(p){\n    var l = 0,t = 0,w,h;\n    w = p.offsetWidth;\n    h = p.offsetHeight;\n    while (p.offsetParent){\n        l += p.offsetLeft;\n        t += p.offsetTop;\n        p = p.offsetParent;\n    }\n    return {'left':l,'top':t,'width':w,'height':h};\n}\n\n//判断两个长方形是否交叠\nfunction overlap(rect1,rect2){\n    var l1,l2,t1,t2,w,h;\n    l1 = rect1.left + rect1.width / 2;\n    l2 = rect2.left + rect2.width / 2;\n    t1 = rect1.top + rect1.height / 2;\n    t2 = rect2.top + rect2.height / 2;\n    w = (rect1.width + rect2.width) / 2;\n    h = (rect1.height + rect2.height) / 2;\n    return Math.abs(l1 - l2) < w && Math.abs(t1 - t2) < h;\n}\n\n//异步加载\nif(overlap(getVisiableZone(),getDstResource(document.getElementById(\"xxx\")))){\n\t$.ajax();\n\t......\n}\n```\n\n","slug":"lazy-load","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzw10044fnpvoq90fu18","content":"<h4 id=\"懒加载\"><a href=\"#懒加载\" class=\"headerlink\" title=\"懒加载\"></a>懒加载</h4><p>“懒加载”或谓”延迟加载”、”按需加载”是一种网页性能优化的技术。在很多场景下被使用，如微博的信息流，百度的图片搜索以及阿里巴巴的底部p4p，右侧p4p等，都是在用户访问到的时候才加载，这样可以避免在加载页面时加载过多资源造成页面渲染时间拉长，影响用户体验。<br>一直想了解下p4p异步加载的实现方式，没有前端的代码权限，因此只能自己琢磨，本文即是在内部光年平台的开发过程中，探索并应用的一种懒加载方法。总结记录如下。</p>\n<h4 id=\"屏幕高宽相关属性\"><a href=\"#屏幕高宽相关属性\" class=\"headerlink\" title=\"屏幕高宽相关属性\"></a>屏幕高宽相关属性</h4><p>正式开始前，首先总结一下，跟浏览器以及网页文档高宽相关的几个属性，这几个属性对于后文要说到的懒加载实现方法有重要意义。</p>\n<ol>\n<li>网页可见区域宽<br><code>document.body.clientWidth</code></li>\n<li>网页可见区域高<br><code>document.body.clientHeight</code></li>\n<li>网页正文全文宽<br><code>document.body.scrollWidth</code></li>\n<li>网页正文全文高<br><code>document.body.scrollHeight</code></li>\n<li>网页被滚动的高<br><code>document.body.scrollTop</code></li>\n<li>网页被滚动的左<br><code>document.body.scrollLeft</code></li>\n<li>屏幕分辨率宽<br><code>window.screen.height</code></li>\n<li>屏幕分辨率高<br><code>window.screen.width</code></li>\n<li>网页元素绝对位置<br>屏幕的坐标系原点位于屏幕左上角，所以一个元素的绝对位置指的是相对于屏幕左上角的坐标值。该值需要通过计算才能得到。<br>每个元素都有offsetLeft和offsetTop属性，表示该元素的左上角相对父元素左上角的距离。因此只要将元素自身的offsetLeft，offsetTop和其父元素的值相加，即可得到该元素的绝对坐标。<br>参见下图：<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1f0jtsa67o9g20dw0aewec.gif\" alt=\"\"><br>有一些属性在懒加载实现方法中并未用到，考虑到比较常用，一并整理在此以作备忘。</li>\n</ol>\n<a id=\"more\"></a>\n<h4 id=\"懒加载原理\"><a href=\"#懒加载原理\" class=\"headerlink\" title=\"懒加载原理\"></a>懒加载原理</h4><p>朴素的想法来看，要想实现懒加载，那么只要将非首屏内容异步加载，在用户访问到的时候再发出请求即可。当某个模块容器到达了网页可见区域时，使用ajax异步请求将请求内容渲染出来即可。于是问题转换为模块容器何时到达可见区域。</p>\n<p>模块容器与网页可见区域相互交叠时，模块容器即到达了可见区。此时触发请求。</p>\n<h4 id=\"判断模块是否到达可视区\"><a href=\"#判断模块是否到达可视区\" class=\"headerlink\" title=\"判断模块是否到达可视区\"></a>判断模块是否到达可视区</h4><p>根据上述分析，问题进一步转换为判断两个长方形何时发生”碰撞”。<br>两个长方形发生”碰撞”的两种临界情形如下图所示：<br><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f13h0mc6nrj20em0hq3z4.jpg\" alt=\"\"><br>我们先来看下第一种情形。<br>在此临界情形下，分别取两个长方形的中线，两根中线的距离差应该刚好等于两个长方形宽度和的一半。<br>即有如下公式成立：<br><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"name\">m1</span> = left<span class=\"number\">1</span> + width<span class=\"number\">1</span>/<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"name\">m2</span> = left<span class=\"number\">2</span> + width<span class=\"number\">2</span>/<span class=\"number\">2</span></span><br><span class=\"line\">|<span class=\"name\">m1</span> - <span class=\"name\">m2</span>| = <span class=\"comment\">(width1 + width2)</span> / <span class=\"number\">2</span></span><br></pre></td></tr></table></figure></p>\n<p>当<code>|m1 - m2| &lt; (width1 + width2) / 2</code>时，两个长方形发生了”碰撞”。</p>\n<p>同理，如果在高度方向上发生碰撞，则有：<br><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"name\">m1</span> = top<span class=\"number\">1</span> + height<span class=\"number\">1</span> / <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"name\">m2</span> = top<span class=\"number\">2</span> + height<span class=\"number\">2</span> / <span class=\"number\">2</span></span><br><span class=\"line\">|<span class=\"name\">m1</span> - <span class=\"name\">m2</span>| &lt; <span class=\"comment\">(height1 + height2)</span> / <span class=\"number\">2</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"获取元素绝对位置\"><a href=\"#获取元素绝对位置\" class=\"headerlink\" title=\"获取元素绝对位置\"></a>获取元素绝对位置</h4><p>根据上述分析，将元素与其父元素左上角的偏离坐标和其父元素离坐标原点的偏离位置累加即可。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDstResource</span>(<span class=\"params\">p</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> l = <span class=\"number\">0</span>,t = <span class=\"number\">0</span>,w,h;</span><br><span class=\"line\">    w = p.offsetWidth;</span><br><span class=\"line\">    h = p.offsetHeight;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p.offsetParent)&#123;</span><br><span class=\"line\">        l += p.offsetLeft;</span><br><span class=\"line\">        t += p.offsetTop;</span><br><span class=\"line\">        p = p.offsetParent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">'left'</span>:l,<span class=\"string\">'top'</span>:t,<span class=\"string\">'width'</span>:w,<span class=\"string\">'height'</span>:h&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"完整示例\"><a href=\"#完整示例\" class=\"headerlink\" title=\"完整示例\"></a>完整示例</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取可视区</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getVisiableZone</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> l,t,w,h;</span><br><span class=\"line\">    l = <span class=\"built_in\">document</span>.documentElement.scrollLeft || <span class=\"built_in\">document</span>.body.scrollLeft;</span><br><span class=\"line\">    t = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">    w = <span class=\"built_in\">document</span>.documentElement.clientWidth;</span><br><span class=\"line\">    h = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">'left'</span>:l,<span class=\"string\">'top'</span>:t,<span class=\"string\">'width'</span>:w,<span class=\"string\">'height'</span>:h&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取元素绝对位置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDstResource</span>(<span class=\"params\">p</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> l = <span class=\"number\">0</span>,t = <span class=\"number\">0</span>,w,h;</span><br><span class=\"line\">    w = p.offsetWidth;</span><br><span class=\"line\">    h = p.offsetHeight;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p.offsetParent)&#123;</span><br><span class=\"line\">        l += p.offsetLeft;</span><br><span class=\"line\">        t += p.offsetTop;</span><br><span class=\"line\">        p = p.offsetParent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">'left'</span>:l,<span class=\"string\">'top'</span>:t,<span class=\"string\">'width'</span>:w,<span class=\"string\">'height'</span>:h&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//判断两个长方形是否交叠</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">overlap</span>(<span class=\"params\">rect1,rect2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> l1,l2,t1,t2,w,h;</span><br><span class=\"line\">    l1 = rect1.left + rect1.width / <span class=\"number\">2</span>;</span><br><span class=\"line\">    l2 = rect2.left + rect2.width / <span class=\"number\">2</span>;</span><br><span class=\"line\">    t1 = rect1.top + rect1.height / <span class=\"number\">2</span>;</span><br><span class=\"line\">    t2 = rect2.top + rect2.height / <span class=\"number\">2</span>;</span><br><span class=\"line\">    w = (rect1.width + rect2.width) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    h = (rect1.height + rect2.height) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.abs(l1 - l2) &lt; w &amp;&amp; <span class=\"built_in\">Math</span>.abs(t1 - t2) &lt; h;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//异步加载</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(overlap(getVisiableZone(),getDstResource(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"xxx\"</span>))))&#123;</span><br><span class=\"line\">\t$.ajax();</span><br><span class=\"line\">\t......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h4 id=\"懒加载\"><a href=\"#懒加载\" class=\"headerlink\" title=\"懒加载\"></a>懒加载</h4><p>“懒加载”或谓”延迟加载”、”按需加载”是一种网页性能优化的技术。在很多场景下被使用，如微博的信息流，百度的图片搜索以及阿里巴巴的底部p4p，右侧p4p等，都是在用户访问到的时候才加载，这样可以避免在加载页面时加载过多资源造成页面渲染时间拉长，影响用户体验。<br>一直想了解下p4p异步加载的实现方式，没有前端的代码权限，因此只能自己琢磨，本文即是在内部光年平台的开发过程中，探索并应用的一种懒加载方法。总结记录如下。</p>\n<h4 id=\"屏幕高宽相关属性\"><a href=\"#屏幕高宽相关属性\" class=\"headerlink\" title=\"屏幕高宽相关属性\"></a>屏幕高宽相关属性</h4><p>正式开始前，首先总结一下，跟浏览器以及网页文档高宽相关的几个属性，这几个属性对于后文要说到的懒加载实现方法有重要意义。</p>\n<ol>\n<li>网页可见区域宽<br><code>document.body.clientWidth</code></li>\n<li>网页可见区域高<br><code>document.body.clientHeight</code></li>\n<li>网页正文全文宽<br><code>document.body.scrollWidth</code></li>\n<li>网页正文全文高<br><code>document.body.scrollHeight</code></li>\n<li>网页被滚动的高<br><code>document.body.scrollTop</code></li>\n<li>网页被滚动的左<br><code>document.body.scrollLeft</code></li>\n<li>屏幕分辨率宽<br><code>window.screen.height</code></li>\n<li>屏幕分辨率高<br><code>window.screen.width</code></li>\n<li>网页元素绝对位置<br>屏幕的坐标系原点位于屏幕左上角，所以一个元素的绝对位置指的是相对于屏幕左上角的坐标值。该值需要通过计算才能得到。<br>每个元素都有offsetLeft和offsetTop属性，表示该元素的左上角相对父元素左上角的距离。因此只要将元素自身的offsetLeft，offsetTop和其父元素的值相加，即可得到该元素的绝对坐标。<br>参见下图：<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1f0jtsa67o9g20dw0aewec.gif\" alt=\"\"><br>有一些属性在懒加载实现方法中并未用到，考虑到比较常用，一并整理在此以作备忘。</li>\n</ol>","more":"<h4 id=\"懒加载原理\"><a href=\"#懒加载原理\" class=\"headerlink\" title=\"懒加载原理\"></a>懒加载原理</h4><p>朴素的想法来看，要想实现懒加载，那么只要将非首屏内容异步加载，在用户访问到的时候再发出请求即可。当某个模块容器到达了网页可见区域时，使用ajax异步请求将请求内容渲染出来即可。于是问题转换为模块容器何时到达可见区域。</p>\n<p>模块容器与网页可见区域相互交叠时，模块容器即到达了可见区。此时触发请求。</p>\n<h4 id=\"判断模块是否到达可视区\"><a href=\"#判断模块是否到达可视区\" class=\"headerlink\" title=\"判断模块是否到达可视区\"></a>判断模块是否到达可视区</h4><p>根据上述分析，问题进一步转换为判断两个长方形何时发生”碰撞”。<br>两个长方形发生”碰撞”的两种临界情形如下图所示：<br><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f13h0mc6nrj20em0hq3z4.jpg\" alt=\"\"><br>我们先来看下第一种情形。<br>在此临界情形下，分别取两个长方形的中线，两根中线的距离差应该刚好等于两个长方形宽度和的一半。<br>即有如下公式成立：<br><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"name\">m1</span> = left<span class=\"number\">1</span> + width<span class=\"number\">1</span>/<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"name\">m2</span> = left<span class=\"number\">2</span> + width<span class=\"number\">2</span>/<span class=\"number\">2</span></span><br><span class=\"line\">|<span class=\"name\">m1</span> - <span class=\"name\">m2</span>| = <span class=\"comment\">(width1 + width2)</span> / <span class=\"number\">2</span></span><br></pre></td></tr></table></figure></p>\n<p>当<code>|m1 - m2| &lt; (width1 + width2) / 2</code>时，两个长方形发生了”碰撞”。</p>\n<p>同理，如果在高度方向上发生碰撞，则有：<br><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"name\">m1</span> = top<span class=\"number\">1</span> + height<span class=\"number\">1</span> / <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"name\">m2</span> = top<span class=\"number\">2</span> + height<span class=\"number\">2</span> / <span class=\"number\">2</span></span><br><span class=\"line\">|<span class=\"name\">m1</span> - <span class=\"name\">m2</span>| &lt; <span class=\"comment\">(height1 + height2)</span> / <span class=\"number\">2</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"获取元素绝对位置\"><a href=\"#获取元素绝对位置\" class=\"headerlink\" title=\"获取元素绝对位置\"></a>获取元素绝对位置</h4><p>根据上述分析，将元素与其父元素左上角的偏离坐标和其父元素离坐标原点的偏离位置累加即可。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDstResource</span>(<span class=\"params\">p</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> l = <span class=\"number\">0</span>,t = <span class=\"number\">0</span>,w,h;</span><br><span class=\"line\">    w = p.offsetWidth;</span><br><span class=\"line\">    h = p.offsetHeight;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p.offsetParent)&#123;</span><br><span class=\"line\">        l += p.offsetLeft;</span><br><span class=\"line\">        t += p.offsetTop;</span><br><span class=\"line\">        p = p.offsetParent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">'left'</span>:l,<span class=\"string\">'top'</span>:t,<span class=\"string\">'width'</span>:w,<span class=\"string\">'height'</span>:h&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"完整示例\"><a href=\"#完整示例\" class=\"headerlink\" title=\"完整示例\"></a>完整示例</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取可视区</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getVisiableZone</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> l,t,w,h;</span><br><span class=\"line\">    l = <span class=\"built_in\">document</span>.documentElement.scrollLeft || <span class=\"built_in\">document</span>.body.scrollLeft;</span><br><span class=\"line\">    t = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">    w = <span class=\"built_in\">document</span>.documentElement.clientWidth;</span><br><span class=\"line\">    h = <span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">'left'</span>:l,<span class=\"string\">'top'</span>:t,<span class=\"string\">'width'</span>:w,<span class=\"string\">'height'</span>:h&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取元素绝对位置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getDstResource</span>(<span class=\"params\">p</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> l = <span class=\"number\">0</span>,t = <span class=\"number\">0</span>,w,h;</span><br><span class=\"line\">    w = p.offsetWidth;</span><br><span class=\"line\">    h = p.offsetHeight;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p.offsetParent)&#123;</span><br><span class=\"line\">        l += p.offsetLeft;</span><br><span class=\"line\">        t += p.offsetTop;</span><br><span class=\"line\">        p = p.offsetParent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">'left'</span>:l,<span class=\"string\">'top'</span>:t,<span class=\"string\">'width'</span>:w,<span class=\"string\">'height'</span>:h&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//判断两个长方形是否交叠</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">overlap</span>(<span class=\"params\">rect1,rect2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> l1,l2,t1,t2,w,h;</span><br><span class=\"line\">    l1 = rect1.left + rect1.width / <span class=\"number\">2</span>;</span><br><span class=\"line\">    l2 = rect2.left + rect2.width / <span class=\"number\">2</span>;</span><br><span class=\"line\">    t1 = rect1.top + rect1.height / <span class=\"number\">2</span>;</span><br><span class=\"line\">    t2 = rect2.top + rect2.height / <span class=\"number\">2</span>;</span><br><span class=\"line\">    w = (rect1.width + rect2.width) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    h = (rect1.height + rect2.height) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.abs(l1 - l2) &lt; w &amp;&amp; <span class=\"built_in\">Math</span>.abs(t1 - t2) &lt; h;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//异步加载</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(overlap(getVisiableZone(),getDstResource(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"xxx\"</span>))))&#123;</span><br><span class=\"line\">\t$.ajax();</span><br><span class=\"line\">\t......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","sticky":0},{"title":"Linux下安装mysql","show":true,"date":"2017-03-14T02:22:33.000Z","_content":"# 背景\n安装Mysql不知道安装了多少次了，但是每次装的时候都要重新查看文档，每次又会遇到不一样的问题。还是记录一下安装步骤吧，省的每次都要重新翻文档了。\n\n# 安装步骤\n以安装mysql5.6版本为例，其他版本可以下载官网对应版本，然后查看附带的INSTALL文档。\n\n1. 下载\n`wget http://cdn.mysql.com/archives/mysql-5.6/mysql-5.6.26-linux-glibc2.5-x86_64.tar.gz `\n\n2. 解压并改名\n`tar -xvf mysql-5.6.26-linux-glibc2.5-x86_64.tar.gz && mv mysql-5.6.26-linux-glibc2.5-x86_64 mysql`\n\n3. 创建用户组\n```\n#建议将mysql安装在/usr/local目录\nmv mysql /usr/local\ncd mysql\nsudo groupadd mysql\nsudo useradd -r -g mysql mysql\n```\n\n4. 修改权限\n```\nsudo chown -R mysql:mysql *\n```\n\n    <!--more-->\n\n5. 初始化数据库\n\t```\n\tsudo scripts/mysql_install_db --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --user=mysql\n\t#也可以事先指定配置文件\n\tcp support-files/my-default.cnf my.cnf\n\t#修改my.cnf中basedir地址为/usr/local/mysql\n\tvi my.cnf\n\tsudo scripts/mysql_install_db --user=mysql\n\t```\n\n6. 启动数据库\n  `sudo bin/mysqld_safe &` \n  如果启动失败，可以去data目录下查看err结尾的错误日志，查看错误信息\n\n7. 添加mysql为系统服务\n  `sudo cp support-files/mysql.server /etc/init.d/mysql`\n  之后就可以使用`/etc/init.d/mysql start|stop|restart`来管理mysql了\n\n8. 添加环境变量\n  ```\n  sudo vi /etc/profile\n  #修改PATH=$PATH:/usr/local/mysql/bin\n  source /etc/profile\n  ```\n  添加环境变量之后即可任意目录下直接输入mysql进行连接而不用在mysql/bin目录下了。\n\n9. 连接mysql\n`mysql -uroot -p #新安装没有密码，直接回车连接`\n\n10. 设置密码和用户\n```\n#如给root添加密码\nmysqladmin -u root password \"new password\"\n#添加新用户\nmysql -u root -p\n#name处用用户替换，passwd处用密码替换\nmysql> GRANT USAGE ON *.* TO 'name'@'localhost' IDENTIFIED BY 'passwd' WITH GRANT OPTION;\n```\n\n# 常见错误\n启动过程中报错可以去日志查看，然后针对性的搜索。这里列一下我安装过程中遇到的错误。\n\n#### Can't open the mysql.plugin table. Please run mysql_upgrade to create it\n这个原因是在运行`mysql_install_db`初始化数据库的过程中出了问题，基本上是配置没有对应上。可以修改配置或者直接传递basedir和datadir，然后重新运行命令解决。\n\n\n","source":"_posts/linux-install-mysql.md","raw":"title: Linux下安装mysql\nshow: true\ndate: 2017-03-14 10:22:33\ntags: [mysql]\ncategories: 技术人生\n---\n# 背景\n安装Mysql不知道安装了多少次了，但是每次装的时候都要重新查看文档，每次又会遇到不一样的问题。还是记录一下安装步骤吧，省的每次都要重新翻文档了。\n\n# 安装步骤\n以安装mysql5.6版本为例，其他版本可以下载官网对应版本，然后查看附带的INSTALL文档。\n\n1. 下载\n`wget http://cdn.mysql.com/archives/mysql-5.6/mysql-5.6.26-linux-glibc2.5-x86_64.tar.gz `\n\n2. 解压并改名\n`tar -xvf mysql-5.6.26-linux-glibc2.5-x86_64.tar.gz && mv mysql-5.6.26-linux-glibc2.5-x86_64 mysql`\n\n3. 创建用户组\n```\n#建议将mysql安装在/usr/local目录\nmv mysql /usr/local\ncd mysql\nsudo groupadd mysql\nsudo useradd -r -g mysql mysql\n```\n\n4. 修改权限\n```\nsudo chown -R mysql:mysql *\n```\n\n    <!--more-->\n\n5. 初始化数据库\n\t```\n\tsudo scripts/mysql_install_db --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --user=mysql\n\t#也可以事先指定配置文件\n\tcp support-files/my-default.cnf my.cnf\n\t#修改my.cnf中basedir地址为/usr/local/mysql\n\tvi my.cnf\n\tsudo scripts/mysql_install_db --user=mysql\n\t```\n\n6. 启动数据库\n  `sudo bin/mysqld_safe &` \n  如果启动失败，可以去data目录下查看err结尾的错误日志，查看错误信息\n\n7. 添加mysql为系统服务\n  `sudo cp support-files/mysql.server /etc/init.d/mysql`\n  之后就可以使用`/etc/init.d/mysql start|stop|restart`来管理mysql了\n\n8. 添加环境变量\n  ```\n  sudo vi /etc/profile\n  #修改PATH=$PATH:/usr/local/mysql/bin\n  source /etc/profile\n  ```\n  添加环境变量之后即可任意目录下直接输入mysql进行连接而不用在mysql/bin目录下了。\n\n9. 连接mysql\n`mysql -uroot -p #新安装没有密码，直接回车连接`\n\n10. 设置密码和用户\n```\n#如给root添加密码\nmysqladmin -u root password \"new password\"\n#添加新用户\nmysql -u root -p\n#name处用用户替换，passwd处用密码替换\nmysql> GRANT USAGE ON *.* TO 'name'@'localhost' IDENTIFIED BY 'passwd' WITH GRANT OPTION;\n```\n\n# 常见错误\n启动过程中报错可以去日志查看，然后针对性的搜索。这里列一下我安装过程中遇到的错误。\n\n#### Can't open the mysql.plugin table. Please run mysql_upgrade to create it\n这个原因是在运行`mysql_install_db`初始化数据库的过程中出了问题，基本上是配置没有对应上。可以修改配置或者直接传递basedir和datadir，然后重新运行命令解决。\n\n\n","slug":"linux-install-mysql","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzw20046fnpv1gia6jbc","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>安装Mysql不知道安装了多少次了，但是每次装的时候都要重新查看文档，每次又会遇到不一样的问题。还是记录一下安装步骤吧，省的每次都要重新翻文档了。</p>\n<h1 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h1><p>以安装mysql5.6版本为例，其他版本可以下载官网对应版本，然后查看附带的INSTALL文档。</p>\n<ol>\n<li><p>下载<br><code>wget http://cdn.mysql.com/archives/mysql-5.6/mysql-5.6.26-linux-glibc2.5-x86_64.tar.gz</code></p>\n</li>\n<li><p>解压并改名<br><code>tar -xvf mysql-5.6.26-linux-glibc2.5-x86_64.tar.gz &amp;&amp; mv mysql-5.6.26-linux-glibc2.5-x86_64 mysql</code></p>\n</li>\n<li><p>创建用户组</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#建议将mysql安装在/usr/local目录</span></span><br><span class=\"line\">mv mysql /usr/<span class=\"built_in\">local</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> mysql</span><br><span class=\"line\">sudo groupadd mysql</span><br><span class=\"line\">sudo useradd -r -g mysql mysql</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改权限</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">sudo</span> <span class=\"selector-tag\">chown</span> <span class=\"selector-tag\">-R</span> <span class=\"selector-tag\">mysql</span><span class=\"selector-pseudo\">:mysql</span> *</span><br></pre></td></tr></table></figure>\n <a id=\"more\"></a>\n</li>\n<li><p>初始化数据库</p>\n <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo scripts/mysql_install_db <span class=\"attribute\">--basedir</span>=/usr/local/mysql <span class=\"attribute\">--datadir</span>=/usr/local/mysql/data <span class=\"attribute\">--user</span>=mysql</span><br><span class=\"line\"><span class=\"comment\">#也可以事先指定配置文件</span></span><br><span class=\"line\">cp support-files/my-default.cnf my.cnf</span><br><span class=\"line\"><span class=\"comment\">#修改my.cnf中basedir地址为/usr/local/mysql</span></span><br><span class=\"line\">vi my.cnf</span><br><span class=\"line\">sudo scripts/mysql_install_db <span class=\"attribute\">--user</span>=mysql</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动数据库<br><code>sudo bin/mysqld_safe &amp;</code><br>如果启动失败，可以去data目录下查看err结尾的错误日志，查看错误信息</p>\n</li>\n<li><p>添加mysql为系统服务<br><code>sudo cp support-files/mysql.server /etc/init.d/mysql</code><br>之后就可以使用<code>/etc/init.d/mysql start|stop|restart</code>来管理mysql了</p>\n</li>\n<li><p>添加环境变量</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/profile</span><br><span class=\"line\"><span class=\"comment\">#修改PATH=$PATH:/usr/local/mysql/bin</span></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<p>添加环境变量之后即可任意目录下直接输入mysql进行连接而不用在mysql/bin目录下了。</p>\n</li>\n<li><p>连接mysql<br><code>mysql -uroot -p #新安装没有密码，直接回车连接</code></p>\n</li>\n<li><p>设置密码和用户</p>\n<figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#如给root添加密码</span></span><br><span class=\"line\">mysqladmin -u root password <span class=\"string\">\"new password\"</span></span><br><span class=\"line\"><span class=\"meta\">#添加新用户</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\"><span class=\"meta\">#name处用用户替换，passwd处用密码替换</span></span><br><span class=\"line\">mysql&gt; GRANT USAGE ON *.* TO <span class=\"string\">'name'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'passwd'</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"常见错误\"><a href=\"#常见错误\" class=\"headerlink\" title=\"常见错误\"></a>常见错误</h1><p>启动过程中报错可以去日志查看，然后针对性的搜索。这里列一下我安装过程中遇到的错误。</p>\n<h4 id=\"Can’t-open-the-mysql-plugin-table-Please-run-mysql-upgrade-to-create-it\"><a href=\"#Can’t-open-the-mysql-plugin-table-Please-run-mysql-upgrade-to-create-it\" class=\"headerlink\" title=\"Can’t open the mysql.plugin table. Please run mysql_upgrade to create it\"></a>Can’t open the mysql.plugin table. Please run mysql_upgrade to create it</h4><p>这个原因是在运行<code>mysql_install_db</code>初始化数据库的过程中出了问题，基本上是配置没有对应上。可以修改配置或者直接传递basedir和datadir，然后重新运行命令解决。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>安装Mysql不知道安装了多少次了，但是每次装的时候都要重新查看文档，每次又会遇到不一样的问题。还是记录一下安装步骤吧，省的每次都要重新翻文档了。</p>\n<h1 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h1><p>以安装mysql5.6版本为例，其他版本可以下载官网对应版本，然后查看附带的INSTALL文档。</p>\n<ol>\n<li><p>下载<br><code>wget http://cdn.mysql.com/archives/mysql-5.6/mysql-5.6.26-linux-glibc2.5-x86_64.tar.gz</code></p>\n</li>\n<li><p>解压并改名<br><code>tar -xvf mysql-5.6.26-linux-glibc2.5-x86_64.tar.gz &amp;&amp; mv mysql-5.6.26-linux-glibc2.5-x86_64 mysql</code></p>\n</li>\n<li><p>创建用户组</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#建议将mysql安装在/usr/local目录</span></span><br><span class=\"line\">mv mysql /usr/<span class=\"built_in\">local</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> mysql</span><br><span class=\"line\">sudo groupadd mysql</span><br><span class=\"line\">sudo useradd -r -g mysql mysql</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改权限</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">sudo</span> <span class=\"selector-tag\">chown</span> <span class=\"selector-tag\">-R</span> <span class=\"selector-tag\">mysql</span><span class=\"selector-pseudo\">:mysql</span> *</span><br></pre></td></tr></table></figure>","more":"</li>\n<li><p>初始化数据库</p>\n <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo scripts/mysql_install_db <span class=\"attribute\">--basedir</span>=/usr/local/mysql <span class=\"attribute\">--datadir</span>=/usr/local/mysql/data <span class=\"attribute\">--user</span>=mysql</span><br><span class=\"line\"><span class=\"comment\">#也可以事先指定配置文件</span></span><br><span class=\"line\">cp support-files/my-default.cnf my.cnf</span><br><span class=\"line\"><span class=\"comment\">#修改my.cnf中basedir地址为/usr/local/mysql</span></span><br><span class=\"line\">vi my.cnf</span><br><span class=\"line\">sudo scripts/mysql_install_db <span class=\"attribute\">--user</span>=mysql</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动数据库<br><code>sudo bin/mysqld_safe &amp;</code><br>如果启动失败，可以去data目录下查看err结尾的错误日志，查看错误信息</p>\n</li>\n<li><p>添加mysql为系统服务<br><code>sudo cp support-files/mysql.server /etc/init.d/mysql</code><br>之后就可以使用<code>/etc/init.d/mysql start|stop|restart</code>来管理mysql了</p>\n</li>\n<li><p>添加环境变量</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/profile</span><br><span class=\"line\"><span class=\"comment\">#修改PATH=$PATH:/usr/local/mysql/bin</span></span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<p>添加环境变量之后即可任意目录下直接输入mysql进行连接而不用在mysql/bin目录下了。</p>\n</li>\n<li><p>连接mysql<br><code>mysql -uroot -p #新安装没有密码，直接回车连接</code></p>\n</li>\n<li><p>设置密码和用户</p>\n<figure class=\"highlight vala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#如给root添加密码</span></span><br><span class=\"line\">mysqladmin -u root password <span class=\"string\">\"new password\"</span></span><br><span class=\"line\"><span class=\"meta\">#添加新用户</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\"><span class=\"meta\">#name处用用户替换，passwd处用密码替换</span></span><br><span class=\"line\">mysql&gt; GRANT USAGE ON *.* TO <span class=\"string\">'name'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'passwd'</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"常见错误\"><a href=\"#常见错误\" class=\"headerlink\" title=\"常见错误\"></a>常见错误</h1><p>启动过程中报错可以去日志查看，然后针对性的搜索。这里列一下我安装过程中遇到的错误。</p>\n<h4 id=\"Can’t-open-the-mysql-plugin-table-Please-run-mysql-upgrade-to-create-it\"><a href=\"#Can’t-open-the-mysql-plugin-table-Please-run-mysql-upgrade-to-create-it\" class=\"headerlink\" title=\"Can’t open the mysql.plugin table. Please run mysql_upgrade to create it\"></a>Can’t open the mysql.plugin table. Please run mysql_upgrade to create it</h4><p>这个原因是在运行<code>mysql_install_db</code>初始化数据库的过程中出了问题，基本上是配置没有对应上。可以修改配置或者直接传递basedir和datadir，然后重新运行命令解决。</p>","sticky":0},{"title":"业余项目之利用天气API实现简单的城市天气预报","show":true,"date":"2015-12-24T07:31:52.000Z","_content":"近期在学习一些web全栈的东西，业余时间做了些小项目。这个天气预报的小项目属于其中之一。本身技术没有什么难的，主要是找免费可用的天气API比较费劲。最后还是使用了百度的开放API，中国天气的就不说了，打开个链接都费劲，好不容易进去了，注册的时候提示你\"内部服务器错误\"。。据说还不免费，纳税人交钱建立的组织，数据使用下还要交钱，哪说理去。百度的API还不错，只是没有雾霾指数。简单记录如下。\n\n#### HTML容器\n使用bootstrap布局，当天的预报信息显示一行，其余三天信息缩小放在下一行（百度API只提供四天的天气预测）。\n每天的天气信息包括：一个天气图标（可随天气变化），一个温度显示。\n再下一行显示本地城市信息、天气情况以及风力情况。\n效果如下：\n![](http://ww3.sinaimg.cn/mw690/62d95157gw1ezav90p4qcj211y0hek0d.jpg)\n\n<!--more-->\n\n#### 天气API\n\n1.首先需要加载百度的API库\n```js\n<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=你的key\"></script>\n```\n\n2.定位城市\n定位城市我之前想用浏览器的navigator获取经纬度来实现，实践中发现难度还是比较大的。而用IP来定位的话，上述百度API直接提供了，那直接用IP来定位好了，虽然精度不那么准确，也许获取不到牛家庄的天气获取个杭州南京什么的还是不在话下的。\n```js\nvar myCity = new BMap.LocalCity();\nmyCity.get(myFun);\n```\n\n加载了API库后，直接生成一个BMap LocalCity对象即可，传入get方法的函数（获取到城市后的回调函数）里就可以做各种事情了。\n\n3.获取天气数据\n接口调用方式：\n```plain\nhttp://api.map.baidu.com/telematics/v3/weather?location=<城市名>&output=<json|xml>&ak=yourkey\n```\n只需传入参数城市名以及输出格式即可。\n这里需要注意的是，传入的城市名形如,\"南京\",\"北京\"这样，而通过API获取的城市名是\"南京市\",\"北京市\"这样，因此在传入的前需要做一下处理。\n```js\ncityName.split(\"市\")[0];\n```\n输出格式建议使用JSON，便于解析处理。\n另外，js在请求数据时，由于跨域请求不被允许，因此需要使用jsonp访问。\n```js\n$.ajax({\n    url: \"http://api.map.baidu.com/telematics/v3/weather?location=\" + cityName + \"&output=json&ak=你的key\",\n    dataType: \"jsonp\",\n    callback: \"callback\",\n    success: function(ret){\n\t\t//do something\n\t\t... ...\n\t}\n});\n```\n\n4.解析数据\n上述接口返回的信息格式如下：\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1ezaudtknrtj20lu0h4gmq.jpg)\n取出results的weather_data字段即可，数组每个元素存储了一天的天气情况。使用js将对应的信息填充到相应的HTML容器里去即可。\n```js\nvar container = [\"#today\",\"#next1\",\"#next2\",\"#next3\"];\nvar result = ret.results[0];\nvar weather_data = result.weather_data;\n\n//城市、风力\n$(\"#location\").html(result.currentCity);\n$(\"#weather\").html(result.weather_data[0].weather);\n$(\"#wind\").html(result.weather_data[0].wind);\n\n//天气情况\nfor(var i in weather_data){\n  $(container[i] + \" img\").attr(\"src\",weather_data[i].dayPictureUrl);\n  $(container[i] + \" .temp\").html(weather_data[i].temperature);\n}\n```\n至于根据天气情况变换背景什么的，准备几张不同天气的背景图，根据不同的天气状况使用js替换相应的background-image的url就好了~\n\n[点击查看效果](/local-weather/index.html)\n[项目开源地址](https://github.com/zhangjh/localWeatherApp)。\n","source":"_posts/local-weather.md","raw":"title: 业余项目之利用天气API实现简单的城市天气预报\nshow: true\ndate: 2015-12-24 15:31:52\ntags: [天气API,城市定位]\ncategories: 技术人生\n---\n近期在学习一些web全栈的东西，业余时间做了些小项目。这个天气预报的小项目属于其中之一。本身技术没有什么难的，主要是找免费可用的天气API比较费劲。最后还是使用了百度的开放API，中国天气的就不说了，打开个链接都费劲，好不容易进去了，注册的时候提示你\"内部服务器错误\"。。据说还不免费，纳税人交钱建立的组织，数据使用下还要交钱，哪说理去。百度的API还不错，只是没有雾霾指数。简单记录如下。\n\n#### HTML容器\n使用bootstrap布局，当天的预报信息显示一行，其余三天信息缩小放在下一行（百度API只提供四天的天气预测）。\n每天的天气信息包括：一个天气图标（可随天气变化），一个温度显示。\n再下一行显示本地城市信息、天气情况以及风力情况。\n效果如下：\n![](http://ww3.sinaimg.cn/mw690/62d95157gw1ezav90p4qcj211y0hek0d.jpg)\n\n<!--more-->\n\n#### 天气API\n\n1.首先需要加载百度的API库\n```js\n<script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=你的key\"></script>\n```\n\n2.定位城市\n定位城市我之前想用浏览器的navigator获取经纬度来实现，实践中发现难度还是比较大的。而用IP来定位的话，上述百度API直接提供了，那直接用IP来定位好了，虽然精度不那么准确，也许获取不到牛家庄的天气获取个杭州南京什么的还是不在话下的。\n```js\nvar myCity = new BMap.LocalCity();\nmyCity.get(myFun);\n```\n\n加载了API库后，直接生成一个BMap LocalCity对象即可，传入get方法的函数（获取到城市后的回调函数）里就可以做各种事情了。\n\n3.获取天气数据\n接口调用方式：\n```plain\nhttp://api.map.baidu.com/telematics/v3/weather?location=<城市名>&output=<json|xml>&ak=yourkey\n```\n只需传入参数城市名以及输出格式即可。\n这里需要注意的是，传入的城市名形如,\"南京\",\"北京\"这样，而通过API获取的城市名是\"南京市\",\"北京市\"这样，因此在传入的前需要做一下处理。\n```js\ncityName.split(\"市\")[0];\n```\n输出格式建议使用JSON，便于解析处理。\n另外，js在请求数据时，由于跨域请求不被允许，因此需要使用jsonp访问。\n```js\n$.ajax({\n    url: \"http://api.map.baidu.com/telematics/v3/weather?location=\" + cityName + \"&output=json&ak=你的key\",\n    dataType: \"jsonp\",\n    callback: \"callback\",\n    success: function(ret){\n\t\t//do something\n\t\t... ...\n\t}\n});\n```\n\n4.解析数据\n上述接口返回的信息格式如下：\n![](http://ww2.sinaimg.cn/mw690/62d95157gw1ezaudtknrtj20lu0h4gmq.jpg)\n取出results的weather_data字段即可，数组每个元素存储了一天的天气情况。使用js将对应的信息填充到相应的HTML容器里去即可。\n```js\nvar container = [\"#today\",\"#next1\",\"#next2\",\"#next3\"];\nvar result = ret.results[0];\nvar weather_data = result.weather_data;\n\n//城市、风力\n$(\"#location\").html(result.currentCity);\n$(\"#weather\").html(result.weather_data[0].weather);\n$(\"#wind\").html(result.weather_data[0].wind);\n\n//天气情况\nfor(var i in weather_data){\n  $(container[i] + \" img\").attr(\"src\",weather_data[i].dayPictureUrl);\n  $(container[i] + \" .temp\").html(weather_data[i].temperature);\n}\n```\n至于根据天气情况变换背景什么的，准备几张不同天气的背景图，根据不同的天气状况使用js替换相应的background-image的url就好了~\n\n[点击查看效果](/local-weather/index.html)\n[项目开源地址](https://github.com/zhangjh/localWeatherApp)。\n","slug":"local-weather","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzw7004afnpvpq660khu","content":"<p>近期在学习一些web全栈的东西，业余时间做了些小项目。这个天气预报的小项目属于其中之一。本身技术没有什么难的，主要是找免费可用的天气API比较费劲。最后还是使用了百度的开放API，中国天气的就不说了，打开个链接都费劲，好不容易进去了，注册的时候提示你”内部服务器错误”。。据说还不免费，纳税人交钱建立的组织，数据使用下还要交钱，哪说理去。百度的API还不错，只是没有雾霾指数。简单记录如下。</p>\n<h4 id=\"HTML容器\"><a href=\"#HTML容器\" class=\"headerlink\" title=\"HTML容器\"></a>HTML容器</h4><p>使用bootstrap布局，当天的预报信息显示一行，其余三天信息缩小放在下一行（百度API只提供四天的天气预测）。<br>每天的天气信息包括：一个天气图标（可随天气变化），一个温度显示。<br>再下一行显示本地城市信息、天气情况以及风力情况。<br>效果如下：<br><img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1ezav90p4qcj211y0hek0d.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h4 id=\"天气API\"><a href=\"#天气API\" class=\"headerlink\" title=\"天气API\"></a>天气API</h4><p>1.首先需要加载百度的API库<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"http://api.map.baidu.com/api?v=2.0&amp;ak=你的key\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p>2.定位城市<br>定位城市我之前想用浏览器的navigator获取经纬度来实现，实践中发现难度还是比较大的。而用IP来定位的话，上述百度API直接提供了，那直接用IP来定位好了，虽然精度不那么准确，也许获取不到牛家庄的天气获取个杭州南京什么的还是不在话下的。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myCity = <span class=\"keyword\">new</span> BMap.LocalCity();</span><br><span class=\"line\">myCity.get(myFun);</span><br></pre></td></tr></table></figure></p>\n<p>加载了API库后，直接生成一个BMap LocalCity对象即可，传入get方法的函数（获取到城市后的回调函数）里就可以做各种事情了。</p>\n<p>3.获取天气数据<br>接口调用方式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://api.map.baidu.com/telematics/v3/weather?location=&lt;城市名&gt;&amp;output=&lt;json|xml&gt;&amp;ak=yourkey</span><br></pre></td></tr></table></figure></p>\n<p>只需传入参数城市名以及输出格式即可。<br>这里需要注意的是，传入的城市名形如,”南京”,”北京”这样，而通过API获取的城市名是”南京市”,”北京市”这样，因此在传入的前需要做一下处理。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cityName.split(<span class=\"string\">\"市\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure></p>\n<p>输出格式建议使用JSON，便于解析处理。<br>另外，js在请求数据时，由于跨域请求不被允许，因此需要使用jsonp访问。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    url: <span class=\"string\">\"http://api.map.baidu.com/telematics/v3/weather?location=\"</span> + cityName + <span class=\"string\">\"&amp;output=json&amp;ak=你的key\"</span>,</span><br><span class=\"line\">    dataType: <span class=\"string\">\"jsonp\"</span>,</span><br><span class=\"line\">    callback: <span class=\"string\">\"callback\"</span>,</span><br><span class=\"line\">    success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ret</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//do something</span></span><br><span class=\"line\">\t\t... ...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>4.解析数据<br>上述接口返回的信息格式如下：<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1ezaudtknrtj20lu0h4gmq.jpg\" alt=\"\"><br>取出results的weather_data字段即可，数组每个元素存储了一天的天气情况。使用js将对应的信息填充到相应的HTML容器里去即可。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> container = [<span class=\"string\">\"#today\"</span>,<span class=\"string\">\"#next1\"</span>,<span class=\"string\">\"#next2\"</span>,<span class=\"string\">\"#next3\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = ret.results[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> weather_data = result.weather_data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//城市、风力</span></span><br><span class=\"line\">$(<span class=\"string\">\"#location\"</span>).html(result.currentCity);</span><br><span class=\"line\">$(<span class=\"string\">\"#weather\"</span>).html(result.weather_data[<span class=\"number\">0</span>].weather);</span><br><span class=\"line\">$(<span class=\"string\">\"#wind\"</span>).html(result.weather_data[<span class=\"number\">0</span>].wind);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//天气情况</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> weather_data)&#123;</span><br><span class=\"line\">  $(container[i] + <span class=\"string\">\" img\"</span>).attr(<span class=\"string\">\"src\"</span>,weather_data[i].dayPictureUrl);</span><br><span class=\"line\">  $(container[i] + <span class=\"string\">\" .temp\"</span>).html(weather_data[i].temperature);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>至于根据天气情况变换背景什么的，准备几张不同天气的背景图，根据不同的天气状况使用js替换相应的background-image的url就好了~</p>\n<p><a href=\"/local-weather/index.html\">点击查看效果</a><br><a href=\"https://github.com/zhangjh/localWeatherApp\" target=\"_blank\" rel=\"noopener\">项目开源地址</a>。</p>\n","site":{"data":{}},"excerpt":"<p>近期在学习一些web全栈的东西，业余时间做了些小项目。这个天气预报的小项目属于其中之一。本身技术没有什么难的，主要是找免费可用的天气API比较费劲。最后还是使用了百度的开放API，中国天气的就不说了，打开个链接都费劲，好不容易进去了，注册的时候提示你”内部服务器错误”。。据说还不免费，纳税人交钱建立的组织，数据使用下还要交钱，哪说理去。百度的API还不错，只是没有雾霾指数。简单记录如下。</p>\n<h4 id=\"HTML容器\"><a href=\"#HTML容器\" class=\"headerlink\" title=\"HTML容器\"></a>HTML容器</h4><p>使用bootstrap布局，当天的预报信息显示一行，其余三天信息缩小放在下一行（百度API只提供四天的天气预测）。<br>每天的天气信息包括：一个天气图标（可随天气变化），一个温度显示。<br>再下一行显示本地城市信息、天气情况以及风力情况。<br>效果如下：<br><img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1ezav90p4qcj211y0hek0d.jpg\" alt=\"\"></p>","more":"<h4 id=\"天气API\"><a href=\"#天气API\" class=\"headerlink\" title=\"天气API\"></a>天气API</h4><p>1.首先需要加载百度的API库<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"http://api.map.baidu.com/api?v=2.0&amp;ak=你的key\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>\n<p>2.定位城市<br>定位城市我之前想用浏览器的navigator获取经纬度来实现，实践中发现难度还是比较大的。而用IP来定位的话，上述百度API直接提供了，那直接用IP来定位好了，虽然精度不那么准确，也许获取不到牛家庄的天气获取个杭州南京什么的还是不在话下的。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myCity = <span class=\"keyword\">new</span> BMap.LocalCity();</span><br><span class=\"line\">myCity.get(myFun);</span><br></pre></td></tr></table></figure></p>\n<p>加载了API库后，直接生成一个BMap LocalCity对象即可，传入get方法的函数（获取到城市后的回调函数）里就可以做各种事情了。</p>\n<p>3.获取天气数据<br>接口调用方式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://api.map.baidu.com/telematics/v3/weather?location=&lt;城市名&gt;&amp;output=&lt;json|xml&gt;&amp;ak=yourkey</span><br></pre></td></tr></table></figure></p>\n<p>只需传入参数城市名以及输出格式即可。<br>这里需要注意的是，传入的城市名形如,”南京”,”北京”这样，而通过API获取的城市名是”南京市”,”北京市”这样，因此在传入的前需要做一下处理。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cityName.split(<span class=\"string\">\"市\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure></p>\n<p>输出格式建议使用JSON，便于解析处理。<br>另外，js在请求数据时，由于跨域请求不被允许，因此需要使用jsonp访问。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    url: <span class=\"string\">\"http://api.map.baidu.com/telematics/v3/weather?location=\"</span> + cityName + <span class=\"string\">\"&amp;output=json&amp;ak=你的key\"</span>,</span><br><span class=\"line\">    dataType: <span class=\"string\">\"jsonp\"</span>,</span><br><span class=\"line\">    callback: <span class=\"string\">\"callback\"</span>,</span><br><span class=\"line\">    success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ret</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//do something</span></span><br><span class=\"line\">\t\t... ...</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>4.解析数据<br>上述接口返回的信息格式如下：<br><img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1ezaudtknrtj20lu0h4gmq.jpg\" alt=\"\"><br>取出results的weather_data字段即可，数组每个元素存储了一天的天气情况。使用js将对应的信息填充到相应的HTML容器里去即可。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> container = [<span class=\"string\">\"#today\"</span>,<span class=\"string\">\"#next1\"</span>,<span class=\"string\">\"#next2\"</span>,<span class=\"string\">\"#next3\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = ret.results[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> weather_data = result.weather_data;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//城市、风力</span></span><br><span class=\"line\">$(<span class=\"string\">\"#location\"</span>).html(result.currentCity);</span><br><span class=\"line\">$(<span class=\"string\">\"#weather\"</span>).html(result.weather_data[<span class=\"number\">0</span>].weather);</span><br><span class=\"line\">$(<span class=\"string\">\"#wind\"</span>).html(result.weather_data[<span class=\"number\">0</span>].wind);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//天气情况</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> weather_data)&#123;</span><br><span class=\"line\">  $(container[i] + <span class=\"string\">\" img\"</span>).attr(<span class=\"string\">\"src\"</span>,weather_data[i].dayPictureUrl);</span><br><span class=\"line\">  $(container[i] + <span class=\"string\">\" .temp\"</span>).html(weather_data[i].temperature);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>至于根据天气情况变换背景什么的，准备几张不同天气的背景图，根据不同的天气状况使用js替换相应的background-image的url就好了~</p>\n<p><a href=\"/local-weather/index.html\">点击查看效果</a><br><a href=\"https://github.com/zhangjh/localWeatherApp\" target=\"_blank\" rel=\"noopener\">项目开源地址</a>。</p>","sticky":0},{"title":"markdown常用语法标记","date":"2015-06-29T09:47:37.000Z","show":true,"_content":"工欲善其事必先利其器，hexo博客的写作方式采用的是标准的markdown语法。\n因此要想写出漂亮的格式，掌握好必要的markdown语法必不可少。\n工作中也用到markdown写周报，在此顺便再总结一下markdown常用的语法格式，温故而知新。\n\n<!--more-->\n\n# 标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n......\n###### 六级标题\n```\n\n# 引用\n```\n> 引用的文字\n```\neg：\n> Talk is cheap，show me the code. -- Linus Torvalds\n\n# 链接\n```\n[this is link text](http://xxx)\n```\neg:\n[百度一下，你就知道](https://www.baidu.com)\n\n# 图片\n图片跟链接类似，只是[]前面多一个!\n```\n![](http://xxx)\n```\neg:\n![](https://www.baidu.com/img/bd_logo1.png)\n\n# 列表\n```\n- ul1\n- ul2\n1. li1\n2. li2\n```\n符号和文本之间注意留空\neg：\n- 无序列表1\n- 无序列表2\n1. 有序列表1\n2. 有序列表2\n\n# 代码&代码块\n代码：\n```\n用`包裹语句\n```\n代码块：\n```\n用```包裹代码块\n```\neg:\n`console.log(\"hello world!\");`\n```js\nfunction test(){\n\tconsole.log(\"hello world\");\n}\n```\n\n# 字体\n粗体用两个`**`包含\n斜体用一个`*`包含\neg:\n**粗体**\n*斜体*\n\n\n\n","source":"_posts/markdown-learning.md","raw":"title: markdown常用语法标记\ndate: 2015-06-29 17:47:37\ntags: markdown\ncategories: 技术人生\nshow: true\n---\n工欲善其事必先利其器，hexo博客的写作方式采用的是标准的markdown语法。\n因此要想写出漂亮的格式，掌握好必要的markdown语法必不可少。\n工作中也用到markdown写周报，在此顺便再总结一下markdown常用的语法格式，温故而知新。\n\n<!--more-->\n\n# 标题\n```\n# 一级标题\n## 二级标题\n### 三级标题\n......\n###### 六级标题\n```\n\n# 引用\n```\n> 引用的文字\n```\neg：\n> Talk is cheap，show me the code. -- Linus Torvalds\n\n# 链接\n```\n[this is link text](http://xxx)\n```\neg:\n[百度一下，你就知道](https://www.baidu.com)\n\n# 图片\n图片跟链接类似，只是[]前面多一个!\n```\n![](http://xxx)\n```\neg:\n![](https://www.baidu.com/img/bd_logo1.png)\n\n# 列表\n```\n- ul1\n- ul2\n1. li1\n2. li2\n```\n符号和文本之间注意留空\neg：\n- 无序列表1\n- 无序列表2\n1. 有序列表1\n2. 有序列表2\n\n# 代码&代码块\n代码：\n```\n用`包裹语句\n```\n代码块：\n```\n用```包裹代码块\n```\neg:\n`console.log(\"hello world!\");`\n```js\nfunction test(){\n\tconsole.log(\"hello world\");\n}\n```\n\n# 字体\n粗体用两个`**`包含\n斜体用一个`*`包含\neg:\n**粗体**\n*斜体*\n\n\n\n","slug":"markdown-learning","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzw9004cfnpvoew0klrh","content":"<p>工欲善其事必先利其器，hexo博客的写作方式采用的是标准的markdown语法。<br>因此要想写出漂亮的格式，掌握好必要的markdown语法必不可少。<br>工作中也用到markdown写周报，在此顺便再总结一下markdown常用的语法格式，温故而知新。</p>\n<a id=\"more\"></a>\n<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一级标题</span><br><span class=\"line\">## 二级标题</span><br><span class=\"line\">### 三级标题</span><br><span class=\"line\">......</span><br><span class=\"line\">###### 六级标题</span><br></pre></td></tr></table></figure>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 引用的文字</span></span><br></pre></td></tr></table></figure>\n<p>eg：</p>\n<blockquote>\n<p>Talk is cheap，show me the code. – Linus Torvalds</p>\n</blockquote>\n<h1 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h1><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">this is link text</span>](<span class=\"link\">http://xxx</span>)</span><br></pre></td></tr></table></figure>\n<p>eg:<br><a href=\"https://www.baidu.com\" target=\"_blank\" rel=\"noopener\">百度一下，你就知道</a></p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p>图片跟链接类似，只是[]前面多一个!<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"selector-attr\">[]</span>(<span class=\"attribute\">http</span>:<span class=\"comment\">//xxx)</span></span><br></pre></td></tr></table></figure></p>\n<p>eg:<br><img src=\"https://www.baidu.com/img/bd_logo1.png\" alt=\"\"></p>\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">- </span>ul1</span><br><span class=\"line\"><span class=\"bullet\">- </span>ul2</span><br><span class=\"line\"><span class=\"bullet\">1. </span>li1</span><br><span class=\"line\"><span class=\"bullet\">2. </span>li2</span><br></pre></td></tr></table></figure>\n<p>符号和文本之间注意留空<br>eg：</p>\n<ul>\n<li>无序列表1</li>\n<li>无序列表2</li>\n</ul>\n<ol>\n<li>有序列表1</li>\n<li>有序列表2</li>\n</ol>\n<h1 id=\"代码-amp-代码块\"><a href=\"#代码-amp-代码块\" class=\"headerlink\" title=\"代码&amp;代码块\"></a>代码&amp;代码块</h1><p>代码：<br><figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用`包裹语句</span><br></pre></td></tr></table></figure></p>\n<p>代码块：<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用```包裹代码块</span><br></pre></td></tr></table></figure></p>\n<p>eg:<br><code>console.log(&quot;hello world!&quot;);</code><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"hello world\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h1><p>粗体用两个<code>**</code>包含<br>斜体用一个<code>*</code>包含<br>eg:<br><strong>粗体</strong><br><em>斜体</em></p>\n","site":{"data":{}},"excerpt":"<p>工欲善其事必先利其器，hexo博客的写作方式采用的是标准的markdown语法。<br>因此要想写出漂亮的格式，掌握好必要的markdown语法必不可少。<br>工作中也用到markdown写周报，在此顺便再总结一下markdown常用的语法格式，温故而知新。</p>","more":"<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一级标题</span><br><span class=\"line\">## 二级标题</span><br><span class=\"line\">### 三级标题</span><br><span class=\"line\">......</span><br><span class=\"line\">###### 六级标题</span><br></pre></td></tr></table></figure>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"quote\">&gt; 引用的文字</span></span><br></pre></td></tr></table></figure>\n<p>eg：</p>\n<blockquote>\n<p>Talk is cheap，show me the code. – Linus Torvalds</p>\n</blockquote>\n<h1 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h1><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">this is link text</span>](<span class=\"link\">http://xxx</span>)</span><br></pre></td></tr></table></figure>\n<p>eg:<br><a href=\"https://www.baidu.com\" target=\"_blank\" rel=\"noopener\">百度一下，你就知道</a></p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><p>图片跟链接类似，只是[]前面多一个!<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"selector-attr\">[]</span>(<span class=\"attribute\">http</span>:<span class=\"comment\">//xxx)</span></span><br></pre></td></tr></table></figure></p>\n<p>eg:<br><img src=\"https://www.baidu.com/img/bd_logo1.png\" alt=\"\"></p>\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">- </span>ul1</span><br><span class=\"line\"><span class=\"bullet\">- </span>ul2</span><br><span class=\"line\"><span class=\"bullet\">1. </span>li1</span><br><span class=\"line\"><span class=\"bullet\">2. </span>li2</span><br></pre></td></tr></table></figure>\n<p>符号和文本之间注意留空<br>eg：</p>\n<ul>\n<li>无序列表1</li>\n<li>无序列表2</li>\n</ul>\n<ol>\n<li>有序列表1</li>\n<li>有序列表2</li>\n</ol>\n<h1 id=\"代码-amp-代码块\"><a href=\"#代码-amp-代码块\" class=\"headerlink\" title=\"代码&amp;代码块\"></a>代码&amp;代码块</h1><p>代码：<br><figure class=\"highlight autohotkey\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用`包裹语句</span><br></pre></td></tr></table></figure></p>\n<p>代码块：<br><figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用```包裹代码块</span><br></pre></td></tr></table></figure></p>\n<p>eg:<br><code>console.log(&quot;hello world!&quot;);</code><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"hello world\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h1><p>粗体用两个<code>**</code>包含<br>斜体用一个<code>*</code>包含<br>eg:<br><strong>粗体</strong><br><em>斜体</em></p>","sticky":0},{"title":"Maven仓库类型总结","show":true,"date":"2018-03-03T13:09:46.000Z","_content":"<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  2/53，每周一篇博，坚持！\n\n#### Maven仓库类型\nMaven有几种不同的仓库类型：\n1. 中央仓库，中央仓库是由Maven官方提供维护的资源仓库\n2. 私有仓库，一般私有仓库由企业自己维护，不对外开放，和中央仓库一起可以称之为远程仓库。\n3. 本地仓库，本地仓库顾名思义就是开发者自己本机所处的仓库环境，通常是自己打包的jar包目录。\n配置的方式是修改maven配置文件的\"repositories\"部分。\n```\n<!--中央仓库默认为http://repo1.maven.org/maven2-->\n<!--nexus私服设置-->\n<repositories>\n\t <repository>\n\t\t<id>central</id>\n\t\t<url>http://mvnrepo.alibaba-inc.com/mvn/repository</url>\n\t</repository>\n</repositories>\n<!--本地仓库-->\n<!--默认仓库默认是在${user.home}/.m2/repository下-->\n<localRepository>/path/to/local/repo</localRepository>\n```\n\n<!--more-->\n\n#### Maven仓库加载机制\n当我们在项目pom依赖里配置好了依赖的jar包三元组后，Maven首先会去本地仓库查询是否有对应依赖，如果查询到则直接开始编译，否则就去查询私服，如果查询到则返回开始编译，否则继续去查询中央仓库，如果还没有查到则报依赖不存在错误。\n![](http://wx4.sinaimg.cn/mw690/62d95157gy1fp00ndn1y3j20hs06z0tc.jpg)\n\n#### 使用本地仓库调试\n我们在实际项目开发过程中，经常会依赖其他应用提供的jar包服务。通常的流程是被依赖方更新后发布提交到公司的私服，然后应用依赖方再去下载对应版本的依赖。如果依赖方同时也是自己维护的应用时，在调试阶段频繁发布jar包版本会造成开发效率的低下，此时我们就可以借助本地仓库来提高开发效率。\n我们开发完依赖的程序逻辑后，在本地进行打包，然后依赖方使用本地打包版本进行测试，直到测试通过再进行依赖包的正式发布。\n```\n// maven本地打包\nmvn install -Dmaven.test.skip\n// 运行上述命令后，maven就将按照应用工程pom中定义的三元组打包成本地jar存储在本地仓库中\n// 如果是非maven工程，也可以手工指定三元组信息打包\nmvn install -Dfile=xxx -DgroupId=xxx -DartifactId=xx -Dversion=xx -Dpackaging=jar\n// 然后就可以在maven工程中指定pom依赖了\n```\n\n\n","source":"_posts/maven-repo.md","raw":"title: Maven仓库类型总结\nshow: true\ndate: 2018-03-03 21:09:46\ntags: maven\ncategories: 技术人生\n---\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  2/53，每周一篇博，坚持！\n\n#### Maven仓库类型\nMaven有几种不同的仓库类型：\n1. 中央仓库，中央仓库是由Maven官方提供维护的资源仓库\n2. 私有仓库，一般私有仓库由企业自己维护，不对外开放，和中央仓库一起可以称之为远程仓库。\n3. 本地仓库，本地仓库顾名思义就是开发者自己本机所处的仓库环境，通常是自己打包的jar包目录。\n配置的方式是修改maven配置文件的\"repositories\"部分。\n```\n<!--中央仓库默认为http://repo1.maven.org/maven2-->\n<!--nexus私服设置-->\n<repositories>\n\t <repository>\n\t\t<id>central</id>\n\t\t<url>http://mvnrepo.alibaba-inc.com/mvn/repository</url>\n\t</repository>\n</repositories>\n<!--本地仓库-->\n<!--默认仓库默认是在${user.home}/.m2/repository下-->\n<localRepository>/path/to/local/repo</localRepository>\n```\n\n<!--more-->\n\n#### Maven仓库加载机制\n当我们在项目pom依赖里配置好了依赖的jar包三元组后，Maven首先会去本地仓库查询是否有对应依赖，如果查询到则直接开始编译，否则就去查询私服，如果查询到则返回开始编译，否则继续去查询中央仓库，如果还没有查到则报依赖不存在错误。\n![](http://wx4.sinaimg.cn/mw690/62d95157gy1fp00ndn1y3j20hs06z0tc.jpg)\n\n#### 使用本地仓库调试\n我们在实际项目开发过程中，经常会依赖其他应用提供的jar包服务。通常的流程是被依赖方更新后发布提交到公司的私服，然后应用依赖方再去下载对应版本的依赖。如果依赖方同时也是自己维护的应用时，在调试阶段频繁发布jar包版本会造成开发效率的低下，此时我们就可以借助本地仓库来提高开发效率。\n我们开发完依赖的程序逻辑后，在本地进行打包，然后依赖方使用本地打包版本进行测试，直到测试通过再进行依赖包的正式发布。\n```\n// maven本地打包\nmvn install -Dmaven.test.skip\n// 运行上述命令后，maven就将按照应用工程pom中定义的三元组打包成本地jar存储在本地仓库中\n// 如果是非maven工程，也可以手工指定三元组信息打包\nmvn install -Dfile=xxx -DgroupId=xxx -DartifactId=xx -Dversion=xx -Dpackaging=jar\n// 然后就可以在maven工程中指定pom依赖了\n```\n\n\n","slug":"maven-repo","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzwc004hfnpvv20wmpn7","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  2/53，每周一篇博，坚持！</p>\n<h4 id=\"Maven仓库类型\"><a href=\"#Maven仓库类型\" class=\"headerlink\" title=\"Maven仓库类型\"></a>Maven仓库类型</h4><p>Maven有几种不同的仓库类型：</p>\n<ol>\n<li>中央仓库，中央仓库是由Maven官方提供维护的资源仓库</li>\n<li>私有仓库，一般私有仓库由企业自己维护，不对外开放，和中央仓库一起可以称之为远程仓库。</li>\n<li>本地仓库，本地仓库顾名思义就是开发者自己本机所处的仓库环境，通常是自己打包的jar包目录。<br>配置的方式是修改maven配置文件的”repositories”部分。<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--中央仓库默认为http://repo1.maven.org/maven2--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--nexus私服设置--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://mvnrepo.alibaba-inc.com/mvn/repository<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--本地仓库--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--默认仓库默认是在$</span></span><span class=\"template-variable\">&#123;user.home&#125;</span><span class=\"xml\"><span class=\"comment\">/.m2/repository下--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">localRepository</span>&gt;</span>/path/to/local/repo<span class=\"tag\">&lt;/<span class=\"name\">localRepository</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h4 id=\"Maven仓库加载机制\"><a href=\"#Maven仓库加载机制\" class=\"headerlink\" title=\"Maven仓库加载机制\"></a>Maven仓库加载机制</h4><p>当我们在项目pom依赖里配置好了依赖的jar包三元组后，Maven首先会去本地仓库查询是否有对应依赖，如果查询到则直接开始编译，否则就去查询私服，如果查询到则返回开始编译，否则继续去查询中央仓库，如果还没有查到则报依赖不存在错误。<br><img src=\"http://wx4.sinaimg.cn/mw690/62d95157gy1fp00ndn1y3j20hs06z0tc.jpg\" alt=\"\"></p>\n<h4 id=\"使用本地仓库调试\"><a href=\"#使用本地仓库调试\" class=\"headerlink\" title=\"使用本地仓库调试\"></a>使用本地仓库调试</h4><p>我们在实际项目开发过程中，经常会依赖其他应用提供的jar包服务。通常的流程是被依赖方更新后发布提交到公司的私服，然后应用依赖方再去下载对应版本的依赖。如果依赖方同时也是自己维护的应用时，在调试阶段频繁发布jar包版本会造成开发效率的低下，此时我们就可以借助本地仓库来提高开发效率。<br>我们开发完依赖的程序逻辑后，在本地进行打包，然后依赖方使用本地打包版本进行测试，直到测试通过再进行依赖包的正式发布。<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// maven本地打包</span></span><br><span class=\"line\">mvn install -Dmaven<span class=\"selector-class\">.test</span><span class=\"selector-class\">.skip</span></span><br><span class=\"line\"><span class=\"comment\">// 运行上述命令后，maven就将按照应用工程pom中定义的三元组打包成本地jar存储在本地仓库中</span></span><br><span class=\"line\"><span class=\"comment\">// 如果是非maven工程，也可以手工指定三元组信息打包</span></span><br><span class=\"line\">mvn install -Dfile=xxx -DgroupId=xxx -DartifactId=xx -Dversion=xx -Dpackaging=jar</span><br><span class=\"line\"><span class=\"comment\">// 然后就可以在maven工程中指定pom依赖了</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  2/53，每周一篇博，坚持！</p>\n<h4 id=\"Maven仓库类型\"><a href=\"#Maven仓库类型\" class=\"headerlink\" title=\"Maven仓库类型\"></a>Maven仓库类型</h4><p>Maven有几种不同的仓库类型：</p>\n<ol>\n<li>中央仓库，中央仓库是由Maven官方提供维护的资源仓库</li>\n<li>私有仓库，一般私有仓库由企业自己维护，不对外开放，和中央仓库一起可以称之为远程仓库。</li>\n<li>本地仓库，本地仓库顾名思义就是开发者自己本机所处的仓库环境，通常是自己打包的jar包目录。<br>配置的方式是修改maven配置文件的”repositories”部分。<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--中央仓库默认为http://repo1.maven.org/maven2--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--nexus私服设置--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://mvnrepo.alibaba-inc.com/mvn/repository<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--本地仓库--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!--默认仓库默认是在$</span></span><span class=\"template-variable\">&#123;user.home&#125;</span><span class=\"xml\"><span class=\"comment\">/.m2/repository下--&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">localRepository</span>&gt;</span>/path/to/local/repo<span class=\"tag\">&lt;/<span class=\"name\">localRepository</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>","more":"<h4 id=\"Maven仓库加载机制\"><a href=\"#Maven仓库加载机制\" class=\"headerlink\" title=\"Maven仓库加载机制\"></a>Maven仓库加载机制</h4><p>当我们在项目pom依赖里配置好了依赖的jar包三元组后，Maven首先会去本地仓库查询是否有对应依赖，如果查询到则直接开始编译，否则就去查询私服，如果查询到则返回开始编译，否则继续去查询中央仓库，如果还没有查到则报依赖不存在错误。<br><img src=\"http://wx4.sinaimg.cn/mw690/62d95157gy1fp00ndn1y3j20hs06z0tc.jpg\" alt=\"\"></p>\n<h4 id=\"使用本地仓库调试\"><a href=\"#使用本地仓库调试\" class=\"headerlink\" title=\"使用本地仓库调试\"></a>使用本地仓库调试</h4><p>我们在实际项目开发过程中，经常会依赖其他应用提供的jar包服务。通常的流程是被依赖方更新后发布提交到公司的私服，然后应用依赖方再去下载对应版本的依赖。如果依赖方同时也是自己维护的应用时，在调试阶段频繁发布jar包版本会造成开发效率的低下，此时我们就可以借助本地仓库来提高开发效率。<br>我们开发完依赖的程序逻辑后，在本地进行打包，然后依赖方使用本地打包版本进行测试，直到测试通过再进行依赖包的正式发布。<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// maven本地打包</span></span><br><span class=\"line\">mvn install -Dmaven<span class=\"selector-class\">.test</span><span class=\"selector-class\">.skip</span></span><br><span class=\"line\"><span class=\"comment\">// 运行上述命令后，maven就将按照应用工程pom中定义的三元组打包成本地jar存储在本地仓库中</span></span><br><span class=\"line\"><span class=\"comment\">// 如果是非maven工程，也可以手工指定三元组信息打包</span></span><br><span class=\"line\">mvn install -Dfile=xxx -DgroupId=xxx -DartifactId=xx -Dversion=xx -Dpackaging=jar</span><br><span class=\"line\"><span class=\"comment\">// 然后就可以在maven工程中指定pom依赖了</span></span><br></pre></td></tr></table></figure></p>","sticky":0},{"title":"锤子手机短信恢复工具","show":true,"date":"2016-08-31T12:25:16.000Z","_content":"# 背景\n作为一个技术玩家，手机不ROOT真是怎么都不舒服。不ROOT没有掌控感：预装不能卸载、广告不能拦截、高级一点的应用不能安装...不能忍，于是今天又闲不下来折腾了下，结果又踩坑了。妈的，安卓手机品牌多样，真是踩坑无穷尽。这次倒是想到提前各种备份，还是栽在了短信恢复这事上。虽然现在短信已经用的不多了，有用的信息并不像以前那样多，但强迫症如我还是不恢复不舒服斯基。本篇博文主要想就锤子手机刷机root之后的短信恢复问题做一简单分享。绝对全网独家，别无他所，转载请注明出处，谢谢！\n\n# 问题描述\n刷机root过程略去不表，我是2.6.2系统，使用手机端kingroot获取root权限成功。在root之前使用优优刷机助手备份了各种数据。优优刷机助手备份的短信格式是\".csv\"格式的，因此本篇分享的方案也仅对\".csv\"格式的备份文件起作用。\n\n在备份完成获取root成功后，本欲使用优优刷机助手继续恢复数据，怎料在恢复短信的时候提示要更改默认短信应用才行，没截图了，找了一张豌豆荚的，提示一样：\n![](http://bbs-static.smartisan.cn/data/attachment/forum/201411/03/153649i25ddj3v8j2vhg5j.png)\n\n<!--more-->\n\n# 解决方案\n卧槽！意想不到啊。折腾了半天都不行，后来想到，都是数据而已，如果我先给自己发几条短信，然后用手机自带的备份软件备份了，然后再用之前的备份文件替换这个临时的备份文件，再使用自带的备份软件恢复回来不就好了吗！\n\n结果不行...查看了一下两个文档，发现\".csv\"虽然在WIN下是用Excel打开，但也只是纯文本而不是二进制数据。于是乎想到，把备份的文件格式调整为和手机备份软件一致的格式不就OK了。\n\n# 实施方案\n**对原理不感兴趣的可以直接略过该部分，直接阅读下一个部分。**\n\n这里把手机软件临时备份的文件叫做\"ori.csv\"，自己的备份数据叫做\"new.csv\"。\n分别截取二者的前几行看一下：\n```\n### ori.csv\n\"address\",\"person\",\"date\",\"date_sent\",\"protocol\",\"read\",\"status\",\"type\",\"reply_path_present\",\"subject\",\"service_center\",\"locked\",\"error_code\",\"seen\",\"body\"\n\"106575170001\",,\"1472639004199\",\"1472639002000\",\"0\",\"0\",\"-1\",\"1\",\"0\",,\"+861380057xxxx\",\"0\",\"0\",\"1\",\"【支\n付宝】账户njh**@126**于08月31日18时23分在阿里巴巴(中国)有限公司成功付款1.00元\"\n\"1065730312919757920\",,\"1472627502937\",\"1472627499000\",\"0\",\"1\",\"-1\",\"1\",\"0\",,\"+861380057xxxx\",\"0\",\"0\",\"1\",\"【阿里云】2016云栖大会旗舰场10月杭州启动。马云、王坚、胡晓明等阿里大佬现身与您探讨计算未来！http://tb.cn/Uu7LAUx 回td退订\"\n\n\n### new.csv\nd_id,_id,联系人,姓名,类型,已读,时间,date,主题,呼叫中心,\"短信内容\"\n11,9,`95188,\"\",收件箱,0,2016-02-26 09:34:24,`1456450464747,,,\"【支付宝】贵账户njh**@126**于02月26日09时34分通过（余额）消费3.00元。详询95188\"\n11,11,`95188,\"\",收件箱,0,2016-02-26 12:26:46,`1456460806735,,,\"【支付宝】贵账户njh**@126**于02月26日12时26分通过（余额）消费5.00元。详询95188\"\n11,13,`95188,\"\",收件箱,0,2016-02-26 16:16:22,`1456474582793,,,\"【支付宝】eric.w…向您付款500.00元,已存入您的支付宝njh*@126.*，备注:实现网返款。详询 d.alipay.com/z\"\n```\n\n从两个文件的格式上可以看出来，手机原生可以识别的格式中有很多默认的字段，我们可以直接赋值，备份文件中有用的字段其实只要对应的\"联系人\",\"date\",\"短信内容\"三个列的字段，并且分别对应原生格式的\"address\",\"date\",(\"date_sent\"可以使用同一个值),\"body\"字段。\n\n于是乎我们只要编写一个简单的shell脚本处理一下即可：\n\n```\n#!/bin/bash\nMYBACK=\"./new.csv\"\nRESULT=\"./message.csv\"\n\n#把文件中的'`'和'\"'替换成空格\nsed -i 's/\\`//g' ${MYBACK}\nsed -i 's/\\\"//g' ${MYBACK}\n\n#写入文件头部\necho '\"address\",\"person\",\"date\",\"date_sent\",\"protocol\",\"read\",\"status\",\"type\",\"reply_path_present\",\"subject\",\"service_center\",\"locked\",\"error_code\",\"seen\",\"body\"' > ${RESULT}\n\nwhile read line \ndo\n\t//对于其他软件备份的csv格式文件，请自行数一下对应的字段在第几列，替换一下即可\n\taddress=`echo ${line} | awk -F',' '{print $3}'`\n\tdate=`echo ${line} | awk -F',' '{print $8}'`\n\tbody=`echo ${line} | awk -F',' '{print $11}'`\n\techo \"${address},,${date},${date},0,0,-1,1,0,,+8613800571553,0,0,1,${body}\" >> ${RESULT}\ndone < ./new.csv\n```\n\n运行一把，当前目录下的message.csv文件就可以用来替换原生备份文件来恢复啦。\n\n# 使用方法\n如果拥有Linux环境的朋友想必不用说就知道怎么运行了，鉴于大部分网友并不具有Linux环境，因此先说一下怎么在win下面使用。\n1. 安装Win下终端环境\n点击下载安装[Babun](http://projects.reficio.org/babun/download)\n2. 安装好以后打开babun\n```\n//为方便起见，将备份资料拷贝到D盘下，并起名new.csv\n//然后在D盘新建一个文本文档，将上一节的代码复制进去，并将后缀改为\".sh\"\n//然后在babun中运行\ncd D:\ndos2unix.exe gen.sh\nsh gen.sh\n//运行完以后看看是不是生成了一个message.csv的新文件\n```\n替换以后就可以使用手机自带的备份软件恢复了。\n","source":"_posts/message-restore.md","raw":"title: 锤子手机短信恢复工具\nshow: true\ndate: 2016-08-31 20:25:16\ntags: [锤子,短信,恢复]\ncategories: 技术人生\n---\n# 背景\n作为一个技术玩家，手机不ROOT真是怎么都不舒服。不ROOT没有掌控感：预装不能卸载、广告不能拦截、高级一点的应用不能安装...不能忍，于是今天又闲不下来折腾了下，结果又踩坑了。妈的，安卓手机品牌多样，真是踩坑无穷尽。这次倒是想到提前各种备份，还是栽在了短信恢复这事上。虽然现在短信已经用的不多了，有用的信息并不像以前那样多，但强迫症如我还是不恢复不舒服斯基。本篇博文主要想就锤子手机刷机root之后的短信恢复问题做一简单分享。绝对全网独家，别无他所，转载请注明出处，谢谢！\n\n# 问题描述\n刷机root过程略去不表，我是2.6.2系统，使用手机端kingroot获取root权限成功。在root之前使用优优刷机助手备份了各种数据。优优刷机助手备份的短信格式是\".csv\"格式的，因此本篇分享的方案也仅对\".csv\"格式的备份文件起作用。\n\n在备份完成获取root成功后，本欲使用优优刷机助手继续恢复数据，怎料在恢复短信的时候提示要更改默认短信应用才行，没截图了，找了一张豌豆荚的，提示一样：\n![](http://bbs-static.smartisan.cn/data/attachment/forum/201411/03/153649i25ddj3v8j2vhg5j.png)\n\n<!--more-->\n\n# 解决方案\n卧槽！意想不到啊。折腾了半天都不行，后来想到，都是数据而已，如果我先给自己发几条短信，然后用手机自带的备份软件备份了，然后再用之前的备份文件替换这个临时的备份文件，再使用自带的备份软件恢复回来不就好了吗！\n\n结果不行...查看了一下两个文档，发现\".csv\"虽然在WIN下是用Excel打开，但也只是纯文本而不是二进制数据。于是乎想到，把备份的文件格式调整为和手机备份软件一致的格式不就OK了。\n\n# 实施方案\n**对原理不感兴趣的可以直接略过该部分，直接阅读下一个部分。**\n\n这里把手机软件临时备份的文件叫做\"ori.csv\"，自己的备份数据叫做\"new.csv\"。\n分别截取二者的前几行看一下：\n```\n### ori.csv\n\"address\",\"person\",\"date\",\"date_sent\",\"protocol\",\"read\",\"status\",\"type\",\"reply_path_present\",\"subject\",\"service_center\",\"locked\",\"error_code\",\"seen\",\"body\"\n\"106575170001\",,\"1472639004199\",\"1472639002000\",\"0\",\"0\",\"-1\",\"1\",\"0\",,\"+861380057xxxx\",\"0\",\"0\",\"1\",\"【支\n付宝】账户njh**@126**于08月31日18时23分在阿里巴巴(中国)有限公司成功付款1.00元\"\n\"1065730312919757920\",,\"1472627502937\",\"1472627499000\",\"0\",\"1\",\"-1\",\"1\",\"0\",,\"+861380057xxxx\",\"0\",\"0\",\"1\",\"【阿里云】2016云栖大会旗舰场10月杭州启动。马云、王坚、胡晓明等阿里大佬现身与您探讨计算未来！http://tb.cn/Uu7LAUx 回td退订\"\n\n\n### new.csv\nd_id,_id,联系人,姓名,类型,已读,时间,date,主题,呼叫中心,\"短信内容\"\n11,9,`95188,\"\",收件箱,0,2016-02-26 09:34:24,`1456450464747,,,\"【支付宝】贵账户njh**@126**于02月26日09时34分通过（余额）消费3.00元。详询95188\"\n11,11,`95188,\"\",收件箱,0,2016-02-26 12:26:46,`1456460806735,,,\"【支付宝】贵账户njh**@126**于02月26日12时26分通过（余额）消费5.00元。详询95188\"\n11,13,`95188,\"\",收件箱,0,2016-02-26 16:16:22,`1456474582793,,,\"【支付宝】eric.w…向您付款500.00元,已存入您的支付宝njh*@126.*，备注:实现网返款。详询 d.alipay.com/z\"\n```\n\n从两个文件的格式上可以看出来，手机原生可以识别的格式中有很多默认的字段，我们可以直接赋值，备份文件中有用的字段其实只要对应的\"联系人\",\"date\",\"短信内容\"三个列的字段，并且分别对应原生格式的\"address\",\"date\",(\"date_sent\"可以使用同一个值),\"body\"字段。\n\n于是乎我们只要编写一个简单的shell脚本处理一下即可：\n\n```\n#!/bin/bash\nMYBACK=\"./new.csv\"\nRESULT=\"./message.csv\"\n\n#把文件中的'`'和'\"'替换成空格\nsed -i 's/\\`//g' ${MYBACK}\nsed -i 's/\\\"//g' ${MYBACK}\n\n#写入文件头部\necho '\"address\",\"person\",\"date\",\"date_sent\",\"protocol\",\"read\",\"status\",\"type\",\"reply_path_present\",\"subject\",\"service_center\",\"locked\",\"error_code\",\"seen\",\"body\"' > ${RESULT}\n\nwhile read line \ndo\n\t//对于其他软件备份的csv格式文件，请自行数一下对应的字段在第几列，替换一下即可\n\taddress=`echo ${line} | awk -F',' '{print $3}'`\n\tdate=`echo ${line} | awk -F',' '{print $8}'`\n\tbody=`echo ${line} | awk -F',' '{print $11}'`\n\techo \"${address},,${date},${date},0,0,-1,1,0,,+8613800571553,0,0,1,${body}\" >> ${RESULT}\ndone < ./new.csv\n```\n\n运行一把，当前目录下的message.csv文件就可以用来替换原生备份文件来恢复啦。\n\n# 使用方法\n如果拥有Linux环境的朋友想必不用说就知道怎么运行了，鉴于大部分网友并不具有Linux环境，因此先说一下怎么在win下面使用。\n1. 安装Win下终端环境\n点击下载安装[Babun](http://projects.reficio.org/babun/download)\n2. 安装好以后打开babun\n```\n//为方便起见，将备份资料拷贝到D盘下，并起名new.csv\n//然后在D盘新建一个文本文档，将上一节的代码复制进去，并将后缀改为\".sh\"\n//然后在babun中运行\ncd D:\ndos2unix.exe gen.sh\nsh gen.sh\n//运行完以后看看是不是生成了一个message.csv的新文件\n```\n替换以后就可以使用手机自带的备份软件恢复了。\n","slug":"message-restore","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzwe004kfnpva08c23kx","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>作为一个技术玩家，手机不ROOT真是怎么都不舒服。不ROOT没有掌控感：预装不能卸载、广告不能拦截、高级一点的应用不能安装…不能忍，于是今天又闲不下来折腾了下，结果又踩坑了。妈的，安卓手机品牌多样，真是踩坑无穷尽。这次倒是想到提前各种备份，还是栽在了短信恢复这事上。虽然现在短信已经用的不多了，有用的信息并不像以前那样多，但强迫症如我还是不恢复不舒服斯基。本篇博文主要想就锤子手机刷机root之后的短信恢复问题做一简单分享。绝对全网独家，别无他所，转载请注明出处，谢谢！</p>\n<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>刷机root过程略去不表，我是2.6.2系统，使用手机端kingroot获取root权限成功。在root之前使用优优刷机助手备份了各种数据。优优刷机助手备份的短信格式是”.csv”格式的，因此本篇分享的方案也仅对”.csv”格式的备份文件起作用。</p>\n<p>在备份完成获取root成功后，本欲使用优优刷机助手继续恢复数据，怎料在恢复短信的时候提示要更改默认短信应用才行，没截图了，找了一张豌豆荚的，提示一样：<br><img src=\"http://bbs-static.smartisan.cn/data/attachment/forum/201411/03/153649i25ddj3v8j2vhg5j.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>卧槽！意想不到啊。折腾了半天都不行，后来想到，都是数据而已，如果我先给自己发几条短信，然后用手机自带的备份软件备份了，然后再用之前的备份文件替换这个临时的备份文件，再使用自带的备份软件恢复回来不就好了吗！</p>\n<p>结果不行…查看了一下两个文档，发现”.csv”虽然在WIN下是用Excel打开，但也只是纯文本而不是二进制数据。于是乎想到，把备份的文件格式调整为和手机备份软件一致的格式不就OK了。</p>\n<h1 id=\"实施方案\"><a href=\"#实施方案\" class=\"headerlink\" title=\"实施方案\"></a>实施方案</h1><p><strong>对原理不感兴趣的可以直接略过该部分，直接阅读下一个部分。</strong></p>\n<p>这里把手机软件临时备份的文件叫做”ori.csv”，自己的备份数据叫做”new.csv”。<br>分别截取二者的前几行看一下：<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### ori.csv</span></span><br><span class=\"line\"><span class=\"string\">\"address\"</span>,<span class=\"string\">\"person\"</span>,<span class=\"string\">\"date\"</span>,<span class=\"string\">\"date_sent\"</span>,<span class=\"string\">\"protocol\"</span>,<span class=\"string\">\"read\"</span>,<span class=\"string\">\"status\"</span>,<span class=\"string\">\"type\"</span>,<span class=\"string\">\"reply_path_present\"</span>,<span class=\"string\">\"subject\"</span>,<span class=\"string\">\"service_center\"</span>,<span class=\"string\">\"locked\"</span>,<span class=\"string\">\"error_code\"</span>,<span class=\"string\">\"seen\"</span>,<span class=\"string\">\"body\"</span></span><br><span class=\"line\"><span class=\"string\">\"106575170001\"</span>,,<span class=\"string\">\"1472639004199\"</span>,<span class=\"string\">\"1472639002000\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"-1\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"0\"</span>,,<span class=\"string\">\"+861380057xxxx\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"【支</span></span><br><span class=\"line\"><span class=\"string\">付宝】账户njh**@126**于08月31日18时23分在阿里巴巴(中国)有限公司成功付款1.00元\"</span></span><br><span class=\"line\"><span class=\"string\">\"1065730312919757920\"</span>,,<span class=\"string\">\"1472627502937\"</span>,<span class=\"string\">\"1472627499000\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"-1\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"0\"</span>,,<span class=\"string\">\"+861380057xxxx\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"【阿里云】2016云栖大会旗舰场10月杭州启动。马云、王坚、胡晓明等阿里大佬现身与您探讨计算未来！http://tb.cn/Uu7LAUx 回td退订\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### new.csv</span></span><br><span class=\"line\">d_id,_id,联系人,姓名,类型,已读,时间,date,主题,呼叫中心,<span class=\"string\">\"短信内容\"</span></span><br><span class=\"line\"><span class=\"number\">11</span>,<span class=\"number\">9</span>,<span class=\"string\">`95188,\"\",收件箱,0,2016-02-26 09:34:24,`</span><span class=\"number\">1456450464747</span>,,,<span class=\"string\">\"【支付宝】贵账户njh**@126**于02月26日09时34分通过（余额）消费3.00元。详询95188\"</span></span><br><span class=\"line\"><span class=\"number\">11</span>,<span class=\"number\">11</span>,<span class=\"string\">`95188,\"\",收件箱,0,2016-02-26 12:26:46,`</span><span class=\"number\">1456460806735</span>,,,<span class=\"string\">\"【支付宝】贵账户njh**@126**于02月26日12时26分通过（余额）消费5.00元。详询95188\"</span></span><br><span class=\"line\"><span class=\"number\">11</span>,<span class=\"number\">13</span>,<span class=\"string\">`95188,\"\",收件箱,0,2016-02-26 16:16:22,`</span><span class=\"number\">1456474582793</span>,,,<span class=\"string\">\"【支付宝】eric.w…向您付款500.00元,已存入您的支付宝njh*@126.*，备注:实现网返款。详询 d.alipay.com/z\"</span></span><br></pre></td></tr></table></figure></p>\n<p>从两个文件的格式上可以看出来，手机原生可以识别的格式中有很多默认的字段，我们可以直接赋值，备份文件中有用的字段其实只要对应的”联系人”,”date”,”短信内容”三个列的字段，并且分别对应原生格式的”address”,”date”,(“date_sent”可以使用同一个值),”body”字段。</p>\n<p>于是乎我们只要编写一个简单的shell脚本处理一下即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">MYBACK=<span class=\"string\">\"./new.csv\"</span></span><br><span class=\"line\">RESULT=<span class=\"string\">\"./message.csv\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#把文件中的'`'和'\"'替换成空格</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s/\\`//g'</span> <span class=\"variable\">$&#123;MYBACK&#125;</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s/\\\"//g'</span> <span class=\"variable\">$&#123;MYBACK&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#写入文件头部</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'\"address\",\"person\",\"date\",\"date_sent\",\"protocol\",\"read\",\"status\",\"type\",\"reply_path_present\",\"subject\",\"service_center\",\"locked\",\"error_code\",\"seen\",\"body\"'</span> &gt; <span class=\"variable\">$&#123;RESULT&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line </span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t//对于其他软件备份的csv格式文件，请自行数一下对应的字段在第几列，替换一下即可</span><br><span class=\"line\">\taddress=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;line&#125;</span> | awk -F<span class=\"string\">','</span> <span class=\"string\">'&#123;print $3&#125;'</span>`</span><br><span class=\"line\">\tdate=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;line&#125;</span> | awk -F<span class=\"string\">','</span> <span class=\"string\">'&#123;print $8&#125;'</span>`</span><br><span class=\"line\">\tbody=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;line&#125;</span> | awk -F<span class=\"string\">','</span> <span class=\"string\">'&#123;print $11&#125;'</span>`</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$&#123;address&#125;</span>,,<span class=\"variable\">$&#123;date&#125;</span>,<span class=\"variable\">$&#123;date&#125;</span>,0,0,-1,1,0,,+8613800571553,0,0,1,<span class=\"variable\">$&#123;body&#125;</span>\"</span> &gt;&gt; <span class=\"variable\">$&#123;RESULT&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; ./new.csv</span><br></pre></td></tr></table></figure>\n<p>运行一把，当前目录下的message.csv文件就可以用来替换原生备份文件来恢复啦。</p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><p>如果拥有Linux环境的朋友想必不用说就知道怎么运行了，鉴于大部分网友并不具有Linux环境，因此先说一下怎么在win下面使用。</p>\n<ol>\n<li>安装Win下终端环境<br>点击下载安装<a href=\"http://projects.reficio.org/babun/download\" target=\"_blank\" rel=\"noopener\">Babun</a></li>\n<li>安装好以后打开babun<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//为方便起见，将备份资料拷贝到D盘下，并起名new.csv</span></span><br><span class=\"line\"><span class=\"comment\">//然后在D盘新建一个文本文档，将上一节的代码复制进去，并将后缀改为\".sh\"</span></span><br><span class=\"line\"><span class=\"comment\">//然后在babun中运行</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"keyword\">D</span>:</span><br><span class=\"line\">dos2unix.exe <span class=\"keyword\">gen</span>.<span class=\"keyword\">sh</span></span><br><span class=\"line\"><span class=\"keyword\">sh</span> <span class=\"keyword\">gen</span>.<span class=\"keyword\">sh</span></span><br><span class=\"line\"><span class=\"comment\">//运行完以后看看是不是生成了一个message.csv的新文件</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>替换以后就可以使用手机自带的备份软件恢复了。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>作为一个技术玩家，手机不ROOT真是怎么都不舒服。不ROOT没有掌控感：预装不能卸载、广告不能拦截、高级一点的应用不能安装…不能忍，于是今天又闲不下来折腾了下，结果又踩坑了。妈的，安卓手机品牌多样，真是踩坑无穷尽。这次倒是想到提前各种备份，还是栽在了短信恢复这事上。虽然现在短信已经用的不多了，有用的信息并不像以前那样多，但强迫症如我还是不恢复不舒服斯基。本篇博文主要想就锤子手机刷机root之后的短信恢复问题做一简单分享。绝对全网独家，别无他所，转载请注明出处，谢谢！</p>\n<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>刷机root过程略去不表，我是2.6.2系统，使用手机端kingroot获取root权限成功。在root之前使用优优刷机助手备份了各种数据。优优刷机助手备份的短信格式是”.csv”格式的，因此本篇分享的方案也仅对”.csv”格式的备份文件起作用。</p>\n<p>在备份完成获取root成功后，本欲使用优优刷机助手继续恢复数据，怎料在恢复短信的时候提示要更改默认短信应用才行，没截图了，找了一张豌豆荚的，提示一样：<br><img src=\"http://bbs-static.smartisan.cn/data/attachment/forum/201411/03/153649i25ddj3v8j2vhg5j.png\" alt=\"\"></p>","more":"<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>卧槽！意想不到啊。折腾了半天都不行，后来想到，都是数据而已，如果我先给自己发几条短信，然后用手机自带的备份软件备份了，然后再用之前的备份文件替换这个临时的备份文件，再使用自带的备份软件恢复回来不就好了吗！</p>\n<p>结果不行…查看了一下两个文档，发现”.csv”虽然在WIN下是用Excel打开，但也只是纯文本而不是二进制数据。于是乎想到，把备份的文件格式调整为和手机备份软件一致的格式不就OK了。</p>\n<h1 id=\"实施方案\"><a href=\"#实施方案\" class=\"headerlink\" title=\"实施方案\"></a>实施方案</h1><p><strong>对原理不感兴趣的可以直接略过该部分，直接阅读下一个部分。</strong></p>\n<p>这里把手机软件临时备份的文件叫做”ori.csv”，自己的备份数据叫做”new.csv”。<br>分别截取二者的前几行看一下：<br><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### ori.csv</span></span><br><span class=\"line\"><span class=\"string\">\"address\"</span>,<span class=\"string\">\"person\"</span>,<span class=\"string\">\"date\"</span>,<span class=\"string\">\"date_sent\"</span>,<span class=\"string\">\"protocol\"</span>,<span class=\"string\">\"read\"</span>,<span class=\"string\">\"status\"</span>,<span class=\"string\">\"type\"</span>,<span class=\"string\">\"reply_path_present\"</span>,<span class=\"string\">\"subject\"</span>,<span class=\"string\">\"service_center\"</span>,<span class=\"string\">\"locked\"</span>,<span class=\"string\">\"error_code\"</span>,<span class=\"string\">\"seen\"</span>,<span class=\"string\">\"body\"</span></span><br><span class=\"line\"><span class=\"string\">\"106575170001\"</span>,,<span class=\"string\">\"1472639004199\"</span>,<span class=\"string\">\"1472639002000\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"-1\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"0\"</span>,,<span class=\"string\">\"+861380057xxxx\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"【支</span></span><br><span class=\"line\"><span class=\"string\">付宝】账户njh**@126**于08月31日18时23分在阿里巴巴(中国)有限公司成功付款1.00元\"</span></span><br><span class=\"line\"><span class=\"string\">\"1065730312919757920\"</span>,,<span class=\"string\">\"1472627502937\"</span>,<span class=\"string\">\"1472627499000\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"-1\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"0\"</span>,,<span class=\"string\">\"+861380057xxxx\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"0\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"【阿里云】2016云栖大会旗舰场10月杭州启动。马云、王坚、胡晓明等阿里大佬现身与您探讨计算未来！http://tb.cn/Uu7LAUx 回td退订\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### new.csv</span></span><br><span class=\"line\">d_id,_id,联系人,姓名,类型,已读,时间,date,主题,呼叫中心,<span class=\"string\">\"短信内容\"</span></span><br><span class=\"line\"><span class=\"number\">11</span>,<span class=\"number\">9</span>,<span class=\"string\">`95188,\"\",收件箱,0,2016-02-26 09:34:24,`</span><span class=\"number\">1456450464747</span>,,,<span class=\"string\">\"【支付宝】贵账户njh**@126**于02月26日09时34分通过（余额）消费3.00元。详询95188\"</span></span><br><span class=\"line\"><span class=\"number\">11</span>,<span class=\"number\">11</span>,<span class=\"string\">`95188,\"\",收件箱,0,2016-02-26 12:26:46,`</span><span class=\"number\">1456460806735</span>,,,<span class=\"string\">\"【支付宝】贵账户njh**@126**于02月26日12时26分通过（余额）消费5.00元。详询95188\"</span></span><br><span class=\"line\"><span class=\"number\">11</span>,<span class=\"number\">13</span>,<span class=\"string\">`95188,\"\",收件箱,0,2016-02-26 16:16:22,`</span><span class=\"number\">1456474582793</span>,,,<span class=\"string\">\"【支付宝】eric.w…向您付款500.00元,已存入您的支付宝njh*@126.*，备注:实现网返款。详询 d.alipay.com/z\"</span></span><br></pre></td></tr></table></figure></p>\n<p>从两个文件的格式上可以看出来，手机原生可以识别的格式中有很多默认的字段，我们可以直接赋值，备份文件中有用的字段其实只要对应的”联系人”,”date”,”短信内容”三个列的字段，并且分别对应原生格式的”address”,”date”,(“date_sent”可以使用同一个值),”body”字段。</p>\n<p>于是乎我们只要编写一个简单的shell脚本处理一下即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">MYBACK=<span class=\"string\">\"./new.csv\"</span></span><br><span class=\"line\">RESULT=<span class=\"string\">\"./message.csv\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#把文件中的'`'和'\"'替换成空格</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s/\\`//g'</span> <span class=\"variable\">$&#123;MYBACK&#125;</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s/\\\"//g'</span> <span class=\"variable\">$&#123;MYBACK&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#写入文件头部</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'\"address\",\"person\",\"date\",\"date_sent\",\"protocol\",\"read\",\"status\",\"type\",\"reply_path_present\",\"subject\",\"service_center\",\"locked\",\"error_code\",\"seen\",\"body\"'</span> &gt; <span class=\"variable\">$&#123;RESULT&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line </span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t//对于其他软件备份的csv格式文件，请自行数一下对应的字段在第几列，替换一下即可</span><br><span class=\"line\">\taddress=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;line&#125;</span> | awk -F<span class=\"string\">','</span> <span class=\"string\">'&#123;print $3&#125;'</span>`</span><br><span class=\"line\">\tdate=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;line&#125;</span> | awk -F<span class=\"string\">','</span> <span class=\"string\">'&#123;print $8&#125;'</span>`</span><br><span class=\"line\">\tbody=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;line&#125;</span> | awk -F<span class=\"string\">','</span> <span class=\"string\">'&#123;print $11&#125;'</span>`</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$&#123;address&#125;</span>,,<span class=\"variable\">$&#123;date&#125;</span>,<span class=\"variable\">$&#123;date&#125;</span>,0,0,-1,1,0,,+8613800571553,0,0,1,<span class=\"variable\">$&#123;body&#125;</span>\"</span> &gt;&gt; <span class=\"variable\">$&#123;RESULT&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; ./new.csv</span><br></pre></td></tr></table></figure>\n<p>运行一把，当前目录下的message.csv文件就可以用来替换原生备份文件来恢复啦。</p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><p>如果拥有Linux环境的朋友想必不用说就知道怎么运行了，鉴于大部分网友并不具有Linux环境，因此先说一下怎么在win下面使用。</p>\n<ol>\n<li>安装Win下终端环境<br>点击下载安装<a href=\"http://projects.reficio.org/babun/download\" target=\"_blank\" rel=\"noopener\">Babun</a></li>\n<li>安装好以后打开babun<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//为方便起见，将备份资料拷贝到D盘下，并起名new.csv</span></span><br><span class=\"line\"><span class=\"comment\">//然后在D盘新建一个文本文档，将上一节的代码复制进去，并将后缀改为\".sh\"</span></span><br><span class=\"line\"><span class=\"comment\">//然后在babun中运行</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"keyword\">D</span>:</span><br><span class=\"line\">dos2unix.exe <span class=\"keyword\">gen</span>.<span class=\"keyword\">sh</span></span><br><span class=\"line\"><span class=\"keyword\">sh</span> <span class=\"keyword\">gen</span>.<span class=\"keyword\">sh</span></span><br><span class=\"line\"><span class=\"comment\">//运行完以后看看是不是生成了一个message.csv的新文件</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>替换以后就可以使用手机自带的备份软件恢复了。</p>","sticky":0},{"title":"mongodb数据备份与恢复","show":true,"date":"2016-06-08T04:45:22.000Z","_content":"#### MongoDB数据备份\n##### 1. 语法\n```\nmongodump -h dbhost -d dbname -c collection -o dbdirectory\n```\n- -h: mongodb所在服务器地址\n- -d: 需要备份的数据库实例名称，如test，如果不指定将备份所有的数据库\n- -c: 指定需要备份的数据表，如果不指定备份所有collection\n- -o: 数据备份存放的路径，如不存在需要提前建立，如：./backup，备份完成后备份数据会被存放在./backup/test\n\n##### 2. 示例\n```\nmongodump -d favlink -o ./favlinks\n```\n上述命令将本地数据库的favlink实例备份到当前路径的favlinks目录下，备份完成后的数据如图显示：\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f4nqfens68j20np01ydg6.jpg)\n\n<!-- more -->\n\n#### MongoDB数据恢复\n##### 1. 语法\n```\nmongorestore -h dbhost -d dbname -c collection --directoryperdb dbdirectory\n```\n以上参数同备份参数，`--directoryperdb`指明需要恢复的数据路径，如上述备份，恢复的时候需要指定为：`./backup/test`\n更多的参数可以通过`--help`查询。\n\n##### 2. 示例\n```\nmongorestore -d favlink --directoryperdb ./favlinks\n```\n上述命令将保存在当前路径下的favlink数据库恢复到本机mongodb数据库里。恢复完成后如图显示：\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1f4nqrkd0ddj20sr069mzf.jpg)\n","source":"_posts/mongodb-back-restore.md","raw":"title: mongodb数据备份与恢复\nshow: true\ndate: 2016-06-08 12:45:22\ntags: [mongodb,备份,恢复]\ncategories: 技术人生\n---\n#### MongoDB数据备份\n##### 1. 语法\n```\nmongodump -h dbhost -d dbname -c collection -o dbdirectory\n```\n- -h: mongodb所在服务器地址\n- -d: 需要备份的数据库实例名称，如test，如果不指定将备份所有的数据库\n- -c: 指定需要备份的数据表，如果不指定备份所有collection\n- -o: 数据备份存放的路径，如不存在需要提前建立，如：./backup，备份完成后备份数据会被存放在./backup/test\n\n##### 2. 示例\n```\nmongodump -d favlink -o ./favlinks\n```\n上述命令将本地数据库的favlink实例备份到当前路径的favlinks目录下，备份完成后的数据如图显示：\n![](http://ww4.sinaimg.cn/mw690/62d95157gw1f4nqfens68j20np01ydg6.jpg)\n\n<!-- more -->\n\n#### MongoDB数据恢复\n##### 1. 语法\n```\nmongorestore -h dbhost -d dbname -c collection --directoryperdb dbdirectory\n```\n以上参数同备份参数，`--directoryperdb`指明需要恢复的数据路径，如上述备份，恢复的时候需要指定为：`./backup/test`\n更多的参数可以通过`--help`查询。\n\n##### 2. 示例\n```\nmongorestore -d favlink --directoryperdb ./favlinks\n```\n上述命令将保存在当前路径下的favlink数据库恢复到本机mongodb数据库里。恢复完成后如图显示：\n![](http://ww1.sinaimg.cn/mw690/62d95157gw1f4nqrkd0ddj20sr069mzf.jpg)\n","slug":"mongodb-back-restore","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzwg004ofnpvrvc9yh7u","content":"<h4 id=\"MongoDB数据备份\"><a href=\"#MongoDB数据备份\" class=\"headerlink\" title=\"MongoDB数据备份\"></a>MongoDB数据备份</h4><h5 id=\"1-语法\"><a href=\"#1-语法\" class=\"headerlink\" title=\"1. 语法\"></a>1. 语法</h5><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">mongodump -h dbhost -d dbname -c collection -o dbdirectory</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>-h: mongodb所在服务器地址</li>\n<li>-d: 需要备份的数据库实例名称，如test，如果不指定将备份所有的数据库</li>\n<li>-c: 指定需要备份的数据表，如果不指定备份所有collection</li>\n<li>-o: 数据备份存放的路径，如不存在需要提前建立，如：./backup，备份完成后备份数据会被存放在./backup/test</li>\n</ul>\n<h5 id=\"2-示例\"><a href=\"#2-示例\" class=\"headerlink\" title=\"2. 示例\"></a>2. 示例</h5><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongodump -d favlink -o <span class=\"string\">./favlinks</span></span><br></pre></td></tr></table></figure>\n<p>上述命令将本地数据库的favlink实例备份到当前路径的favlinks目录下，备份完成后的数据如图显示：<br><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f4nqfens68j20np01ydg6.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h4 id=\"MongoDB数据恢复\"><a href=\"#MongoDB数据恢复\" class=\"headerlink\" title=\"MongoDB数据恢复\"></a>MongoDB数据恢复</h4><h5 id=\"1-语法-1\"><a href=\"#1-语法-1\" class=\"headerlink\" title=\"1. 语法\"></a>1. 语法</h5><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongorestore -h dbhost -d dbname -c collection <span class=\"comment\">--directoryperdb dbdirectory</span></span><br></pre></td></tr></table></figure>\n<p>以上参数同备份参数，<code>--directoryperdb</code>指明需要恢复的数据路径，如上述备份，恢复的时候需要指定为：<code>./backup/test</code><br>更多的参数可以通过<code>--help</code>查询。</p>\n<h5 id=\"2-示例-1\"><a href=\"#2-示例-1\" class=\"headerlink\" title=\"2. 示例\"></a>2. 示例</h5><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongorestore -d favlink <span class=\"params\">--directoryperdb</span> <span class=\"string\">./favlinks</span></span><br></pre></td></tr></table></figure>\n<p>上述命令将保存在当前路径下的favlink数据库恢复到本机mongodb数据库里。恢复完成后如图显示：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1f4nqrkd0ddj20sr069mzf.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"MongoDB数据备份\"><a href=\"#MongoDB数据备份\" class=\"headerlink\" title=\"MongoDB数据备份\"></a>MongoDB数据备份</h4><h5 id=\"1-语法\"><a href=\"#1-语法\" class=\"headerlink\" title=\"1. 语法\"></a>1. 语法</h5><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">mongodump -h dbhost -d dbname -c collection -o dbdirectory</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>-h: mongodb所在服务器地址</li>\n<li>-d: 需要备份的数据库实例名称，如test，如果不指定将备份所有的数据库</li>\n<li>-c: 指定需要备份的数据表，如果不指定备份所有collection</li>\n<li>-o: 数据备份存放的路径，如不存在需要提前建立，如：./backup，备份完成后备份数据会被存放在./backup/test</li>\n</ul>\n<h5 id=\"2-示例\"><a href=\"#2-示例\" class=\"headerlink\" title=\"2. 示例\"></a>2. 示例</h5><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongodump -d favlink -o <span class=\"string\">./favlinks</span></span><br></pre></td></tr></table></figure>\n<p>上述命令将本地数据库的favlink实例备份到当前路径的favlinks目录下，备份完成后的数据如图显示：<br><img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1f4nqfens68j20np01ydg6.jpg\" alt=\"\"></p>","more":"<h4 id=\"MongoDB数据恢复\"><a href=\"#MongoDB数据恢复\" class=\"headerlink\" title=\"MongoDB数据恢复\"></a>MongoDB数据恢复</h4><h5 id=\"1-语法-1\"><a href=\"#1-语法-1\" class=\"headerlink\" title=\"1. 语法\"></a>1. 语法</h5><figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongorestore -h dbhost -d dbname -c collection <span class=\"comment\">--directoryperdb dbdirectory</span></span><br></pre></td></tr></table></figure>\n<p>以上参数同备份参数，<code>--directoryperdb</code>指明需要恢复的数据路径，如上述备份，恢复的时候需要指定为：<code>./backup/test</code><br>更多的参数可以通过<code>--help</code>查询。</p>\n<h5 id=\"2-示例-1\"><a href=\"#2-示例-1\" class=\"headerlink\" title=\"2. 示例\"></a>2. 示例</h5><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongorestore -d favlink <span class=\"params\">--directoryperdb</span> <span class=\"string\">./favlinks</span></span><br></pre></td></tr></table></figure>\n<p>上述命令将保存在当前路径下的favlink数据库恢复到本机mongodb数据库里。恢复完成后如图显示：<br><img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1f4nqrkd0ddj20sr069mzf.jpg\" alt=\"\"></p>","sticky":0},{"title":"mongoose更新所有命中的文档","show":true,"date":"2015-12-21T08:44:27.000Z","_content":"#### 背景\n我的mongodb数据库通过mongoose读写，自定义了mongoose的读写接口。之前的历史数据在写的时候由于一个小bug，导致插入的数据id字段都一样（本来是作为主键区分数据的）。\n于是在修改数据的时候，使用id就不可用了，因此额外写了个脚本想批量将这些历史数据订正。\n结果在实际运行的过程中发现，总是有数据不生效，反复调试了很长时间，最终怀疑是更新时只更新到了第一次匹配的数据，而后实践表明确实如此。\n写完mongoose读写接口之后就再也没有研究mongoose了，对mongoose API不熟悉了。。这篇文档以为记。\n\n#### 解决方法\nmongoose的[**API**](http://mongoosejs.com/docs/api.html#model_Model.update)里写到mongoose的update方法使用方法如下：\n```js\nModel.update(conditions, doc, [options], [callback])\n```\n\n<!--more-->\n\n参数均json格式，conditions为命中条件，doc为待更新的目标文档，options是可选条件，callback为更新成功后操作。\n这里可选的options操作我在封装的读写接口里置空了，要更新全部匹配的文档则需要利用到options可选条件。\n\n此处，options的合法选项有(取值均为boolean)：\n```js\n safe      （默认true）\n upsert    （默认false，如果文档不存在时是否自动创建）\n multi     （默认false，是否更新多个匹配文档） <-- 解决该问题所需用到的条件\n strict    （默认true，确保不会把scheme中没有定义的值写入数据库）\n overwrite （默认false，允许覆写）\n```\n\n了解到这些，于是解决方案呼之欲出：\n将更新命令中的options条件改为:`{multi: true}`\n","source":"_posts/mongoose-update-all.md","raw":"title: mongoose更新所有命中的文档\nshow: true\ndate: 2015-12-21 16:44:27\ntags: [mongodb,mongoose,update all]\ncategories: 技术人生\n---\n#### 背景\n我的mongodb数据库通过mongoose读写，自定义了mongoose的读写接口。之前的历史数据在写的时候由于一个小bug，导致插入的数据id字段都一样（本来是作为主键区分数据的）。\n于是在修改数据的时候，使用id就不可用了，因此额外写了个脚本想批量将这些历史数据订正。\n结果在实际运行的过程中发现，总是有数据不生效，反复调试了很长时间，最终怀疑是更新时只更新到了第一次匹配的数据，而后实践表明确实如此。\n写完mongoose读写接口之后就再也没有研究mongoose了，对mongoose API不熟悉了。。这篇文档以为记。\n\n#### 解决方法\nmongoose的[**API**](http://mongoosejs.com/docs/api.html#model_Model.update)里写到mongoose的update方法使用方法如下：\n```js\nModel.update(conditions, doc, [options], [callback])\n```\n\n<!--more-->\n\n参数均json格式，conditions为命中条件，doc为待更新的目标文档，options是可选条件，callback为更新成功后操作。\n这里可选的options操作我在封装的读写接口里置空了，要更新全部匹配的文档则需要利用到options可选条件。\n\n此处，options的合法选项有(取值均为boolean)：\n```js\n safe      （默认true）\n upsert    （默认false，如果文档不存在时是否自动创建）\n multi     （默认false，是否更新多个匹配文档） <-- 解决该问题所需用到的条件\n strict    （默认true，确保不会把scheme中没有定义的值写入数据库）\n overwrite （默认false，允许覆写）\n```\n\n了解到这些，于是解决方案呼之欲出：\n将更新命令中的options条件改为:`{multi: true}`\n","slug":"mongoose-update-all","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzwh004qfnpv5rjwhjp3","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>我的mongodb数据库通过mongoose读写，自定义了mongoose的读写接口。之前的历史数据在写的时候由于一个小bug，导致插入的数据id字段都一样（本来是作为主键区分数据的）。<br>于是在修改数据的时候，使用id就不可用了，因此额外写了个脚本想批量将这些历史数据订正。<br>结果在实际运行的过程中发现，总是有数据不生效，反复调试了很长时间，最终怀疑是更新时只更新到了第一次匹配的数据，而后实践表明确实如此。<br>写完mongoose读写接口之后就再也没有研究mongoose了，对mongoose API不熟悉了。。这篇文档以为记。</p>\n<h4 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h4><p>mongoose的<a href=\"http://mongoosejs.com/docs/api.html#model_Model.update\" target=\"_blank\" rel=\"noopener\"><strong>API</strong></a>里写到mongoose的update方法使用方法如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Model.update(conditions, doc, [options], [callback])</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>参数均json格式，conditions为命中条件，doc为待更新的目标文档，options是可选条件，callback为更新成功后操作。<br>这里可选的options操作我在封装的读写接口里置空了，要更新全部匹配的文档则需要利用到options可选条件。</p>\n<p>此处，options的合法选项有(取值均为boolean)：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">safe      （默认<span class=\"literal\">true</span>）</span><br><span class=\"line\">upsert    （默认<span class=\"literal\">false</span>，如果文档不存在时是否自动创建）</span><br><span class=\"line\">multi     （默认<span class=\"literal\">false</span>，是否更新多个匹配文档） &lt;-- 解决该问题所需用到的条件</span><br><span class=\"line\">strict    （默认<span class=\"literal\">true</span>，确保不会把scheme中没有定义的值写入数据库）</span><br><span class=\"line\">overwrite （默认<span class=\"literal\">false</span>，允许覆写）</span><br></pre></td></tr></table></figure></p>\n<p>了解到这些，于是解决方案呼之欲出：<br>将更新命令中的options条件改为:<code>{multi: true}</code></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>我的mongodb数据库通过mongoose读写，自定义了mongoose的读写接口。之前的历史数据在写的时候由于一个小bug，导致插入的数据id字段都一样（本来是作为主键区分数据的）。<br>于是在修改数据的时候，使用id就不可用了，因此额外写了个脚本想批量将这些历史数据订正。<br>结果在实际运行的过程中发现，总是有数据不生效，反复调试了很长时间，最终怀疑是更新时只更新到了第一次匹配的数据，而后实践表明确实如此。<br>写完mongoose读写接口之后就再也没有研究mongoose了，对mongoose API不熟悉了。。这篇文档以为记。</p>\n<h4 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h4><p>mongoose的<a href=\"http://mongoosejs.com/docs/api.html#model_Model.update\" target=\"_blank\" rel=\"noopener\"><strong>API</strong></a>里写到mongoose的update方法使用方法如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Model.update(conditions, doc, [options], [callback])</span><br></pre></td></tr></table></figure></p>","more":"<p>参数均json格式，conditions为命中条件，doc为待更新的目标文档，options是可选条件，callback为更新成功后操作。<br>这里可选的options操作我在封装的读写接口里置空了，要更新全部匹配的文档则需要利用到options可选条件。</p>\n<p>此处，options的合法选项有(取值均为boolean)：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">safe      （默认<span class=\"literal\">true</span>）</span><br><span class=\"line\">upsert    （默认<span class=\"literal\">false</span>，如果文档不存在时是否自动创建）</span><br><span class=\"line\">multi     （默认<span class=\"literal\">false</span>，是否更新多个匹配文档） &lt;-- 解决该问题所需用到的条件</span><br><span class=\"line\">strict    （默认<span class=\"literal\">true</span>，确保不会把scheme中没有定义的值写入数据库）</span><br><span class=\"line\">overwrite （默认<span class=\"literal\">false</span>，允许覆写）</span><br></pre></td></tr></table></figure></p>\n<p>了解到这些，于是解决方案呼之欲出：<br>将更新命令中的options条件改为:<code>{multi: true}</code></p>","sticky":0},{"title":"我的阅读-2015","date":"2015-12-28T11:13:06.000Z","show":true,"_content":"# 在读\n\n# 已读\n![古董局中局 4 : 大结局](http://img3.doubanio.com/lpic/s28340239.jpg)\n> 这大结局看着还是挺失落的 果然是架构铺的太大bug就多了。掉了好些年的老朝奉胃口，铺垫了的好多伏笔，最后的解释没能生出“老朝奉原来是他”的感叹，而是一种不给力的感觉，仿佛这个老朝奉是被栽赃的一样。。anyway，除去结局释疑不够给力，亲王这书还是看的挺下饭的。\n\n![夭折](https://img3.doubanio.com/lpic/s28280322.jpg)\n> 很可怕的一个故事，人的出生真的是带着宿命。。\n\n![忏悔录](http://img3.doubanio.com/lpic/s28215148.jpg)\n> 这本书读完很压抑，读的时候即如是。我们每一个人都曾思考过人生的意义，然而多数情况下都是寻找不到答案。年长的人告诉我们，不要思考什么意义，那会走火入魔的。于是在渐渐成长的过程中，我们逐渐向这个人生终极的问题妥协，步入并适应了这个古往今来人类既定的模式中生活，只管生活不管意义。可是每当夜深人静，生活苦闷时，那股压抑在心底的欲望偶尔会升起：人生到底有什么意义？我活着就是要走一遍世上无数人已经都走过一遍的路吗？从呱呱坠地，到求学工作，娶妻生子再逐步步入死亡？找不到意义，这个问题就像幽灵一般萦绕在心底，时不时地如毒蛇般出来噬咬你一口。托翁在这本薄薄的小册子里最终以一个怀疑论者的态度“皈依”了宗教信仰，“只有信仰才可得活”，这个观点与我是万万不能接受的。但我也不能接受那种“生命的过程就是生命的意义”的观点，这种观点通俗地说就是，好好过天就是人生最大的意义，这其实也是一种妥协，没有任何实质的探究，毕竟是先有了生命才有生命的过程，于是为何会有生命？这种不知为何而活的浑浑噩噩状态让托翁萌生自杀的念头，我没那么极端，倒是有点悲观厌世。后来在阅读一些科幻小说的过程中得到点启示，个人的生命放之于人类基因永续传播的长河中来看，何其的卑微缥缈，而人类对抗时间的唯一武器就是不断的传递自己的基因，让基因与时间一起永恒。说白了，人只是基因的工具，人类认识自身发现未知才是人类存在的意义吧？而个体只有在作为一个整体时意义才“涌现”出来吧。\n\n![三国史话](http://img3.doubanio.com/lpic/s27467851.jpg)\n>三国史话，在吃饭睡前等零碎时间内看完，篇尾几则文言附录一则跟前白话正文多有重复，二则实在是看的犯困并未看完。三国史由于在演义的熏陶下，可以说是国人最为熟悉热衷的一段历史。作者在这篇史话里另辟蹊径，就演义、后汉书、三国志等的观点予以了一定反驳，剖析东汉乱源，给曹操、魏延翻案，给 刘备、周瑜、邓艾、钟会等提出了与通俗见解不一致的解读，倒是未提及赵云、黄忠半字。。\n>关于道教张天师与张角老子关系的分析也是相当有趣。\n>读史以明志，看完印象较深的属说刘备工于心计丢荆州失鼎立均势的评语：所以心计过工，有时也会成为失败的原因，真个阅历多的人，倒觉得凡事还是少用机谋，依着正义而行的好了。\n\n<!--more-->\n![编写高质量代码 : Web前端开发修炼之道](http://img3.doubanio.com/lpic/s4388771.jpg)\n>前半关于html，css的规范、组织方式等讲的非常好，对我在工作中的实践起了很大作用，后半关于js的写的有点乱，走马观花的看了看。\n\n![河神1·鬼水怪谈](http://img3.doubanio.com/lpic/s24525658.jpg)\n> 志怪小说的一个吸引人之处在于:传奇接地气。\n\n![全端web开发](http://img3.doubanio.com/lpic/s28147538.jpg)\n> 挂羊头卖狗肉\n\n![无言的宇宙 : 隐藏在24个数学公式背后的故事](http://img3.doubanio.com/lpic/s28045752.jpg)\n>一本拿得起放不下的数学科普书。\n\n![来到地球第一天 : 大象公会帮你“涨姿势](http://img3.doubanio.com/lpic/s27713599.jpg)\n>五花八门的知识杂货铺，喜欢这样的有趣的书。\n\n![Javascript语言精粹](http://img3.doubanio.com/lpic/s3651235.jpg)\n>很不错的js书，算是我系统学习js的第一本实体书了吧。\n\n![小通鉴](http://img3.doubanio.com/lpic/s27161347.jpg)\n>一边看古文，一边看冯唐个贱人借鉴来分析企业管理，不时爆粗。。\n\n![神们自己 : 关于平行宇宙的一切](http://img3.doubanio.com/lpic/s27882508.jpg)\n> 阿西莫夫对平行宇宙间强弱作用力的不同传递物质的设想以及第三部分从蛋宇宙获取能量同时弥补平行宇宙传递物质造成的力场变化的构思是本篇硬科幻的核心，最喜欢神们自己那部分，描述的平行世界生命扣人心弦是全篇读的最入味的一部分，乃至于最后还以为结尾时会再次写到他们，杜阿他们合体成长老伊斯特伍德的过程还没看明白呢！从这个角度来讲，缄默不言这部分真的是烂尾了啊。。大刘在三体里也是烂尾了，也许科幻太硬了真的不那么好收尾就跟悬疑小说一样。面对愚昧，神们自己，也缄口不言。\n\n![悖论 : 破解科学史上最复杂的9大谜团](http://img3.doubanio.com/lpic/s27661058.jpg)\n>说实话题材是很吸引人的，但是对于某些“悖论”的解释实在是看的云里雾里，不知道是翻译问题还是我知识储备不够抑或是作者本身写的不够直白明了。\n\n![为奴十二年](http://img3.doubanio.com/lpic/s27187979.jpg)\n>人类对同类的残忍不亚于对待动物。美国短短的几百年历史，前半是人奴役人的黑暗，后半是自由民主的光辉。人类最文明的自由之光诞生于人类最黑暗的历史废墟之上，让人不得不感慨人性的复杂。 \n\n![你一定爱读的极简欧洲史](http://img3.doubanio.com/lpic/s4542951.jpg)\n>科学、宗教，理性、浪漫，一本有趣的小书，了解欧洲的分分合合.\n\n![毕业](http://img3.doubanio.com/lpic/s10419106.jpg)\n>杀人动机比较弱，在我看来算是那种\"好像也没什么大不了嘛\"。算是看过的东野的推理书里，较为平淡的。不过书里散发的那种淡淡的毕业愁绪，倒是让我有点触动。\n\n![解忧杂货店](http://img3.doubanio.com/lpic/s27284878.jpg)\n>好的小说通常都闪耀着人性的光芒，这本加入书单已经一年多的小说在奔赴厦门的动车上终于看完，最后的结尾看的我热泪盈眶，已经很久没有这么多愁善感，只是这书散发的一种“迷之感动”让人实在是受不了。\n\n![变身](http://img3.doubanio.com/lpic/s3894009.jpg)\n>单论剧情，属于那种看着看着就能猜到的类型。像《鸟人计划》一样，东野表达了他对科技伦理的关注。\n\n![古董局中局3 : 掠宝清单](http://img3.doubanio.com/lpic/s27963366.jpg)\n>老朝奉究竟是谁！！！\n\n![古董局中局 2 : 清明上河图之谜](http://img3.doubanio.com/lpic/s27034669.jpg)\n>如果记得不错，亲王在本书里面写了点黄段子。。\n\n![古董局中局](http://img3.doubanio.com/lpic/s20757334.jpg)\n>很是吸引人啊，怎么没有导演买版权拍电影\n\n![鸟人计划](http://img3.doubanio.com/lpic/s6379400.jpg)\n>不到最后一刻，猜不透凶手是谁，动机、手法均让人琢磨不到。\n\n![Node.js实战](http://img3.doubanio.com/lpic/s27264241.jpg)\n>作为一个有nodejs基础的web开发者(\"有自己的nodejs写的网站\")，很遗憾我并没有从这本书里学到更多的东西。而且语言谈不上晦涩，但读起来总是不顺畅的感觉，也许是翻译的问题吧。书里的代码看到有些觉得有趣可以一试的，结果运行不通过。。。so，在我看来不算是本好书吧。\n\n# 弃读\n![物理世界奇遇记](http://img3.doubanio.com/lpic/s3090703.jpg)\n>冲伽莫夫来看的，不过目前已经弃读，毕竟是上世纪70年代的书了，有点老旧，内容大抵上就量子力学、相对论那么些，只是行文相对浅入浅出，没什么吸引力了。\n\n![哥德尔、艾舍尔、巴赫](http://img3.doubanio.com/lpic/s1789059.jpg)\n>副标题：集异壁之大成，主要是被名字吸引了。原来以为是个什么的集大成，结果集异壁是GEB，这仨哥的名字缩写。书是奇书，奈何我看不懂，本来以为是科普，原来是讲形式系统的，那一套形式系统看的犹如天书。。。\n\n","source":"_posts/myreading-2015.md","raw":"title: 我的阅读-2015\ndate: 2015-12-28 19:13:06\ntags: 阅读\ncategories: 阅历\nshow: true\n---\n# 在读\n\n# 已读\n![古董局中局 4 : 大结局](http://img3.doubanio.com/lpic/s28340239.jpg)\n> 这大结局看着还是挺失落的 果然是架构铺的太大bug就多了。掉了好些年的老朝奉胃口，铺垫了的好多伏笔，最后的解释没能生出“老朝奉原来是他”的感叹，而是一种不给力的感觉，仿佛这个老朝奉是被栽赃的一样。。anyway，除去结局释疑不够给力，亲王这书还是看的挺下饭的。\n\n![夭折](https://img3.doubanio.com/lpic/s28280322.jpg)\n> 很可怕的一个故事，人的出生真的是带着宿命。。\n\n![忏悔录](http://img3.doubanio.com/lpic/s28215148.jpg)\n> 这本书读完很压抑，读的时候即如是。我们每一个人都曾思考过人生的意义，然而多数情况下都是寻找不到答案。年长的人告诉我们，不要思考什么意义，那会走火入魔的。于是在渐渐成长的过程中，我们逐渐向这个人生终极的问题妥协，步入并适应了这个古往今来人类既定的模式中生活，只管生活不管意义。可是每当夜深人静，生活苦闷时，那股压抑在心底的欲望偶尔会升起：人生到底有什么意义？我活着就是要走一遍世上无数人已经都走过一遍的路吗？从呱呱坠地，到求学工作，娶妻生子再逐步步入死亡？找不到意义，这个问题就像幽灵一般萦绕在心底，时不时地如毒蛇般出来噬咬你一口。托翁在这本薄薄的小册子里最终以一个怀疑论者的态度“皈依”了宗教信仰，“只有信仰才可得活”，这个观点与我是万万不能接受的。但我也不能接受那种“生命的过程就是生命的意义”的观点，这种观点通俗地说就是，好好过天就是人生最大的意义，这其实也是一种妥协，没有任何实质的探究，毕竟是先有了生命才有生命的过程，于是为何会有生命？这种不知为何而活的浑浑噩噩状态让托翁萌生自杀的念头，我没那么极端，倒是有点悲观厌世。后来在阅读一些科幻小说的过程中得到点启示，个人的生命放之于人类基因永续传播的长河中来看，何其的卑微缥缈，而人类对抗时间的唯一武器就是不断的传递自己的基因，让基因与时间一起永恒。说白了，人只是基因的工具，人类认识自身发现未知才是人类存在的意义吧？而个体只有在作为一个整体时意义才“涌现”出来吧。\n\n![三国史话](http://img3.doubanio.com/lpic/s27467851.jpg)\n>三国史话，在吃饭睡前等零碎时间内看完，篇尾几则文言附录一则跟前白话正文多有重复，二则实在是看的犯困并未看完。三国史由于在演义的熏陶下，可以说是国人最为熟悉热衷的一段历史。作者在这篇史话里另辟蹊径，就演义、后汉书、三国志等的观点予以了一定反驳，剖析东汉乱源，给曹操、魏延翻案，给 刘备、周瑜、邓艾、钟会等提出了与通俗见解不一致的解读，倒是未提及赵云、黄忠半字。。\n>关于道教张天师与张角老子关系的分析也是相当有趣。\n>读史以明志，看完印象较深的属说刘备工于心计丢荆州失鼎立均势的评语：所以心计过工，有时也会成为失败的原因，真个阅历多的人，倒觉得凡事还是少用机谋，依着正义而行的好了。\n\n<!--more-->\n![编写高质量代码 : Web前端开发修炼之道](http://img3.doubanio.com/lpic/s4388771.jpg)\n>前半关于html，css的规范、组织方式等讲的非常好，对我在工作中的实践起了很大作用，后半关于js的写的有点乱，走马观花的看了看。\n\n![河神1·鬼水怪谈](http://img3.doubanio.com/lpic/s24525658.jpg)\n> 志怪小说的一个吸引人之处在于:传奇接地气。\n\n![全端web开发](http://img3.doubanio.com/lpic/s28147538.jpg)\n> 挂羊头卖狗肉\n\n![无言的宇宙 : 隐藏在24个数学公式背后的故事](http://img3.doubanio.com/lpic/s28045752.jpg)\n>一本拿得起放不下的数学科普书。\n\n![来到地球第一天 : 大象公会帮你“涨姿势](http://img3.doubanio.com/lpic/s27713599.jpg)\n>五花八门的知识杂货铺，喜欢这样的有趣的书。\n\n![Javascript语言精粹](http://img3.doubanio.com/lpic/s3651235.jpg)\n>很不错的js书，算是我系统学习js的第一本实体书了吧。\n\n![小通鉴](http://img3.doubanio.com/lpic/s27161347.jpg)\n>一边看古文，一边看冯唐个贱人借鉴来分析企业管理，不时爆粗。。\n\n![神们自己 : 关于平行宇宙的一切](http://img3.doubanio.com/lpic/s27882508.jpg)\n> 阿西莫夫对平行宇宙间强弱作用力的不同传递物质的设想以及第三部分从蛋宇宙获取能量同时弥补平行宇宙传递物质造成的力场变化的构思是本篇硬科幻的核心，最喜欢神们自己那部分，描述的平行世界生命扣人心弦是全篇读的最入味的一部分，乃至于最后还以为结尾时会再次写到他们，杜阿他们合体成长老伊斯特伍德的过程还没看明白呢！从这个角度来讲，缄默不言这部分真的是烂尾了啊。。大刘在三体里也是烂尾了，也许科幻太硬了真的不那么好收尾就跟悬疑小说一样。面对愚昧，神们自己，也缄口不言。\n\n![悖论 : 破解科学史上最复杂的9大谜团](http://img3.doubanio.com/lpic/s27661058.jpg)\n>说实话题材是很吸引人的，但是对于某些“悖论”的解释实在是看的云里雾里，不知道是翻译问题还是我知识储备不够抑或是作者本身写的不够直白明了。\n\n![为奴十二年](http://img3.doubanio.com/lpic/s27187979.jpg)\n>人类对同类的残忍不亚于对待动物。美国短短的几百年历史，前半是人奴役人的黑暗，后半是自由民主的光辉。人类最文明的自由之光诞生于人类最黑暗的历史废墟之上，让人不得不感慨人性的复杂。 \n\n![你一定爱读的极简欧洲史](http://img3.doubanio.com/lpic/s4542951.jpg)\n>科学、宗教，理性、浪漫，一本有趣的小书，了解欧洲的分分合合.\n\n![毕业](http://img3.doubanio.com/lpic/s10419106.jpg)\n>杀人动机比较弱，在我看来算是那种\"好像也没什么大不了嘛\"。算是看过的东野的推理书里，较为平淡的。不过书里散发的那种淡淡的毕业愁绪，倒是让我有点触动。\n\n![解忧杂货店](http://img3.doubanio.com/lpic/s27284878.jpg)\n>好的小说通常都闪耀着人性的光芒，这本加入书单已经一年多的小说在奔赴厦门的动车上终于看完，最后的结尾看的我热泪盈眶，已经很久没有这么多愁善感，只是这书散发的一种“迷之感动”让人实在是受不了。\n\n![变身](http://img3.doubanio.com/lpic/s3894009.jpg)\n>单论剧情，属于那种看着看着就能猜到的类型。像《鸟人计划》一样，东野表达了他对科技伦理的关注。\n\n![古董局中局3 : 掠宝清单](http://img3.doubanio.com/lpic/s27963366.jpg)\n>老朝奉究竟是谁！！！\n\n![古董局中局 2 : 清明上河图之谜](http://img3.doubanio.com/lpic/s27034669.jpg)\n>如果记得不错，亲王在本书里面写了点黄段子。。\n\n![古董局中局](http://img3.doubanio.com/lpic/s20757334.jpg)\n>很是吸引人啊，怎么没有导演买版权拍电影\n\n![鸟人计划](http://img3.doubanio.com/lpic/s6379400.jpg)\n>不到最后一刻，猜不透凶手是谁，动机、手法均让人琢磨不到。\n\n![Node.js实战](http://img3.doubanio.com/lpic/s27264241.jpg)\n>作为一个有nodejs基础的web开发者(\"有自己的nodejs写的网站\")，很遗憾我并没有从这本书里学到更多的东西。而且语言谈不上晦涩，但读起来总是不顺畅的感觉，也许是翻译的问题吧。书里的代码看到有些觉得有趣可以一试的，结果运行不通过。。。so，在我看来不算是本好书吧。\n\n# 弃读\n![物理世界奇遇记](http://img3.doubanio.com/lpic/s3090703.jpg)\n>冲伽莫夫来看的，不过目前已经弃读，毕竟是上世纪70年代的书了，有点老旧，内容大抵上就量子力学、相对论那么些，只是行文相对浅入浅出，没什么吸引力了。\n\n![哥德尔、艾舍尔、巴赫](http://img3.doubanio.com/lpic/s1789059.jpg)\n>副标题：集异壁之大成，主要是被名字吸引了。原来以为是个什么的集大成，结果集异壁是GEB，这仨哥的名字缩写。书是奇书，奈何我看不懂，本来以为是科普，原来是讲形式系统的，那一套形式系统看的犹如天书。。。\n\n","slug":"myreading-2015","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzwj004sfnpvnoo37dpx","content":"<h1 id=\"在读\"><a href=\"#在读\" class=\"headerlink\" title=\"在读\"></a>在读</h1><h1 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h1><p><img src=\"http://img3.doubanio.com/lpic/s28340239.jpg\" alt=\"古董局中局 4 : 大结局\"></p>\n<blockquote>\n<p>这大结局看着还是挺失落的 果然是架构铺的太大bug就多了。掉了好些年的老朝奉胃口，铺垫了的好多伏笔，最后的解释没能生出“老朝奉原来是他”的感叹，而是一种不给力的感觉，仿佛这个老朝奉是被栽赃的一样。。anyway，除去结局释疑不够给力，亲王这书还是看的挺下饭的。</p>\n</blockquote>\n<p><img src=\"https://img3.doubanio.com/lpic/s28280322.jpg\" alt=\"夭折\"></p>\n<blockquote>\n<p>很可怕的一个故事，人的出生真的是带着宿命。。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s28215148.jpg\" alt=\"忏悔录\"></p>\n<blockquote>\n<p>这本书读完很压抑，读的时候即如是。我们每一个人都曾思考过人生的意义，然而多数情况下都是寻找不到答案。年长的人告诉我们，不要思考什么意义，那会走火入魔的。于是在渐渐成长的过程中，我们逐渐向这个人生终极的问题妥协，步入并适应了这个古往今来人类既定的模式中生活，只管生活不管意义。可是每当夜深人静，生活苦闷时，那股压抑在心底的欲望偶尔会升起：人生到底有什么意义？我活着就是要走一遍世上无数人已经都走过一遍的路吗？从呱呱坠地，到求学工作，娶妻生子再逐步步入死亡？找不到意义，这个问题就像幽灵一般萦绕在心底，时不时地如毒蛇般出来噬咬你一口。托翁在这本薄薄的小册子里最终以一个怀疑论者的态度“皈依”了宗教信仰，“只有信仰才可得活”，这个观点与我是万万不能接受的。但我也不能接受那种“生命的过程就是生命的意义”的观点，这种观点通俗地说就是，好好过天就是人生最大的意义，这其实也是一种妥协，没有任何实质的探究，毕竟是先有了生命才有生命的过程，于是为何会有生命？这种不知为何而活的浑浑噩噩状态让托翁萌生自杀的念头，我没那么极端，倒是有点悲观厌世。后来在阅读一些科幻小说的过程中得到点启示，个人的生命放之于人类基因永续传播的长河中来看，何其的卑微缥缈，而人类对抗时间的唯一武器就是不断的传递自己的基因，让基因与时间一起永恒。说白了，人只是基因的工具，人类认识自身发现未知才是人类存在的意义吧？而个体只有在作为一个整体时意义才“涌现”出来吧。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27467851.jpg\" alt=\"三国史话\"></p>\n<blockquote>\n<p>三国史话，在吃饭睡前等零碎时间内看完，篇尾几则文言附录一则跟前白话正文多有重复，二则实在是看的犯困并未看完。三国史由于在演义的熏陶下，可以说是国人最为熟悉热衷的一段历史。作者在这篇史话里另辟蹊径，就演义、后汉书、三国志等的观点予以了一定反驳，剖析东汉乱源，给曹操、魏延翻案，给 刘备、周瑜、邓艾、钟会等提出了与通俗见解不一致的解读，倒是未提及赵云、黄忠半字。。<br>关于道教张天师与张角老子关系的分析也是相当有趣。<br>读史以明志，看完印象较深的属说刘备工于心计丢荆州失鼎立均势的评语：所以心计过工，有时也会成为失败的原因，真个阅历多的人，倒觉得凡事还是少用机谋，依着正义而行的好了。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p><img src=\"http://img3.doubanio.com/lpic/s4388771.jpg\" alt=\"编写高质量代码 : Web前端开发修炼之道\"></p>\n<blockquote>\n<p>前半关于html，css的规范、组织方式等讲的非常好，对我在工作中的实践起了很大作用，后半关于js的写的有点乱，走马观花的看了看。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s24525658.jpg\" alt=\"河神1·鬼水怪谈\"></p>\n<blockquote>\n<p>志怪小说的一个吸引人之处在于:传奇接地气。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s28147538.jpg\" alt=\"全端web开发\"></p>\n<blockquote>\n<p>挂羊头卖狗肉</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s28045752.jpg\" alt=\"无言的宇宙 : 隐藏在24个数学公式背后的故事\"></p>\n<blockquote>\n<p>一本拿得起放不下的数学科普书。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27713599.jpg\" alt=\"来到地球第一天 : 大象公会帮你“涨姿势\"></p>\n<blockquote>\n<p>五花八门的知识杂货铺，喜欢这样的有趣的书。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s3651235.jpg\" alt=\"Javascript语言精粹\"></p>\n<blockquote>\n<p>很不错的js书，算是我系统学习js的第一本实体书了吧。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27161347.jpg\" alt=\"小通鉴\"></p>\n<blockquote>\n<p>一边看古文，一边看冯唐个贱人借鉴来分析企业管理，不时爆粗。。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27882508.jpg\" alt=\"神们自己 : 关于平行宇宙的一切\"></p>\n<blockquote>\n<p>阿西莫夫对平行宇宙间强弱作用力的不同传递物质的设想以及第三部分从蛋宇宙获取能量同时弥补平行宇宙传递物质造成的力场变化的构思是本篇硬科幻的核心，最喜欢神们自己那部分，描述的平行世界生命扣人心弦是全篇读的最入味的一部分，乃至于最后还以为结尾时会再次写到他们，杜阿他们合体成长老伊斯特伍德的过程还没看明白呢！从这个角度来讲，缄默不言这部分真的是烂尾了啊。。大刘在三体里也是烂尾了，也许科幻太硬了真的不那么好收尾就跟悬疑小说一样。面对愚昧，神们自己，也缄口不言。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27661058.jpg\" alt=\"悖论 : 破解科学史上最复杂的9大谜团\"></p>\n<blockquote>\n<p>说实话题材是很吸引人的，但是对于某些“悖论”的解释实在是看的云里雾里，不知道是翻译问题还是我知识储备不够抑或是作者本身写的不够直白明了。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27187979.jpg\" alt=\"为奴十二年\"></p>\n<blockquote>\n<p>人类对同类的残忍不亚于对待动物。美国短短的几百年历史，前半是人奴役人的黑暗，后半是自由民主的光辉。人类最文明的自由之光诞生于人类最黑暗的历史废墟之上，让人不得不感慨人性的复杂。 </p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s4542951.jpg\" alt=\"你一定爱读的极简欧洲史\"></p>\n<blockquote>\n<p>科学、宗教，理性、浪漫，一本有趣的小书，了解欧洲的分分合合.</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s10419106.jpg\" alt=\"毕业\"></p>\n<blockquote>\n<p>杀人动机比较弱，在我看来算是那种”好像也没什么大不了嘛”。算是看过的东野的推理书里，较为平淡的。不过书里散发的那种淡淡的毕业愁绪，倒是让我有点触动。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27284878.jpg\" alt=\"解忧杂货店\"></p>\n<blockquote>\n<p>好的小说通常都闪耀着人性的光芒，这本加入书单已经一年多的小说在奔赴厦门的动车上终于看完，最后的结尾看的我热泪盈眶，已经很久没有这么多愁善感，只是这书散发的一种“迷之感动”让人实在是受不了。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s3894009.jpg\" alt=\"变身\"></p>\n<blockquote>\n<p>单论剧情，属于那种看着看着就能猜到的类型。像《鸟人计划》一样，东野表达了他对科技伦理的关注。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27963366.jpg\" alt=\"古董局中局3 : 掠宝清单\"></p>\n<blockquote>\n<p>老朝奉究竟是谁！！！</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27034669.jpg\" alt=\"古董局中局 2 : 清明上河图之谜\"></p>\n<blockquote>\n<p>如果记得不错，亲王在本书里面写了点黄段子。。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s20757334.jpg\" alt=\"古董局中局\"></p>\n<blockquote>\n<p>很是吸引人啊，怎么没有导演买版权拍电影</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s6379400.jpg\" alt=\"鸟人计划\"></p>\n<blockquote>\n<p>不到最后一刻，猜不透凶手是谁，动机、手法均让人琢磨不到。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27264241.jpg\" alt=\"Node.js实战\"></p>\n<blockquote>\n<p>作为一个有nodejs基础的web开发者(“有自己的nodejs写的网站”)，很遗憾我并没有从这本书里学到更多的东西。而且语言谈不上晦涩，但读起来总是不顺畅的感觉，也许是翻译的问题吧。书里的代码看到有些觉得有趣可以一试的，结果运行不通过。。。so，在我看来不算是本好书吧。</p>\n</blockquote>\n<h1 id=\"弃读\"><a href=\"#弃读\" class=\"headerlink\" title=\"弃读\"></a>弃读</h1><p><img src=\"http://img3.doubanio.com/lpic/s3090703.jpg\" alt=\"物理世界奇遇记\"></p>\n<blockquote>\n<p>冲伽莫夫来看的，不过目前已经弃读，毕竟是上世纪70年代的书了，有点老旧，内容大抵上就量子力学、相对论那么些，只是行文相对浅入浅出，没什么吸引力了。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s1789059.jpg\" alt=\"哥德尔、艾舍尔、巴赫\"></p>\n<blockquote>\n<p>副标题：集异壁之大成，主要是被名字吸引了。原来以为是个什么的集大成，结果集异壁是GEB，这仨哥的名字缩写。书是奇书，奈何我看不懂，本来以为是科普，原来是讲形式系统的，那一套形式系统看的犹如天书。。。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"在读\"><a href=\"#在读\" class=\"headerlink\" title=\"在读\"></a>在读</h1><h1 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h1><p><img src=\"http://img3.doubanio.com/lpic/s28340239.jpg\" alt=\"古董局中局 4 : 大结局\"></p>\n<blockquote>\n<p>这大结局看着还是挺失落的 果然是架构铺的太大bug就多了。掉了好些年的老朝奉胃口，铺垫了的好多伏笔，最后的解释没能生出“老朝奉原来是他”的感叹，而是一种不给力的感觉，仿佛这个老朝奉是被栽赃的一样。。anyway，除去结局释疑不够给力，亲王这书还是看的挺下饭的。</p>\n</blockquote>\n<p><img src=\"https://img3.doubanio.com/lpic/s28280322.jpg\" alt=\"夭折\"></p>\n<blockquote>\n<p>很可怕的一个故事，人的出生真的是带着宿命。。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s28215148.jpg\" alt=\"忏悔录\"></p>\n<blockquote>\n<p>这本书读完很压抑，读的时候即如是。我们每一个人都曾思考过人生的意义，然而多数情况下都是寻找不到答案。年长的人告诉我们，不要思考什么意义，那会走火入魔的。于是在渐渐成长的过程中，我们逐渐向这个人生终极的问题妥协，步入并适应了这个古往今来人类既定的模式中生活，只管生活不管意义。可是每当夜深人静，生活苦闷时，那股压抑在心底的欲望偶尔会升起：人生到底有什么意义？我活着就是要走一遍世上无数人已经都走过一遍的路吗？从呱呱坠地，到求学工作，娶妻生子再逐步步入死亡？找不到意义，这个问题就像幽灵一般萦绕在心底，时不时地如毒蛇般出来噬咬你一口。托翁在这本薄薄的小册子里最终以一个怀疑论者的态度“皈依”了宗教信仰，“只有信仰才可得活”，这个观点与我是万万不能接受的。但我也不能接受那种“生命的过程就是生命的意义”的观点，这种观点通俗地说就是，好好过天就是人生最大的意义，这其实也是一种妥协，没有任何实质的探究，毕竟是先有了生命才有生命的过程，于是为何会有生命？这种不知为何而活的浑浑噩噩状态让托翁萌生自杀的念头，我没那么极端，倒是有点悲观厌世。后来在阅读一些科幻小说的过程中得到点启示，个人的生命放之于人类基因永续传播的长河中来看，何其的卑微缥缈，而人类对抗时间的唯一武器就是不断的传递自己的基因，让基因与时间一起永恒。说白了，人只是基因的工具，人类认识自身发现未知才是人类存在的意义吧？而个体只有在作为一个整体时意义才“涌现”出来吧。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27467851.jpg\" alt=\"三国史话\"></p>\n<blockquote>\n<p>三国史话，在吃饭睡前等零碎时间内看完，篇尾几则文言附录一则跟前白话正文多有重复，二则实在是看的犯困并未看完。三国史由于在演义的熏陶下，可以说是国人最为熟悉热衷的一段历史。作者在这篇史话里另辟蹊径，就演义、后汉书、三国志等的观点予以了一定反驳，剖析东汉乱源，给曹操、魏延翻案，给 刘备、周瑜、邓艾、钟会等提出了与通俗见解不一致的解读，倒是未提及赵云、黄忠半字。。<br>关于道教张天师与张角老子关系的分析也是相当有趣。<br>读史以明志，看完印象较深的属说刘备工于心计丢荆州失鼎立均势的评语：所以心计过工，有时也会成为失败的原因，真个阅历多的人，倒觉得凡事还是少用机谋，依着正义而行的好了。</p>\n</blockquote>","more":"<p><img src=\"http://img3.doubanio.com/lpic/s4388771.jpg\" alt=\"编写高质量代码 : Web前端开发修炼之道\"></p>\n<blockquote>\n<p>前半关于html，css的规范、组织方式等讲的非常好，对我在工作中的实践起了很大作用，后半关于js的写的有点乱，走马观花的看了看。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s24525658.jpg\" alt=\"河神1·鬼水怪谈\"></p>\n<blockquote>\n<p>志怪小说的一个吸引人之处在于:传奇接地气。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s28147538.jpg\" alt=\"全端web开发\"></p>\n<blockquote>\n<p>挂羊头卖狗肉</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s28045752.jpg\" alt=\"无言的宇宙 : 隐藏在24个数学公式背后的故事\"></p>\n<blockquote>\n<p>一本拿得起放不下的数学科普书。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27713599.jpg\" alt=\"来到地球第一天 : 大象公会帮你“涨姿势\"></p>\n<blockquote>\n<p>五花八门的知识杂货铺，喜欢这样的有趣的书。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s3651235.jpg\" alt=\"Javascript语言精粹\"></p>\n<blockquote>\n<p>很不错的js书，算是我系统学习js的第一本实体书了吧。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27161347.jpg\" alt=\"小通鉴\"></p>\n<blockquote>\n<p>一边看古文，一边看冯唐个贱人借鉴来分析企业管理，不时爆粗。。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27882508.jpg\" alt=\"神们自己 : 关于平行宇宙的一切\"></p>\n<blockquote>\n<p>阿西莫夫对平行宇宙间强弱作用力的不同传递物质的设想以及第三部分从蛋宇宙获取能量同时弥补平行宇宙传递物质造成的力场变化的构思是本篇硬科幻的核心，最喜欢神们自己那部分，描述的平行世界生命扣人心弦是全篇读的最入味的一部分，乃至于最后还以为结尾时会再次写到他们，杜阿他们合体成长老伊斯特伍德的过程还没看明白呢！从这个角度来讲，缄默不言这部分真的是烂尾了啊。。大刘在三体里也是烂尾了，也许科幻太硬了真的不那么好收尾就跟悬疑小说一样。面对愚昧，神们自己，也缄口不言。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27661058.jpg\" alt=\"悖论 : 破解科学史上最复杂的9大谜团\"></p>\n<blockquote>\n<p>说实话题材是很吸引人的，但是对于某些“悖论”的解释实在是看的云里雾里，不知道是翻译问题还是我知识储备不够抑或是作者本身写的不够直白明了。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27187979.jpg\" alt=\"为奴十二年\"></p>\n<blockquote>\n<p>人类对同类的残忍不亚于对待动物。美国短短的几百年历史，前半是人奴役人的黑暗，后半是自由民主的光辉。人类最文明的自由之光诞生于人类最黑暗的历史废墟之上，让人不得不感慨人性的复杂。 </p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s4542951.jpg\" alt=\"你一定爱读的极简欧洲史\"></p>\n<blockquote>\n<p>科学、宗教，理性、浪漫，一本有趣的小书，了解欧洲的分分合合.</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s10419106.jpg\" alt=\"毕业\"></p>\n<blockquote>\n<p>杀人动机比较弱，在我看来算是那种”好像也没什么大不了嘛”。算是看过的东野的推理书里，较为平淡的。不过书里散发的那种淡淡的毕业愁绪，倒是让我有点触动。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27284878.jpg\" alt=\"解忧杂货店\"></p>\n<blockquote>\n<p>好的小说通常都闪耀着人性的光芒，这本加入书单已经一年多的小说在奔赴厦门的动车上终于看完，最后的结尾看的我热泪盈眶，已经很久没有这么多愁善感，只是这书散发的一种“迷之感动”让人实在是受不了。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s3894009.jpg\" alt=\"变身\"></p>\n<blockquote>\n<p>单论剧情，属于那种看着看着就能猜到的类型。像《鸟人计划》一样，东野表达了他对科技伦理的关注。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27963366.jpg\" alt=\"古董局中局3 : 掠宝清单\"></p>\n<blockquote>\n<p>老朝奉究竟是谁！！！</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27034669.jpg\" alt=\"古董局中局 2 : 清明上河图之谜\"></p>\n<blockquote>\n<p>如果记得不错，亲王在本书里面写了点黄段子。。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s20757334.jpg\" alt=\"古董局中局\"></p>\n<blockquote>\n<p>很是吸引人啊，怎么没有导演买版权拍电影</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s6379400.jpg\" alt=\"鸟人计划\"></p>\n<blockquote>\n<p>不到最后一刻，猜不透凶手是谁，动机、手法均让人琢磨不到。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s27264241.jpg\" alt=\"Node.js实战\"></p>\n<blockquote>\n<p>作为一个有nodejs基础的web开发者(“有自己的nodejs写的网站”)，很遗憾我并没有从这本书里学到更多的东西。而且语言谈不上晦涩，但读起来总是不顺畅的感觉，也许是翻译的问题吧。书里的代码看到有些觉得有趣可以一试的，结果运行不通过。。。so，在我看来不算是本好书吧。</p>\n</blockquote>\n<h1 id=\"弃读\"><a href=\"#弃读\" class=\"headerlink\" title=\"弃读\"></a>弃读</h1><p><img src=\"http://img3.doubanio.com/lpic/s3090703.jpg\" alt=\"物理世界奇遇记\"></p>\n<blockquote>\n<p>冲伽莫夫来看的，不过目前已经弃读，毕竟是上世纪70年代的书了，有点老旧，内容大抵上就量子力学、相对论那么些，只是行文相对浅入浅出，没什么吸引力了。</p>\n</blockquote>\n<p><img src=\"http://img3.doubanio.com/lpic/s1789059.jpg\" alt=\"哥德尔、艾舍尔、巴赫\"></p>\n<blockquote>\n<p>副标题：集异壁之大成，主要是被名字吸引了。原来以为是个什么的集大成，结果集异壁是GEB，这仨哥的名字缩写。书是奇书，奈何我看不懂，本来以为是科普，原来是讲形式系统的，那一套形式系统看的犹如天书。。。</p>\n</blockquote>","sticky":0},{"title":"我的阅读-2016","show":true,"date":"2016-06-16T07:19:30.000Z","_content":"# 在读\n\n# 已读\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B019C5Y1Z8/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019C5Y1Z8&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn-4.ssl-images-amazon.com/images/I/51RVgZLRptL._SY346_.jpg\" alt=\"指数基金投资指南\" />\n</a>\n> 年过而立，是时候该考虑如何理财了。去年在大牛市时踏入股市，亏了个屁滚尿流。懵懵懂懂中接受了风险教育，实战中的教训给我这个小白上了结结实实的一课。如今对资本市场已经不再是\"初生牛犊不怕虎\"，充满敬畏之心的我开始思考从理论上补充知识。这是我近期完整读完的一本有关指数基金理财的书，书中介绍了指数基金的基本知识并结合实例说明了如何进行指数基金定投。由于基础知识的缺乏，部分内容如定投计划的制定看的并不太明白。总体说这本指数基金定投入门电子书还是不错的。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/search/ref=as_li_qf_sp_sr_tl?ie=UTF8&camp=536&creative=3200&index=aps&keywords=%E5%A4%A9%E6%9C%9D%E5%B4%9B%E8%B5%B7&linkCode=ur2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/41nyAcVvv3L.jpg\" alt=\"天朝崛起\" />\n</a>\n> 内容及写法都一般吧，看书名还以为是写\"本朝\"的崛起经历，由于是在百度阅读上下载的也没细看就下了。看了内容才发现这是一本有关历代封建王朝的兴衰简史。流水账式的叙述了王朝的兴起背景、王朝盛兴的过程及统治策略、王朝的特点。比较适合对中国史已经比较了解的看看，宏观上纵览下整个封建时代的王朝兴衰。\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00VWVAFAG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00VWVAFAG&linkCode=as2&tag=dante-23\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28049685.jpg\" alt=\"岛上书店\" />\n</a>\n> \"我告诉你，生活中每一桩糟糕的事，几乎都是时机不当的结果。每件好事，都是时机恰到好处的结果。\" -- 兰比亚斯 \n> \"我们读书而后知道自己并不孤单。我们读书，因为我们孤单；我们读书，然后就不孤单，我们并不孤单。\" -- A.J.F\n> 羡慕A.J.F拥有阿米莉亚这样志趣相投的灵魂伴侣，即使最后作者还是安排了他病死。我想大家都会羡慕的吧~\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00Z5S4EDG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00Z5S4EDG&linkCode=as2&tag=dante-23\">\n\t<img src=\"https://img1.doubanio.com/lpic/s28123969.jpg\" alt=\"消失的地平线\" />\n</a>\n> 很久没读书，熬夜看完了这本著名的乌托邦小说。然而跟很多看完\"深受震动\"的人的观感不一的是，我却并没有这般感受，甚至觉得有些许的\"价值观扭曲和强加\"之感。主人公一行\"误入\"香格里拉，其背后的真相竟然是\"亦基督亦佛\"的大喇嘛们寻找香格里拉继承人的一番\"阴谋\"，正如马连森说的一样，\"这和织网的蜘蛛布下的陷阱有何区别\"？而理想国度里的\"长生不老\"我想并不是所有人的理想目标，这个世界，有淡然的康韦，也有急躁的马连森，在如今这个多元化的世界里，并不能说慢节奏的闲适生活就比快节奏的忙碌生活高明多少，重要的是每个人的自由选择。反正在我看来，\"无所事事\"的\"长生不老\"并不是那么有吸引力。\"任何人类的情感敌不过五年的分离\"，我想这样的闲适和淡定的源头不是真正的\"入定\"，大抵是一种类似\"心死\"的苦闷吧？那些不是那么主动愿意留在香格里拉的人们，如马连森和洛岑，即使拥有了长生不老，香格里拉是他们的理想国吗？\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B0098SGXLK/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0098SGXLK&linkCode=as2&tag=dante-23\">\n    <img src=\"https://img3.doubanio.com/lpic/s27279654.jpg\" alt=\"活着\" />\n</a>\n> 很早就知道余华以及他的《活着》，困顿的青少年时代买不起的书只有现在补上。余华在这本书里以冷静地近乎残忍的笔调描写了一个无比绝望而又无比坚强的\"活着\"故事。再一次让我叩问活着的意义。\"人是为了活着本身而活着的，而不是为了活着之外的任何事物而活着\"。福贵的苦难也是那个时代中国人的苦难的缩影，在命运的洪流面前个人的力量好像真的很渺小。童年也曾经历了一段艰难而困苦的日子，每每看到这些苦难的经历和故事，总难免不了一些唏嘘感叹下的泪湿眼眶。\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00JVLEYY2/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00JVLEYY2&linkCode=as2&tag=dante-23\">\n    <img src=\"https://img1.doubanio.com/lpic/s26700273.jpg\" alt=\"javascript异步编程\" />\n</a>\n> 目前看过最好的一本技术翻译书，没有翻译腔，技术表达也比较到位，让人很有阅读欲，文字描述甚至可以说很有文采。\n\n<!--more-->\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00W4R6JV6/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00W4R6JV6&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51NmhGGjSIL._SX359_BO1,204,203,200_.jpg\" alt=\"what if\" />\n</a>\n> 外国版的壹读问答，内容真没有书名那么吸引人，回答内容充斥着各种抖机灵，其实挺幼稚无聊的。有个别严肃认真的段落看的还是挺感动的，比如这个：[戳链接看图.](http://ww2.sinaimg.cn/mw690/62d95157gw1f2bdbhdakgj20qo0zktbi.jpg)\n\n![推理的迷宫](https://img1.doubanio.com/lpic/s1433523.jpg)\n> 物理的尽头是哲学，哲学的尽头是神学。这本书一半逻辑一半哲学，看着看着就晕了，那些思维的谜题着实有趣，有一些细思极恐的谜题。随着学识的见长，才渐渐意识到，哲学并不只是教科书说的那般，唯心主义仿佛就是错误地存在，很多的悖论或是思维谜题从逻辑上来看是严密而站的住脚的，假的悖论从实质上来说总有一些我们当前科技未能发现的本质性的错误存在。正像罗素的悖论解决奠定了现代数学的基础-\"集合论\"一样。反倒是唯物论更像是一个实用主义者，想不通想不明白的问题就不去管它了。。说实在地，我该如何确定我是一个\"真实的存在\"，而不是\"一颗缸中之脑\"呢？\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B0011F5SIC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F5SIC&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51P-xHTkLYL._SX374_BO1,204,203,200_.jpg\" alt=\"css权威指南\" />\n</a>\n> 完整学习css的第一本书,详细到了罗嗦的地步.oreilly的书总是带着点翻译文风看起来并不是那么舒爽,适合有基础以后系统学习,否则零基础新手看的话容易被那琐碎细致而又翻译腔的叙述看晕...\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00C947WME/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00C947WME&linkCode=as2&tag=dante-23\">\n    <img src=\"http://img3.doubanio.com/lpic/s26372338.jpg\" alt=\"1984\" />\n</a>\n> \"老大哥在看着你\"\n\n","source":"_posts/myreading-2016.md","raw":"title: 我的阅读-2016\nshow: true\ndate: 2016-06-16 15:19:30\ntags: 阅读\ncategories: 阅历\n---\n# 在读\n\n# 已读\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B019C5Y1Z8/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019C5Y1Z8&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn-4.ssl-images-amazon.com/images/I/51RVgZLRptL._SY346_.jpg\" alt=\"指数基金投资指南\" />\n</a>\n> 年过而立，是时候该考虑如何理财了。去年在大牛市时踏入股市，亏了个屁滚尿流。懵懵懂懂中接受了风险教育，实战中的教训给我这个小白上了结结实实的一课。如今对资本市场已经不再是\"初生牛犊不怕虎\"，充满敬畏之心的我开始思考从理论上补充知识。这是我近期完整读完的一本有关指数基金理财的书，书中介绍了指数基金的基本知识并结合实例说明了如何进行指数基金定投。由于基础知识的缺乏，部分内容如定投计划的制定看的并不太明白。总体说这本指数基金定投入门电子书还是不错的。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/search/ref=as_li_qf_sp_sr_tl?ie=UTF8&camp=536&creative=3200&index=aps&keywords=%E5%A4%A9%E6%9C%9D%E5%B4%9B%E8%B5%B7&linkCode=ur2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/41nyAcVvv3L.jpg\" alt=\"天朝崛起\" />\n</a>\n> 内容及写法都一般吧，看书名还以为是写\"本朝\"的崛起经历，由于是在百度阅读上下载的也没细看就下了。看了内容才发现这是一本有关历代封建王朝的兴衰简史。流水账式的叙述了王朝的兴起背景、王朝盛兴的过程及统治策略、王朝的特点。比较适合对中国史已经比较了解的看看，宏观上纵览下整个封建时代的王朝兴衰。\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00VWVAFAG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00VWVAFAG&linkCode=as2&tag=dante-23\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28049685.jpg\" alt=\"岛上书店\" />\n</a>\n> \"我告诉你，生活中每一桩糟糕的事，几乎都是时机不当的结果。每件好事，都是时机恰到好处的结果。\" -- 兰比亚斯 \n> \"我们读书而后知道自己并不孤单。我们读书，因为我们孤单；我们读书，然后就不孤单，我们并不孤单。\" -- A.J.F\n> 羡慕A.J.F拥有阿米莉亚这样志趣相投的灵魂伴侣，即使最后作者还是安排了他病死。我想大家都会羡慕的吧~\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00Z5S4EDG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00Z5S4EDG&linkCode=as2&tag=dante-23\">\n\t<img src=\"https://img1.doubanio.com/lpic/s28123969.jpg\" alt=\"消失的地平线\" />\n</a>\n> 很久没读书，熬夜看完了这本著名的乌托邦小说。然而跟很多看完\"深受震动\"的人的观感不一的是，我却并没有这般感受，甚至觉得有些许的\"价值观扭曲和强加\"之感。主人公一行\"误入\"香格里拉，其背后的真相竟然是\"亦基督亦佛\"的大喇嘛们寻找香格里拉继承人的一番\"阴谋\"，正如马连森说的一样，\"这和织网的蜘蛛布下的陷阱有何区别\"？而理想国度里的\"长生不老\"我想并不是所有人的理想目标，这个世界，有淡然的康韦，也有急躁的马连森，在如今这个多元化的世界里，并不能说慢节奏的闲适生活就比快节奏的忙碌生活高明多少，重要的是每个人的自由选择。反正在我看来，\"无所事事\"的\"长生不老\"并不是那么有吸引力。\"任何人类的情感敌不过五年的分离\"，我想这样的闲适和淡定的源头不是真正的\"入定\"，大抵是一种类似\"心死\"的苦闷吧？那些不是那么主动愿意留在香格里拉的人们，如马连森和洛岑，即使拥有了长生不老，香格里拉是他们的理想国吗？\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B0098SGXLK/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0098SGXLK&linkCode=as2&tag=dante-23\">\n    <img src=\"https://img3.doubanio.com/lpic/s27279654.jpg\" alt=\"活着\" />\n</a>\n> 很早就知道余华以及他的《活着》，困顿的青少年时代买不起的书只有现在补上。余华在这本书里以冷静地近乎残忍的笔调描写了一个无比绝望而又无比坚强的\"活着\"故事。再一次让我叩问活着的意义。\"人是为了活着本身而活着的，而不是为了活着之外的任何事物而活着\"。福贵的苦难也是那个时代中国人的苦难的缩影，在命运的洪流面前个人的力量好像真的很渺小。童年也曾经历了一段艰难而困苦的日子，每每看到这些苦难的经历和故事，总难免不了一些唏嘘感叹下的泪湿眼眶。\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00JVLEYY2/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00JVLEYY2&linkCode=as2&tag=dante-23\">\n    <img src=\"https://img1.doubanio.com/lpic/s26700273.jpg\" alt=\"javascript异步编程\" />\n</a>\n> 目前看过最好的一本技术翻译书，没有翻译腔，技术表达也比较到位，让人很有阅读欲，文字描述甚至可以说很有文采。\n\n<!--more-->\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00W4R6JV6/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00W4R6JV6&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51NmhGGjSIL._SX359_BO1,204,203,200_.jpg\" alt=\"what if\" />\n</a>\n> 外国版的壹读问答，内容真没有书名那么吸引人，回答内容充斥着各种抖机灵，其实挺幼稚无聊的。有个别严肃认真的段落看的还是挺感动的，比如这个：[戳链接看图.](http://ww2.sinaimg.cn/mw690/62d95157gw1f2bdbhdakgj20qo0zktbi.jpg)\n\n![推理的迷宫](https://img1.doubanio.com/lpic/s1433523.jpg)\n> 物理的尽头是哲学，哲学的尽头是神学。这本书一半逻辑一半哲学，看着看着就晕了，那些思维的谜题着实有趣，有一些细思极恐的谜题。随着学识的见长，才渐渐意识到，哲学并不只是教科书说的那般，唯心主义仿佛就是错误地存在，很多的悖论或是思维谜题从逻辑上来看是严密而站的住脚的，假的悖论从实质上来说总有一些我们当前科技未能发现的本质性的错误存在。正像罗素的悖论解决奠定了现代数学的基础-\"集合论\"一样。反倒是唯物论更像是一个实用主义者，想不通想不明白的问题就不去管它了。。说实在地，我该如何确定我是一个\"真实的存在\"，而不是\"一颗缸中之脑\"呢？\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B0011F5SIC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F5SIC&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51P-xHTkLYL._SX374_BO1,204,203,200_.jpg\" alt=\"css权威指南\" />\n</a>\n> 完整学习css的第一本书,详细到了罗嗦的地步.oreilly的书总是带着点翻译文风看起来并不是那么舒爽,适合有基础以后系统学习,否则零基础新手看的话容易被那琐碎细致而又翻译腔的叙述看晕...\n\n<a class=\"fancybox\" rel=\"group\" href=\"http://www.amazon.cn/gp/product/B00C947WME/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00C947WME&linkCode=as2&tag=dante-23\">\n    <img src=\"http://img3.doubanio.com/lpic/s26372338.jpg\" alt=\"1984\" />\n</a>\n> \"老大哥在看着你\"\n\n","slug":"myreading-2016","published":1,"updated":"2018-10-19T18:30:07.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzwl004vfnpvynhqhw47","content":"<h1 id=\"在读\"><a href=\"#在读\" class=\"headerlink\" title=\"在读\"></a>在读</h1><h1 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h1><p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B019C5Y1Z8/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019C5Y1Z8&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn-4.ssl-images-amazon.com/images/I/51RVgZLRptL._SY346_.jpg\" alt=\"指数基金投资指南\"><br></a></p>\n<blockquote>\n<p>年过而立，是时候该考虑如何理财了。去年在大牛市时踏入股市，亏了个屁滚尿流。懵懵懂懂中接受了风险教育，实战中的教训给我这个小白上了结结实实的一课。如今对资本市场已经不再是”初生牛犊不怕虎”，充满敬畏之心的我开始思考从理论上补充知识。这是我近期完整读完的一本有关指数基金理财的书，书中介绍了指数基金的基本知识并结合实例说明了如何进行指数基金定投。由于基础知识的缺乏，部分内容如定投计划的制定看的并不太明白。总体说这本指数基金定投入门电子书还是不错的。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/search/ref=as_li_qf_sp_sr_tl?ie=UTF8&camp=536&creative=3200&index=aps&keywords=%E5%A4%A9%E6%9C%9D%E5%B4%9B%E8%B5%B7&linkCode=ur2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/41nyAcVvv3L.jpg\" alt=\"天朝崛起\"><br></a></p>\n<blockquote>\n<p>内容及写法都一般吧，看书名还以为是写”本朝”的崛起经历，由于是在百度阅读上下载的也没细看就下了。看了内容才发现这是一本有关历代封建王朝的兴衰简史。流水账式的叙述了王朝的兴起背景、王朝盛兴的过程及统治策略、王朝的特点。比较适合对中国史已经比较了解的看看，宏观上纵览下整个封建时代的王朝兴衰。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00VWVAFAG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00VWVAFAG&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28049685.jpg\" alt=\"岛上书店\"><br></a></p>\n<blockquote>\n<p>“我告诉你，生活中每一桩糟糕的事，几乎都是时机不当的结果。每件好事，都是时机恰到好处的结果。” – 兰比亚斯<br>“我们读书而后知道自己并不孤单。我们读书，因为我们孤单；我们读书，然后就不孤单，我们并不孤单。” – A.J.F<br>羡慕A.J.F拥有阿米莉亚这样志趣相投的灵魂伴侣，即使最后作者还是安排了他病死。我想大家都会羡慕的吧~</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00Z5S4EDG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00Z5S4EDG&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://img1.doubanio.com/lpic/s28123969.jpg\" alt=\"消失的地平线\"><br></a></p>\n<blockquote>\n<p>很久没读书，熬夜看完了这本著名的乌托邦小说。然而跟很多看完”深受震动”的人的观感不一的是，我却并没有这般感受，甚至觉得有些许的”价值观扭曲和强加”之感。主人公一行”误入”香格里拉，其背后的真相竟然是”亦基督亦佛”的大喇嘛们寻找香格里拉继承人的一番”阴谋”，正如马连森说的一样，”这和织网的蜘蛛布下的陷阱有何区别”？而理想国度里的”长生不老”我想并不是所有人的理想目标，这个世界，有淡然的康韦，也有急躁的马连森，在如今这个多元化的世界里，并不能说慢节奏的闲适生活就比快节奏的忙碌生活高明多少，重要的是每个人的自由选择。反正在我看来，”无所事事”的”长生不老”并不是那么有吸引力。”任何人类的情感敌不过五年的分离”，我想这样的闲适和淡定的源头不是真正的”入定”，大抵是一种类似”心死”的苦闷吧？那些不是那么主动愿意留在香格里拉的人们，如马连森和洛岑，即使拥有了长生不老，香格里拉是他们的理想国吗？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B0098SGXLK/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0098SGXLK&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s27279654.jpg\" alt=\"活着\"><br></a></p>\n<blockquote>\n<p>很早就知道余华以及他的《活着》，困顿的青少年时代买不起的书只有现在补上。余华在这本书里以冷静地近乎残忍的笔调描写了一个无比绝望而又无比坚强的”活着”故事。再一次让我叩问活着的意义。”人是为了活着本身而活着的，而不是为了活着之外的任何事物而活着”。福贵的苦难也是那个时代中国人的苦难的缩影，在命运的洪流面前个人的力量好像真的很渺小。童年也曾经历了一段艰难而困苦的日子，每每看到这些苦难的经历和故事，总难免不了一些唏嘘感叹下的泪湿眼眶。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00JVLEYY2/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00JVLEYY2&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://img1.doubanio.com/lpic/s26700273.jpg\" alt=\"javascript异步编程\"><br></a></p>\n<blockquote>\n<p>目前看过最好的一本技术翻译书，没有翻译腔，技术表达也比较到位，让人很有阅读欲，文字描述甚至可以说很有文采。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00W4R6JV6/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00W4R6JV6&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51NmhGGjSIL._SX359_BO1,204,203,200_.jpg\" alt=\"what if\"><br></a></p>\n<blockquote>\n<p>外国版的壹读问答，内容真没有书名那么吸引人，回答内容充斥着各种抖机灵，其实挺幼稚无聊的。有个别严肃认真的段落看的还是挺感动的，比如这个：<a href=\"http://ww2.sinaimg.cn/mw690/62d95157gw1f2bdbhdakgj20qo0zktbi.jpg\" target=\"_blank\" rel=\"noopener\">戳链接看图.</a></p>\n</blockquote>\n<p><img src=\"https://img1.doubanio.com/lpic/s1433523.jpg\" alt=\"推理的迷宫\"></p>\n<blockquote>\n<p>物理的尽头是哲学，哲学的尽头是神学。这本书一半逻辑一半哲学，看着看着就晕了，那些思维的谜题着实有趣，有一些细思极恐的谜题。随着学识的见长，才渐渐意识到，哲学并不只是教科书说的那般，唯心主义仿佛就是错误地存在，很多的悖论或是思维谜题从逻辑上来看是严密而站的住脚的，假的悖论从实质上来说总有一些我们当前科技未能发现的本质性的错误存在。正像罗素的悖论解决奠定了现代数学的基础-“集合论”一样。反倒是唯物论更像是一个实用主义者，想不通想不明白的问题就不去管它了。。说实在地，我该如何确定我是一个”真实的存在”，而不是”一颗缸中之脑”呢？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B0011F5SIC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F5SIC&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51P-xHTkLYL._SX374_BO1,204,203,200_.jpg\" alt=\"css权威指南\"><br></a></p>\n<blockquote>\n<p>完整学习css的第一本书,详细到了罗嗦的地步.oreilly的书总是带着点翻译文风看起来并不是那么舒爽,适合有基础以后系统学习,否则零基础新手看的话容易被那琐碎细致而又翻译腔的叙述看晕…</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00C947WME/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00C947WME&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"http://img3.doubanio.com/lpic/s26372338.jpg\" alt=\"1984\"><br></a></p>\n<blockquote>\n<p>“老大哥在看着你”</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"在读\"><a href=\"#在读\" class=\"headerlink\" title=\"在读\"></a>在读</h1><h1 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h1><p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B019C5Y1Z8/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019C5Y1Z8&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn-4.ssl-images-amazon.com/images/I/51RVgZLRptL._SY346_.jpg\" alt=\"指数基金投资指南\"><br></a></p>\n<blockquote>\n<p>年过而立，是时候该考虑如何理财了。去年在大牛市时踏入股市，亏了个屁滚尿流。懵懵懂懂中接受了风险教育，实战中的教训给我这个小白上了结结实实的一课。如今对资本市场已经不再是”初生牛犊不怕虎”，充满敬畏之心的我开始思考从理论上补充知识。这是我近期完整读完的一本有关指数基金理财的书，书中介绍了指数基金的基本知识并结合实例说明了如何进行指数基金定投。由于基础知识的缺乏，部分内容如定投计划的制定看的并不太明白。总体说这本指数基金定投入门电子书还是不错的。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/search/ref=as_li_qf_sp_sr_tl?ie=UTF8&camp=536&creative=3200&index=aps&keywords=%E5%A4%A9%E6%9C%9D%E5%B4%9B%E8%B5%B7&linkCode=ur2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/41nyAcVvv3L.jpg\" alt=\"天朝崛起\"><br></a></p>\n<blockquote>\n<p>内容及写法都一般吧，看书名还以为是写”本朝”的崛起经历，由于是在百度阅读上下载的也没细看就下了。看了内容才发现这是一本有关历代封建王朝的兴衰简史。流水账式的叙述了王朝的兴起背景、王朝盛兴的过程及统治策略、王朝的特点。比较适合对中国史已经比较了解的看看，宏观上纵览下整个封建时代的王朝兴衰。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00VWVAFAG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00VWVAFAG&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28049685.jpg\" alt=\"岛上书店\"><br></a></p>\n<blockquote>\n<p>“我告诉你，生活中每一桩糟糕的事，几乎都是时机不当的结果。每件好事，都是时机恰到好处的结果。” – 兰比亚斯<br>“我们读书而后知道自己并不孤单。我们读书，因为我们孤单；我们读书，然后就不孤单，我们并不孤单。” – A.J.F<br>羡慕A.J.F拥有阿米莉亚这样志趣相投的灵魂伴侣，即使最后作者还是安排了他病死。我想大家都会羡慕的吧~</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00Z5S4EDG/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00Z5S4EDG&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://img1.doubanio.com/lpic/s28123969.jpg\" alt=\"消失的地平线\"><br></a></p>\n<blockquote>\n<p>很久没读书，熬夜看完了这本著名的乌托邦小说。然而跟很多看完”深受震动”的人的观感不一的是，我却并没有这般感受，甚至觉得有些许的”价值观扭曲和强加”之感。主人公一行”误入”香格里拉，其背后的真相竟然是”亦基督亦佛”的大喇嘛们寻找香格里拉继承人的一番”阴谋”，正如马连森说的一样，”这和织网的蜘蛛布下的陷阱有何区别”？而理想国度里的”长生不老”我想并不是所有人的理想目标，这个世界，有淡然的康韦，也有急躁的马连森，在如今这个多元化的世界里，并不能说慢节奏的闲适生活就比快节奏的忙碌生活高明多少，重要的是每个人的自由选择。反正在我看来，”无所事事”的”长生不老”并不是那么有吸引力。”任何人类的情感敌不过五年的分离”，我想这样的闲适和淡定的源头不是真正的”入定”，大抵是一种类似”心死”的苦闷吧？那些不是那么主动愿意留在香格里拉的人们，如马连森和洛岑，即使拥有了长生不老，香格里拉是他们的理想国吗？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B0098SGXLK/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0098SGXLK&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s27279654.jpg\" alt=\"活着\"><br></a></p>\n<blockquote>\n<p>很早就知道余华以及他的《活着》，困顿的青少年时代买不起的书只有现在补上。余华在这本书里以冷静地近乎残忍的笔调描写了一个无比绝望而又无比坚强的”活着”故事。再一次让我叩问活着的意义。”人是为了活着本身而活着的，而不是为了活着之外的任何事物而活着”。福贵的苦难也是那个时代中国人的苦难的缩影，在命运的洪流面前个人的力量好像真的很渺小。童年也曾经历了一段艰难而困苦的日子，每每看到这些苦难的经历和故事，总难免不了一些唏嘘感叹下的泪湿眼眶。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00JVLEYY2/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00JVLEYY2&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://img1.doubanio.com/lpic/s26700273.jpg\" alt=\"javascript异步编程\"><br></a></p>\n<blockquote>\n<p>目前看过最好的一本技术翻译书，没有翻译腔，技术表达也比较到位，让人很有阅读欲，文字描述甚至可以说很有文采。</p>\n</blockquote>","more":"<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00W4R6JV6/ref=as_li_tf_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00W4R6JV6&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51NmhGGjSIL._SX359_BO1,204,203,200_.jpg\" alt=\"what if\"><br></a></p>\n<blockquote>\n<p>外国版的壹读问答，内容真没有书名那么吸引人，回答内容充斥着各种抖机灵，其实挺幼稚无聊的。有个别严肃认真的段落看的还是挺感动的，比如这个：<a href=\"http://ww2.sinaimg.cn/mw690/62d95157gw1f2bdbhdakgj20qo0zktbi.jpg\" target=\"_blank\" rel=\"noopener\">戳链接看图.</a></p>\n</blockquote>\n<p><img src=\"https://img1.doubanio.com/lpic/s1433523.jpg\" alt=\"推理的迷宫\"></p>\n<blockquote>\n<p>物理的尽头是哲学，哲学的尽头是神学。这本书一半逻辑一半哲学，看着看着就晕了，那些思维的谜题着实有趣，有一些细思极恐的谜题。随着学识的见长，才渐渐意识到，哲学并不只是教科书说的那般，唯心主义仿佛就是错误地存在，很多的悖论或是思维谜题从逻辑上来看是严密而站的住脚的，假的悖论从实质上来说总有一些我们当前科技未能发现的本质性的错误存在。正像罗素的悖论解决奠定了现代数学的基础-“集合论”一样。反倒是唯物论更像是一个实用主义者，想不通想不明白的问题就不去管它了。。说实在地，我该如何确定我是一个”真实的存在”，而不是”一颗缸中之脑”呢？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B0011F5SIC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B0011F5SIC&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51P-xHTkLYL._SX374_BO1,204,203,200_.jpg\" alt=\"css权威指南\"><br></a></p>\n<blockquote>\n<p>完整学习css的第一本书,详细到了罗嗦的地步.oreilly的书总是带着点翻译文风看起来并不是那么舒爽,适合有基础以后系统学习,否则零基础新手看的话容易被那琐碎细致而又翻译腔的叙述看晕…</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"http://www.amazon.cn/gp/product/B00C947WME/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00C947WME&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"http://img3.doubanio.com/lpic/s26372338.jpg\" alt=\"1984\"><br></a></p>\n<blockquote>\n<p>“老大哥在看着你”</p>\n</blockquote>","sticky":0},{"title":"我的阅读-2017","show":true,"date":"2017-02-23T05:27:38.000Z","_content":"# 已读\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B01JLEYPX8/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=dante-23&creative=3200&linkCode=as2&creativeASIN=B01JLEYPX8&linkId=f228299417aa3d21faa8475b1572a00e\">\n\t<img src=\"https://img1.doubanio.com/lpic/s29440008.jpg\" />\n</a>\n> 断断续续看完了，说实话对于不太懂经济学的我来说有点枯燥了，以至于7个小时的阅读时长断断续续估计得拖了有一个月，可想而知阅读成效了。虽然很多内容已经忘了差不多了，但好在作者这本书基本上主要讲的还是一个观点，然后反复论证说明，\"中国的城镇化发展还远未截止，城市的发展、人口的集聚是大趋势是解决很多问题的方法以及当前政策尤其是限制人口流动违反了城市发展的基本经济学原理\"。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B001NMTX9S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&tag=dante-23&camp=536&creative=3200&linkCode=as2&creativeASIN=B001NMTX9S&linkId=56d51e50cc70df4fda05d1c657108556\">\n\t<img src=\"https://img3.doubanio.com/lpic/s5968156.jpg\" />\n</a>\n> 别被封面图骗了，这其实是一本薄薄的小册子，没有长篇大论，基本都是mysql的实践操作，是一本非常适合入门mysql的书。看完这本书，我的简介里终于可以说自己不单单只会简单的mysql查询了。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B01AVMSGA2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&tag=dante-23&camp=536&creative=3200&linkCode=as2&creativeASIN=B01AVMSGA2&linkId=573592cd869096cbb18470c28a9b5b15\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28390784.jpg\" />\n</a>\n> 快递故事是好故事，文字写的不好，任务太多内容太散。书名《快递中国》但全书基本讲的都是中通。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B01BWKVEA6/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B01BWKVEA6&linkCode=as2&tag=dante-23&linkId=438f975a0589d8b4e7e5246a9639195f\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28576474.jpg\" />\n</a>\n> 胡适先生这本著作更多的在于考据，我等凡人看的一头雾水。。很多上古文字直接贴一段了事了，根本不鸟你看懂不懂，毕竟北大教科书+_+\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B019PP1WC0/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019PP1WC0&linkCode=as2&tag=dante-23&linkId=2d600a89b8106e1f6919a70ad626ea0a\" />\n\t<img src=\"https://img3.doubanio.com/lpic/s1727466.jpg\" />\n</a>\n> 不同于王小波的小说，王小波的这本杂文集，没有小黄文，没有太多不正经，没有太多晦涩难懂的东西，但一如既往的黑色幽默。如果说小说是虚构一个故事，将想说的话和道理掩盖在故事里让你去一层层揭示，那么杂文就是明白无误的针对某个事或观点发表自己的意见，将想说的话和道理平铺直叙的表露给读者。看这本书就像人说的，“读一本好书就像跟一个要好的朋友聊天”，小波先生在这本文集里将他的人生观价值观向读者一一道来。应该会看第二遍。我读王小波比较迟，也读的比较少，但算是一见如故的一个作家。第一本大概是《未来世界》，那时候的书评已经找不到了。初看一个陌生的写作者就跟与人交往一样，会有磨合期，你不了解他的生平、观点以及文风，就很难理解他文字的意图，就像王小波的黑色幽默，乍一看时你闹不懂他是正经还是不正经。王小波97年去世享年45岁，在这本文集里，谈论生活态度时，他说“我刚刚过44岁生日，在这个年龄上给自己做结论似乎还为时过早。但我总觉得，我这一生绝不会向虚无投降。我会一直战斗到死”，读来不免扎心不已。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B01HXJLN74/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B01HXJLN74&linkCode=as2&tag=dante-23&linkId=835db5961ecc2e34cfe4b12e8dbea01b\" />\n    <img src=\"https://img3.doubanio.com/lpic/s28688090.jpg\" />\n</a>\n> 这是一本很有趣的科普书，以趣味的口吻讲述了进化论对人体如今这个样子是怎样塑造的。对进化论我一直很有兴趣，记得高中时的三大愿望是去研究微观、宇观或者生命起源。迫于现实的压力最终阴差阳错的走上了程序员的道路。其实从某方面来说计算机和人体很相似，计算机是0,1的二进制，人体其实也是一台高精密的仪器，是RNA的四进制'机器'。然而，某种程度上我对进化论还是持有怀疑的。在看过很多大自然的奇迹，诸如人体、诸如蝙蝠的声呐回声定位、蜜蜂的蜂巢、向日葵的种子呈对数螺线分布(星系、台风、花朵、海螺都是这样)...等等一系列有如神迹一般的现象，更不用说人体构成的复杂与精密。让人不生出冥冥之中有神创万物之感真的很难。进化论说，一些微小的变异加上漫长的时间演化，就可以造成这些神迹。果真是印证了那一句话，\"时间是解决一切问题的所在\"。另一方面，生物的活动，冥冥中都是基因在起作用，我们都是基因的奴隶，我们的生生不息的繁殖都是为了基因的延续，然而基因的永续延续又是为了什么呢？\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B003F25VPY/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003F25VPY&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51FlI%2BU0TjL._SX343_BO1,204,203,200_.jpg\" />\n</a>\n> \"人生在世最大的两个危险，一个是过早死去，另一个是活得太久\"。看到这句真的是\"振聋发聩\"，有多少人期盼长寿，又有多少人会意识到过于长寿可能带来的穷困潦倒的老年生活危机？\"理财要趁早，养老计划要趁早\"是我读该书获得的收获，至于怎样理财投资，路漫漫其修远。\n\n<!--more-->\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B010PPI0K6/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B010PPI0K6&linkCode=as2&tag=dante-23\">\n\t<img src=\"https://images-cn.ssl-images-amazon.com/images/I/81BGJ0io7EL._SX341_BO1,204,203,200_.jpg\" alt=\"时生\" />\n</a>\n> 一如既往的温情，让坐在办公桌前的我都眼泛热泪。\"能来到这个世上就已经很美好\"，能跟自己的儿子一起胡闹，成长，体验应该不错。也许因为有了孩子之后感触更深，这本书带给我的感动比《解忧杂货铺》更强烈。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00ZHXYT7U/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ZHXYT7U&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/510wzE2j-EL._SX341_BO1,204,203,200_.jpg\" alt=\"无声告白\" />\n</a>\n> \"我们终此一生，就是要摆脱他人的期待，找到真正的自己\"，曾经我也是如同莉迪亚一样在殷切的期望下成长，好在万金油的我能够承受。有时候家庭就是一个人的宿命，我们要做一个好儿子、好丈夫、好父亲，s哪有多少机会去做真正的自己。虽然我现在依然摆脱不了他人的期待，但我希望我以后对下一代的教育不要再像我们的父辈一样，充分引导让孩子选择如何正确地做他自己即可。\n\n![超新星纪元](https://img1.doubanio.com/lpic/s3700467.jpg)\n> 看到后面完全看不下去了，简直是胡闹加儿戏，这不是科幻！完全颠覆了我对大刘的期待。这世界如果只剩下了孩子就只会玩了？还会拿生命去大战那样的去玩？还会去玩中美两国互换这样的游戏？你要是个孩子你会没事那个机枪突突觉得好玩？\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B019XQ9TEE/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019XQ9TEE&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51nymPcfMGL._SX340_BO1,204,203,200_.jpg\" alt=\"新参者\" />\n</a>\n> 每个人都有故事，案件的线索就隐藏在街巷生活的细节里。一如既往的与凶案中蕴含温情，能把探案小说写得温情动人，除却东野大概没人了吧。\n摘两句比较有感触的句子：\n\"疼爱和重视不一样，所谓重视，是考虑孩子的未来，不断为他做出最好的选择，我却没能那么做，我只是为自己有了一个可以倾注爱的对象而极为高兴。 孩子总有一天会长大，不会永远那么可爱，有时还会闯祸。\"'“加贺先生，原来您不是在调查案件啊。” “当然在调查啊，但刑警的工作不止这些。有人会因案件而留下心灵创伤，他们也是受害者。刑警的职责就是寻找能够拯救受害者的线索。”'\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://images-cn.ssl-images-amazon.com/images/I/514%2B3MSfKNL.jpg\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/514%2B3MSfKNL.jpg\" alt=\"她死在QQ上\" />\n</a>\n> 马亲王早期的作品真的是不忍直视啊，这本我归类为《故事会》水平。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00FZEJ3M2\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51b-Y%2BxDQiL._SX378_BO1,204,203,200_.jpg\" alt=\"殷商玛雅征服史\" />\n</a>\n> 抖机灵这事吧，偶尔为之是风趣幽默，全篇都是的话就很无聊了。此书看完完全没有收获，与我看来是烂书一本。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00CSLT2TY/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00CSLT2TY&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/41JNnT17OeL._SX350_BO1,204,203,200_.jpg\" alt=\"东周列国志\" />\n</a>  \n> 华夏历史属乱世为精彩，这其中又尤以春秋战国和三国史为甚。三国由于《三国演义》以及影视作品的影响，基本上是国人最熟悉的一段历史。而东周列国众多，绵延之久均远超三国，其复杂程度与精彩程度也是远超三国的。一直以来都很想仔细了解下东周列国，虽然这本《东周列国志》跟《三国演义》类似，算是小说并不算正史，但对于了解那段历史还是很有好处的。历时近三个月，利用闲散时间终于读完了这本书，记录了80篇想法，补上了作为中国人必须要了解的这一段历史。那是中华文化奠基的时代，想想我们早在几千年前就有那么辉煌灿烂的人文文化，有什么理由妄自菲薄全盘西化呢？这段历史真的有太多可以大书特书拿来影视化的内容了，而不是仅仅就只有赵氏孤儿，孙膑庞涓，荆轲刺秦。。\n\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00H42WTTC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00H42WTTC&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51MUGfuqXzL.jpg\" alt=\"富爸爸财务自由之路\" />\n</a>\n> 一本没什么干货的鸡汤书，行文风格是我最不喜欢的类型，但盛名在外学习理财的过程中见好多人推荐于是列入了书单。值得借鉴的是\"不要陷入成为专家的陷阱要多掌握其他的生存技能以及多买入资产少买入负债\"的思想。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00DOTC8C2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00DOTC8C2&linkCode=as2&tag=dante-23\n\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51b%2B19P-C1L.jpg\" alt=\"独自旅行\" />\n</a>\n> 失望，没有去德州，没有遇到电锯杀人狂...跟美国大片里说的不一样呢，遇到那么多好人呢，不可思议。说点正经的吧，很有诱惑的走在路上，通过旅行改变了人生，但为啥国内的穷游西藏的据说都是刷X呢？究竟是老美好人比国人多还是这书可信性不高呢？\n\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00RRCUBIK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00RRCUBIK&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51DSREx3TaL.jpg\" alt=\"马伯庸笑翻中国简史\" />\n</a>\n> 书是好书，只是文不对题。这本小册子从不为现代人所重视的王朝德性，五行相生相克的文化角度，阐述了整个华夏文明几千年来各王朝为了标榜自己的正统性，竭力从不同角度解释套用五德终始说的一系列趣事。角度算是别出心裁，跟其他的所有说史的书都不一样，还是值得一读的。\n\n","source":"_posts/myreading-2017.md","raw":"title: 我的阅读-2017\nshow: true\ndate: 2017-02-23 13:27:38\ntags: 阅读\ncategories: 阅历\n---\n# 已读\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B01JLEYPX8/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=dante-23&creative=3200&linkCode=as2&creativeASIN=B01JLEYPX8&linkId=f228299417aa3d21faa8475b1572a00e\">\n\t<img src=\"https://img1.doubanio.com/lpic/s29440008.jpg\" />\n</a>\n> 断断续续看完了，说实话对于不太懂经济学的我来说有点枯燥了，以至于7个小时的阅读时长断断续续估计得拖了有一个月，可想而知阅读成效了。虽然很多内容已经忘了差不多了，但好在作者这本书基本上主要讲的还是一个观点，然后反复论证说明，\"中国的城镇化发展还远未截止，城市的发展、人口的集聚是大趋势是解决很多问题的方法以及当前政策尤其是限制人口流动违反了城市发展的基本经济学原理\"。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B001NMTX9S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&tag=dante-23&camp=536&creative=3200&linkCode=as2&creativeASIN=B001NMTX9S&linkId=56d51e50cc70df4fda05d1c657108556\">\n\t<img src=\"https://img3.doubanio.com/lpic/s5968156.jpg\" />\n</a>\n> 别被封面图骗了，这其实是一本薄薄的小册子，没有长篇大论，基本都是mysql的实践操作，是一本非常适合入门mysql的书。看完这本书，我的简介里终于可以说自己不单单只会简单的mysql查询了。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B01AVMSGA2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&tag=dante-23&camp=536&creative=3200&linkCode=as2&creativeASIN=B01AVMSGA2&linkId=573592cd869096cbb18470c28a9b5b15\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28390784.jpg\" />\n</a>\n> 快递故事是好故事，文字写的不好，任务太多内容太散。书名《快递中国》但全书基本讲的都是中通。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B01BWKVEA6/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B01BWKVEA6&linkCode=as2&tag=dante-23&linkId=438f975a0589d8b4e7e5246a9639195f\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28576474.jpg\" />\n</a>\n> 胡适先生这本著作更多的在于考据，我等凡人看的一头雾水。。很多上古文字直接贴一段了事了，根本不鸟你看懂不懂，毕竟北大教科书+_+\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B019PP1WC0/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019PP1WC0&linkCode=as2&tag=dante-23&linkId=2d600a89b8106e1f6919a70ad626ea0a\" />\n\t<img src=\"https://img3.doubanio.com/lpic/s1727466.jpg\" />\n</a>\n> 不同于王小波的小说，王小波的这本杂文集，没有小黄文，没有太多不正经，没有太多晦涩难懂的东西，但一如既往的黑色幽默。如果说小说是虚构一个故事，将想说的话和道理掩盖在故事里让你去一层层揭示，那么杂文就是明白无误的针对某个事或观点发表自己的意见，将想说的话和道理平铺直叙的表露给读者。看这本书就像人说的，“读一本好书就像跟一个要好的朋友聊天”，小波先生在这本文集里将他的人生观价值观向读者一一道来。应该会看第二遍。我读王小波比较迟，也读的比较少，但算是一见如故的一个作家。第一本大概是《未来世界》，那时候的书评已经找不到了。初看一个陌生的写作者就跟与人交往一样，会有磨合期，你不了解他的生平、观点以及文风，就很难理解他文字的意图，就像王小波的黑色幽默，乍一看时你闹不懂他是正经还是不正经。王小波97年去世享年45岁，在这本文集里，谈论生活态度时，他说“我刚刚过44岁生日，在这个年龄上给自己做结论似乎还为时过早。但我总觉得，我这一生绝不会向虚无投降。我会一直战斗到死”，读来不免扎心不已。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B01HXJLN74/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B01HXJLN74&linkCode=as2&tag=dante-23&linkId=835db5961ecc2e34cfe4b12e8dbea01b\" />\n    <img src=\"https://img3.doubanio.com/lpic/s28688090.jpg\" />\n</a>\n> 这是一本很有趣的科普书，以趣味的口吻讲述了进化论对人体如今这个样子是怎样塑造的。对进化论我一直很有兴趣，记得高中时的三大愿望是去研究微观、宇观或者生命起源。迫于现实的压力最终阴差阳错的走上了程序员的道路。其实从某方面来说计算机和人体很相似，计算机是0,1的二进制，人体其实也是一台高精密的仪器，是RNA的四进制'机器'。然而，某种程度上我对进化论还是持有怀疑的。在看过很多大自然的奇迹，诸如人体、诸如蝙蝠的声呐回声定位、蜜蜂的蜂巢、向日葵的种子呈对数螺线分布(星系、台风、花朵、海螺都是这样)...等等一系列有如神迹一般的现象，更不用说人体构成的复杂与精密。让人不生出冥冥之中有神创万物之感真的很难。进化论说，一些微小的变异加上漫长的时间演化，就可以造成这些神迹。果真是印证了那一句话，\"时间是解决一切问题的所在\"。另一方面，生物的活动，冥冥中都是基因在起作用，我们都是基因的奴隶，我们的生生不息的繁殖都是为了基因的延续，然而基因的永续延续又是为了什么呢？\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B003F25VPY/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003F25VPY&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51FlI%2BU0TjL._SX343_BO1,204,203,200_.jpg\" />\n</a>\n> \"人生在世最大的两个危险，一个是过早死去，另一个是活得太久\"。看到这句真的是\"振聋发聩\"，有多少人期盼长寿，又有多少人会意识到过于长寿可能带来的穷困潦倒的老年生活危机？\"理财要趁早，养老计划要趁早\"是我读该书获得的收获，至于怎样理财投资，路漫漫其修远。\n\n<!--more-->\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B010PPI0K6/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B010PPI0K6&linkCode=as2&tag=dante-23\">\n\t<img src=\"https://images-cn.ssl-images-amazon.com/images/I/81BGJ0io7EL._SX341_BO1,204,203,200_.jpg\" alt=\"时生\" />\n</a>\n> 一如既往的温情，让坐在办公桌前的我都眼泛热泪。\"能来到这个世上就已经很美好\"，能跟自己的儿子一起胡闹，成长，体验应该不错。也许因为有了孩子之后感触更深，这本书带给我的感动比《解忧杂货铺》更强烈。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00ZHXYT7U/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ZHXYT7U&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/510wzE2j-EL._SX341_BO1,204,203,200_.jpg\" alt=\"无声告白\" />\n</a>\n> \"我们终此一生，就是要摆脱他人的期待，找到真正的自己\"，曾经我也是如同莉迪亚一样在殷切的期望下成长，好在万金油的我能够承受。有时候家庭就是一个人的宿命，我们要做一个好儿子、好丈夫、好父亲，s哪有多少机会去做真正的自己。虽然我现在依然摆脱不了他人的期待，但我希望我以后对下一代的教育不要再像我们的父辈一样，充分引导让孩子选择如何正确地做他自己即可。\n\n![超新星纪元](https://img1.doubanio.com/lpic/s3700467.jpg)\n> 看到后面完全看不下去了，简直是胡闹加儿戏，这不是科幻！完全颠覆了我对大刘的期待。这世界如果只剩下了孩子就只会玩了？还会拿生命去大战那样的去玩？还会去玩中美两国互换这样的游戏？你要是个孩子你会没事那个机枪突突觉得好玩？\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B019XQ9TEE/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019XQ9TEE&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51nymPcfMGL._SX340_BO1,204,203,200_.jpg\" alt=\"新参者\" />\n</a>\n> 每个人都有故事，案件的线索就隐藏在街巷生活的细节里。一如既往的与凶案中蕴含温情，能把探案小说写得温情动人，除却东野大概没人了吧。\n摘两句比较有感触的句子：\n\"疼爱和重视不一样，所谓重视，是考虑孩子的未来，不断为他做出最好的选择，我却没能那么做，我只是为自己有了一个可以倾注爱的对象而极为高兴。 孩子总有一天会长大，不会永远那么可爱，有时还会闯祸。\"'“加贺先生，原来您不是在调查案件啊。” “当然在调查啊，但刑警的工作不止这些。有人会因案件而留下心灵创伤，他们也是受害者。刑警的职责就是寻找能够拯救受害者的线索。”'\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://images-cn.ssl-images-amazon.com/images/I/514%2B3MSfKNL.jpg\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/514%2B3MSfKNL.jpg\" alt=\"她死在QQ上\" />\n</a>\n> 马亲王早期的作品真的是不忍直视啊，这本我归类为《故事会》水平。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00FZEJ3M2\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51b-Y%2BxDQiL._SX378_BO1,204,203,200_.jpg\" alt=\"殷商玛雅征服史\" />\n</a>\n> 抖机灵这事吧，偶尔为之是风趣幽默，全篇都是的话就很无聊了。此书看完完全没有收获，与我看来是烂书一本。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00CSLT2TY/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00CSLT2TY&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/41JNnT17OeL._SX350_BO1,204,203,200_.jpg\" alt=\"东周列国志\" />\n</a>  \n> 华夏历史属乱世为精彩，这其中又尤以春秋战国和三国史为甚。三国由于《三国演义》以及影视作品的影响，基本上是国人最熟悉的一段历史。而东周列国众多，绵延之久均远超三国，其复杂程度与精彩程度也是远超三国的。一直以来都很想仔细了解下东周列国，虽然这本《东周列国志》跟《三国演义》类似，算是小说并不算正史，但对于了解那段历史还是很有好处的。历时近三个月，利用闲散时间终于读完了这本书，记录了80篇想法，补上了作为中国人必须要了解的这一段历史。那是中华文化奠基的时代，想想我们早在几千年前就有那么辉煌灿烂的人文文化，有什么理由妄自菲薄全盘西化呢？这段历史真的有太多可以大书特书拿来影视化的内容了，而不是仅仅就只有赵氏孤儿，孙膑庞涓，荆轲刺秦。。\n\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00H42WTTC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00H42WTTC&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51MUGfuqXzL.jpg\" alt=\"富爸爸财务自由之路\" />\n</a>\n> 一本没什么干货的鸡汤书，行文风格是我最不喜欢的类型，但盛名在外学习理财的过程中见好多人推荐于是列入了书单。值得借鉴的是\"不要陷入成为专家的陷阱要多掌握其他的生存技能以及多买入资产少买入负债\"的思想。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00DOTC8C2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00DOTC8C2&linkCode=as2&tag=dante-23\n\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51b%2B19P-C1L.jpg\" alt=\"独自旅行\" />\n</a>\n> 失望，没有去德州，没有遇到电锯杀人狂...跟美国大片里说的不一样呢，遇到那么多好人呢，不可思议。说点正经的吧，很有诱惑的走在路上，通过旅行改变了人生，但为啥国内的穷游西藏的据说都是刷X呢？究竟是老美好人比国人多还是这书可信性不高呢？\n\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://www.amazon.cn/gp/product/B00RRCUBIK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00RRCUBIK&linkCode=as2&tag=dante-23\">\n    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51DSREx3TaL.jpg\" alt=\"马伯庸笑翻中国简史\" />\n</a>\n> 书是好书，只是文不对题。这本小册子从不为现代人所重视的王朝德性，五行相生相克的文化角度，阐述了整个华夏文明几千年来各王朝为了标榜自己的正统性，竭力从不同角度解释套用五德终始说的一系列趣事。角度算是别出心裁，跟其他的所有说史的书都不一样，还是值得一读的。\n\n","slug":"myreading-2017","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzwx004yfnpv94qjhkrh","content":"<h1 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h1><p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B01JLEYPX8/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=dante-23&creative=3200&linkCode=as2&creativeASIN=B01JLEYPX8&linkId=f228299417aa3d21faa8475b1572a00e\" target=\"_blank\"><br>    <img src=\"https://img1.doubanio.com/lpic/s29440008.jpg\"><br></a></p>\n<blockquote>\n<p>断断续续看完了，说实话对于不太懂经济学的我来说有点枯燥了，以至于7个小时的阅读时长断断续续估计得拖了有一个月，可想而知阅读成效了。虽然很多内容已经忘了差不多了，但好在作者这本书基本上主要讲的还是一个观点，然后反复论证说明，”中国的城镇化发展还远未截止，城市的发展、人口的集聚是大趋势是解决很多问题的方法以及当前政策尤其是限制人口流动违反了城市发展的基本经济学原理”。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B001NMTX9S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&tag=dante-23&camp=536&creative=3200&linkCode=as2&creativeASIN=B001NMTX9S&linkId=56d51e50cc70df4fda05d1c657108556\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s5968156.jpg\"><br></a></p>\n<blockquote>\n<p>别被封面图骗了，这其实是一本薄薄的小册子，没有长篇大论，基本都是mysql的实践操作，是一本非常适合入门mysql的书。看完这本书，我的简介里终于可以说自己不单单只会简单的mysql查询了。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B01AVMSGA2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&tag=dante-23&camp=536&creative=3200&linkCode=as2&creativeASIN=B01AVMSGA2&linkId=573592cd869096cbb18470c28a9b5b15\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28390784.jpg\"><br></a></p>\n<blockquote>\n<p>快递故事是好故事，文字写的不好，任务太多内容太散。书名《快递中国》但全书基本讲的都是中通。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B01BWKVEA6/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B01BWKVEA6&linkCode=as2&tag=dante-23&linkId=438f975a0589d8b4e7e5246a9639195f\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28576474.jpg\"><br></a></p>\n<blockquote>\n<p>胡适先生这本著作更多的在于考据，我等凡人看的一头雾水。。很多上古文字直接贴一段了事了，根本不鸟你看懂不懂，毕竟北大教科书+_+</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B019PP1WC0/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019PP1WC0&linkCode=as2&tag=dante-23&linkId=2d600a89b8106e1f6919a70ad626ea0a\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s1727466.jpg\"><br></a></p>\n<blockquote>\n<p>不同于王小波的小说，王小波的这本杂文集，没有小黄文，没有太多不正经，没有太多晦涩难懂的东西，但一如既往的黑色幽默。如果说小说是虚构一个故事，将想说的话和道理掩盖在故事里让你去一层层揭示，那么杂文就是明白无误的针对某个事或观点发表自己的意见，将想说的话和道理平铺直叙的表露给读者。看这本书就像人说的，“读一本好书就像跟一个要好的朋友聊天”，小波先生在这本文集里将他的人生观价值观向读者一一道来。应该会看第二遍。我读王小波比较迟，也读的比较少，但算是一见如故的一个作家。第一本大概是《未来世界》，那时候的书评已经找不到了。初看一个陌生的写作者就跟与人交往一样，会有磨合期，你不了解他的生平、观点以及文风，就很难理解他文字的意图，就像王小波的黑色幽默，乍一看时你闹不懂他是正经还是不正经。王小波97年去世享年45岁，在这本文集里，谈论生活态度时，他说“我刚刚过44岁生日，在这个年龄上给自己做结论似乎还为时过早。但我总觉得，我这一生绝不会向虚无投降。我会一直战斗到死”，读来不免扎心不已。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B01HXJLN74/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B01HXJLN74&linkCode=as2&tag=dante-23&linkId=835db5961ecc2e34cfe4b12e8dbea01b\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28688090.jpg\"><br></a></p>\n<blockquote>\n<p>这是一本很有趣的科普书，以趣味的口吻讲述了进化论对人体如今这个样子是怎样塑造的。对进化论我一直很有兴趣，记得高中时的三大愿望是去研究微观、宇观或者生命起源。迫于现实的压力最终阴差阳错的走上了程序员的道路。其实从某方面来说计算机和人体很相似，计算机是0,1的二进制，人体其实也是一台高精密的仪器，是RNA的四进制’机器’。然而，某种程度上我对进化论还是持有怀疑的。在看过很多大自然的奇迹，诸如人体、诸如蝙蝠的声呐回声定位、蜜蜂的蜂巢、向日葵的种子呈对数螺线分布(星系、台风、花朵、海螺都是这样)…等等一系列有如神迹一般的现象，更不用说人体构成的复杂与精密。让人不生出冥冥之中有神创万物之感真的很难。进化论说，一些微小的变异加上漫长的时间演化，就可以造成这些神迹。果真是印证了那一句话，”时间是解决一切问题的所在”。另一方面，生物的活动，冥冥中都是基因在起作用，我们都是基因的奴隶，我们的生生不息的繁殖都是为了基因的延续，然而基因的永续延续又是为了什么呢？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B003F25VPY/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003F25VPY&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51FlI%2BU0TjL._SX343_BO1,204,203,200_.jpg\"><br></a></p>\n<blockquote>\n<p>“人生在世最大的两个危险，一个是过早死去，另一个是活得太久”。看到这句真的是”振聋发聩”，有多少人期盼长寿，又有多少人会意识到过于长寿可能带来的穷困潦倒的老年生活危机？”理财要趁早，养老计划要趁早”是我读该书获得的收获，至于怎样理财投资，路漫漫其修远。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B010PPI0K6/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B010PPI0K6&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/81BGJ0io7EL._SX341_BO1,204,203,200_.jpg\" alt=\"时生\"><br></a></p>\n<blockquote>\n<p>一如既往的温情，让坐在办公桌前的我都眼泛热泪。”能来到这个世上就已经很美好”，能跟自己的儿子一起胡闹，成长，体验应该不错。也许因为有了孩子之后感触更深，这本书带给我的感动比《解忧杂货铺》更强烈。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00ZHXYT7U/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ZHXYT7U&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/510wzE2j-EL._SX341_BO1,204,203,200_.jpg\" alt=\"无声告白\"><br></a></p>\n<blockquote>\n<p>“我们终此一生，就是要摆脱他人的期待，找到真正的自己”，曾经我也是如同莉迪亚一样在殷切的期望下成长，好在万金油的我能够承受。有时候家庭就是一个人的宿命，我们要做一个好儿子、好丈夫、好父亲，s哪有多少机会去做真正的自己。虽然我现在依然摆脱不了他人的期待，但我希望我以后对下一代的教育不要再像我们的父辈一样，充分引导让孩子选择如何正确地做他自己即可。</p>\n</blockquote>\n<p><img src=\"https://img1.doubanio.com/lpic/s3700467.jpg\" alt=\"超新星纪元\"></p>\n<blockquote>\n<p>看到后面完全看不下去了，简直是胡闹加儿戏，这不是科幻！完全颠覆了我对大刘的期待。这世界如果只剩下了孩子就只会玩了？还会拿生命去大战那样的去玩？还会去玩中美两国互换这样的游戏？你要是个孩子你会没事那个机枪突突觉得好玩？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B019XQ9TEE/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019XQ9TEE&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51nymPcfMGL._SX340_BO1,204,203,200_.jpg\" alt=\"新参者\"><br></a></p>\n<blockquote>\n<p>每个人都有故事，案件的线索就隐藏在街巷生活的细节里。一如既往的与凶案中蕴含温情，能把探案小说写得温情动人，除却东野大概没人了吧。<br>摘两句比较有感触的句子：<br>“疼爱和重视不一样，所谓重视，是考虑孩子的未来，不断为他做出最好的选择，我却没能那么做，我只是为自己有了一个可以倾注爱的对象而极为高兴。 孩子总有一天会长大，不会永远那么可爱，有时还会闯祸。”‘“加贺先生，原来您不是在调查案件啊。” “当然在调查啊，但刑警的工作不止这些。有人会因案件而留下心灵创伤，他们也是受害者。刑警的职责就是寻找能够拯救受害者的线索。”’</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://images-cn.ssl-images-amazon.com/images/I/514%2B3MSfKNL.jpg\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/514%2B3MSfKNL.jpg\" alt=\"她死在QQ上\"><br></a></p>\n<blockquote>\n<p>马亲王早期的作品真的是不忍直视啊，这本我归类为《故事会》水平。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00FZEJ3M2\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51b-Y%2BxDQiL._SX378_BO1,204,203,200_.jpg\" alt=\"殷商玛雅征服史\"><br></a></p>\n<blockquote>\n<p>抖机灵这事吧，偶尔为之是风趣幽默，全篇都是的话就很无聊了。此书看完完全没有收获，与我看来是烂书一本。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00CSLT2TY/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00CSLT2TY&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/41JNnT17OeL._SX350_BO1,204,203,200_.jpg\" alt=\"东周列国志\"><br></a>  </p>\n<blockquote>\n<p>华夏历史属乱世为精彩，这其中又尤以春秋战国和三国史为甚。三国由于《三国演义》以及影视作品的影响，基本上是国人最熟悉的一段历史。而东周列国众多，绵延之久均远超三国，其复杂程度与精彩程度也是远超三国的。一直以来都很想仔细了解下东周列国，虽然这本《东周列国志》跟《三国演义》类似，算是小说并不算正史，但对于了解那段历史还是很有好处的。历时近三个月，利用闲散时间终于读完了这本书，记录了80篇想法，补上了作为中国人必须要了解的这一段历史。那是中华文化奠基的时代，想想我们早在几千年前就有那么辉煌灿烂的人文文化，有什么理由妄自菲薄全盘西化呢？这段历史真的有太多可以大书特书拿来影视化的内容了，而不是仅仅就只有赵氏孤儿，孙膑庞涓，荆轲刺秦。。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00H42WTTC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00H42WTTC&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51MUGfuqXzL.jpg\" alt=\"富爸爸财务自由之路\"><br></a></p>\n<blockquote>\n<p>一本没什么干货的鸡汤书，行文风格是我最不喜欢的类型，但盛名在外学习理财的过程中见好多人推荐于是列入了书单。值得借鉴的是”不要陷入成为专家的陷阱要多掌握其他的生存技能以及多买入资产少买入负债”的思想。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00DOTC8C2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00DOTC8C2&linkCode=as2&tag=dante-23\n\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51b%2B19P-C1L.jpg\" alt=\"独自旅行\"><br></a></p>\n<blockquote>\n<p>失望，没有去德州，没有遇到电锯杀人狂…跟美国大片里说的不一样呢，遇到那么多好人呢，不可思议。说点正经的吧，很有诱惑的走在路上，通过旅行改变了人生，但为啥国内的穷游西藏的据说都是刷X呢？究竟是老美好人比国人多还是这书可信性不高呢？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00RRCUBIK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00RRCUBIK&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51DSREx3TaL.jpg\" alt=\"马伯庸笑翻中国简史\"><br></a></p>\n<blockquote>\n<p>书是好书，只是文不对题。这本小册子从不为现代人所重视的王朝德性，五行相生相克的文化角度，阐述了整个华夏文明几千年来各王朝为了标榜自己的正统性，竭力从不同角度解释套用五德终始说的一系列趣事。角度算是别出心裁，跟其他的所有说史的书都不一样，还是值得一读的。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h1><p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B01JLEYPX8/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=dante-23&creative=3200&linkCode=as2&creativeASIN=B01JLEYPX8&linkId=f228299417aa3d21faa8475b1572a00e\" target=\"_blank\"><br>    <img src=\"https://img1.doubanio.com/lpic/s29440008.jpg\"><br></a></p>\n<blockquote>\n<p>断断续续看完了，说实话对于不太懂经济学的我来说有点枯燥了，以至于7个小时的阅读时长断断续续估计得拖了有一个月，可想而知阅读成效了。虽然很多内容已经忘了差不多了，但好在作者这本书基本上主要讲的还是一个观点，然后反复论证说明，”中国的城镇化发展还远未截止，城市的发展、人口的集聚是大趋势是解决很多问题的方法以及当前政策尤其是限制人口流动违反了城市发展的基本经济学原理”。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B001NMTX9S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&tag=dante-23&camp=536&creative=3200&linkCode=as2&creativeASIN=B001NMTX9S&linkId=56d51e50cc70df4fda05d1c657108556\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s5968156.jpg\"><br></a></p>\n<blockquote>\n<p>别被封面图骗了，这其实是一本薄薄的小册子，没有长篇大论，基本都是mysql的实践操作，是一本非常适合入门mysql的书。看完这本书，我的简介里终于可以说自己不单单只会简单的mysql查询了。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B01AVMSGA2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&tag=dante-23&camp=536&creative=3200&linkCode=as2&creativeASIN=B01AVMSGA2&linkId=573592cd869096cbb18470c28a9b5b15\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28390784.jpg\"><br></a></p>\n<blockquote>\n<p>快递故事是好故事，文字写的不好，任务太多内容太散。书名《快递中国》但全书基本讲的都是中通。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B01BWKVEA6/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B01BWKVEA6&linkCode=as2&tag=dante-23&linkId=438f975a0589d8b4e7e5246a9639195f\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28576474.jpg\"><br></a></p>\n<blockquote>\n<p>胡适先生这本著作更多的在于考据，我等凡人看的一头雾水。。很多上古文字直接贴一段了事了，根本不鸟你看懂不懂，毕竟北大教科书+_+</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B019PP1WC0/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019PP1WC0&linkCode=as2&tag=dante-23&linkId=2d600a89b8106e1f6919a70ad626ea0a\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s1727466.jpg\"><br></a></p>\n<blockquote>\n<p>不同于王小波的小说，王小波的这本杂文集，没有小黄文，没有太多不正经，没有太多晦涩难懂的东西，但一如既往的黑色幽默。如果说小说是虚构一个故事，将想说的话和道理掩盖在故事里让你去一层层揭示，那么杂文就是明白无误的针对某个事或观点发表自己的意见，将想说的话和道理平铺直叙的表露给读者。看这本书就像人说的，“读一本好书就像跟一个要好的朋友聊天”，小波先生在这本文集里将他的人生观价值观向读者一一道来。应该会看第二遍。我读王小波比较迟，也读的比较少，但算是一见如故的一个作家。第一本大概是《未来世界》，那时候的书评已经找不到了。初看一个陌生的写作者就跟与人交往一样，会有磨合期，你不了解他的生平、观点以及文风，就很难理解他文字的意图，就像王小波的黑色幽默，乍一看时你闹不懂他是正经还是不正经。王小波97年去世享年45岁，在这本文集里，谈论生活态度时，他说“我刚刚过44岁生日，在这个年龄上给自己做结论似乎还为时过早。但我总觉得，我这一生绝不会向虚无投降。我会一直战斗到死”，读来不免扎心不已。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B01HXJLN74/ref=as_li_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B01HXJLN74&linkCode=as2&tag=dante-23&linkId=835db5961ecc2e34cfe4b12e8dbea01b\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28688090.jpg\"><br></a></p>\n<blockquote>\n<p>这是一本很有趣的科普书，以趣味的口吻讲述了进化论对人体如今这个样子是怎样塑造的。对进化论我一直很有兴趣，记得高中时的三大愿望是去研究微观、宇观或者生命起源。迫于现实的压力最终阴差阳错的走上了程序员的道路。其实从某方面来说计算机和人体很相似，计算机是0,1的二进制，人体其实也是一台高精密的仪器，是RNA的四进制’机器’。然而，某种程度上我对进化论还是持有怀疑的。在看过很多大自然的奇迹，诸如人体、诸如蝙蝠的声呐回声定位、蜜蜂的蜂巢、向日葵的种子呈对数螺线分布(星系、台风、花朵、海螺都是这样)…等等一系列有如神迹一般的现象，更不用说人体构成的复杂与精密。让人不生出冥冥之中有神创万物之感真的很难。进化论说，一些微小的变异加上漫长的时间演化，就可以造成这些神迹。果真是印证了那一句话，”时间是解决一切问题的所在”。另一方面，生物的活动，冥冥中都是基因在起作用，我们都是基因的奴隶，我们的生生不息的繁殖都是为了基因的延续，然而基因的永续延续又是为了什么呢？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B003F25VPY/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B003F25VPY&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51FlI%2BU0TjL._SX343_BO1,204,203,200_.jpg\"><br></a></p>\n<blockquote>\n<p>“人生在世最大的两个危险，一个是过早死去，另一个是活得太久”。看到这句真的是”振聋发聩”，有多少人期盼长寿，又有多少人会意识到过于长寿可能带来的穷困潦倒的老年生活危机？”理财要趁早，养老计划要趁早”是我读该书获得的收获，至于怎样理财投资，路漫漫其修远。</p>\n</blockquote>","more":"<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B010PPI0K6/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B010PPI0K6&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/81BGJ0io7EL._SX341_BO1,204,203,200_.jpg\" alt=\"时生\"><br></a></p>\n<blockquote>\n<p>一如既往的温情，让坐在办公桌前的我都眼泛热泪。”能来到这个世上就已经很美好”，能跟自己的儿子一起胡闹，成长，体验应该不错。也许因为有了孩子之后感触更深，这本书带给我的感动比《解忧杂货铺》更强烈。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00ZHXYT7U/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00ZHXYT7U&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/510wzE2j-EL._SX341_BO1,204,203,200_.jpg\" alt=\"无声告白\"><br></a></p>\n<blockquote>\n<p>“我们终此一生，就是要摆脱他人的期待，找到真正的自己”，曾经我也是如同莉迪亚一样在殷切的期望下成长，好在万金油的我能够承受。有时候家庭就是一个人的宿命，我们要做一个好儿子、好丈夫、好父亲，s哪有多少机会去做真正的自己。虽然我现在依然摆脱不了他人的期待，但我希望我以后对下一代的教育不要再像我们的父辈一样，充分引导让孩子选择如何正确地做他自己即可。</p>\n</blockquote>\n<p><img src=\"https://img1.doubanio.com/lpic/s3700467.jpg\" alt=\"超新星纪元\"></p>\n<blockquote>\n<p>看到后面完全看不下去了，简直是胡闹加儿戏，这不是科幻！完全颠覆了我对大刘的期待。这世界如果只剩下了孩子就只会玩了？还会拿生命去大战那样的去玩？还会去玩中美两国互换这样的游戏？你要是个孩子你会没事那个机枪突突觉得好玩？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B019XQ9TEE/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B019XQ9TEE&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51nymPcfMGL._SX340_BO1,204,203,200_.jpg\" alt=\"新参者\"><br></a></p>\n<blockquote>\n<p>每个人都有故事，案件的线索就隐藏在街巷生活的细节里。一如既往的与凶案中蕴含温情，能把探案小说写得温情动人，除却东野大概没人了吧。<br>摘两句比较有感触的句子：<br>“疼爱和重视不一样，所谓重视，是考虑孩子的未来，不断为他做出最好的选择，我却没能那么做，我只是为自己有了一个可以倾注爱的对象而极为高兴。 孩子总有一天会长大，不会永远那么可爱，有时还会闯祸。”‘“加贺先生，原来您不是在调查案件啊。” “当然在调查啊，但刑警的工作不止这些。有人会因案件而留下心灵创伤，他们也是受害者。刑警的职责就是寻找能够拯救受害者的线索。”’</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://images-cn.ssl-images-amazon.com/images/I/514%2B3MSfKNL.jpg\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/514%2B3MSfKNL.jpg\" alt=\"她死在QQ上\"><br></a></p>\n<blockquote>\n<p>马亲王早期的作品真的是不忍直视啊，这本我归类为《故事会》水平。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00FZEJ3M2\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51b-Y%2BxDQiL._SX378_BO1,204,203,200_.jpg\" alt=\"殷商玛雅征服史\"><br></a></p>\n<blockquote>\n<p>抖机灵这事吧，偶尔为之是风趣幽默，全篇都是的话就很无聊了。此书看完完全没有收获，与我看来是烂书一本。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00CSLT2TY/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00CSLT2TY&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/41JNnT17OeL._SX350_BO1,204,203,200_.jpg\" alt=\"东周列国志\"><br></a>  </p>\n<blockquote>\n<p>华夏历史属乱世为精彩，这其中又尤以春秋战国和三国史为甚。三国由于《三国演义》以及影视作品的影响，基本上是国人最熟悉的一段历史。而东周列国众多，绵延之久均远超三国，其复杂程度与精彩程度也是远超三国的。一直以来都很想仔细了解下东周列国，虽然这本《东周列国志》跟《三国演义》类似，算是小说并不算正史，但对于了解那段历史还是很有好处的。历时近三个月，利用闲散时间终于读完了这本书，记录了80篇想法，补上了作为中国人必须要了解的这一段历史。那是中华文化奠基的时代，想想我们早在几千年前就有那么辉煌灿烂的人文文化，有什么理由妄自菲薄全盘西化呢？这段历史真的有太多可以大书特书拿来影视化的内容了，而不是仅仅就只有赵氏孤儿，孙膑庞涓，荆轲刺秦。。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00H42WTTC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00H42WTTC&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51MUGfuqXzL.jpg\" alt=\"富爸爸财务自由之路\"><br></a></p>\n<blockquote>\n<p>一本没什么干货的鸡汤书，行文风格是我最不喜欢的类型，但盛名在外学习理财的过程中见好多人推荐于是列入了书单。值得借鉴的是”不要陷入成为专家的陷阱要多掌握其他的生存技能以及多买入资产少买入负债”的思想。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00DOTC8C2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00DOTC8C2&linkCode=as2&tag=dante-23\n\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51b%2B19P-C1L.jpg\" alt=\"独自旅行\"><br></a></p>\n<blockquote>\n<p>失望，没有去德州，没有遇到电锯杀人狂…跟美国大片里说的不一样呢，遇到那么多好人呢，不可思议。说点正经的吧，很有诱惑的走在路上，通过旅行改变了人生，但为啥国内的穷游西藏的据说都是刷X呢？究竟是老美好人比国人多还是这书可信性不高呢？</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://www.amazon.cn/gp/product/B00RRCUBIK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&camp=536&creative=3200&creativeASIN=B00RRCUBIK&linkCode=as2&tag=dante-23\" target=\"_blank\"><br>    <img src=\"https://images-cn.ssl-images-amazon.com/images/I/51DSREx3TaL.jpg\" alt=\"马伯庸笑翻中国简史\"><br></a></p>\n<blockquote>\n<p>书是好书，只是文不对题。这本小册子从不为现代人所重视的王朝德性，五行相生相克的文化角度，阐述了整个华夏文明几千年来各王朝为了标榜自己的正统性，竭力从不同角度解释套用五德终始说的一系列趣事。角度算是别出心裁，跟其他的所有说史的书都不一样，还是值得一读的。</p>\n</blockquote>","sticky":0},{"title":"我的阅读-2018","show":true,"date":"2018-03-09T09:02:00.000Z","_content":"# 已读\n<a class=\"fancybox\" rel=\"group\" href=\"https://amzn.to/2Px8cX1\">\n\t<img src=\"https://img3.doubanio.com/lpic/s3042670.jpg\" />\n<a>\n> 很不错的哲学入门书，以后我会推荐给我儿子在十几岁的时候看。写作也很有趣味，写了一个类似《盗梦空间》的书中书。哲学思辨也很有启发，但即便我们都是“缸中之脑”又能如何呢？现实生活中有这么多的问题需要去解决，追寻人生的意义什么的只能在偶尔的闲暇中去发问一下。也许我们穷其一生也不能活明白，也许人生哪有什么意义，只不过都是一个基因传承的载体罢了。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amzn.to/2P22egC\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28607882.jpg\" />\n</a>\n> 系统性学习Spring的第一本书，前面Spring核心基础原理部分讲的感觉有收获。后面关于各个Spring中间件的讲述感觉就一般了比较杂比较细节偏操作层面，且脱离实际生产实际，一般中间件实际使用的跟书中不太一致。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amzn.to/2P22H2m\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28588050.jpg\" />\n</a>\n> 偏实操，比较粗略的过了一遍。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B0011FH5B0/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=dante-23&creative=3200&linkCode=as2&creativeASIN=B0011FH5B0&linkId=12b5b40ffc949fbd497fff1379e8fb5e\">\n\t<img src=\"https://img3.doubanio.com/lpic/s6861782.jpg\" />\n</a>\n> \"每个时代都有一个转折点，都有一种新的认识和评判世界秩序的方法。我们这一代人也在惊讶我们自己的新宇宙观——我们认识世界秩序的新方法，实际上也在实现我们自己的价值，把我们搭成人类的阶梯，通向遥远的星辰。\"\n基本每年一本科普读物，最远到量子力学，弦理论的大名早听说过，这次终于涉及到了，给我的震撼不亚于高三那年看到\"熵\"时的冲击。正如相对论是为了调和经典牛顿力学在宏观高速情形下的冲突，量子力学是为了调和牛顿力学在微观尺度下的冲突一样，弦理论是为了调和相对论和量子力学间的冲突，试图找到一个包罗万象能解释世间一切的理论，而这个理论再次颠覆了我们对世界基本构成的认识：宇宙万物的基本构成是一根根震动的\"琴弦\"。在弦理论的世界里，世界不是无限分割的，弦理论的对偶性告诉我们，最小只能到普朗克长度的尺度，往下和往上是某种形式的镜像对称：h尺度和1/h尺度的世界是对称的，因而不存在量子涨落，宇宙爆炸前也不是一个点而是一个普朗克尺度的火球。而弦理论进一步加强了相对论时空不可分的认识，一切的性质都是时空组成的影响结果。弦理论的世界里，宇宙是11维的，1个时间维，10个空间维里只有3个是展开的，7个其余维度是蜷缩的。弦可以束缚住空间，弦理论的深刻和反直觉远超过了量子力学和相对论，但如果你跟随它的思想路径逐步去深入你不得不叹服这是一群如何天才的人才能发现如此深刻的宇宙奥秘。虽然现在还不得而知弦理论是真正正确的大一统宇宙真理还是只能自圆其说的纸面学说，期待有实验数据验证弦论的那么一天。\n\n\n<a class=\"fancybox\" rel=\"group\" href=\"\">\n\t<img src=\"https://img3.doubanio.com/lpic/s4524240.jpg\" />\n</a>\n> 系统了解一下Maven的工具书，写的还挺详细的。跟作者一起踢过球，挺逗的一人。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amzn.to/2PdPIuo\">\n    <img src=\"https://img3.doubanio.com/lpic/s27814883.jpg\" />\n</a>\n> 很好的一本书，从原始人类到现在的万物之长到未来有可能智人被替代，尤瓦尔为我们描述了整个人类的发展历程 。他的观点独特而具有启发，他认为智人之所以能成为万物之长，语言及“说故事”的能力起了决定性的作用，只有智人可以通过语言组织一些虚构的事物将成千上万的人类凝聚起来。\n 而人类历史的发展，方向也许是偶然的，但却是不可逆转的。农业革命就是个“陷阱”，虽然农业革命 让人类能获得更稳定的食物来源，但也将人类固定在了一个地方，同时也带来了人口的爆炸，需要付出更多艰辛的劳动来满足食物的需求。农业革命没有让人类过上更悠闲的生活，反而让他们比采集者祖先们过着更“悲惨”的生活。但人类已经无法再回到采集者的生活模式了。\n 而科技的发展是一把双刃剑，给人类生活带来便捷的同时，也暗藏着“智人末日”的种子，当科技发展到基因工程可以改变人类，人工智能可以替代人类工作的时候，当生化人类诞生的时候。。。可以想见，这些趋势随着科技的发展是不可遏制的，即使知道存在这种可能性，人类也无法扭转了。\n","source":"_posts/myreading-2018.md","raw":"title: 我的阅读-2018\nshow: true\ndate: 2018-03-09 17:02:00\ntags: 阅读\ncategories: 阅历\n---\n# 已读\n<a class=\"fancybox\" rel=\"group\" href=\"https://amzn.to/2Px8cX1\">\n\t<img src=\"https://img3.doubanio.com/lpic/s3042670.jpg\" />\n<a>\n> 很不错的哲学入门书，以后我会推荐给我儿子在十几岁的时候看。写作也很有趣味，写了一个类似《盗梦空间》的书中书。哲学思辨也很有启发，但即便我们都是“缸中之脑”又能如何呢？现实生活中有这么多的问题需要去解决，追寻人生的意义什么的只能在偶尔的闲暇中去发问一下。也许我们穷其一生也不能活明白，也许人生哪有什么意义，只不过都是一个基因传承的载体罢了。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amzn.to/2P22egC\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28607882.jpg\" />\n</a>\n> 系统性学习Spring的第一本书，前面Spring核心基础原理部分讲的感觉有收获。后面关于各个Spring中间件的讲述感觉就一般了比较杂比较细节偏操作层面，且脱离实际生产实际，一般中间件实际使用的跟书中不太一致。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amzn.to/2P22H2m\">\n\t<img src=\"https://img3.doubanio.com/lpic/s28588050.jpg\" />\n</a>\n> 偏实操，比较粗略的过了一遍。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amazon.cn/gp/product/B0011FH5B0/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=dante-23&creative=3200&linkCode=as2&creativeASIN=B0011FH5B0&linkId=12b5b40ffc949fbd497fff1379e8fb5e\">\n\t<img src=\"https://img3.doubanio.com/lpic/s6861782.jpg\" />\n</a>\n> \"每个时代都有一个转折点，都有一种新的认识和评判世界秩序的方法。我们这一代人也在惊讶我们自己的新宇宙观——我们认识世界秩序的新方法，实际上也在实现我们自己的价值，把我们搭成人类的阶梯，通向遥远的星辰。\"\n基本每年一本科普读物，最远到量子力学，弦理论的大名早听说过，这次终于涉及到了，给我的震撼不亚于高三那年看到\"熵\"时的冲击。正如相对论是为了调和经典牛顿力学在宏观高速情形下的冲突，量子力学是为了调和牛顿力学在微观尺度下的冲突一样，弦理论是为了调和相对论和量子力学间的冲突，试图找到一个包罗万象能解释世间一切的理论，而这个理论再次颠覆了我们对世界基本构成的认识：宇宙万物的基本构成是一根根震动的\"琴弦\"。在弦理论的世界里，世界不是无限分割的，弦理论的对偶性告诉我们，最小只能到普朗克长度的尺度，往下和往上是某种形式的镜像对称：h尺度和1/h尺度的世界是对称的，因而不存在量子涨落，宇宙爆炸前也不是一个点而是一个普朗克尺度的火球。而弦理论进一步加强了相对论时空不可分的认识，一切的性质都是时空组成的影响结果。弦理论的世界里，宇宙是11维的，1个时间维，10个空间维里只有3个是展开的，7个其余维度是蜷缩的。弦可以束缚住空间，弦理论的深刻和反直觉远超过了量子力学和相对论，但如果你跟随它的思想路径逐步去深入你不得不叹服这是一群如何天才的人才能发现如此深刻的宇宙奥秘。虽然现在还不得而知弦理论是真正正确的大一统宇宙真理还是只能自圆其说的纸面学说，期待有实验数据验证弦论的那么一天。\n\n\n<a class=\"fancybox\" rel=\"group\" href=\"\">\n\t<img src=\"https://img3.doubanio.com/lpic/s4524240.jpg\" />\n</a>\n> 系统了解一下Maven的工具书，写的还挺详细的。跟作者一起踢过球，挺逗的一人。\n\n<a class=\"fancybox\" rel=\"group\" href=\"https://amzn.to/2PdPIuo\">\n    <img src=\"https://img3.doubanio.com/lpic/s27814883.jpg\" />\n</a>\n> 很好的一本书，从原始人类到现在的万物之长到未来有可能智人被替代，尤瓦尔为我们描述了整个人类的发展历程 。他的观点独特而具有启发，他认为智人之所以能成为万物之长，语言及“说故事”的能力起了决定性的作用，只有智人可以通过语言组织一些虚构的事物将成千上万的人类凝聚起来。\n 而人类历史的发展，方向也许是偶然的，但却是不可逆转的。农业革命就是个“陷阱”，虽然农业革命 让人类能获得更稳定的食物来源，但也将人类固定在了一个地方，同时也带来了人口的爆炸，需要付出更多艰辛的劳动来满足食物的需求。农业革命没有让人类过上更悠闲的生活，反而让他们比采集者祖先们过着更“悲惨”的生活。但人类已经无法再回到采集者的生活模式了。\n 而科技的发展是一把双刃剑，给人类生活带来便捷的同时，也暗藏着“智人末日”的种子，当科技发展到基因工程可以改变人类，人工智能可以替代人类工作的时候，当生化人类诞生的时候。。。可以想见，这些趋势随着科技的发展是不可遏制的，即使知道存在这种可能性，人类也无法扭转了。\n","slug":"myreading-2018","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzwy0051fnpvvog3dmhw","content":"<h1 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h1><p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amzn.to/2Px8cX1\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s3042670.jpg\"><br><a></a></a></p>\n<blockquote>\n<p>很不错的哲学入门书，以后我会推荐给我儿子在十几岁的时候看。写作也很有趣味，写了一个类似《盗梦空间》的书中书。哲学思辨也很有启发，但即便我们都是“缸中之脑”又能如何呢？现实生活中有这么多的问题需要去解决，追寻人生的意义什么的只能在偶尔的闲暇中去发问一下。也许我们穷其一生也不能活明白，也许人生哪有什么意义，只不过都是一个基因传承的载体罢了。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amzn.to/2P22egC\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28607882.jpg\"><br></a></p>\n<blockquote>\n<p>系统性学习Spring的第一本书，前面Spring核心基础原理部分讲的感觉有收获。后面关于各个Spring中间件的讲述感觉就一般了比较杂比较细节偏操作层面，且脱离实际生产实际，一般中间件实际使用的跟书中不太一致。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amzn.to/2P22H2m\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28588050.jpg\"><br></a></p>\n<blockquote>\n<p>偏实操，比较粗略的过了一遍。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B0011FH5B0/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=dante-23&creative=3200&linkCode=as2&creativeASIN=B0011FH5B0&linkId=12b5b40ffc949fbd497fff1379e8fb5e\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s6861782.jpg\"><br></a></p>\n<blockquote>\n<p>“每个时代都有一个转折点，都有一种新的认识和评判世界秩序的方法。我们这一代人也在惊讶我们自己的新宇宙观——我们认识世界秩序的新方法，实际上也在实现我们自己的价值，把我们搭成人类的阶梯，通向遥远的星辰。”<br>基本每年一本科普读物，最远到量子力学，弦理论的大名早听说过，这次终于涉及到了，给我的震撼不亚于高三那年看到”熵”时的冲击。正如相对论是为了调和经典牛顿力学在宏观高速情形下的冲突，量子力学是为了调和牛顿力学在微观尺度下的冲突一样，弦理论是为了调和相对论和量子力学间的冲突，试图找到一个包罗万象能解释世间一切的理论，而这个理论再次颠覆了我们对世界基本构成的认识：宇宙万物的基本构成是一根根震动的”琴弦”。在弦理论的世界里，世界不是无限分割的，弦理论的对偶性告诉我们，最小只能到普朗克长度的尺度，往下和往上是某种形式的镜像对称：h尺度和1/h尺度的世界是对称的，因而不存在量子涨落，宇宙爆炸前也不是一个点而是一个普朗克尺度的火球。而弦理论进一步加强了相对论时空不可分的认识，一切的性质都是时空组成的影响结果。弦理论的世界里，宇宙是11维的，1个时间维，10个空间维里只有3个是展开的，7个其余维度是蜷缩的。弦可以束缚住空间，弦理论的深刻和反直觉远超过了量子力学和相对论，但如果你跟随它的思想路径逐步去深入你不得不叹服这是一群如何天才的人才能发现如此深刻的宇宙奥秘。虽然现在还不得而知弦理论是真正正确的大一统宇宙真理还是只能自圆其说的纸面学说，期待有实验数据验证弦论的那么一天。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"group\" href=\"\"><br>    <img src=\"https://img3.doubanio.com/lpic/s4524240.jpg\"><br></a></p>\n<blockquote>\n<p>系统了解一下Maven的工具书，写的还挺详细的。跟作者一起踢过球，挺逗的一人。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amzn.to/2PdPIuo\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s27814883.jpg\"><br></a></p>\n<blockquote>\n<p>很好的一本书，从原始人类到现在的万物之长到未来有可能智人被替代，尤瓦尔为我们描述了整个人类的发展历程 。他的观点独特而具有启发，他认为智人之所以能成为万物之长，语言及“说故事”的能力起了决定性的作用，只有智人可以通过语言组织一些虚构的事物将成千上万的人类凝聚起来。<br> 而人类历史的发展，方向也许是偶然的，但却是不可逆转的。农业革命就是个“陷阱”，虽然农业革命 让人类能获得更稳定的食物来源，但也将人类固定在了一个地方，同时也带来了人口的爆炸，需要付出更多艰辛的劳动来满足食物的需求。农业革命没有让人类过上更悠闲的生活，反而让他们比采集者祖先们过着更“悲惨”的生活。但人类已经无法再回到采集者的生活模式了。<br> 而科技的发展是一把双刃剑，给人类生活带来便捷的同时，也暗藏着“智人末日”的种子，当科技发展到基因工程可以改变人类，人工智能可以替代人类工作的时候，当生化人类诞生的时候。。。可以想见，这些趋势随着科技的发展是不可遏制的，即使知道存在这种可能性，人类也无法扭转了。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"已读\"><a href=\"#已读\" class=\"headerlink\" title=\"已读\"></a>已读</h1><p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amzn.to/2Px8cX1\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s3042670.jpg\"><br><a></a></a></p>\n<blockquote>\n<p>很不错的哲学入门书，以后我会推荐给我儿子在十几岁的时候看。写作也很有趣味，写了一个类似《盗梦空间》的书中书。哲学思辨也很有启发，但即便我们都是“缸中之脑”又能如何呢？现实生活中有这么多的问题需要去解决，追寻人生的意义什么的只能在偶尔的闲暇中去发问一下。也许我们穷其一生也不能活明白，也许人生哪有什么意义，只不过都是一个基因传承的载体罢了。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amzn.to/2P22egC\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28607882.jpg\"><br></a></p>\n<blockquote>\n<p>系统性学习Spring的第一本书，前面Spring核心基础原理部分讲的感觉有收获。后面关于各个Spring中间件的讲述感觉就一般了比较杂比较细节偏操作层面，且脱离实际生产实际，一般中间件实际使用的跟书中不太一致。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amzn.to/2P22H2m\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s28588050.jpg\"><br></a></p>\n<blockquote>\n<p>偏实操，比较粗略的过了一遍。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amazon.cn/gp/product/B0011FH5B0/ref=as_li_qf_asin_il_tl?ie=UTF8&tag=dante-23&creative=3200&linkCode=as2&creativeASIN=B0011FH5B0&linkId=12b5b40ffc949fbd497fff1379e8fb5e\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s6861782.jpg\"><br></a></p>\n<blockquote>\n<p>“每个时代都有一个转折点，都有一种新的认识和评判世界秩序的方法。我们这一代人也在惊讶我们自己的新宇宙观——我们认识世界秩序的新方法，实际上也在实现我们自己的价值，把我们搭成人类的阶梯，通向遥远的星辰。”<br>基本每年一本科普读物，最远到量子力学，弦理论的大名早听说过，这次终于涉及到了，给我的震撼不亚于高三那年看到”熵”时的冲击。正如相对论是为了调和经典牛顿力学在宏观高速情形下的冲突，量子力学是为了调和牛顿力学在微观尺度下的冲突一样，弦理论是为了调和相对论和量子力学间的冲突，试图找到一个包罗万象能解释世间一切的理论，而这个理论再次颠覆了我们对世界基本构成的认识：宇宙万物的基本构成是一根根震动的”琴弦”。在弦理论的世界里，世界不是无限分割的，弦理论的对偶性告诉我们，最小只能到普朗克长度的尺度，往下和往上是某种形式的镜像对称：h尺度和1/h尺度的世界是对称的，因而不存在量子涨落，宇宙爆炸前也不是一个点而是一个普朗克尺度的火球。而弦理论进一步加强了相对论时空不可分的认识，一切的性质都是时空组成的影响结果。弦理论的世界里，宇宙是11维的，1个时间维，10个空间维里只有3个是展开的，7个其余维度是蜷缩的。弦可以束缚住空间，弦理论的深刻和反直觉远超过了量子力学和相对论，但如果你跟随它的思想路径逐步去深入你不得不叹服这是一群如何天才的人才能发现如此深刻的宇宙奥秘。虽然现在还不得而知弦理论是真正正确的大一统宇宙真理还是只能自圆其说的纸面学说，期待有实验数据验证弦论的那么一天。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"group\" href=\"\"><br>    <img src=\"https://img3.doubanio.com/lpic/s4524240.jpg\"><br></a></p>\n<blockquote>\n<p>系统了解一下Maven的工具书，写的还挺详细的。跟作者一起踢过球，挺逗的一人。</p>\n</blockquote>\n<p><a class=\"fancybox\" rel=\"noopener\" href=\"https://amzn.to/2PdPIuo\" target=\"_blank\"><br>    <img src=\"https://img3.doubanio.com/lpic/s27814883.jpg\"><br></a></p>\n<blockquote>\n<p>很好的一本书，从原始人类到现在的万物之长到未来有可能智人被替代，尤瓦尔为我们描述了整个人类的发展历程 。他的观点独特而具有启发，他认为智人之所以能成为万物之长，语言及“说故事”的能力起了决定性的作用，只有智人可以通过语言组织一些虚构的事物将成千上万的人类凝聚起来。<br> 而人类历史的发展，方向也许是偶然的，但却是不可逆转的。农业革命就是个“陷阱”，虽然农业革命 让人类能获得更稳定的食物来源，但也将人类固定在了一个地方，同时也带来了人口的爆炸，需要付出更多艰辛的劳动来满足食物的需求。农业革命没有让人类过上更悠闲的生活，反而让他们比采集者祖先们过着更“悲惨”的生活。但人类已经无法再回到采集者的生活模式了。<br> 而科技的发展是一把双刃剑，给人类生活带来便捷的同时，也暗藏着“智人末日”的种子，当科技发展到基因工程可以改变人类，人工智能可以替代人类工作的时候，当生化人类诞生的时候。。。可以想见，这些趋势随着科技的发展是不可遏制的，即使知道存在这种可能性，人类也无法扭转了。</p>\n</blockquote>\n","sticky":0},{"title":"mysql中CASE...WHEN的使用","show":true,"date":"2018-05-20T06:23:49.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 13/53，每周一篇博，坚持！\n\n#### 背景\nMysql一直是我的弱项之一，以前跟数据库打交道比较少，基本只限于基本的操作。现在专职做后端之后，跟数据库打交道的机会多了很多，Mysql这块也在有意识的补强。这篇博客就记录一下最近项目中使用到的CASE...WHEN的使用。\n\n很多情况下，我们会用到映射结构，如将某个类型描述映射为某个数字，常见的如页面下拉框中通常我们会把文本赋值具体显示的值，把value赋值映射过的数字，如下代码所示：\n```\n<select name=\"status\">\n\t<option value=\"0\">全部</option>\n\t<option value=\"1\">试运营</option>\n\t<option value=\"2\">运营中</option>\n\t<option value=\"3\">已退出</option>\n</select>\n```\n我们在代码中拿到了相应的数字通常是使用Switch...Case结构来获取映射的状态值。而Mysql中的CASE...WHEN结构就是做类似的事情。\n\n<!--more-->\n\n#### 使用方式\n假设下面的场景：\n我们要从某个表中同步数据，源表的status字段存储的为tinyint的数字用来表示状态，映射关系如上述select中所述。我们希望同步过来后直接以文本形式存储在目的表中。\n采用MySQL的CASE...WHEN可以这么写：\n```\nINSERT TABLE dest_table\n\tSELECT CASE status\n\t\tWHEN 1 THEN \"试运营\"\n\t\tWHEN 2 THEN \"运营\"\n\t\tWHEN 3 THEN \"已退出\"\n\tEND\nFROM origin_table;\n```\n\n类似这样的需求，将后端程序中的映射提前到了数据库处理，减少了后端开发的成本。\n\n我们再看一个稍微复杂一点的需求：\n我们需要将具体的数值对外脱敏，脱敏层级为0-50，50-100，100-200，200+。意味着对应区间内的数值渲染时都将映射为区间显示。\n如果要在后端程序里做，我们需要额外编写数据映射处理方法，就不如直接在Mysql中处理来的简单方便：\n```\nSELECT CASE\n\tWHEN (ord_cnt > 0 AND ord_cnt <= 50) THEN \"0-50单\"\n\tWHEN (ord_cnt > 50 AND ord_cnt <= 100) THEN \"50-100单\"\n\tWHEN (ord_cnt > 100 AND ord_cnt <= 200) THEN \"100,200单\"\n\tWHEN (ord_cnt > 200) THEN \"200单以上\"\nFROM origin_table;\n```\n","source":"_posts/mysql-case-when.md","raw":"title: mysql中CASE...WHEN的使用\nshow: true\ndate: 2018-05-20 14:23:49\ntags: [mysql,case when]\ncategories: 技术人生\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 13/53，每周一篇博，坚持！\n\n#### 背景\nMysql一直是我的弱项之一，以前跟数据库打交道比较少，基本只限于基本的操作。现在专职做后端之后，跟数据库打交道的机会多了很多，Mysql这块也在有意识的补强。这篇博客就记录一下最近项目中使用到的CASE...WHEN的使用。\n\n很多情况下，我们会用到映射结构，如将某个类型描述映射为某个数字，常见的如页面下拉框中通常我们会把文本赋值具体显示的值，把value赋值映射过的数字，如下代码所示：\n```\n<select name=\"status\">\n\t<option value=\"0\">全部</option>\n\t<option value=\"1\">试运营</option>\n\t<option value=\"2\">运营中</option>\n\t<option value=\"3\">已退出</option>\n</select>\n```\n我们在代码中拿到了相应的数字通常是使用Switch...Case结构来获取映射的状态值。而Mysql中的CASE...WHEN结构就是做类似的事情。\n\n<!--more-->\n\n#### 使用方式\n假设下面的场景：\n我们要从某个表中同步数据，源表的status字段存储的为tinyint的数字用来表示状态，映射关系如上述select中所述。我们希望同步过来后直接以文本形式存储在目的表中。\n采用MySQL的CASE...WHEN可以这么写：\n```\nINSERT TABLE dest_table\n\tSELECT CASE status\n\t\tWHEN 1 THEN \"试运营\"\n\t\tWHEN 2 THEN \"运营\"\n\t\tWHEN 3 THEN \"已退出\"\n\tEND\nFROM origin_table;\n```\n\n类似这样的需求，将后端程序中的映射提前到了数据库处理，减少了后端开发的成本。\n\n我们再看一个稍微复杂一点的需求：\n我们需要将具体的数值对外脱敏，脱敏层级为0-50，50-100，100-200，200+。意味着对应区间内的数值渲染时都将映射为区间显示。\n如果要在后端程序里做，我们需要额外编写数据映射处理方法，就不如直接在Mysql中处理来的简单方便：\n```\nSELECT CASE\n\tWHEN (ord_cnt > 0 AND ord_cnt <= 50) THEN \"0-50单\"\n\tWHEN (ord_cnt > 50 AND ord_cnt <= 100) THEN \"50-100单\"\n\tWHEN (ord_cnt > 100 AND ord_cnt <= 200) THEN \"100,200单\"\n\tWHEN (ord_cnt > 200) THEN \"200单以上\"\nFROM origin_table;\n```\n","slug":"mysql-case-when","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzx10054fnpvzyengkft","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 13/53，每周一篇博，坚持！</p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>Mysql一直是我的弱项之一，以前跟数据库打交道比较少，基本只限于基本的操作。现在专职做后端之后，跟数据库打交道的机会多了很多，Mysql这块也在有意识的补强。这篇博客就记录一下最近项目中使用到的CASE…WHEN的使用。</p>\n<p>很多情况下，我们会用到映射结构，如将某个类型描述映射为某个数字，常见的如页面下拉框中通常我们会把文本赋值具体显示的值，把value赋值映射过的数字，如下代码所示：<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;select name=<span class=\"string\">\"status\"</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">option</span> <span class=\"keyword\">value</span>=<span class=\"string\">\"0\"</span>&gt;全部&lt;/<span class=\"keyword\">option</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">option</span> <span class=\"keyword\">value</span>=<span class=\"string\">\"1\"</span>&gt;试运营&lt;/<span class=\"keyword\">option</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">option</span> <span class=\"keyword\">value</span>=<span class=\"string\">\"2\"</span>&gt;运营中&lt;/<span class=\"keyword\">option</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">option</span> <span class=\"keyword\">value</span>=<span class=\"string\">\"3\"</span>&gt;已退出&lt;/<span class=\"keyword\">option</span>&gt;</span><br><span class=\"line\">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p>\n<p>我们在代码中拿到了相应的数字通常是使用Switch…Case结构来获取映射的状态值。而Mysql中的CASE…WHEN结构就是做类似的事情。</p>\n<a id=\"more\"></a>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><p>假设下面的场景：<br>我们要从某个表中同步数据，源表的status字段存储的为tinyint的数字用来表示状态，映射关系如上述select中所述。我们希望同步过来后直接以文本形式存储在目的表中。<br>采用MySQL的CASE…WHEN可以这么写：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">TABLE</span> dest_table</span><br><span class=\"line\">\t<span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> <span class=\"keyword\">status</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">WHEN</span> <span class=\"number\">1</span> <span class=\"keyword\">THEN</span> <span class=\"string\">\"试运营\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">WHEN</span> <span class=\"number\">2</span> <span class=\"keyword\">THEN</span> <span class=\"string\">\"运营\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">WHEN</span> <span class=\"number\">3</span> <span class=\"keyword\">THEN</span> <span class=\"string\">\"已退出\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">END</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> origin_table;</span><br></pre></td></tr></table></figure></p>\n<p>类似这样的需求，将后端程序中的映射提前到了数据库处理，减少了后端开发的成本。</p>\n<p>我们再看一个稍微复杂一点的需求：<br>我们需要将具体的数值对外脱敏，脱敏层级为0-50，50-100，100-200，200+。意味着对应区间内的数值渲染时都将映射为区间显示。<br>如果要在后端程序里做，我们需要额外编写数据映射处理方法，就不如直接在Mysql中处理来的简单方便：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span></span><br><span class=\"line\">\t<span class=\"keyword\">WHEN</span> (ord_cnt &gt; <span class=\"number\">0</span> <span class=\"keyword\">AND</span> ord_cnt &lt;= <span class=\"number\">50</span>) <span class=\"keyword\">THEN</span> <span class=\"string\">\"0-50单\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">WHEN</span> (ord_cnt &gt; <span class=\"number\">50</span> <span class=\"keyword\">AND</span> ord_cnt &lt;= <span class=\"number\">100</span>) <span class=\"keyword\">THEN</span> <span class=\"string\">\"50-100单\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">WHEN</span> (ord_cnt &gt; <span class=\"number\">100</span> <span class=\"keyword\">AND</span> ord_cnt &lt;= <span class=\"number\">200</span>) <span class=\"keyword\">THEN</span> <span class=\"string\">\"100,200单\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">WHEN</span> (ord_cnt &gt; <span class=\"number\">200</span>) <span class=\"keyword\">THEN</span> <span class=\"string\">\"200单以上\"</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> origin_table;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 13/53，每周一篇博，坚持！</p>\n<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>Mysql一直是我的弱项之一，以前跟数据库打交道比较少，基本只限于基本的操作。现在专职做后端之后，跟数据库打交道的机会多了很多，Mysql这块也在有意识的补强。这篇博客就记录一下最近项目中使用到的CASE…WHEN的使用。</p>\n<p>很多情况下，我们会用到映射结构，如将某个类型描述映射为某个数字，常见的如页面下拉框中通常我们会把文本赋值具体显示的值，把value赋值映射过的数字，如下代码所示：<br><figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;select name=<span class=\"string\">\"status\"</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">option</span> <span class=\"keyword\">value</span>=<span class=\"string\">\"0\"</span>&gt;全部&lt;/<span class=\"keyword\">option</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">option</span> <span class=\"keyword\">value</span>=<span class=\"string\">\"1\"</span>&gt;试运营&lt;/<span class=\"keyword\">option</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">option</span> <span class=\"keyword\">value</span>=<span class=\"string\">\"2\"</span>&gt;运营中&lt;/<span class=\"keyword\">option</span>&gt;</span><br><span class=\"line\">\t&lt;<span class=\"keyword\">option</span> <span class=\"keyword\">value</span>=<span class=\"string\">\"3\"</span>&gt;已退出&lt;/<span class=\"keyword\">option</span>&gt;</span><br><span class=\"line\">&lt;/select&gt;</span><br></pre></td></tr></table></figure></p>\n<p>我们在代码中拿到了相应的数字通常是使用Switch…Case结构来获取映射的状态值。而Mysql中的CASE…WHEN结构就是做类似的事情。</p>","more":"<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><p>假设下面的场景：<br>我们要从某个表中同步数据，源表的status字段存储的为tinyint的数字用来表示状态，映射关系如上述select中所述。我们希望同步过来后直接以文本形式存储在目的表中。<br>采用MySQL的CASE…WHEN可以这么写：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">TABLE</span> dest_table</span><br><span class=\"line\">\t<span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> <span class=\"keyword\">status</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">WHEN</span> <span class=\"number\">1</span> <span class=\"keyword\">THEN</span> <span class=\"string\">\"试运营\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">WHEN</span> <span class=\"number\">2</span> <span class=\"keyword\">THEN</span> <span class=\"string\">\"运营\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">WHEN</span> <span class=\"number\">3</span> <span class=\"keyword\">THEN</span> <span class=\"string\">\"已退出\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">END</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> origin_table;</span><br></pre></td></tr></table></figure></p>\n<p>类似这样的需求，将后端程序中的映射提前到了数据库处理，减少了后端开发的成本。</p>\n<p>我们再看一个稍微复杂一点的需求：<br>我们需要将具体的数值对外脱敏，脱敏层级为0-50，50-100，100-200，200+。意味着对应区间内的数值渲染时都将映射为区间显示。<br>如果要在后端程序里做，我们需要额外编写数据映射处理方法，就不如直接在Mysql中处理来的简单方便：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span></span><br><span class=\"line\">\t<span class=\"keyword\">WHEN</span> (ord_cnt &gt; <span class=\"number\">0</span> <span class=\"keyword\">AND</span> ord_cnt &lt;= <span class=\"number\">50</span>) <span class=\"keyword\">THEN</span> <span class=\"string\">\"0-50单\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">WHEN</span> (ord_cnt &gt; <span class=\"number\">50</span> <span class=\"keyword\">AND</span> ord_cnt &lt;= <span class=\"number\">100</span>) <span class=\"keyword\">THEN</span> <span class=\"string\">\"50-100单\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">WHEN</span> (ord_cnt &gt; <span class=\"number\">100</span> <span class=\"keyword\">AND</span> ord_cnt &lt;= <span class=\"number\">200</span>) <span class=\"keyword\">THEN</span> <span class=\"string\">\"100,200单\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">WHEN</span> (ord_cnt &gt; <span class=\"number\">200</span>) <span class=\"keyword\">THEN</span> <span class=\"string\">\"200单以上\"</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> origin_table;</span><br></pre></td></tr></table></figure></p>","sticky":0},{"title":"mysql中in与find_in_set的使用","show":true,"date":"2018-06-03T15:42:10.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 15/53，每周一篇博，坚持！\n\n0. 写在前面\n\n    最近在工作中误用了mysql的in查询，导致了一个线上问题，花了我一个下午的时间排查加修复。mysql算是我的一个薄弱项了，主要是没有系统性的训练过。一些没用过的查询方式使用的时候借助搜索引擎，中文技术领域里一些技术分享还是比较坑的，语焉不详的算是一部分，误人子弟的也不乏其人。\n\n    这篇博文就主要整理一下我所梳理的mysql中in的用法及和find_in_set用法的差异所在。也许网上已经有很多的文章介绍了，但不乏一些介绍不够清晰的，我这里的博文都是经过实践验证的，不敢保证一定做到简洁明了人人能懂，但绝不做误人子弟之事。\n\n    <!--more-->\n\n1. in和find_in_set简介\n    \n    这两个命令从字面 意思上来看，貌似都是用来查询某个字段是否在某个值范围内的意思。但实际上两者的使用场景上是有区别的，我那个线上问题就是在应该使用find_in_set的时候误用了in。\n    - in\n        首先in做的是值与值间的精确匹配，它的用法如下：\n        \n        `column in (value1,value2,value3...)`    \n        \n        \"...\"表示后面可以继续跟参数，也就是说in操作可以有任意的参数，每个参数间用逗号分隔。\n        语句将**依次**查询字段的值是否与参数给出的值匹配。如果匹配则表示查询成功。\n        **这里值得注意的是**: 很多网上的文章说的是in比较的是等不等，也就是说column要和后面values组成的逗号序列值相等。这是不对的，实际上是要拿column的值依次和values组成的逗号序列值做匹配，如果value1和column值相等则算匹配成功，否则都算失败。\n    - find_in_set\n        而find_in_set是从一个以逗号分隔的字符串列表中查找某个指定的字符串，它的用法如下：\n        \n        `find_in_set(str,\"value1,value2,value3...\")`\n        \n        可以看出find_in_set操作只可以接受两个参数，只是第二个参数可以是一个任意长度的以逗号分隔的字符串列表。\n        如果在第二个参数这个字符串列表中找到第一个参数时则匹配成功。\n            \n    不知道说清楚没有，再举个例子说明一下。\n    \n    如数据库表存储的是图书信息，图书信息都分门别类按照书目所属的类别存储，一本图书只属于一个类别。此时我们希望查询出计算机和通信工程两个分类的书籍信息，就可以使用in来查询。\n    因为这明显是要将书目类别信息与给定的参数值做匹配的需求。\n    \n    然而如果另一个数据库表存储的是某个学生近期借阅的书籍信息，每个学生一条数据，其中借阅书籍字段存储了他近期所借阅的所有书籍的书号。此时我们希望查询出该学生近期是否借阅过某本书，这时就可以使用find_in_set来查询。因为数据库里借阅书籍字段存储的是一串以逗号分隔的书号，这明显是要在一串字符串分隔的数据中查找指定的字符的需求。\n    \n    从这两个小例子中可以看出，我们可以简单地以数据库存储的字段是否是逗号分隔的字符串列表来划分是否要使用find_in_set。\n    \n2. 示例\n    \n    以我实际遇到的问题为例，我要处理的表数据存储的字段为readedPartnerIds：以逗号形式存储了服务商的id。\n    我的需求是：数据库里每一条记录代表了一条发给服务商的消息，如果某个服务商阅读过这条消息后，将该服务商的id追加到已读服务商id字段中，如果该服务商未读，则弹出消息。\n    \n    开始我错误地使用了in操作：\n    \n    `select * from table where #partnerId# in (readedPartnerIds);`\n    \n    这导致查询不到结果，该显示的消息弹框未显示出来。(有一条例外，即恰好partnerId值为readedPartnerIds字段的第一个值)\n    正确的写法应该使用 find_in_set操作：\n    \n    `select * from table where find_in_set(#partnerId#,readedPartnerIds)`\n    \n    这样就能正确的从数据库存储的服务商id列表中查出是否包含了该服务商id。\n    \n    \n    \n\n","source":"_posts/mysql-in-find_in_set.md","raw":"title: mysql中in与find_in_set的使用\nshow: true\ndate: 2018-06-03 23:42:10\ntags: [mysql,in,find_in_set]\ncategories: 技术人生\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 15/53，每周一篇博，坚持！\n\n0. 写在前面\n\n    最近在工作中误用了mysql的in查询，导致了一个线上问题，花了我一个下午的时间排查加修复。mysql算是我的一个薄弱项了，主要是没有系统性的训练过。一些没用过的查询方式使用的时候借助搜索引擎，中文技术领域里一些技术分享还是比较坑的，语焉不详的算是一部分，误人子弟的也不乏其人。\n\n    这篇博文就主要整理一下我所梳理的mysql中in的用法及和find_in_set用法的差异所在。也许网上已经有很多的文章介绍了，但不乏一些介绍不够清晰的，我这里的博文都是经过实践验证的，不敢保证一定做到简洁明了人人能懂，但绝不做误人子弟之事。\n\n    <!--more-->\n\n1. in和find_in_set简介\n    \n    这两个命令从字面 意思上来看，貌似都是用来查询某个字段是否在某个值范围内的意思。但实际上两者的使用场景上是有区别的，我那个线上问题就是在应该使用find_in_set的时候误用了in。\n    - in\n        首先in做的是值与值间的精确匹配，它的用法如下：\n        \n        `column in (value1,value2,value3...)`    \n        \n        \"...\"表示后面可以继续跟参数，也就是说in操作可以有任意的参数，每个参数间用逗号分隔。\n        语句将**依次**查询字段的值是否与参数给出的值匹配。如果匹配则表示查询成功。\n        **这里值得注意的是**: 很多网上的文章说的是in比较的是等不等，也就是说column要和后面values组成的逗号序列值相等。这是不对的，实际上是要拿column的值依次和values组成的逗号序列值做匹配，如果value1和column值相等则算匹配成功，否则都算失败。\n    - find_in_set\n        而find_in_set是从一个以逗号分隔的字符串列表中查找某个指定的字符串，它的用法如下：\n        \n        `find_in_set(str,\"value1,value2,value3...\")`\n        \n        可以看出find_in_set操作只可以接受两个参数，只是第二个参数可以是一个任意长度的以逗号分隔的字符串列表。\n        如果在第二个参数这个字符串列表中找到第一个参数时则匹配成功。\n            \n    不知道说清楚没有，再举个例子说明一下。\n    \n    如数据库表存储的是图书信息，图书信息都分门别类按照书目所属的类别存储，一本图书只属于一个类别。此时我们希望查询出计算机和通信工程两个分类的书籍信息，就可以使用in来查询。\n    因为这明显是要将书目类别信息与给定的参数值做匹配的需求。\n    \n    然而如果另一个数据库表存储的是某个学生近期借阅的书籍信息，每个学生一条数据，其中借阅书籍字段存储了他近期所借阅的所有书籍的书号。此时我们希望查询出该学生近期是否借阅过某本书，这时就可以使用find_in_set来查询。因为数据库里借阅书籍字段存储的是一串以逗号分隔的书号，这明显是要在一串字符串分隔的数据中查找指定的字符的需求。\n    \n    从这两个小例子中可以看出，我们可以简单地以数据库存储的字段是否是逗号分隔的字符串列表来划分是否要使用find_in_set。\n    \n2. 示例\n    \n    以我实际遇到的问题为例，我要处理的表数据存储的字段为readedPartnerIds：以逗号形式存储了服务商的id。\n    我的需求是：数据库里每一条记录代表了一条发给服务商的消息，如果某个服务商阅读过这条消息后，将该服务商的id追加到已读服务商id字段中，如果该服务商未读，则弹出消息。\n    \n    开始我错误地使用了in操作：\n    \n    `select * from table where #partnerId# in (readedPartnerIds);`\n    \n    这导致查询不到结果，该显示的消息弹框未显示出来。(有一条例外，即恰好partnerId值为readedPartnerIds字段的第一个值)\n    正确的写法应该使用 find_in_set操作：\n    \n    `select * from table where find_in_set(#partnerId#,readedPartnerIds)`\n    \n    这样就能正确的从数据库存储的服务商id列表中查出是否包含了该服务商id。\n    \n    \n    \n\n","slug":"mysql-in-find_in_set","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzx30059fnpvnqkdltcu","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 15/53，每周一篇博，坚持！</p>\n<ol start=\"0\">\n<li><p>写在前面</p>\n<p> 最近在工作中误用了mysql的in查询，导致了一个线上问题，花了我一个下午的时间排查加修复。mysql算是我的一个薄弱项了，主要是没有系统性的训练过。一些没用过的查询方式使用的时候借助搜索引擎，中文技术领域里一些技术分享还是比较坑的，语焉不详的算是一部分，误人子弟的也不乏其人。</p>\n<p> 这篇博文就主要整理一下我所梳理的mysql中in的用法及和find_in_set用法的差异所在。也许网上已经有很多的文章介绍了，但不乏一些介绍不够清晰的，我这里的博文都是经过实践验证的，不敢保证一定做到简洁明了人人能懂，但绝不做误人子弟之事。</p>\n <a id=\"more\"></a>\n</li>\n<li><p>in和find_in_set简介</p>\n<p> 这两个命令从字面 意思上来看，貌似都是用来查询某个字段是否在某个值范围内的意思。但实际上两者的使用场景上是有区别的，我那个线上问题就是在应该使用find_in_set的时候误用了in。</p>\n<ul>\n<li><p>in<br>  首先in做的是值与值间的精确匹配，它的用法如下：</p>\n<p>  <code>column in (value1,value2,value3...)</code>    </p>\n<p>  “…”表示后面可以继续跟参数，也就是说in操作可以有任意的参数，每个参数间用逗号分隔。<br>  语句将<strong>依次</strong>查询字段的值是否与参数给出的值匹配。如果匹配则表示查询成功。<br>  <strong>这里值得注意的是</strong>: 很多网上的文章说的是in比较的是等不等，也就是说column要和后面values组成的逗号序列值相等。这是不对的，实际上是要拿column的值依次和values组成的逗号序列值做匹配，如果value1和column值相等则算匹配成功，否则都算失败。</p>\n</li>\n<li><p>find_in_set<br>  而find_in_set是从一个以逗号分隔的字符串列表中查找某个指定的字符串，它的用法如下：</p>\n<p>  <code>find_in_set(str,&quot;value1,value2,value3...&quot;)</code></p>\n<p>  可以看出find_in_set操作只可以接受两个参数，只是第二个参数可以是一个任意长度的以逗号分隔的字符串列表。<br>  如果在第二个参数这个字符串列表中找到第一个参数时则匹配成功。</p>\n<p>不知道说清楚没有，再举个例子说明一下。</p>\n<p>如数据库表存储的是图书信息，图书信息都分门别类按照书目所属的类别存储，一本图书只属于一个类别。此时我们希望查询出计算机和通信工程两个分类的书籍信息，就可以使用in来查询。<br>因为这明显是要将书目类别信息与给定的参数值做匹配的需求。</p>\n<p>然而如果另一个数据库表存储的是某个学生近期借阅的书籍信息，每个学生一条数据，其中借阅书籍字段存储了他近期所借阅的所有书籍的书号。此时我们希望查询出该学生近期是否借阅过某本书，这时就可以使用find_in_set来查询。因为数据库里借阅书籍字段存储的是一串以逗号分隔的书号，这明显是要在一串字符串分隔的数据中查找指定的字符的需求。</p>\n<p>从这两个小例子中可以看出，我们可以简单地以数据库存储的字段是否是逗号分隔的字符串列表来划分是否要使用find_in_set。</p>\n</li>\n</ul>\n</li>\n<li><p>示例</p>\n<p> 以我实际遇到的问题为例，我要处理的表数据存储的字段为readedPartnerIds：以逗号形式存储了服务商的id。<br> 我的需求是：数据库里每一条记录代表了一条发给服务商的消息，如果某个服务商阅读过这条消息后，将该服务商的id追加到已读服务商id字段中，如果该服务商未读，则弹出消息。</p>\n<p> 开始我错误地使用了in操作：</p>\n<p> <code>select * from table where #partnerId# in (readedPartnerIds);</code></p>\n<p> 这导致查询不到结果，该显示的消息弹框未显示出来。(有一条例外，即恰好partnerId值为readedPartnerIds字段的第一个值)<br> 正确的写法应该使用 find_in_set操作：</p>\n<p> <code>select * from table where find_in_set(#partnerId#,readedPartnerIds)</code></p>\n<p> 这样就能正确的从数据库存储的服务商id列表中查出是否包含了该服务商id。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 15/53，每周一篇博，坚持！</p>\n<ol start=\"0\">\n<li><p>写在前面</p>\n<p> 最近在工作中误用了mysql的in查询，导致了一个线上问题，花了我一个下午的时间排查加修复。mysql算是我的一个薄弱项了，主要是没有系统性的训练过。一些没用过的查询方式使用的时候借助搜索引擎，中文技术领域里一些技术分享还是比较坑的，语焉不详的算是一部分，误人子弟的也不乏其人。</p>\n<p> 这篇博文就主要整理一下我所梳理的mysql中in的用法及和find_in_set用法的差异所在。也许网上已经有很多的文章介绍了，但不乏一些介绍不够清晰的，我这里的博文都是经过实践验证的，不敢保证一定做到简洁明了人人能懂，但绝不做误人子弟之事。</p>","more":"</li>\n<li><p>in和find_in_set简介</p>\n<p> 这两个命令从字面 意思上来看，貌似都是用来查询某个字段是否在某个值范围内的意思。但实际上两者的使用场景上是有区别的，我那个线上问题就是在应该使用find_in_set的时候误用了in。</p>\n<ul>\n<li><p>in<br>  首先in做的是值与值间的精确匹配，它的用法如下：</p>\n<p>  <code>column in (value1,value2,value3...)</code>    </p>\n<p>  “…”表示后面可以继续跟参数，也就是说in操作可以有任意的参数，每个参数间用逗号分隔。<br>  语句将<strong>依次</strong>查询字段的值是否与参数给出的值匹配。如果匹配则表示查询成功。<br>  <strong>这里值得注意的是</strong>: 很多网上的文章说的是in比较的是等不等，也就是说column要和后面values组成的逗号序列值相等。这是不对的，实际上是要拿column的值依次和values组成的逗号序列值做匹配，如果value1和column值相等则算匹配成功，否则都算失败。</p>\n</li>\n<li><p>find_in_set<br>  而find_in_set是从一个以逗号分隔的字符串列表中查找某个指定的字符串，它的用法如下：</p>\n<p>  <code>find_in_set(str,&quot;value1,value2,value3...&quot;)</code></p>\n<p>  可以看出find_in_set操作只可以接受两个参数，只是第二个参数可以是一个任意长度的以逗号分隔的字符串列表。<br>  如果在第二个参数这个字符串列表中找到第一个参数时则匹配成功。</p>\n<p>不知道说清楚没有，再举个例子说明一下。</p>\n<p>如数据库表存储的是图书信息，图书信息都分门别类按照书目所属的类别存储，一本图书只属于一个类别。此时我们希望查询出计算机和通信工程两个分类的书籍信息，就可以使用in来查询。<br>因为这明显是要将书目类别信息与给定的参数值做匹配的需求。</p>\n<p>然而如果另一个数据库表存储的是某个学生近期借阅的书籍信息，每个学生一条数据，其中借阅书籍字段存储了他近期所借阅的所有书籍的书号。此时我们希望查询出该学生近期是否借阅过某本书，这时就可以使用find_in_set来查询。因为数据库里借阅书籍字段存储的是一串以逗号分隔的书号，这明显是要在一串字符串分隔的数据中查找指定的字符的需求。</p>\n<p>从这两个小例子中可以看出，我们可以简单地以数据库存储的字段是否是逗号分隔的字符串列表来划分是否要使用find_in_set。</p>\n</li>\n</ul>\n</li>\n<li><p>示例</p>\n<p> 以我实际遇到的问题为例，我要处理的表数据存储的字段为readedPartnerIds：以逗号形式存储了服务商的id。<br> 我的需求是：数据库里每一条记录代表了一条发给服务商的消息，如果某个服务商阅读过这条消息后，将该服务商的id追加到已读服务商id字段中，如果该服务商未读，则弹出消息。</p>\n<p> 开始我错误地使用了in操作：</p>\n<p> <code>select * from table where #partnerId# in (readedPartnerIds);</code></p>\n<p> 这导致查询不到结果，该显示的消息弹框未显示出来。(有一条例外，即恰好partnerId值为readedPartnerIds字段的第一个值)<br> 正确的写法应该使用 find_in_set操作：</p>\n<p> <code>select * from table where find_in_set(#partnerId#,readedPartnerIds)</code></p>\n<p> 这样就能正确的从数据库存储的服务商id列表中查出是否包含了该服务商id。</p>\n</li>\n</ol>","sticky":0},{"title":"Nodejs使用session、cookie进行登录验证功能的实现","show":true,"date":"2016-06-08T05:23:32.000Z","_content":"#### 背景\n我在业余开发了一个[**藏经阁**](http://favlink.me)项目，它是一个完全针对用户定制化的网址收藏导航网站。因此用户注册和登录验证就成了最基本的需求和问题。\n藏经阁使用了`Node Express`框架进行开发，因此本篇简单总结一下Node使用session和cookie进行登录以及权限验证的过程。\n\n#### Cookie和Session\n首先我们先来了解一下登录验证的原理。\n\n众所周知，HTTP是一个无状态协议，所以客户端每次发出请求时，下一次请求无法得知上一次请求所包含的状态数据，如何能把一个用户的状态数据关联起来呢？\n\n比如在淘宝的某个页面中，你进行了登录操作，当你跳转到商品页时，服务端如何知道你是已经登录的状态？\n\n##### Cookie\n首先产生了Cookie这门技术。Cookie是http协议的一部分，它的处理分为几步：\n1. 服务端向客户端发送cookie\n2. 浏览器保存cookie\n3. 每次请求浏览器都将cookie发送给服务器\n\ncookie虽然很方便，但存在一个很大的弊端，就是cookie中的数据可以在客户端被修改，这就存在很大的风险隐患。恶意用户可能会通过伪造cookie来假冒别人登录。\n为了解决这个问题，就产生了Session。\n\n##### Session\nSession的数据是保留在服务器端的，session的运作通过一个`session_id`来进行。session_id通常存在cookie中，在express中，默认是`connect.sid`这个字段。当请求到来时，服务端检查cookie中保存的session_id，并通过session_id与服务器端的session数据关联起来。\n\n因此，当你访问网页时，服务端随机产生了一个1024比特的字符串存在客户端的cookie中。当你下次访问时，cookie会带有这个字段，然后浏览器就知道你是上次访问过的某某啦。由于session数据是存储在服务器的，并且session_id是随机产生的，位数也足够多，所以也不用担心被人伪造。伪造的成功率比坐在电脑前写代码被突然天降的流星砸死的概率还低。\n\n<!-- more -->\n\n#### Express中使用cookie、session\n在express中使用session要用到`express-session`这个模块，因此需要先安装依赖\n##### 1. 安装模块\n```\nnpm install express-session -d --save\n```\n\n##### 2. 使用方式\n主要的方式就是`session(options)`,options参数主要有：\n- name：设置cookie中，保存session的字段名称，默认为`connect.sid`\n- store: session的存储方式，默认存在在内存中，也可以使用redis，mongodb等\n- secret：通过设置secret来计算hash值并存在cookie中，防止篡改\n- cookie：设置存放session_id的cookie的相关选项，默认为：\n`(default: { path: '/', httpOnly: true, secure: false, maxAge: null })`\n- genid: 产生一个新的session_id时，所用的函数\n- rolling：每个请求都重设一个cookie，默认为false\n- resave：即使session没有被修改也保存session值，默认为true。\n\n##### 3. 实例\n下面是我的使用方式，供参考：\n###### 1. 引入express-session\n```js\napp.use(session({\n  secret: \"weird sheep\",\n  resave: false,\n  saveUninitialized: true,\n  cookie: {user:\"default\",maxAge: 14*24*60*60*1000}\n}));\n```\ncookie默认设置为写入一个`user`字段，并且设置超时时间为14天。使用内存来保存session，比较方便毕竟存储的数据较少。\n\n###### 2. 登录成功记录session\n```js\nusers.login = function(mongoose){\n\treturn function(req,res){\n\t\tvar user = req.body.user,\n\t\tpasswd = req.body.passwd;\n\t\tmongoose.find(\"user\",{user:user},function(resu){\n\t\t\t//判断用户名密码，登录成功后写入cookie，session\n\t\t\tif(resu.length){\n\t\t\t\tif(passwd == decrypt(resu[0].passwd),secret){\n\t\t\t\t\t//登录成功\n\t\t\t\t\treq.session.user = user;\n\t\t\t\t\treq.session.isLogin = true;\n\t\t\t\t\tres.json({status: 0,msg: \"登录成功.\"});\n\t\t\t\t}else {\n\t\t\t\t\tres.json({status: 1,msg: \"密码错误！\"});\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tres.json({status: 1,msg: \"该用户未注册，请先注册！\"});\n\t\t\t}\n\t\t});\n\t};\n};\n```\n以上有一些跟session无关的逻辑，如mongoose查询，密码解密等，后续文章里会做分享。主要关注登录成功后的操作逻辑，这里我将用户信息以及登录状态写入了session。\n\n###### 3. 退出清理session\n\n退出时记得清理session信息，清理使用`destroy`方法：\n```js\nusers.logout = function(){\n\treturn function(req,res){\n\t\t//清除session，cookie\n\t\treq.session.destroy(function(){\n\t\t\tres.clearCookie(\"user\",{});\n\t\t\tres.cookie(\"isLogin\",\"false\");\n\t\t\tres.redirect(\"/\");\n\t\t});\n\t};\n};\n```\n\n###### 4. 登录验证\n通过比对cookie中记录的user和session中记录的user来进行登录验证\n```js\nroutes.index = function(mongoose){\n\treturn function(req,res){\n\t\tvar findPattern = {user: \"default\"};\n\t\tvar cookie = req.headers.cookie || \"\";\n\t\tcookie = cookie.split(\";\");\n\t\tvar cookieUser = \"default\",\n\t\t\tsessionUser = \"default\";\n\t\t//解析cookie获取cookieUser，略去\n\t\tif(req.session && req.session.user){\n\t\t\tsessionUser = req.session.user;\n\t\t}\n\n\t\t//防止伪造cookie登录\n\t\tif(cookieUser == sessionUser){\n\t\t\tfindPattern = {user: sessionUser};\n\t\t}else {\n\t\t\tres.clearCookie(\"user\",{});\n\t\t\tres.cookie(\"isLogin\",\"false\");\n\t\t}\n\n\t\t//查询数据库逻辑，略去\n\t};\n};\n```\n当请求来临时，通过获取cookie中存放的user，然后对比session中存放的user，如果一致则表明cookie可信。否则清除cookie，不接受服务。\n\n以上就是我的实际使用，是不是还挺简单的？\n当然了，现在还有很多的第三库提供登录验证功能，比如`Passport,EverAuth`等，可以支持社会化登录，支持更多的网站登录，就不用自己维护登录系统啦。有空可以折腾一下~\n","source":"_posts/node-authority.md","raw":"title: Nodejs使用session、cookie进行登录验证功能的实现\nshow: true\ndate: 2016-06-08 13:23:32\ntags: [nodejs,session,cookie,登录验证]\ncategories: 技术人生\n---\n#### 背景\n我在业余开发了一个[**藏经阁**](http://favlink.me)项目，它是一个完全针对用户定制化的网址收藏导航网站。因此用户注册和登录验证就成了最基本的需求和问题。\n藏经阁使用了`Node Express`框架进行开发，因此本篇简单总结一下Node使用session和cookie进行登录以及权限验证的过程。\n\n#### Cookie和Session\n首先我们先来了解一下登录验证的原理。\n\n众所周知，HTTP是一个无状态协议，所以客户端每次发出请求时，下一次请求无法得知上一次请求所包含的状态数据，如何能把一个用户的状态数据关联起来呢？\n\n比如在淘宝的某个页面中，你进行了登录操作，当你跳转到商品页时，服务端如何知道你是已经登录的状态？\n\n##### Cookie\n首先产生了Cookie这门技术。Cookie是http协议的一部分，它的处理分为几步：\n1. 服务端向客户端发送cookie\n2. 浏览器保存cookie\n3. 每次请求浏览器都将cookie发送给服务器\n\ncookie虽然很方便，但存在一个很大的弊端，就是cookie中的数据可以在客户端被修改，这就存在很大的风险隐患。恶意用户可能会通过伪造cookie来假冒别人登录。\n为了解决这个问题，就产生了Session。\n\n##### Session\nSession的数据是保留在服务器端的，session的运作通过一个`session_id`来进行。session_id通常存在cookie中，在express中，默认是`connect.sid`这个字段。当请求到来时，服务端检查cookie中保存的session_id，并通过session_id与服务器端的session数据关联起来。\n\n因此，当你访问网页时，服务端随机产生了一个1024比特的字符串存在客户端的cookie中。当你下次访问时，cookie会带有这个字段，然后浏览器就知道你是上次访问过的某某啦。由于session数据是存储在服务器的，并且session_id是随机产生的，位数也足够多，所以也不用担心被人伪造。伪造的成功率比坐在电脑前写代码被突然天降的流星砸死的概率还低。\n\n<!-- more -->\n\n#### Express中使用cookie、session\n在express中使用session要用到`express-session`这个模块，因此需要先安装依赖\n##### 1. 安装模块\n```\nnpm install express-session -d --save\n```\n\n##### 2. 使用方式\n主要的方式就是`session(options)`,options参数主要有：\n- name：设置cookie中，保存session的字段名称，默认为`connect.sid`\n- store: session的存储方式，默认存在在内存中，也可以使用redis，mongodb等\n- secret：通过设置secret来计算hash值并存在cookie中，防止篡改\n- cookie：设置存放session_id的cookie的相关选项，默认为：\n`(default: { path: '/', httpOnly: true, secure: false, maxAge: null })`\n- genid: 产生一个新的session_id时，所用的函数\n- rolling：每个请求都重设一个cookie，默认为false\n- resave：即使session没有被修改也保存session值，默认为true。\n\n##### 3. 实例\n下面是我的使用方式，供参考：\n###### 1. 引入express-session\n```js\napp.use(session({\n  secret: \"weird sheep\",\n  resave: false,\n  saveUninitialized: true,\n  cookie: {user:\"default\",maxAge: 14*24*60*60*1000}\n}));\n```\ncookie默认设置为写入一个`user`字段，并且设置超时时间为14天。使用内存来保存session，比较方便毕竟存储的数据较少。\n\n###### 2. 登录成功记录session\n```js\nusers.login = function(mongoose){\n\treturn function(req,res){\n\t\tvar user = req.body.user,\n\t\tpasswd = req.body.passwd;\n\t\tmongoose.find(\"user\",{user:user},function(resu){\n\t\t\t//判断用户名密码，登录成功后写入cookie，session\n\t\t\tif(resu.length){\n\t\t\t\tif(passwd == decrypt(resu[0].passwd),secret){\n\t\t\t\t\t//登录成功\n\t\t\t\t\treq.session.user = user;\n\t\t\t\t\treq.session.isLogin = true;\n\t\t\t\t\tres.json({status: 0,msg: \"登录成功.\"});\n\t\t\t\t}else {\n\t\t\t\t\tres.json({status: 1,msg: \"密码错误！\"});\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tres.json({status: 1,msg: \"该用户未注册，请先注册！\"});\n\t\t\t}\n\t\t});\n\t};\n};\n```\n以上有一些跟session无关的逻辑，如mongoose查询，密码解密等，后续文章里会做分享。主要关注登录成功后的操作逻辑，这里我将用户信息以及登录状态写入了session。\n\n###### 3. 退出清理session\n\n退出时记得清理session信息，清理使用`destroy`方法：\n```js\nusers.logout = function(){\n\treturn function(req,res){\n\t\t//清除session，cookie\n\t\treq.session.destroy(function(){\n\t\t\tres.clearCookie(\"user\",{});\n\t\t\tres.cookie(\"isLogin\",\"false\");\n\t\t\tres.redirect(\"/\");\n\t\t});\n\t};\n};\n```\n\n###### 4. 登录验证\n通过比对cookie中记录的user和session中记录的user来进行登录验证\n```js\nroutes.index = function(mongoose){\n\treturn function(req,res){\n\t\tvar findPattern = {user: \"default\"};\n\t\tvar cookie = req.headers.cookie || \"\";\n\t\tcookie = cookie.split(\";\");\n\t\tvar cookieUser = \"default\",\n\t\t\tsessionUser = \"default\";\n\t\t//解析cookie获取cookieUser，略去\n\t\tif(req.session && req.session.user){\n\t\t\tsessionUser = req.session.user;\n\t\t}\n\n\t\t//防止伪造cookie登录\n\t\tif(cookieUser == sessionUser){\n\t\t\tfindPattern = {user: sessionUser};\n\t\t}else {\n\t\t\tres.clearCookie(\"user\",{});\n\t\t\tres.cookie(\"isLogin\",\"false\");\n\t\t}\n\n\t\t//查询数据库逻辑，略去\n\t};\n};\n```\n当请求来临时，通过获取cookie中存放的user，然后对比session中存放的user，如果一致则表明cookie可信。否则清除cookie，不接受服务。\n\n以上就是我的实际使用，是不是还挺简单的？\n当然了，现在还有很多的第三库提供登录验证功能，比如`Passport,EverAuth`等，可以支持社会化登录，支持更多的网站登录，就不用自己维护登录系统啦。有空可以折腾一下~\n","slug":"node-authority","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzx5005cfnpv9x61gr2j","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>我在业余开发了一个<a href=\"http://favlink.me\" target=\"_blank\" rel=\"noopener\"><strong>藏经阁</strong></a>项目，它是一个完全针对用户定制化的网址收藏导航网站。因此用户注册和登录验证就成了最基本的需求和问题。<br>藏经阁使用了<code>Node Express</code>框架进行开发，因此本篇简单总结一下Node使用session和cookie进行登录以及权限验证的过程。</p>\n<h4 id=\"Cookie和Session\"><a href=\"#Cookie和Session\" class=\"headerlink\" title=\"Cookie和Session\"></a>Cookie和Session</h4><p>首先我们先来了解一下登录验证的原理。</p>\n<p>众所周知，HTTP是一个无状态协议，所以客户端每次发出请求时，下一次请求无法得知上一次请求所包含的状态数据，如何能把一个用户的状态数据关联起来呢？</p>\n<p>比如在淘宝的某个页面中，你进行了登录操作，当你跳转到商品页时，服务端如何知道你是已经登录的状态？</p>\n<h5 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h5><p>首先产生了Cookie这门技术。Cookie是http协议的一部分，它的处理分为几步：</p>\n<ol>\n<li>服务端向客户端发送cookie</li>\n<li>浏览器保存cookie</li>\n<li>每次请求浏览器都将cookie发送给服务器</li>\n</ol>\n<p>cookie虽然很方便，但存在一个很大的弊端，就是cookie中的数据可以在客户端被修改，这就存在很大的风险隐患。恶意用户可能会通过伪造cookie来假冒别人登录。<br>为了解决这个问题，就产生了Session。</p>\n<h5 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h5><p>Session的数据是保留在服务器端的，session的运作通过一个<code>session_id</code>来进行。session_id通常存在cookie中，在express中，默认是<code>connect.sid</code>这个字段。当请求到来时，服务端检查cookie中保存的session_id，并通过session_id与服务器端的session数据关联起来。</p>\n<p>因此，当你访问网页时，服务端随机产生了一个1024比特的字符串存在客户端的cookie中。当你下次访问时，cookie会带有这个字段，然后浏览器就知道你是上次访问过的某某啦。由于session数据是存储在服务器的，并且session_id是随机产生的，位数也足够多，所以也不用担心被人伪造。伪造的成功率比坐在电脑前写代码被突然天降的流星砸死的概率还低。</p>\n<a id=\"more\"></a>\n<h4 id=\"Express中使用cookie、session\"><a href=\"#Express中使用cookie、session\" class=\"headerlink\" title=\"Express中使用cookie、session\"></a>Express中使用cookie、session</h4><p>在express中使用session要用到<code>express-session</code>这个模块，因此需要先安装依赖</p>\n<h5 id=\"1-安装模块\"><a href=\"#1-安装模块\" class=\"headerlink\" title=\"1. 安装模块\"></a>1. 安装模块</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> express-<span class=\"keyword\">session</span> -d <span class=\"comment\">--save</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"2-使用方式\"><a href=\"#2-使用方式\" class=\"headerlink\" title=\"2. 使用方式\"></a>2. 使用方式</h5><p>主要的方式就是<code>session(options)</code>,options参数主要有：</p>\n<ul>\n<li>name：设置cookie中，保存session的字段名称，默认为<code>connect.sid</code></li>\n<li>store: session的存储方式，默认存在在内存中，也可以使用redis，mongodb等</li>\n<li>secret：通过设置secret来计算hash值并存在cookie中，防止篡改</li>\n<li>cookie：设置存放session_id的cookie的相关选项，默认为：<br><code>(default: { path: &#39;/&#39;, httpOnly: true, secure: false, maxAge: null })</code></li>\n<li>genid: 产生一个新的session_id时，所用的函数</li>\n<li>rolling：每个请求都重设一个cookie，默认为false</li>\n<li>resave：即使session没有被修改也保存session值，默认为true。</li>\n</ul>\n<h5 id=\"3-实例\"><a href=\"#3-实例\" class=\"headerlink\" title=\"3. 实例\"></a>3. 实例</h5><p>下面是我的使用方式，供参考：</p>\n<h6 id=\"1-引入express-session\"><a href=\"#1-引入express-session\" class=\"headerlink\" title=\"1. 引入express-session\"></a>1. 引入express-session</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(session(&#123;</span><br><span class=\"line\">  secret: <span class=\"string\">\"weird sheep\"</span>,</span><br><span class=\"line\">  resave: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  cookie: &#123;<span class=\"attr\">user</span>:<span class=\"string\">\"default\"</span>,<span class=\"attr\">maxAge</span>: <span class=\"number\">14</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>&#125;</span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n<p>cookie默认设置为写入一个<code>user</code>字段，并且设置超时时间为14天。使用内存来保存session，比较方便毕竟存储的数据较少。</p>\n<h6 id=\"2-登录成功记录session\"><a href=\"#2-登录成功记录session\" class=\"headerlink\" title=\"2. 登录成功记录session\"></a>2. 登录成功记录session</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users.login = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mongoose</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> user = req.body.user,</span><br><span class=\"line\">\t\tpasswd = req.body.passwd;</span><br><span class=\"line\">\t\tmongoose.find(<span class=\"string\">\"user\"</span>,&#123;<span class=\"attr\">user</span>:user&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resu</span>)</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//判断用户名密码，登录成功后写入cookie，session</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(resu.length)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(passwd == decrypt(resu[<span class=\"number\">0</span>].passwd),secret)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//登录成功</span></span><br><span class=\"line\">\t\t\t\t\treq.session.user = user;</span><br><span class=\"line\">\t\t\t\t\treq.session.isLogin = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t\tres.json(&#123;<span class=\"attr\">status</span>: <span class=\"number\">0</span>,<span class=\"attr\">msg</span>: <span class=\"string\">\"登录成功.\"</span>&#125;);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tres.json(&#123;<span class=\"attr\">status</span>: <span class=\"number\">1</span>,<span class=\"attr\">msg</span>: <span class=\"string\">\"密码错误！\"</span>&#125;);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tres.json(&#123;<span class=\"attr\">status</span>: <span class=\"number\">1</span>,<span class=\"attr\">msg</span>: <span class=\"string\">\"该用户未注册，请先注册！\"</span>&#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>以上有一些跟session无关的逻辑，如mongoose查询，密码解密等，后续文章里会做分享。主要关注登录成功后的操作逻辑，这里我将用户信息以及登录状态写入了session。</p>\n<h6 id=\"3-退出清理session\"><a href=\"#3-退出清理session\" class=\"headerlink\" title=\"3. 退出清理session\"></a>3. 退出清理session</h6><p>退出时记得清理session信息，清理使用<code>destroy</code>方法：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users.logout = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//清除session，cookie</span></span><br><span class=\"line\">\t\treq.session.destroy(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tres.clearCookie(<span class=\"string\">\"user\"</span>,&#123;&#125;);</span><br><span class=\"line\">\t\t\tres.cookie(<span class=\"string\">\"isLogin\"</span>,<span class=\"string\">\"false\"</span>);</span><br><span class=\"line\">\t\t\tres.redirect(<span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"4-登录验证\"><a href=\"#4-登录验证\" class=\"headerlink\" title=\"4. 登录验证\"></a>4. 登录验证</h6><p>通过比对cookie中记录的user和session中记录的user来进行登录验证<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">routes.index = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mongoose</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> findPattern = &#123;<span class=\"attr\">user</span>: <span class=\"string\">\"default\"</span>&#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> cookie = req.headers.cookie || <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">\t\tcookie = cookie.split(<span class=\"string\">\";\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> cookieUser = <span class=\"string\">\"default\"</span>,</span><br><span class=\"line\">\t\t\tsessionUser = <span class=\"string\">\"default\"</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//解析cookie获取cookieUser，略去</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(req.session &amp;&amp; req.session.user)&#123;</span><br><span class=\"line\">\t\t\tsessionUser = req.session.user;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//防止伪造cookie登录</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(cookieUser == sessionUser)&#123;</span><br><span class=\"line\">\t\t\tfindPattern = &#123;<span class=\"attr\">user</span>: sessionUser&#125;;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tres.clearCookie(<span class=\"string\">\"user\"</span>,&#123;&#125;);</span><br><span class=\"line\">\t\t\tres.cookie(<span class=\"string\">\"isLogin\"</span>,<span class=\"string\">\"false\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//查询数据库逻辑，略去</span></span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>当请求来临时，通过获取cookie中存放的user，然后对比session中存放的user，如果一致则表明cookie可信。否则清除cookie，不接受服务。</p>\n<p>以上就是我的实际使用，是不是还挺简单的？<br>当然了，现在还有很多的第三库提供登录验证功能，比如<code>Passport,EverAuth</code>等，可以支持社会化登录，支持更多的网站登录，就不用自己维护登录系统啦。有空可以折腾一下~</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>我在业余开发了一个<a href=\"http://favlink.me\" target=\"_blank\" rel=\"noopener\"><strong>藏经阁</strong></a>项目，它是一个完全针对用户定制化的网址收藏导航网站。因此用户注册和登录验证就成了最基本的需求和问题。<br>藏经阁使用了<code>Node Express</code>框架进行开发，因此本篇简单总结一下Node使用session和cookie进行登录以及权限验证的过程。</p>\n<h4 id=\"Cookie和Session\"><a href=\"#Cookie和Session\" class=\"headerlink\" title=\"Cookie和Session\"></a>Cookie和Session</h4><p>首先我们先来了解一下登录验证的原理。</p>\n<p>众所周知，HTTP是一个无状态协议，所以客户端每次发出请求时，下一次请求无法得知上一次请求所包含的状态数据，如何能把一个用户的状态数据关联起来呢？</p>\n<p>比如在淘宝的某个页面中，你进行了登录操作，当你跳转到商品页时，服务端如何知道你是已经登录的状态？</p>\n<h5 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h5><p>首先产生了Cookie这门技术。Cookie是http协议的一部分，它的处理分为几步：</p>\n<ol>\n<li>服务端向客户端发送cookie</li>\n<li>浏览器保存cookie</li>\n<li>每次请求浏览器都将cookie发送给服务器</li>\n</ol>\n<p>cookie虽然很方便，但存在一个很大的弊端，就是cookie中的数据可以在客户端被修改，这就存在很大的风险隐患。恶意用户可能会通过伪造cookie来假冒别人登录。<br>为了解决这个问题，就产生了Session。</p>\n<h5 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h5><p>Session的数据是保留在服务器端的，session的运作通过一个<code>session_id</code>来进行。session_id通常存在cookie中，在express中，默认是<code>connect.sid</code>这个字段。当请求到来时，服务端检查cookie中保存的session_id，并通过session_id与服务器端的session数据关联起来。</p>\n<p>因此，当你访问网页时，服务端随机产生了一个1024比特的字符串存在客户端的cookie中。当你下次访问时，cookie会带有这个字段，然后浏览器就知道你是上次访问过的某某啦。由于session数据是存储在服务器的，并且session_id是随机产生的，位数也足够多，所以也不用担心被人伪造。伪造的成功率比坐在电脑前写代码被突然天降的流星砸死的概率还低。</p>","more":"<h4 id=\"Express中使用cookie、session\"><a href=\"#Express中使用cookie、session\" class=\"headerlink\" title=\"Express中使用cookie、session\"></a>Express中使用cookie、session</h4><p>在express中使用session要用到<code>express-session</code>这个模块，因此需要先安装依赖</p>\n<h5 id=\"1-安装模块\"><a href=\"#1-安装模块\" class=\"headerlink\" title=\"1. 安装模块\"></a>1. 安装模块</h5><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span> express-<span class=\"keyword\">session</span> -d <span class=\"comment\">--save</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"2-使用方式\"><a href=\"#2-使用方式\" class=\"headerlink\" title=\"2. 使用方式\"></a>2. 使用方式</h5><p>主要的方式就是<code>session(options)</code>,options参数主要有：</p>\n<ul>\n<li>name：设置cookie中，保存session的字段名称，默认为<code>connect.sid</code></li>\n<li>store: session的存储方式，默认存在在内存中，也可以使用redis，mongodb等</li>\n<li>secret：通过设置secret来计算hash值并存在cookie中，防止篡改</li>\n<li>cookie：设置存放session_id的cookie的相关选项，默认为：<br><code>(default: { path: &#39;/&#39;, httpOnly: true, secure: false, maxAge: null })</code></li>\n<li>genid: 产生一个新的session_id时，所用的函数</li>\n<li>rolling：每个请求都重设一个cookie，默认为false</li>\n<li>resave：即使session没有被修改也保存session值，默认为true。</li>\n</ul>\n<h5 id=\"3-实例\"><a href=\"#3-实例\" class=\"headerlink\" title=\"3. 实例\"></a>3. 实例</h5><p>下面是我的使用方式，供参考：</p>\n<h6 id=\"1-引入express-session\"><a href=\"#1-引入express-session\" class=\"headerlink\" title=\"1. 引入express-session\"></a>1. 引入express-session</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.use(session(&#123;</span><br><span class=\"line\">  secret: <span class=\"string\">\"weird sheep\"</span>,</span><br><span class=\"line\">  resave: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  saveUninitialized: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  cookie: &#123;<span class=\"attr\">user</span>:<span class=\"string\">\"default\"</span>,<span class=\"attr\">maxAge</span>: <span class=\"number\">14</span>*<span class=\"number\">24</span>*<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">1000</span>&#125;</span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n<p>cookie默认设置为写入一个<code>user</code>字段，并且设置超时时间为14天。使用内存来保存session，比较方便毕竟存储的数据较少。</p>\n<h6 id=\"2-登录成功记录session\"><a href=\"#2-登录成功记录session\" class=\"headerlink\" title=\"2. 登录成功记录session\"></a>2. 登录成功记录session</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users.login = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mongoose</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> user = req.body.user,</span><br><span class=\"line\">\t\tpasswd = req.body.passwd;</span><br><span class=\"line\">\t\tmongoose.find(<span class=\"string\">\"user\"</span>,&#123;<span class=\"attr\">user</span>:user&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resu</span>)</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//判断用户名密码，登录成功后写入cookie，session</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(resu.length)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(passwd == decrypt(resu[<span class=\"number\">0</span>].passwd),secret)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">//登录成功</span></span><br><span class=\"line\">\t\t\t\t\treq.session.user = user;</span><br><span class=\"line\">\t\t\t\t\treq.session.isLogin = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t\tres.json(&#123;<span class=\"attr\">status</span>: <span class=\"number\">0</span>,<span class=\"attr\">msg</span>: <span class=\"string\">\"登录成功.\"</span>&#125;);</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tres.json(&#123;<span class=\"attr\">status</span>: <span class=\"number\">1</span>,<span class=\"attr\">msg</span>: <span class=\"string\">\"密码错误！\"</span>&#125;);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tres.json(&#123;<span class=\"attr\">status</span>: <span class=\"number\">1</span>,<span class=\"attr\">msg</span>: <span class=\"string\">\"该用户未注册，请先注册！\"</span>&#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>以上有一些跟session无关的逻辑，如mongoose查询，密码解密等，后续文章里会做分享。主要关注登录成功后的操作逻辑，这里我将用户信息以及登录状态写入了session。</p>\n<h6 id=\"3-退出清理session\"><a href=\"#3-退出清理session\" class=\"headerlink\" title=\"3. 退出清理session\"></a>3. 退出清理session</h6><p>退出时记得清理session信息，清理使用<code>destroy</code>方法：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users.logout = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//清除session，cookie</span></span><br><span class=\"line\">\t\treq.session.destroy(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\t\tres.clearCookie(<span class=\"string\">\"user\"</span>,&#123;&#125;);</span><br><span class=\"line\">\t\t\tres.cookie(<span class=\"string\">\"isLogin\"</span>,<span class=\"string\">\"false\"</span>);</span><br><span class=\"line\">\t\t\tres.redirect(<span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"4-登录验证\"><a href=\"#4-登录验证\" class=\"headerlink\" title=\"4. 登录验证\"></a>4. 登录验证</h6><p>通过比对cookie中记录的user和session中记录的user来进行登录验证<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">routes.index = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mongoose</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req,res</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> findPattern = &#123;<span class=\"attr\">user</span>: <span class=\"string\">\"default\"</span>&#125;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> cookie = req.headers.cookie || <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">\t\tcookie = cookie.split(<span class=\"string\">\";\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> cookieUser = <span class=\"string\">\"default\"</span>,</span><br><span class=\"line\">\t\t\tsessionUser = <span class=\"string\">\"default\"</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//解析cookie获取cookieUser，略去</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(req.session &amp;&amp; req.session.user)&#123;</span><br><span class=\"line\">\t\t\tsessionUser = req.session.user;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//防止伪造cookie登录</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(cookieUser == sessionUser)&#123;</span><br><span class=\"line\">\t\t\tfindPattern = &#123;<span class=\"attr\">user</span>: sessionUser&#125;;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tres.clearCookie(<span class=\"string\">\"user\"</span>,&#123;&#125;);</span><br><span class=\"line\">\t\t\tres.cookie(<span class=\"string\">\"isLogin\"</span>,<span class=\"string\">\"false\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//查询数据库逻辑，略去</span></span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>当请求来临时，通过获取cookie中存放的user，然后对比session中存放的user，如果一致则表明cookie可信。否则清除cookie，不接受服务。</p>\n<p>以上就是我的实际使用，是不是还挺简单的？<br>当然了，现在还有很多的第三库提供登录验证功能，比如<code>Passport,EverAuth</code>等，可以支持社会化登录，支持更多的网站登录，就不用自己维护登录系统啦。有空可以折腾一下~</p>","sticky":0},{"title":"nodejs使用crypto进行加密/解密操作","show":true,"date":"2016-06-17T07:00:18.000Z","_content":"#### 背景\n前面博文总结了[favlink](http://favlink.me)的用户登录验证系统。说到登录验证那必然少不了用户名、密码的验证过程，而密码的操作也离不开加密，解密，毕竟不能明文存储吧！本篇就简单总结一下favlink开发过程中用到的nodejs加解密库。\n\n#### crypto简介\n[Crypto](http://nodejs.org/api/crypto.html)是包含在nodejs内核中的，主要提供加密、解密、签名、验证等功能。利用了OpenSSL来实现其加密技术。\n\n#### 使用方式\n```\nvar crypto = require('crypto');\n//加密\nfunction encrypt(str,secret){\n\tvar cipher = crypto.createCipher('aes192',secret);\n\tvar enc = cipher.update(str,'utf8','hex');\n\tenc += cipher.final('hex');\n\n\treturn enc;\n}\n\n//解密\nfunction decrypt(str,secret){\n\tvar decipher = crypto.createDecipher('aes192',secret);\n\tvar dec = decipher.update(str,'hex','utf8');\n\tdec += decipher.final('utf8');\n\treturn dec;\n}\n```\n- 我们先来看加密操作。\n`crypto.createCipher(algo,pwd)`,该函数接收两个参数，一个加密算法，一个密钥字串，返回一个'Cipher'对象。\n加密算法有很多种，我这里使用的是'aes192'，可以运行下面的代码查看所有支持的算法：\n\t```\n\tvar crypto = require('crypto');\n\tconsole.log(crypto.getCiphers());\n\t```\n\t`cipher.update(data[,input_encoding][,output_encoding])`,该函数可接收三个参数，编码可选(输入只能是`'utf8','ascii','binary'`之一，输出只能是`'binary','base64','hex'`)，返回指定编码后的加密数据，如果编码缺省，则返回`buffer`类型。\n\t`cipher.update()`可以运行多次，但只能在`cipher.final()`之前运行。\n\t`cipher.final(output_encoding)`,返回指定编码的加密字串。\n\n- 解密操作\n解密操作类似，首先先定义解密用`decipher`对象，保持和加密所用的密钥、加密算法一致；\n然后使用decipher将加密字串解密即可。\n\n#### 示例\n1. 加密\n```\nencrypt(\"helloworld\",\"weird sheep\");\n//Output: faf46f87e8befb82bc643805cfd753a6\n```\n\n2. 解密\n```\ndecrypt(\"faf46f87e8befb82bc643805cfd753a6\",\"weird sheep\");\n//Output: helloworld\n```\n","source":"_posts/node-crypto.md","raw":"title: nodejs使用crypto进行加密/解密操作\nshow: true\ndate: 2016-06-17 15:00:18\ntags: [crypto,加密,解密]\ncategories: [技术人生]\n---\n#### 背景\n前面博文总结了[favlink](http://favlink.me)的用户登录验证系统。说到登录验证那必然少不了用户名、密码的验证过程，而密码的操作也离不开加密，解密，毕竟不能明文存储吧！本篇就简单总结一下favlink开发过程中用到的nodejs加解密库。\n\n#### crypto简介\n[Crypto](http://nodejs.org/api/crypto.html)是包含在nodejs内核中的，主要提供加密、解密、签名、验证等功能。利用了OpenSSL来实现其加密技术。\n\n#### 使用方式\n```\nvar crypto = require('crypto');\n//加密\nfunction encrypt(str,secret){\n\tvar cipher = crypto.createCipher('aes192',secret);\n\tvar enc = cipher.update(str,'utf8','hex');\n\tenc += cipher.final('hex');\n\n\treturn enc;\n}\n\n//解密\nfunction decrypt(str,secret){\n\tvar decipher = crypto.createDecipher('aes192',secret);\n\tvar dec = decipher.update(str,'hex','utf8');\n\tdec += decipher.final('utf8');\n\treturn dec;\n}\n```\n- 我们先来看加密操作。\n`crypto.createCipher(algo,pwd)`,该函数接收两个参数，一个加密算法，一个密钥字串，返回一个'Cipher'对象。\n加密算法有很多种，我这里使用的是'aes192'，可以运行下面的代码查看所有支持的算法：\n\t```\n\tvar crypto = require('crypto');\n\tconsole.log(crypto.getCiphers());\n\t```\n\t`cipher.update(data[,input_encoding][,output_encoding])`,该函数可接收三个参数，编码可选(输入只能是`'utf8','ascii','binary'`之一，输出只能是`'binary','base64','hex'`)，返回指定编码后的加密数据，如果编码缺省，则返回`buffer`类型。\n\t`cipher.update()`可以运行多次，但只能在`cipher.final()`之前运行。\n\t`cipher.final(output_encoding)`,返回指定编码的加密字串。\n\n- 解密操作\n解密操作类似，首先先定义解密用`decipher`对象，保持和加密所用的密钥、加密算法一致；\n然后使用decipher将加密字串解密即可。\n\n#### 示例\n1. 加密\n```\nencrypt(\"helloworld\",\"weird sheep\");\n//Output: faf46f87e8befb82bc643805cfd753a6\n```\n\n2. 解密\n```\ndecrypt(\"faf46f87e8befb82bc643805cfd753a6\",\"weird sheep\");\n//Output: helloworld\n```\n","slug":"node-crypto","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzx7005hfnpvuh2ne09p","content":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>前面博文总结了<a href=\"http://favlink.me\" target=\"_blank\" rel=\"noopener\">favlink</a>的用户登录验证系统。说到登录验证那必然少不了用户名、密码的验证过程，而密码的操作也离不开加密，解密，毕竟不能明文存储吧！本篇就简单总结一下favlink开发过程中用到的nodejs加解密库。</p>\n<h4 id=\"crypto简介\"><a href=\"#crypto简介\" class=\"headerlink\" title=\"crypto简介\"></a>crypto简介</h4><p><a href=\"http://nodejs.org/api/crypto.html\" target=\"_blank\" rel=\"noopener\">Crypto</a>是包含在nodejs内核中的，主要提供加密、解密、签名、验证等功能。利用了OpenSSL来实现其加密技术。</p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> crypto = <span class=\"keyword\">require</span>(<span class=\"string\">'crypto'</span>);</span><br><span class=\"line\"><span class=\"comment\">//加密</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">encrypt</span><span class=\"params\">(str,secret)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> cipher = crypto.createCipher(<span class=\"string\">'aes192'</span>,secret);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> enc = cipher.update(str,<span class=\"string\">'utf8'</span>,<span class=\"string\">'hex'</span>);</span><br><span class=\"line\">\tenc += cipher.<span class=\"keyword\">final</span>(<span class=\"string\">'hex'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> enc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//解密</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decrypt</span><span class=\"params\">(str,secret)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> decipher = crypto.createDecipher(<span class=\"string\">'aes192'</span>,secret);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> dec = decipher.update(str,<span class=\"string\">'hex'</span>,<span class=\"string\">'utf8'</span>);</span><br><span class=\"line\">\tdec += decipher.<span class=\"keyword\">final</span>(<span class=\"string\">'utf8'</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dec;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>我们先来看加密操作。<br><code>crypto.createCipher(algo,pwd)</code>,该函数接收两个参数，一个加密算法，一个密钥字串，返回一个’Cipher’对象。<br>加密算法有很多种，我这里使用的是’aes192’，可以运行下面的代码查看所有支持的算法：</p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> crypto = <span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(crypto.getCiphers());</span><br></pre></td></tr></table></figure>\n<p>  <code>cipher.update(data[,input_encoding][,output_encoding])</code>,该函数可接收三个参数，编码可选(输入只能是<code>&#39;utf8&#39;,&#39;ascii&#39;,&#39;binary&#39;</code>之一，输出只能是<code>&#39;binary&#39;,&#39;base64&#39;,&#39;hex&#39;</code>)，返回指定编码后的加密数据，如果编码缺省，则返回<code>buffer</code>类型。<br>  <code>cipher.update()</code>可以运行多次，但只能在<code>cipher.final()</code>之前运行。<br>  <code>cipher.final(output_encoding)</code>,返回指定编码的加密字串。</p>\n</li>\n<li><p>解密操作<br>解密操作类似，首先先定义解密用<code>decipher</code>对象，保持和加密所用的密钥、加密算法一致；<br>然后使用decipher将加密字串解密即可。</p>\n</li>\n</ul>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><ol>\n<li><p>加密</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">encrypt</span>(<span class=\"string\">\"helloworld\"</span>,<span class=\"string\">\"weird sheep\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//Output: faf46f87e8befb82bc643805cfd753a6</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解密</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">decrypt</span>(<span class=\"string\">\"faf46f87e8befb82bc643805cfd753a6\"</span>,<span class=\"string\">\"weird sheep\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//Output: helloworld</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h4><p>前面博文总结了<a href=\"http://favlink.me\" target=\"_blank\" rel=\"noopener\">favlink</a>的用户登录验证系统。说到登录验证那必然少不了用户名、密码的验证过程，而密码的操作也离不开加密，解密，毕竟不能明文存储吧！本篇就简单总结一下favlink开发过程中用到的nodejs加解密库。</p>\n<h4 id=\"crypto简介\"><a href=\"#crypto简介\" class=\"headerlink\" title=\"crypto简介\"></a>crypto简介</h4><p><a href=\"http://nodejs.org/api/crypto.html\" target=\"_blank\" rel=\"noopener\">Crypto</a>是包含在nodejs内核中的，主要提供加密、解密、签名、验证等功能。利用了OpenSSL来实现其加密技术。</p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> crypto = <span class=\"keyword\">require</span>(<span class=\"string\">'crypto'</span>);</span><br><span class=\"line\"><span class=\"comment\">//加密</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">encrypt</span><span class=\"params\">(str,secret)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> cipher = crypto.createCipher(<span class=\"string\">'aes192'</span>,secret);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> enc = cipher.update(str,<span class=\"string\">'utf8'</span>,<span class=\"string\">'hex'</span>);</span><br><span class=\"line\">\tenc += cipher.<span class=\"keyword\">final</span>(<span class=\"string\">'hex'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> enc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//解密</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decrypt</span><span class=\"params\">(str,secret)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> decipher = crypto.createDecipher(<span class=\"string\">'aes192'</span>,secret);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> dec = decipher.update(str,<span class=\"string\">'hex'</span>,<span class=\"string\">'utf8'</span>);</span><br><span class=\"line\">\tdec += decipher.<span class=\"keyword\">final</span>(<span class=\"string\">'utf8'</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dec;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>我们先来看加密操作。<br><code>crypto.createCipher(algo,pwd)</code>,该函数接收两个参数，一个加密算法，一个密钥字串，返回一个’Cipher’对象。<br>加密算法有很多种，我这里使用的是’aes192’，可以运行下面的代码查看所有支持的算法：</p>\n  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> crypto = <span class=\"built_in\">require</span>(<span class=\"string\">'crypto'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(crypto.getCiphers());</span><br></pre></td></tr></table></figure>\n<p>  <code>cipher.update(data[,input_encoding][,output_encoding])</code>,该函数可接收三个参数，编码可选(输入只能是<code>&#39;utf8&#39;,&#39;ascii&#39;,&#39;binary&#39;</code>之一，输出只能是<code>&#39;binary&#39;,&#39;base64&#39;,&#39;hex&#39;</code>)，返回指定编码后的加密数据，如果编码缺省，则返回<code>buffer</code>类型。<br>  <code>cipher.update()</code>可以运行多次，但只能在<code>cipher.final()</code>之前运行。<br>  <code>cipher.final(output_encoding)</code>,返回指定编码的加密字串。</p>\n</li>\n<li><p>解密操作<br>解密操作类似，首先先定义解密用<code>decipher</code>对象，保持和加密所用的密钥、加密算法一致；<br>然后使用decipher将加密字串解密即可。</p>\n</li>\n</ul>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><ol>\n<li><p>加密</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">encrypt</span>(<span class=\"string\">\"helloworld\"</span>,<span class=\"string\">\"weird sheep\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//Output: faf46f87e8befb82bc643805cfd753a6</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解密</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">decrypt</span>(<span class=\"string\">\"faf46f87e8befb82bc643805cfd753a6\"</span>,<span class=\"string\">\"weird sheep\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//Output: helloworld</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","sticky":0},{"title":"当node遇上远程执行shell命令","show":true,"date":"2016-08-05T06:26:32.000Z","_content":"## 背景\n我有个Node.js项目，需要在node环境下调用shell命令。开始时只是单机调用，很简单，拼接好了shell命令，使用node的child_process调用一下就好了。随着系统规模的扩大，需要在node下进行调度，将任务分发到不同的机器上，于是就需要使用到ssh远程执行。简单一点的命令也还是可以执行的，但随着执行命令也复杂起来，参数里面有开始包含`\",'`时，问题就开始复杂了。\n\n## node执行shell命令或脚本\n让我们一步步来看一下这个问题是如何复杂起来的。首先先看一下，node下如何执行shell脚本或命令。\n以执行命令为例：(执行脚本可以等同于执行命令，只需要将大量命令先写成脚本，再执行脚本即可)\n\nnode提供了一个child_process的子进程API，借助该API可以调用系统命令。\n```\nvar exec = require('child_process').exec;\n\nvar cmd = \"ls -al\";\n\nvar out = exec(cmd);\n\nout.stdout.on('data',function(data){\n\tconsole.log(\"stdout: \" + data);\n});\n\nout.on('exit',function(code){\n\tconsole.log(code);\n});\n```\n\n上述代码片段将运行`ls -al`后输出结果，并输出命令执行后的返回码。\n\n<!-- more -->\n\n## node远程执行\n如果需要将任务分发到其他机器上，在其他机器上远程执行命令，该怎么做呢？命令简单的话，一句话也能执行。\n```\n//以下方式执行需要先在机器间[建立信任关系](http://blog.sina.com.cn/s/blog_68158ebf0100vf8l.html)\nvar remoteMach = \"$hostname\";\nvar account = \"$account\";\nvar cmd = \"ls -al\";\nvar cmd = \"ssh -tT \" + account + \"@\" + remoteMach + '\"' + cmd + '\"';\n\nvar out = exec(cmd);\nout.stdout.on('data',function(data){\n\tconsole.log(data);\n});\n\n```\n上述情形，在执行比较简单命令或脚本时是适用的。该方式的明显缺点就是不支持格式化，写起命令来比较困难。\n不过可以换一种方式来运行。\n1. 先创建远程执行命令的脚本，这样在脚本里面可以格式化命令\n2. 再调用该脚本\n\n脚本内容写法：\n\n```\n#!/bin/bash\ncmd=\"hostname -I && ls -la\"\naccount=\"xx\"\nhostname=\"xx\"\nssh -tT $account@$hostname << EOD\n\t$cmd\nEOD\n```\n\nnode中远程调用写法：\n\n```\nvar exec = require('child_process').exec;\nvar cmd = \"sh -x remote.sh\";   //remote.sh即上述脚本\n\nvar out = exec(cmd);\n\n... ...\n\n```\n该写法避免了直接写远程执行命令不能格式化的缺点，但是缺点也很明显，需要额外编写一个脚本文件。在命令简单的时候缺点还不是很明显，试想，如果该执行脚本需要接收很多参数，那么不可避免地，在node中调用的时候需要传递很多参数给该脚本，一样会遇到字符串命令格式化的问题。\n\n## 使用simple-ssh\n下面来看一下本篇博客的主角--simple-ssh的解决方案。将node，ssh，shell结合起来估计也没多少文章提到了吧，我在网上查了一圈也没甚收获。在该问题困扰了我许久之后，我终于发现了[simple-ssh](https://github.com/MCluck90/simple-ssh)。\n\nsimple-ssh将远程执行命令变得分外简单，首先我们不必依赖信任关系了，可以直接传递用户名和密码，其次，简明的逻辑让代码写起来逻辑也清晰了很多，即使是复杂命令，由于不用再额外使用`ssh account@host \"cmd\"`这种方式包裹，使得参数包含引号时的引号冲突问题也避免了。\n\n下面的示例由于是简单的`ls -al`，因此看不太出来其优越，正如上面的例子看不出来使用`ssh`包裹这种方式直接执行的困难一样，相信我使用simple-ssh来编写要好的多了。\n\n```\n//先行安装simple-ssh\nnpm install simple-ssh\n\n//code\nvar SSH = require('simple-ssh');\nvar host = \"xx\";\nvar account = \"xx\";\nvar passwd = \"xx\";\nvar ssh = new SSH({\n\thost: host,\n\tuser: account,\n\tpass: passwd\n});\n\nvar cmd = \"hostname -I && ls -al\";\nssh.exec(cmd,{\n\tout: function(stdout){\n\t\tconsole.log(stdout);\n\t},\n\texit: function(code){\n\t\tconsole.log(code);\n\t}\n}).start();\n```\n","source":"_posts/node-ssh-shell.md","raw":"title: 当node遇上远程执行shell命令\nshow: true\ndate: 2016-08-05 14:26:32\ntags: [node,ssh,shell,远程执行]\ncategories: 技术人生\n---\n## 背景\n我有个Node.js项目，需要在node环境下调用shell命令。开始时只是单机调用，很简单，拼接好了shell命令，使用node的child_process调用一下就好了。随着系统规模的扩大，需要在node下进行调度，将任务分发到不同的机器上，于是就需要使用到ssh远程执行。简单一点的命令也还是可以执行的，但随着执行命令也复杂起来，参数里面有开始包含`\",'`时，问题就开始复杂了。\n\n## node执行shell命令或脚本\n让我们一步步来看一下这个问题是如何复杂起来的。首先先看一下，node下如何执行shell脚本或命令。\n以执行命令为例：(执行脚本可以等同于执行命令，只需要将大量命令先写成脚本，再执行脚本即可)\n\nnode提供了一个child_process的子进程API，借助该API可以调用系统命令。\n```\nvar exec = require('child_process').exec;\n\nvar cmd = \"ls -al\";\n\nvar out = exec(cmd);\n\nout.stdout.on('data',function(data){\n\tconsole.log(\"stdout: \" + data);\n});\n\nout.on('exit',function(code){\n\tconsole.log(code);\n});\n```\n\n上述代码片段将运行`ls -al`后输出结果，并输出命令执行后的返回码。\n\n<!-- more -->\n\n## node远程执行\n如果需要将任务分发到其他机器上，在其他机器上远程执行命令，该怎么做呢？命令简单的话，一句话也能执行。\n```\n//以下方式执行需要先在机器间[建立信任关系](http://blog.sina.com.cn/s/blog_68158ebf0100vf8l.html)\nvar remoteMach = \"$hostname\";\nvar account = \"$account\";\nvar cmd = \"ls -al\";\nvar cmd = \"ssh -tT \" + account + \"@\" + remoteMach + '\"' + cmd + '\"';\n\nvar out = exec(cmd);\nout.stdout.on('data',function(data){\n\tconsole.log(data);\n});\n\n```\n上述情形，在执行比较简单命令或脚本时是适用的。该方式的明显缺点就是不支持格式化，写起命令来比较困难。\n不过可以换一种方式来运行。\n1. 先创建远程执行命令的脚本，这样在脚本里面可以格式化命令\n2. 再调用该脚本\n\n脚本内容写法：\n\n```\n#!/bin/bash\ncmd=\"hostname -I && ls -la\"\naccount=\"xx\"\nhostname=\"xx\"\nssh -tT $account@$hostname << EOD\n\t$cmd\nEOD\n```\n\nnode中远程调用写法：\n\n```\nvar exec = require('child_process').exec;\nvar cmd = \"sh -x remote.sh\";   //remote.sh即上述脚本\n\nvar out = exec(cmd);\n\n... ...\n\n```\n该写法避免了直接写远程执行命令不能格式化的缺点，但是缺点也很明显，需要额外编写一个脚本文件。在命令简单的时候缺点还不是很明显，试想，如果该执行脚本需要接收很多参数，那么不可避免地，在node中调用的时候需要传递很多参数给该脚本，一样会遇到字符串命令格式化的问题。\n\n## 使用simple-ssh\n下面来看一下本篇博客的主角--simple-ssh的解决方案。将node，ssh，shell结合起来估计也没多少文章提到了吧，我在网上查了一圈也没甚收获。在该问题困扰了我许久之后，我终于发现了[simple-ssh](https://github.com/MCluck90/simple-ssh)。\n\nsimple-ssh将远程执行命令变得分外简单，首先我们不必依赖信任关系了，可以直接传递用户名和密码，其次，简明的逻辑让代码写起来逻辑也清晰了很多，即使是复杂命令，由于不用再额外使用`ssh account@host \"cmd\"`这种方式包裹，使得参数包含引号时的引号冲突问题也避免了。\n\n下面的示例由于是简单的`ls -al`，因此看不太出来其优越，正如上面的例子看不出来使用`ssh`包裹这种方式直接执行的困难一样，相信我使用simple-ssh来编写要好的多了。\n\n```\n//先行安装simple-ssh\nnpm install simple-ssh\n\n//code\nvar SSH = require('simple-ssh');\nvar host = \"xx\";\nvar account = \"xx\";\nvar passwd = \"xx\";\nvar ssh = new SSH({\n\thost: host,\n\tuser: account,\n\tpass: passwd\n});\n\nvar cmd = \"hostname -I && ls -al\";\nssh.exec(cmd,{\n\tout: function(stdout){\n\t\tconsole.log(stdout);\n\t},\n\texit: function(code){\n\t\tconsole.log(code);\n\t}\n}).start();\n```\n","slug":"node-ssh-shell","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxf005kfnpvfx1hhoxq","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>我有个Node.js项目，需要在node环境下调用shell命令。开始时只是单机调用，很简单，拼接好了shell命令，使用node的child_process调用一下就好了。随着系统规模的扩大，需要在node下进行调度，将任务分发到不同的机器上，于是就需要使用到ssh远程执行。简单一点的命令也还是可以执行的，但随着执行命令也复杂起来，参数里面有开始包含<code>&quot;,&#39;</code>时，问题就开始复杂了。</p>\n<h2 id=\"node执行shell命令或脚本\"><a href=\"#node执行shell命令或脚本\" class=\"headerlink\" title=\"node执行shell命令或脚本\"></a>node执行shell命令或脚本</h2><p>让我们一步步来看一下这个问题是如何复杂起来的。首先先看一下，node下如何执行shell脚本或命令。<br>以执行命令为例：(执行脚本可以等同于执行命令，只需要将大量命令先写成脚本，再执行脚本即可)</p>\n<p>node提供了一个child_process的子进程API，借助该API可以调用系统命令。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> exec = <span class=\"built_in\">require</span>(<span class=\"string\">'child_process'</span>).exec;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> cmd = <span class=\"string\">\"ls -al\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> out = exec(cmd);</span><br><span class=\"line\"></span><br><span class=\"line\">out.stdout.on(<span class=\"string\">'data'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"stdout: \"</span> + data);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">out.on(<span class=\"string\">'exit'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">code</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(code);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上述代码片段将运行<code>ls -al</code>后输出结果，并输出命令执行后的返回码。</p>\n<a id=\"more\"></a>\n<h2 id=\"node远程执行\"><a href=\"#node远程执行\" class=\"headerlink\" title=\"node远程执行\"></a>node远程执行</h2><p>如果需要将任务分发到其他机器上，在其他机器上远程执行命令，该怎么做呢？命令简单的话，一句话也能执行。<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//以下方式执行需要先在机器间[建立信任关系](http://blog.sina.com.cn/s/blog_68158ebf0100vf8l.html)</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> remoteMach = <span class=\"string\">\"<span class=\"variable\">$hostname</span>\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> account = <span class=\"string\">\"<span class=\"variable\">$account</span>\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cmd = <span class=\"string\">\"ls -al\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cmd = <span class=\"string\">\"ssh -tT \"</span> + account + <span class=\"string\">\"@\"</span> + remoteMach + <span class=\"string\">'\"'</span> + cmd + <span class=\"string\">'\"'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">out</span> = exec(cmd);</span><br><span class=\"line\"><span class=\"keyword\">out</span>.stdout.on(<span class=\"string\">'data'</span>,function(<span class=\"keyword\">data</span>)&#123;</span><br><span class=\"line\">\tconsole.log(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上述情形，在执行比较简单命令或脚本时是适用的。该方式的明显缺点就是不支持格式化，写起命令来比较困难。<br>不过可以换一种方式来运行。</p>\n<ol>\n<li>先创建远程执行命令的脚本，这样在脚本里面可以格式化命令</li>\n<li>再调用该脚本</li>\n</ol>\n<p>脚本内容写法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">cmd=<span class=\"string\">\"hostname -I &amp;&amp; ls -la\"</span></span><br><span class=\"line\">account=<span class=\"string\">\"xx\"</span></span><br><span class=\"line\">hostname=<span class=\"string\">\"xx\"</span></span><br><span class=\"line\">ssh -tT <span class=\"variable\">$account</span>@<span class=\"variable\">$hostname</span> &lt;&lt; EOD</span><br><span class=\"line\">\t<span class=\"variable\">$cmd</span></span><br><span class=\"line\">EOD</span><br></pre></td></tr></table></figure>\n<p>node中远程调用写法：</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> exec = <span class=\"keyword\">require</span>(<span class=\"string\">'child_process'</span>).exec;</span><br><span class=\"line\"><span class=\"built_in\">var</span> cmd = <span class=\"string\">\"sh -x remote.sh\"</span>;   <span class=\"comment\">//remote.sh即上述脚本</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> out = exec(cmd);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"params\">...</span> <span class=\"params\">...</span></span><br></pre></td></tr></table></figure>\n<p>该写法避免了直接写远程执行命令不能格式化的缺点，但是缺点也很明显，需要额外编写一个脚本文件。在命令简单的时候缺点还不是很明显，试想，如果该执行脚本需要接收很多参数，那么不可避免地，在node中调用的时候需要传递很多参数给该脚本，一样会遇到字符串命令格式化的问题。</p>\n<h2 id=\"使用simple-ssh\"><a href=\"#使用simple-ssh\" class=\"headerlink\" title=\"使用simple-ssh\"></a>使用simple-ssh</h2><p>下面来看一下本篇博客的主角–simple-ssh的解决方案。将node，ssh，shell结合起来估计也没多少文章提到了吧，我在网上查了一圈也没甚收获。在该问题困扰了我许久之后，我终于发现了<a href=\"https://github.com/MCluck90/simple-ssh\" target=\"_blank\" rel=\"noopener\">simple-ssh</a>。</p>\n<p>simple-ssh将远程执行命令变得分外简单，首先我们不必依赖信任关系了，可以直接传递用户名和密码，其次，简明的逻辑让代码写起来逻辑也清晰了很多，即使是复杂命令，由于不用再额外使用<code>ssh account@host &quot;cmd&quot;</code>这种方式包裹，使得参数包含引号时的引号冲突问题也避免了。</p>\n<p>下面的示例由于是简单的<code>ls -al</code>，因此看不太出来其优越，正如上面的例子看不出来使用<code>ssh</code>包裹这种方式直接执行的困难一样，相信我使用simple-ssh来编写要好的多了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//先行安装simple-ssh</span></span><br><span class=\"line\">npm install simple-ssh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//code</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> SSH = <span class=\"built_in\">require</span>(<span class=\"string\">'simple-ssh'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> host = <span class=\"string\">\"xx\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> account = <span class=\"string\">\"xx\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> passwd = <span class=\"string\">\"xx\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ssh = <span class=\"keyword\">new</span> SSH(&#123;</span><br><span class=\"line\">\thost: host,</span><br><span class=\"line\">\tuser: account,</span><br><span class=\"line\">\tpass: passwd</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> cmd = <span class=\"string\">\"hostname -I &amp;&amp; ls -al\"</span>;</span><br><span class=\"line\">ssh.exec(cmd,&#123;</span><br><span class=\"line\">\tout: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">stdout</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(stdout);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\texit: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">code</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(code);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;).start();</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>我有个Node.js项目，需要在node环境下调用shell命令。开始时只是单机调用，很简单，拼接好了shell命令，使用node的child_process调用一下就好了。随着系统规模的扩大，需要在node下进行调度，将任务分发到不同的机器上，于是就需要使用到ssh远程执行。简单一点的命令也还是可以执行的，但随着执行命令也复杂起来，参数里面有开始包含<code>&quot;,&#39;</code>时，问题就开始复杂了。</p>\n<h2 id=\"node执行shell命令或脚本\"><a href=\"#node执行shell命令或脚本\" class=\"headerlink\" title=\"node执行shell命令或脚本\"></a>node执行shell命令或脚本</h2><p>让我们一步步来看一下这个问题是如何复杂起来的。首先先看一下，node下如何执行shell脚本或命令。<br>以执行命令为例：(执行脚本可以等同于执行命令，只需要将大量命令先写成脚本，再执行脚本即可)</p>\n<p>node提供了一个child_process的子进程API，借助该API可以调用系统命令。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> exec = <span class=\"built_in\">require</span>(<span class=\"string\">'child_process'</span>).exec;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> cmd = <span class=\"string\">\"ls -al\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> out = exec(cmd);</span><br><span class=\"line\"></span><br><span class=\"line\">out.stdout.on(<span class=\"string\">'data'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"stdout: \"</span> + data);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">out.on(<span class=\"string\">'exit'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">code</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(code);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上述代码片段将运行<code>ls -al</code>后输出结果，并输出命令执行后的返回码。</p>","more":"<h2 id=\"node远程执行\"><a href=\"#node远程执行\" class=\"headerlink\" title=\"node远程执行\"></a>node远程执行</h2><p>如果需要将任务分发到其他机器上，在其他机器上远程执行命令，该怎么做呢？命令简单的话，一句话也能执行。<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//以下方式执行需要先在机器间[建立信任关系](http://blog.sina.com.cn/s/blog_68158ebf0100vf8l.html)</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> remoteMach = <span class=\"string\">\"<span class=\"variable\">$hostname</span>\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> account = <span class=\"string\">\"<span class=\"variable\">$account</span>\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cmd = <span class=\"string\">\"ls -al\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cmd = <span class=\"string\">\"ssh -tT \"</span> + account + <span class=\"string\">\"@\"</span> + remoteMach + <span class=\"string\">'\"'</span> + cmd + <span class=\"string\">'\"'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">out</span> = exec(cmd);</span><br><span class=\"line\"><span class=\"keyword\">out</span>.stdout.on(<span class=\"string\">'data'</span>,function(<span class=\"keyword\">data</span>)&#123;</span><br><span class=\"line\">\tconsole.log(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上述情形，在执行比较简单命令或脚本时是适用的。该方式的明显缺点就是不支持格式化，写起命令来比较困难。<br>不过可以换一种方式来运行。</p>\n<ol>\n<li>先创建远程执行命令的脚本，这样在脚本里面可以格式化命令</li>\n<li>再调用该脚本</li>\n</ol>\n<p>脚本内容写法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">cmd=<span class=\"string\">\"hostname -I &amp;&amp; ls -la\"</span></span><br><span class=\"line\">account=<span class=\"string\">\"xx\"</span></span><br><span class=\"line\">hostname=<span class=\"string\">\"xx\"</span></span><br><span class=\"line\">ssh -tT <span class=\"variable\">$account</span>@<span class=\"variable\">$hostname</span> &lt;&lt; EOD</span><br><span class=\"line\">\t<span class=\"variable\">$cmd</span></span><br><span class=\"line\">EOD</span><br></pre></td></tr></table></figure>\n<p>node中远程调用写法：</p>\n<figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">var</span> exec = <span class=\"keyword\">require</span>(<span class=\"string\">'child_process'</span>).exec;</span><br><span class=\"line\"><span class=\"built_in\">var</span> cmd = <span class=\"string\">\"sh -x remote.sh\"</span>;   <span class=\"comment\">//remote.sh即上述脚本</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">var</span> out = exec(cmd);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"params\">...</span> <span class=\"params\">...</span></span><br></pre></td></tr></table></figure>\n<p>该写法避免了直接写远程执行命令不能格式化的缺点，但是缺点也很明显，需要额外编写一个脚本文件。在命令简单的时候缺点还不是很明显，试想，如果该执行脚本需要接收很多参数，那么不可避免地，在node中调用的时候需要传递很多参数给该脚本，一样会遇到字符串命令格式化的问题。</p>\n<h2 id=\"使用simple-ssh\"><a href=\"#使用simple-ssh\" class=\"headerlink\" title=\"使用simple-ssh\"></a>使用simple-ssh</h2><p>下面来看一下本篇博客的主角–simple-ssh的解决方案。将node，ssh，shell结合起来估计也没多少文章提到了吧，我在网上查了一圈也没甚收获。在该问题困扰了我许久之后，我终于发现了<a href=\"https://github.com/MCluck90/simple-ssh\" target=\"_blank\" rel=\"noopener\">simple-ssh</a>。</p>\n<p>simple-ssh将远程执行命令变得分外简单，首先我们不必依赖信任关系了，可以直接传递用户名和密码，其次，简明的逻辑让代码写起来逻辑也清晰了很多，即使是复杂命令，由于不用再额外使用<code>ssh account@host &quot;cmd&quot;</code>这种方式包裹，使得参数包含引号时的引号冲突问题也避免了。</p>\n<p>下面的示例由于是简单的<code>ls -al</code>，因此看不太出来其优越，正如上面的例子看不出来使用<code>ssh</code>包裹这种方式直接执行的困难一样，相信我使用simple-ssh来编写要好的多了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//先行安装simple-ssh</span></span><br><span class=\"line\">npm install simple-ssh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//code</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> SSH = <span class=\"built_in\">require</span>(<span class=\"string\">'simple-ssh'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> host = <span class=\"string\">\"xx\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> account = <span class=\"string\">\"xx\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> passwd = <span class=\"string\">\"xx\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ssh = <span class=\"keyword\">new</span> SSH(&#123;</span><br><span class=\"line\">\thost: host,</span><br><span class=\"line\">\tuser: account,</span><br><span class=\"line\">\tpass: passwd</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> cmd = <span class=\"string\">\"hostname -I &amp;&amp; ls -al\"</span>;</span><br><span class=\"line\">ssh.exec(cmd,&#123;</span><br><span class=\"line\">\tout: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">stdout</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(stdout);</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\texit: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">code</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(code);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;).start();</span><br></pre></td></tr></table></figure>","sticky":0},{"title":"小项目：使用树莓派自动播报当前时间和当天天气","show":true,"date":"2017-07-31T07:19:59.000Z","_content":"\n# 背景\n本篇博文分享下使用树莓派结合百度语音合成API进行当前时间和天气自动播报功能的实现。转载请注明出处。\n\n阅读本文需要你有一定的Linux编码水平(主要是Bash)及一些python基础。\n这个项目的想法初衷是希望树莓派能够定时地将一些信息通过蓝牙播放设备自动播放出来，初期先播放时间和天气，能够代替一个闹钟了呢，哈哈~~\n\n# 方案设计\n方案很简单，设置定时任务，将运行时时间获取到，并同时获取当前天气状况，然后使用百度语音合成API将获取到的信息转换成语音通过蓝牙连接的播放设备播放出来。\n\n获取天气也使用了百度开放平台提供的接口，因此一共需要有百度开放平台和语音合成API两个接口的调用权限。\n\n[**开放平台注册**](http://lbsyun.baidu.com/index.php?title=webapi)\n[**语音合成API注册**](http://yuyin.baidu.com/sdk)\n\n## 获取天气\n我们先来获取天气信息,API的返回结果结构如下：\n![](http://wx1.sinaimg.cn/mw690/62d95157gy1fi344u1xbqj20nc0ewac8.jpg)\n我舍弃了穿衣指数什么的，只获取天气数据。\n\n<!--more-->\n\n```py\n#!/usr/bin/python\n# coding: utf-8\n\nimport sys\nimport urllib\nimport urllib2\nimport json\n\nreload(sys)\nsys.setdefaultencoding('utf-8')\n\n# 城市信息参数传入\nurl = \"http://api.map.baidu.com/telematics/v3/weather?location=\" + argv[1] + \"&output=json&ak=开放平台的API key\"\nreq = urllib2.Request(url)\n#print req\n\nres_data = urllib2.urlopen(req)\nres = res_data.read()\n#print res\njsonStr = json.loads(res)\ntodayDate = jsonStr['results'][0][\"weather_data\"][0][\"date\"]\ntodayWeather = jsonStr['results'][0][\"weather_data\"][0][\"weather\"]\ntodayTemp = jsonStr['results'][0][\"weather_data\"][0][\"temperature\"]\n\nprint \"今天天气\",todayWeather,\"气温\",todayTemp\n```\n\n## 合成语音\n然后将获取的天气信息让百度API变成语音读出来：\n```py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nfrom sys import argv\nfrom aip import AipSpeech\n\n## 语音合成API的key\nAPP_ID=\"xxx\"\nAPI_KEY=\"xxx\"\nSECRET_KEY=\"xxx\"\n\n# audioText: The text will be synthesis to audio\n# audioPath: The audio will be saved as.\naudioText = argv[1]\naudioPath = argv[2]\n\naipSpeech = AipSpeech(APP_ID, API_KEY, SECRET_KEY)\n\nresult = aipSpeech.synthesis(audioText,'zh',1,{\n    'vol': 5,       # 0-15,default 5 medium\n    'pit': 6,\n    'spd': 4,\n    'per': 3\n})\n\nif not isinstance(result, dict):\n    with open(audioPath, 'wb') as f:\n        f.write(result)\n```\n获取的天气文本作为第一个参数存入，第二个参数指定语音保存文件。具体选项值可以参考百度API手册。\n\n时间的类似，完整代码请[**戳此查看**](https://github.com/zhangjh/raspberry_autoPlay/tree/master)\n\n## 播放语音\n有了语音文件，播放就很简单了。就跟平常的放音乐一样，找个播放器当然要可以命令行执行的，树莓派下(linux)推荐`mplayer`，然后直接运行\n```\nmplayer xxx.mp3\n```\n声音就通过播放设备播放出来了。对了，最好你是要有个蓝牙音箱，否则你不会还要插个耳机听吧？那样的话，这个项目还有什么折腾的意义呢？^_^\n\n\n利用crontab设置一个定时任务，是不是就成了一个定时播放的闹钟了？\n","source":"_posts/raspberry-autoplay.md","raw":"title: 小项目：使用树莓派自动播报当前时间和当天天气\nshow: true\ndate: 2017-07-31 15:19:59\ntags: [树莓派,raspberry]\ncategories: 技术人生\n---\n\n# 背景\n本篇博文分享下使用树莓派结合百度语音合成API进行当前时间和天气自动播报功能的实现。转载请注明出处。\n\n阅读本文需要你有一定的Linux编码水平(主要是Bash)及一些python基础。\n这个项目的想法初衷是希望树莓派能够定时地将一些信息通过蓝牙播放设备自动播放出来，初期先播放时间和天气，能够代替一个闹钟了呢，哈哈~~\n\n# 方案设计\n方案很简单，设置定时任务，将运行时时间获取到，并同时获取当前天气状况，然后使用百度语音合成API将获取到的信息转换成语音通过蓝牙连接的播放设备播放出来。\n\n获取天气也使用了百度开放平台提供的接口，因此一共需要有百度开放平台和语音合成API两个接口的调用权限。\n\n[**开放平台注册**](http://lbsyun.baidu.com/index.php?title=webapi)\n[**语音合成API注册**](http://yuyin.baidu.com/sdk)\n\n## 获取天气\n我们先来获取天气信息,API的返回结果结构如下：\n![](http://wx1.sinaimg.cn/mw690/62d95157gy1fi344u1xbqj20nc0ewac8.jpg)\n我舍弃了穿衣指数什么的，只获取天气数据。\n\n<!--more-->\n\n```py\n#!/usr/bin/python\n# coding: utf-8\n\nimport sys\nimport urllib\nimport urllib2\nimport json\n\nreload(sys)\nsys.setdefaultencoding('utf-8')\n\n# 城市信息参数传入\nurl = \"http://api.map.baidu.com/telematics/v3/weather?location=\" + argv[1] + \"&output=json&ak=开放平台的API key\"\nreq = urllib2.Request(url)\n#print req\n\nres_data = urllib2.urlopen(req)\nres = res_data.read()\n#print res\njsonStr = json.loads(res)\ntodayDate = jsonStr['results'][0][\"weather_data\"][0][\"date\"]\ntodayWeather = jsonStr['results'][0][\"weather_data\"][0][\"weather\"]\ntodayTemp = jsonStr['results'][0][\"weather_data\"][0][\"temperature\"]\n\nprint \"今天天气\",todayWeather,\"气温\",todayTemp\n```\n\n## 合成语音\n然后将获取的天气信息让百度API变成语音读出来：\n```py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nfrom sys import argv\nfrom aip import AipSpeech\n\n## 语音合成API的key\nAPP_ID=\"xxx\"\nAPI_KEY=\"xxx\"\nSECRET_KEY=\"xxx\"\n\n# audioText: The text will be synthesis to audio\n# audioPath: The audio will be saved as.\naudioText = argv[1]\naudioPath = argv[2]\n\naipSpeech = AipSpeech(APP_ID, API_KEY, SECRET_KEY)\n\nresult = aipSpeech.synthesis(audioText,'zh',1,{\n    'vol': 5,       # 0-15,default 5 medium\n    'pit': 6,\n    'spd': 4,\n    'per': 3\n})\n\nif not isinstance(result, dict):\n    with open(audioPath, 'wb') as f:\n        f.write(result)\n```\n获取的天气文本作为第一个参数存入，第二个参数指定语音保存文件。具体选项值可以参考百度API手册。\n\n时间的类似，完整代码请[**戳此查看**](https://github.com/zhangjh/raspberry_autoPlay/tree/master)\n\n## 播放语音\n有了语音文件，播放就很简单了。就跟平常的放音乐一样，找个播放器当然要可以命令行执行的，树莓派下(linux)推荐`mplayer`，然后直接运行\n```\nmplayer xxx.mp3\n```\n声音就通过播放设备播放出来了。对了，最好你是要有个蓝牙音箱，否则你不会还要插个耳机听吧？那样的话，这个项目还有什么折腾的意义呢？^_^\n\n\n利用crontab设置一个定时任务，是不是就成了一个定时播放的闹钟了？\n","slug":"raspberry-autoplay","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxh005nfnpv491oj78o","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>本篇博文分享下使用树莓派结合百度语音合成API进行当前时间和天气自动播报功能的实现。转载请注明出处。</p>\n<p>阅读本文需要你有一定的Linux编码水平(主要是Bash)及一些python基础。<br>这个项目的想法初衷是希望树莓派能够定时地将一些信息通过蓝牙播放设备自动播放出来，初期先播放时间和天气，能够代替一个闹钟了呢，哈哈~~</p>\n<h1 id=\"方案设计\"><a href=\"#方案设计\" class=\"headerlink\" title=\"方案设计\"></a>方案设计</h1><p>方案很简单，设置定时任务，将运行时时间获取到，并同时获取当前天气状况，然后使用百度语音合成API将获取到的信息转换成语音通过蓝牙连接的播放设备播放出来。</p>\n<p>获取天气也使用了百度开放平台提供的接口，因此一共需要有百度开放平台和语音合成API两个接口的调用权限。</p>\n<p><a href=\"http://lbsyun.baidu.com/index.php?title=webapi\" target=\"_blank\" rel=\"noopener\"><strong>开放平台注册</strong></a><br><a href=\"http://yuyin.baidu.com/sdk\" target=\"_blank\" rel=\"noopener\"><strong>语音合成API注册</strong></a></p>\n<h2 id=\"获取天气\"><a href=\"#获取天气\" class=\"headerlink\" title=\"获取天气\"></a>获取天气</h2><p>我们先来获取天气信息,API的返回结果结构如下：<br><img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fi344u1xbqj20nc0ewac8.jpg\" alt=\"\"><br>我舍弃了穿衣指数什么的，只获取天气数据。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib2</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 城市信息参数传入</span></span><br><span class=\"line\">url = <span class=\"string\">\"http://api.map.baidu.com/telematics/v3/weather?location=\"</span> + argv[<span class=\"number\">1</span>] + <span class=\"string\">\"&amp;output=json&amp;ak=开放平台的API key\"</span></span><br><span class=\"line\">req = urllib2.Request(url)</span><br><span class=\"line\"><span class=\"comment\">#print req</span></span><br><span class=\"line\"></span><br><span class=\"line\">res_data = urllib2.urlopen(req)</span><br><span class=\"line\">res = res_data.read()</span><br><span class=\"line\"><span class=\"comment\">#print res</span></span><br><span class=\"line\">jsonStr = json.loads(res)</span><br><span class=\"line\">todayDate = jsonStr[<span class=\"string\">'results'</span>][<span class=\"number\">0</span>][<span class=\"string\">\"weather_data\"</span>][<span class=\"number\">0</span>][<span class=\"string\">\"date\"</span>]</span><br><span class=\"line\">todayWeather = jsonStr[<span class=\"string\">'results'</span>][<span class=\"number\">0</span>][<span class=\"string\">\"weather_data\"</span>][<span class=\"number\">0</span>][<span class=\"string\">\"weather\"</span>]</span><br><span class=\"line\">todayTemp = jsonStr[<span class=\"string\">'results'</span>][<span class=\"number\">0</span>][<span class=\"string\">\"weather_data\"</span>][<span class=\"number\">0</span>][<span class=\"string\">\"temperature\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"今天天气\"</span>,todayWeather,<span class=\"string\">\"气温\"</span>,todayTemp</span><br></pre></td></tr></table></figure>\n<h2 id=\"合成语音\"><a href=\"#合成语音\" class=\"headerlink\" title=\"合成语音\"></a>合成语音</h2><p>然后将获取的天气信息让百度API变成语音读出来：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> argv</span><br><span class=\"line\"><span class=\"keyword\">from</span> aip <span class=\"keyword\">import</span> AipSpeech</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 语音合成API的key</span></span><br><span class=\"line\">APP_ID=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">API_KEY=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">SECRET_KEY=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># audioText: The text will be synthesis to audio</span></span><br><span class=\"line\"><span class=\"comment\"># audioPath: The audio will be saved as.</span></span><br><span class=\"line\">audioText = argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">audioPath = argv[<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">aipSpeech = AipSpeech(APP_ID, API_KEY, SECRET_KEY)</span><br><span class=\"line\"></span><br><span class=\"line\">result = aipSpeech.synthesis(audioText,<span class=\"string\">'zh'</span>,<span class=\"number\">1</span>,&#123;</span><br><span class=\"line\">    <span class=\"string\">'vol'</span>: <span class=\"number\">5</span>,       <span class=\"comment\"># 0-15,default 5 medium</span></span><br><span class=\"line\">    <span class=\"string\">'pit'</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    <span class=\"string\">'spd'</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">    <span class=\"string\">'per'</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isinstance(result, dict):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(audioPath, <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(result)</span><br></pre></td></tr></table></figure></p>\n<p>获取的天气文本作为第一个参数存入，第二个参数指定语音保存文件。具体选项值可以参考百度API手册。</p>\n<p>时间的类似，完整代码请<a href=\"https://github.com/zhangjh/raspberry_autoPlay/tree/master\" target=\"_blank\" rel=\"noopener\"><strong>戳此查看</strong></a></p>\n<h2 id=\"播放语音\"><a href=\"#播放语音\" class=\"headerlink\" title=\"播放语音\"></a>播放语音</h2><p>有了语音文件，播放就很简单了。就跟平常的放音乐一样，找个播放器当然要可以命令行执行的，树莓派下(linux)推荐<code>mplayer</code>，然后直接运行<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mplayer</span> <span class=\"selector-tag\">xxx</span><span class=\"selector-class\">.mp3</span></span><br></pre></td></tr></table></figure></p>\n<p>声音就通过播放设备播放出来了。对了，最好你是要有个蓝牙音箱，否则你不会还要插个耳机听吧？那样的话，这个项目还有什么折腾的意义呢？^_^</p>\n<p>利用crontab设置一个定时任务，是不是就成了一个定时播放的闹钟了？</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>本篇博文分享下使用树莓派结合百度语音合成API进行当前时间和天气自动播报功能的实现。转载请注明出处。</p>\n<p>阅读本文需要你有一定的Linux编码水平(主要是Bash)及一些python基础。<br>这个项目的想法初衷是希望树莓派能够定时地将一些信息通过蓝牙播放设备自动播放出来，初期先播放时间和天气，能够代替一个闹钟了呢，哈哈~~</p>\n<h1 id=\"方案设计\"><a href=\"#方案设计\" class=\"headerlink\" title=\"方案设计\"></a>方案设计</h1><p>方案很简单，设置定时任务，将运行时时间获取到，并同时获取当前天气状况，然后使用百度语音合成API将获取到的信息转换成语音通过蓝牙连接的播放设备播放出来。</p>\n<p>获取天气也使用了百度开放平台提供的接口，因此一共需要有百度开放平台和语音合成API两个接口的调用权限。</p>\n<p><a href=\"http://lbsyun.baidu.com/index.php?title=webapi\" target=\"_blank\" rel=\"noopener\"><strong>开放平台注册</strong></a><br><a href=\"http://yuyin.baidu.com/sdk\" target=\"_blank\" rel=\"noopener\"><strong>语音合成API注册</strong></a></p>\n<h2 id=\"获取天气\"><a href=\"#获取天气\" class=\"headerlink\" title=\"获取天气\"></a>获取天气</h2><p>我们先来获取天气信息,API的返回结果结构如下：<br><img src=\"http://wx1.sinaimg.cn/mw690/62d95157gy1fi344u1xbqj20nc0ewac8.jpg\" alt=\"\"><br>我舍弃了穿衣指数什么的，只获取天气数据。</p>","more":"<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib2</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 城市信息参数传入</span></span><br><span class=\"line\">url = <span class=\"string\">\"http://api.map.baidu.com/telematics/v3/weather?location=\"</span> + argv[<span class=\"number\">1</span>] + <span class=\"string\">\"&amp;output=json&amp;ak=开放平台的API key\"</span></span><br><span class=\"line\">req = urllib2.Request(url)</span><br><span class=\"line\"><span class=\"comment\">#print req</span></span><br><span class=\"line\"></span><br><span class=\"line\">res_data = urllib2.urlopen(req)</span><br><span class=\"line\">res = res_data.read()</span><br><span class=\"line\"><span class=\"comment\">#print res</span></span><br><span class=\"line\">jsonStr = json.loads(res)</span><br><span class=\"line\">todayDate = jsonStr[<span class=\"string\">'results'</span>][<span class=\"number\">0</span>][<span class=\"string\">\"weather_data\"</span>][<span class=\"number\">0</span>][<span class=\"string\">\"date\"</span>]</span><br><span class=\"line\">todayWeather = jsonStr[<span class=\"string\">'results'</span>][<span class=\"number\">0</span>][<span class=\"string\">\"weather_data\"</span>][<span class=\"number\">0</span>][<span class=\"string\">\"weather\"</span>]</span><br><span class=\"line\">todayTemp = jsonStr[<span class=\"string\">'results'</span>][<span class=\"number\">0</span>][<span class=\"string\">\"weather_data\"</span>][<span class=\"number\">0</span>][<span class=\"string\">\"temperature\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"今天天气\"</span>,todayWeather,<span class=\"string\">\"气温\"</span>,todayTemp</span><br></pre></td></tr></table></figure>\n<h2 id=\"合成语音\"><a href=\"#合成语音\" class=\"headerlink\" title=\"合成语音\"></a>合成语音</h2><p>然后将获取的天气信息让百度API变成语音读出来：<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> argv</span><br><span class=\"line\"><span class=\"keyword\">from</span> aip <span class=\"keyword\">import</span> AipSpeech</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 语音合成API的key</span></span><br><span class=\"line\">APP_ID=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">API_KEY=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\">SECRET_KEY=<span class=\"string\">\"xxx\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># audioText: The text will be synthesis to audio</span></span><br><span class=\"line\"><span class=\"comment\"># audioPath: The audio will be saved as.</span></span><br><span class=\"line\">audioText = argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">audioPath = argv[<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">aipSpeech = AipSpeech(APP_ID, API_KEY, SECRET_KEY)</span><br><span class=\"line\"></span><br><span class=\"line\">result = aipSpeech.synthesis(audioText,<span class=\"string\">'zh'</span>,<span class=\"number\">1</span>,&#123;</span><br><span class=\"line\">    <span class=\"string\">'vol'</span>: <span class=\"number\">5</span>,       <span class=\"comment\"># 0-15,default 5 medium</span></span><br><span class=\"line\">    <span class=\"string\">'pit'</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    <span class=\"string\">'spd'</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">    <span class=\"string\">'per'</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> isinstance(result, dict):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(audioPath, <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(result)</span><br></pre></td></tr></table></figure></p>\n<p>获取的天气文本作为第一个参数存入，第二个参数指定语音保存文件。具体选项值可以参考百度API手册。</p>\n<p>时间的类似，完整代码请<a href=\"https://github.com/zhangjh/raspberry_autoPlay/tree/master\" target=\"_blank\" rel=\"noopener\"><strong>戳此查看</strong></a></p>\n<h2 id=\"播放语音\"><a href=\"#播放语音\" class=\"headerlink\" title=\"播放语音\"></a>播放语音</h2><p>有了语音文件，播放就很简单了。就跟平常的放音乐一样，找个播放器当然要可以命令行执行的，树莓派下(linux)推荐<code>mplayer</code>，然后直接运行<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mplayer</span> <span class=\"selector-tag\">xxx</span><span class=\"selector-class\">.mp3</span></span><br></pre></td></tr></table></figure></p>\n<p>声音就通过播放设备播放出来了。对了，最好你是要有个蓝牙音箱，否则你不会还要插个耳机听吧？那样的话，这个项目还有什么折腾的意义呢？^_^</p>\n<p>利用crontab设置一个定时任务，是不是就成了一个定时播放的闹钟了？</p>","sticky":0},{"title":"树莓派安装完系统后必做的几件事--树莓派初始化操作","show":true,"date":"2017-07-31T06:36:25.000Z","_content":"# 背景\n阅读本文需要你有一定的Linux编码水平，至少能够读懂Bash，对于一个树莓派玩家来说这都不是事儿了吧。\n\n树莓派使用Micro SD卡来作为系统存储，而SD卡又很容易坏，当我们辛苦配置好的树莓派工作环境因为SD卡挂掉，重装时各种配置又要来一趟真的很奔溃，关键还不记得当初一个个都配置了啥了。。\n\n我最近在配置树莓派时就遇到了类似的问题，因为挂载移动硬盘出了点差错(下文会说)，导致系统启动失败，以为是系统被我折腾坏了，格了好几遍SD卡重装，每次都要把软件、配置都重来一遍，于是索性将第一次开机后必做的几件事写成了初始化脚本传到github了，重装后直接下下来执行下就解决了。方便多了，再也不怕重装系统。\n\n顺便记录下导致我写这个自动化初始化树莓派脚本的最初问题。\n\n# 问题\n一开始我的树莓派是没有显示器的，都是使用VNC远程连接。最近在配置了不知道哪个东西后，树莓派就连不上了，反复重装过几次，经过一番配置之后重启后必然又连不上。后来搞了跟显示器的连接线，启动后发现树莓派进入了\"**emergency mode**\"，网上查了下，解决方案对我都不适用，最后我才发现，原来是我在设置自动挂载移动硬盘的时候出错，导致系统启动失败。我的硬盘是NTFS格式的，而树莓派不能直接挂载ntfs格式，需要先安装一个`ntfs-3g`工具。由于重装过系统，忘记了安装这个，直接将挂载命令写入了fstab文件而又没有验证是否能够挂载成功(毕竟挂载过太多次了，想当然以为没问题了)。\n\n<!--more-->\n\n# 树莓派初始化\n痛定思痛，这些安装后的初始化配置操作，每次重装都不可避免要做，重复而又繁琐，经常还会忘记还有哪些没有做。干脆写成自动化命令来操作好了。\n首先我们要确定哪些东西是树莓派安装系统完之后是必不可少的，在我看来，我的树莓派启动后必须要做到这些才能算是一个可以工作的树莓派了：\n```\n更新pi用户密码\n更新国内源\n安装中文环境\n安装VNC\n安装ftp\n安装samba\n修改sh指向bash\n挂载外部存储\n安装VIM并设置vimrc\n安装node环境\n设置alias\n设置开机启动服务\n设置无线连接\n```\n考虑到，我们也许并不是每次都要完整的走完这么多步，脚本应该灵活地支持我们只执行某一个特定步骤，我们希望脚本可以通过接收参数来执行某个特定步骤。比较长的配置文件内容我们可以设置好了cp替换到特定位置。下面直接上代码。\n只挑选几个步骤说明，完整代码请[**戳此查看**](https://github.com/zhangjh/forgottenGoodThings/blob/master/pi/initPi.sh)。\n```bash\n#0. 首先我们要确定sudo权限\nfunction checkSu(){\n    touch /root/test\n    if [ $? -ne 0 ];then\n        echo \"Must run as root or sudo !\"\n    \texit\n    fi\n    rm /root/test\n}\n\n#1. 修改更新源为国内源，加快下载速度\nfunction updateSource(){\n    cat /etc/apt/sources.list | grep -q \"aliyun\"\n    # 不是国内源时替换\n    if [ $? -ne 0 ];then\n        cp /etc/apt/sources.list /etc/apt/sources.list.bak\n        echo \"deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free\" > /etc/apt/sources.list\n        echo \"deb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free\" >> /etc/apt/sources.list\n        apt-get update\n        apt-get upgrade\n    fi\n}\n\n#5. 挂载外部存储\nfunction mountDisk(){\n    disk=`fdisk -l | grep \"/dev/sda[0-9]\" | awk '{print $1}'`\n    if [ \"X${disk}\" != \"X\" ];then\n        # 挂载点不存在设置挂载点\n\t\tif [ ! -e /mnt/share ];then\n            mkdir -p /mnt/share\n            chown pi:pi /mnt/share\n        fi\n        df -h | grep -q \"/mnt/share\"\n        if [ $? -ne 0 ];then\n\t\t\t# ntfs-3g不存在时先安装\n            version=`which ntfs-3g`\n            if [ \"X${version}\" == \"X\" ];then\n                apt-get install ntfs-3g\n            fi\n            mount ${disk} /mnt/share\n        fi\n        #8. 自动挂载\n        cat /etc/fstab | grep -q \"${disk}\"\n        if [ $? -ne 0 ];then\n            echo \"/dev/sda1 /mnt/share/ ntfs-3g slient,umask=0,locale=zh_CN.utf8 0 0\" >> /etc/fstab\n        fi\n    fi\n}\n```\n接收参数我们可以使用Shell的getopts，以上步骤都独立成函数，运行时可以通过传入特定的参数运行特定步骤：\n```bash\nwhile getopts \"pbsvfSnmriIaAh\" opt \ndo\n    case ${opt} in\n      p) updatePasswd;;\n      b) updateBash;;\n      s) updateSource;;\n      v) installVnc;;\n      f) installFtp;;\n      s) installSamba;;\n      n) installNode;;\n      m) mountDisk;;\n      r) setVimrc;;\n      i) updateStartup;;\n      I) installInputMethod;;\n      a) setAlias;;\n      A) all;;\n      h) Usage;;\n    esac\ndone\n```\n如果忘记了哪个参数是执行什么操作的，可以传递`-h`查看帮助信息。\n\n","source":"_posts/raspberry-init.md","raw":"title: 树莓派安装完系统后必做的几件事--树莓派初始化操作\nshow: true\ndate: 2017-07-31 14:36:25\ntags: [树莓派,raspberry]\ncategories: 技术人生\n---\n# 背景\n阅读本文需要你有一定的Linux编码水平，至少能够读懂Bash，对于一个树莓派玩家来说这都不是事儿了吧。\n\n树莓派使用Micro SD卡来作为系统存储，而SD卡又很容易坏，当我们辛苦配置好的树莓派工作环境因为SD卡挂掉，重装时各种配置又要来一趟真的很奔溃，关键还不记得当初一个个都配置了啥了。。\n\n我最近在配置树莓派时就遇到了类似的问题，因为挂载移动硬盘出了点差错(下文会说)，导致系统启动失败，以为是系统被我折腾坏了，格了好几遍SD卡重装，每次都要把软件、配置都重来一遍，于是索性将第一次开机后必做的几件事写成了初始化脚本传到github了，重装后直接下下来执行下就解决了。方便多了，再也不怕重装系统。\n\n顺便记录下导致我写这个自动化初始化树莓派脚本的最初问题。\n\n# 问题\n一开始我的树莓派是没有显示器的，都是使用VNC远程连接。最近在配置了不知道哪个东西后，树莓派就连不上了，反复重装过几次，经过一番配置之后重启后必然又连不上。后来搞了跟显示器的连接线，启动后发现树莓派进入了\"**emergency mode**\"，网上查了下，解决方案对我都不适用，最后我才发现，原来是我在设置自动挂载移动硬盘的时候出错，导致系统启动失败。我的硬盘是NTFS格式的，而树莓派不能直接挂载ntfs格式，需要先安装一个`ntfs-3g`工具。由于重装过系统，忘记了安装这个，直接将挂载命令写入了fstab文件而又没有验证是否能够挂载成功(毕竟挂载过太多次了，想当然以为没问题了)。\n\n<!--more-->\n\n# 树莓派初始化\n痛定思痛，这些安装后的初始化配置操作，每次重装都不可避免要做，重复而又繁琐，经常还会忘记还有哪些没有做。干脆写成自动化命令来操作好了。\n首先我们要确定哪些东西是树莓派安装系统完之后是必不可少的，在我看来，我的树莓派启动后必须要做到这些才能算是一个可以工作的树莓派了：\n```\n更新pi用户密码\n更新国内源\n安装中文环境\n安装VNC\n安装ftp\n安装samba\n修改sh指向bash\n挂载外部存储\n安装VIM并设置vimrc\n安装node环境\n设置alias\n设置开机启动服务\n设置无线连接\n```\n考虑到，我们也许并不是每次都要完整的走完这么多步，脚本应该灵活地支持我们只执行某一个特定步骤，我们希望脚本可以通过接收参数来执行某个特定步骤。比较长的配置文件内容我们可以设置好了cp替换到特定位置。下面直接上代码。\n只挑选几个步骤说明，完整代码请[**戳此查看**](https://github.com/zhangjh/forgottenGoodThings/blob/master/pi/initPi.sh)。\n```bash\n#0. 首先我们要确定sudo权限\nfunction checkSu(){\n    touch /root/test\n    if [ $? -ne 0 ];then\n        echo \"Must run as root or sudo !\"\n    \texit\n    fi\n    rm /root/test\n}\n\n#1. 修改更新源为国内源，加快下载速度\nfunction updateSource(){\n    cat /etc/apt/sources.list | grep -q \"aliyun\"\n    # 不是国内源时替换\n    if [ $? -ne 0 ];then\n        cp /etc/apt/sources.list /etc/apt/sources.list.bak\n        echo \"deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free\" > /etc/apt/sources.list\n        echo \"deb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free\" >> /etc/apt/sources.list\n        apt-get update\n        apt-get upgrade\n    fi\n}\n\n#5. 挂载外部存储\nfunction mountDisk(){\n    disk=`fdisk -l | grep \"/dev/sda[0-9]\" | awk '{print $1}'`\n    if [ \"X${disk}\" != \"X\" ];then\n        # 挂载点不存在设置挂载点\n\t\tif [ ! -e /mnt/share ];then\n            mkdir -p /mnt/share\n            chown pi:pi /mnt/share\n        fi\n        df -h | grep -q \"/mnt/share\"\n        if [ $? -ne 0 ];then\n\t\t\t# ntfs-3g不存在时先安装\n            version=`which ntfs-3g`\n            if [ \"X${version}\" == \"X\" ];then\n                apt-get install ntfs-3g\n            fi\n            mount ${disk} /mnt/share\n        fi\n        #8. 自动挂载\n        cat /etc/fstab | grep -q \"${disk}\"\n        if [ $? -ne 0 ];then\n            echo \"/dev/sda1 /mnt/share/ ntfs-3g slient,umask=0,locale=zh_CN.utf8 0 0\" >> /etc/fstab\n        fi\n    fi\n}\n```\n接收参数我们可以使用Shell的getopts，以上步骤都独立成函数，运行时可以通过传入特定的参数运行特定步骤：\n```bash\nwhile getopts \"pbsvfSnmriIaAh\" opt \ndo\n    case ${opt} in\n      p) updatePasswd;;\n      b) updateBash;;\n      s) updateSource;;\n      v) installVnc;;\n      f) installFtp;;\n      s) installSamba;;\n      n) installNode;;\n      m) mountDisk;;\n      r) setVimrc;;\n      i) updateStartup;;\n      I) installInputMethod;;\n      a) setAlias;;\n      A) all;;\n      h) Usage;;\n    esac\ndone\n```\n如果忘记了哪个参数是执行什么操作的，可以传递`-h`查看帮助信息。\n\n","slug":"raspberry-init","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxj005rfnpvs5ds89qn","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>阅读本文需要你有一定的Linux编码水平，至少能够读懂Bash，对于一个树莓派玩家来说这都不是事儿了吧。</p>\n<p>树莓派使用Micro SD卡来作为系统存储，而SD卡又很容易坏，当我们辛苦配置好的树莓派工作环境因为SD卡挂掉，重装时各种配置又要来一趟真的很奔溃，关键还不记得当初一个个都配置了啥了。。</p>\n<p>我最近在配置树莓派时就遇到了类似的问题，因为挂载移动硬盘出了点差错(下文会说)，导致系统启动失败，以为是系统被我折腾坏了，格了好几遍SD卡重装，每次都要把软件、配置都重来一遍，于是索性将第一次开机后必做的几件事写成了初始化脚本传到github了，重装后直接下下来执行下就解决了。方便多了，再也不怕重装系统。</p>\n<p>顺便记录下导致我写这个自动化初始化树莓派脚本的最初问题。</p>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>一开始我的树莓派是没有显示器的，都是使用VNC远程连接。最近在配置了不知道哪个东西后，树莓派就连不上了，反复重装过几次，经过一番配置之后重启后必然又连不上。后来搞了跟显示器的连接线，启动后发现树莓派进入了”<strong>emergency mode</strong>“，网上查了下，解决方案对我都不适用，最后我才发现，原来是我在设置自动挂载移动硬盘的时候出错，导致系统启动失败。我的硬盘是NTFS格式的，而树莓派不能直接挂载ntfs格式，需要先安装一个<code>ntfs-3g</code>工具。由于重装过系统，忘记了安装这个，直接将挂载命令写入了fstab文件而又没有验证是否能够挂载成功(毕竟挂载过太多次了，想当然以为没问题了)。</p>\n<a id=\"more\"></a>\n<h1 id=\"树莓派初始化\"><a href=\"#树莓派初始化\" class=\"headerlink\" title=\"树莓派初始化\"></a>树莓派初始化</h1><p>痛定思痛，这些安装后的初始化配置操作，每次重装都不可避免要做，重复而又繁琐，经常还会忘记还有哪些没有做。干脆写成自动化命令来操作好了。<br>首先我们要确定哪些东西是树莓派安装系统完之后是必不可少的，在我看来，我的树莓派启动后必须要做到这些才能算是一个可以工作的树莓派了：<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">更新pi用户密码</span><br><span class=\"line\">更新国内源</span><br><span class=\"line\">安装中文环境</span><br><span class=\"line\">安装VNC</span><br><span class=\"line\">安装ftp</span><br><span class=\"line\">安装samba</span><br><span class=\"line\">修改sh指向bash</span><br><span class=\"line\">挂载外部存储</span><br><span class=\"line\">安装VIM并设置vimrc</span><br><span class=\"line\">安装<span class=\"keyword\">node</span><span class=\"title\">环境</span></span><br><span class=\"line\"><span class=\"title\">设置alias</span></span><br><span class=\"line\">设置开机启动服务</span><br><span class=\"line\">设置无线连接</span><br></pre></td></tr></table></figure></p>\n<p>考虑到，我们也许并不是每次都要完整的走完这么多步，脚本应该灵活地支持我们只执行某一个特定步骤，我们希望脚本可以通过接收参数来执行某个特定步骤。比较长的配置文件内容我们可以设置好了cp替换到特定位置。下面直接上代码。<br>只挑选几个步骤说明，完整代码请<a href=\"https://github.com/zhangjh/forgottenGoodThings/blob/master/pi/initPi.sh\" target=\"_blank\" rel=\"noopener\"><strong>戳此查看</strong></a>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#0. 首先我们要确定sudo权限</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">checkSu</span></span>()&#123;</span><br><span class=\"line\">    touch /root/<span class=\"built_in\">test</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Must run as root or sudo !\"</span></span><br><span class=\"line\">    \t<span class=\"built_in\">exit</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    rm /root/<span class=\"built_in\">test</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1. 修改更新源为国内源，加快下载速度</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">updateSource</span></span>()&#123;</span><br><span class=\"line\">    cat /etc/apt/sources.list | grep -q <span class=\"string\">\"aliyun\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 不是国内源时替换</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">        cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free\"</span> &gt; /etc/apt/sources.list</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"deb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free\"</span> &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">        apt-get update</span><br><span class=\"line\">        apt-get upgrade</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5. 挂载外部存储</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">mountDisk</span></span>()&#123;</span><br><span class=\"line\">    disk=`fdisk -l | grep <span class=\"string\">\"/dev/sda[0-9]\"</span> | awk <span class=\"string\">'&#123;print $1&#125;'</span>`</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">\"X<span class=\"variable\">$&#123;disk&#125;</span>\"</span> != <span class=\"string\">\"X\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"comment\"># 挂载点不存在设置挂载点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> [ ! -e /mnt/share ];<span class=\"keyword\">then</span></span><br><span class=\"line\">            mkdir -p /mnt/share</span><br><span class=\"line\">            chown pi:pi /mnt/share</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        df -h | grep -q <span class=\"string\">\"/mnt/share\"</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\"># ntfs-3g不存在时先安装</span></span><br><span class=\"line\">            version=`<span class=\"built_in\">which</span> ntfs-3g`</span><br><span class=\"line\">            <span class=\"keyword\">if</span> [ <span class=\"string\">\"X<span class=\"variable\">$&#123;version&#125;</span>\"</span> == <span class=\"string\">\"X\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">                apt-get install ntfs-3g</span><br><span class=\"line\">            <span class=\"keyword\">fi</span></span><br><span class=\"line\">            mount <span class=\"variable\">$&#123;disk&#125;</span> /mnt/share</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"comment\">#8. 自动挂载</span></span><br><span class=\"line\">        cat /etc/fstab | grep -q <span class=\"string\">\"<span class=\"variable\">$&#123;disk&#125;</span>\"</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">\"/dev/sda1 /mnt/share/ ntfs-3g slient,umask=0,locale=zh_CN.utf8 0 0\"</span> &gt;&gt; /etc/fstab</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>接收参数我们可以使用Shell的getopts，以上步骤都独立成函数，运行时可以通过传入特定的参数运行特定步骤：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">getopts</span> <span class=\"string\">\"pbsvfSnmriIaAh\"</span> opt </span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"variable\">$&#123;opt&#125;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">      p) updatePasswd;;</span><br><span class=\"line\">      b) updateBash;;</span><br><span class=\"line\">      s) updateSource;;</span><br><span class=\"line\">      v) installVnc;;</span><br><span class=\"line\">      f) installFtp;;</span><br><span class=\"line\">      s) installSamba;;</span><br><span class=\"line\">      n) installNode;;</span><br><span class=\"line\">      m) mountDisk;;</span><br><span class=\"line\">      r) setVimrc;;</span><br><span class=\"line\">      i) updateStartup;;</span><br><span class=\"line\">      I) installInputMethod;;</span><br><span class=\"line\">      a) setAlias;;</span><br><span class=\"line\">      A) all;;</span><br><span class=\"line\">      h) Usage;;</span><br><span class=\"line\">    <span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>如果忘记了哪个参数是执行什么操作的，可以传递<code>-h</code>查看帮助信息。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>阅读本文需要你有一定的Linux编码水平，至少能够读懂Bash，对于一个树莓派玩家来说这都不是事儿了吧。</p>\n<p>树莓派使用Micro SD卡来作为系统存储，而SD卡又很容易坏，当我们辛苦配置好的树莓派工作环境因为SD卡挂掉，重装时各种配置又要来一趟真的很奔溃，关键还不记得当初一个个都配置了啥了。。</p>\n<p>我最近在配置树莓派时就遇到了类似的问题，因为挂载移动硬盘出了点差错(下文会说)，导致系统启动失败，以为是系统被我折腾坏了，格了好几遍SD卡重装，每次都要把软件、配置都重来一遍，于是索性将第一次开机后必做的几件事写成了初始化脚本传到github了，重装后直接下下来执行下就解决了。方便多了，再也不怕重装系统。</p>\n<p>顺便记录下导致我写这个自动化初始化树莓派脚本的最初问题。</p>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>一开始我的树莓派是没有显示器的，都是使用VNC远程连接。最近在配置了不知道哪个东西后，树莓派就连不上了，反复重装过几次，经过一番配置之后重启后必然又连不上。后来搞了跟显示器的连接线，启动后发现树莓派进入了”<strong>emergency mode</strong>“，网上查了下，解决方案对我都不适用，最后我才发现，原来是我在设置自动挂载移动硬盘的时候出错，导致系统启动失败。我的硬盘是NTFS格式的，而树莓派不能直接挂载ntfs格式，需要先安装一个<code>ntfs-3g</code>工具。由于重装过系统，忘记了安装这个，直接将挂载命令写入了fstab文件而又没有验证是否能够挂载成功(毕竟挂载过太多次了，想当然以为没问题了)。</p>","more":"<h1 id=\"树莓派初始化\"><a href=\"#树莓派初始化\" class=\"headerlink\" title=\"树莓派初始化\"></a>树莓派初始化</h1><p>痛定思痛，这些安装后的初始化配置操作，每次重装都不可避免要做，重复而又繁琐，经常还会忘记还有哪些没有做。干脆写成自动化命令来操作好了。<br>首先我们要确定哪些东西是树莓派安装系统完之后是必不可少的，在我看来，我的树莓派启动后必须要做到这些才能算是一个可以工作的树莓派了：<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">更新pi用户密码</span><br><span class=\"line\">更新国内源</span><br><span class=\"line\">安装中文环境</span><br><span class=\"line\">安装VNC</span><br><span class=\"line\">安装ftp</span><br><span class=\"line\">安装samba</span><br><span class=\"line\">修改sh指向bash</span><br><span class=\"line\">挂载外部存储</span><br><span class=\"line\">安装VIM并设置vimrc</span><br><span class=\"line\">安装<span class=\"keyword\">node</span><span class=\"title\">环境</span></span><br><span class=\"line\"><span class=\"title\">设置alias</span></span><br><span class=\"line\">设置开机启动服务</span><br><span class=\"line\">设置无线连接</span><br></pre></td></tr></table></figure></p>\n<p>考虑到，我们也许并不是每次都要完整的走完这么多步，脚本应该灵活地支持我们只执行某一个特定步骤，我们希望脚本可以通过接收参数来执行某个特定步骤。比较长的配置文件内容我们可以设置好了cp替换到特定位置。下面直接上代码。<br>只挑选几个步骤说明，完整代码请<a href=\"https://github.com/zhangjh/forgottenGoodThings/blob/master/pi/initPi.sh\" target=\"_blank\" rel=\"noopener\"><strong>戳此查看</strong></a>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#0. 首先我们要确定sudo权限</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">checkSu</span></span>()&#123;</span><br><span class=\"line\">    touch /root/<span class=\"built_in\">test</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Must run as root or sudo !\"</span></span><br><span class=\"line\">    \t<span class=\"built_in\">exit</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    rm /root/<span class=\"built_in\">test</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1. 修改更新源为国内源，加快下载速度</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">updateSource</span></span>()&#123;</span><br><span class=\"line\">    cat /etc/apt/sources.list | grep -q <span class=\"string\">\"aliyun\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 不是国内源时替换</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">        cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free\"</span> &gt; /etc/apt/sources.list</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"deb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main contrib non-free\"</span> &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">        apt-get update</span><br><span class=\"line\">        apt-get upgrade</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5. 挂载外部存储</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">mountDisk</span></span>()&#123;</span><br><span class=\"line\">    disk=`fdisk -l | grep <span class=\"string\">\"/dev/sda[0-9]\"</span> | awk <span class=\"string\">'&#123;print $1&#125;'</span>`</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">\"X<span class=\"variable\">$&#123;disk&#125;</span>\"</span> != <span class=\"string\">\"X\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"comment\"># 挂载点不存在设置挂载点</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> [ ! -e /mnt/share ];<span class=\"keyword\">then</span></span><br><span class=\"line\">            mkdir -p /mnt/share</span><br><span class=\"line\">            chown pi:pi /mnt/share</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        df -h | grep -q <span class=\"string\">\"/mnt/share\"</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\"># ntfs-3g不存在时先安装</span></span><br><span class=\"line\">            version=`<span class=\"built_in\">which</span> ntfs-3g`</span><br><span class=\"line\">            <span class=\"keyword\">if</span> [ <span class=\"string\">\"X<span class=\"variable\">$&#123;version&#125;</span>\"</span> == <span class=\"string\">\"X\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">                apt-get install ntfs-3g</span><br><span class=\"line\">            <span class=\"keyword\">fi</span></span><br><span class=\"line\">            mount <span class=\"variable\">$&#123;disk&#125;</span> /mnt/share</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">        <span class=\"comment\">#8. 自动挂载</span></span><br><span class=\"line\">        cat /etc/fstab | grep -q <span class=\"string\">\"<span class=\"variable\">$&#123;disk&#125;</span>\"</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ $? -ne 0 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">\"/dev/sda1 /mnt/share/ ntfs-3g slient,umask=0,locale=zh_CN.utf8 0 0\"</span> &gt;&gt; /etc/fstab</span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>接收参数我们可以使用Shell的getopts，以上步骤都独立成函数，运行时可以通过传入特定的参数运行特定步骤：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">getopts</span> <span class=\"string\">\"pbsvfSnmriIaAh\"</span> opt </span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"variable\">$&#123;opt&#125;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">      p) updatePasswd;;</span><br><span class=\"line\">      b) updateBash;;</span><br><span class=\"line\">      s) updateSource;;</span><br><span class=\"line\">      v) installVnc;;</span><br><span class=\"line\">      f) installFtp;;</span><br><span class=\"line\">      s) installSamba;;</span><br><span class=\"line\">      n) installNode;;</span><br><span class=\"line\">      m) mountDisk;;</span><br><span class=\"line\">      r) setVimrc;;</span><br><span class=\"line\">      i) updateStartup;;</span><br><span class=\"line\">      I) installInputMethod;;</span><br><span class=\"line\">      a) setAlias;;</span><br><span class=\"line\">      A) all;;</span><br><span class=\"line\">      h) Usage;;</span><br><span class=\"line\">    <span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>如果忘记了哪个参数是执行什么操作的，可以传递<code>-h</code>查看帮助信息。</p>","sticky":0},{"title":"使用sendEmail在命令行下自动发送邮件","show":true,"date":"2016-08-16T10:11:20.000Z","_content":"\n> 偷懒是优秀程序员的美好品德。\n\n# 背景\n\n作为一个码农，我们的原则是尽量把能自动化完成的任务交给机器。工作上一些流程性的邮件完全可以通过自动化实现。前端获取邮件信息，后端将信息组装发送出去。本篇博文将如何使用sendEmail发送邮件做一记录。\n\n# 安装\n\n点击[此处](http://caspian.dotconf.net/menu/Software/SendEmail/)，从官网下载sendEmail二进制文件。\n\n# 使用\n\n官网的说明已经很完善，或者直接运行`sendEmail`命令，会打出详尽的命令参数。\n\n主要的参数有：\n\n```\n-t 收件人\n-f 发件人\n-u 邮件主题\n-m 邮件内容 (也可以通过读取文件方式)\n-s 发送邮件服务器\n-a 发送附件\n-cc 抄送人\n-xu 发件人验证\n-xp 发件人密码\n```\n\n<!--more-->\n\n# 脚本封装\n\n```sh\n#!/bin/bash\n\nfunction USAGE(){\n\techo \"sh $0 <-t toEmail> <-u subject> <-m message> <-C ccEmail> <-a appendFile>\"\n} \n\nif [ $# -lt 1 ];then\n\tUSAGE\n\texit 1\nfi\n\nwhile getopts t:u:m:C:a:h OPTION\ndo\n\tcase $OPTION in\n\t\tt) to=\"${OPTARG}\"\n\t\t;;\n\t\tu) subject=\"${OPTARG}\"\n\t\t;;\n\t\tm) message=\"${OPTARG}\"\n\t\t;;\n\t\tC) cc=\"${OPTARG}\"\n\t\t;;\n\t\ta) append=\"${OPTARG}\"\n\t\t;;\n\t\th) USAGE\n\t\t;;\n\tesac\ndone\n\nparams=\" -t ${to} -u ${subject} -f ${from} -s xxxx(绿色围墙) -xu xxxx(绿色围墙) -xp xxxx(绿色围墙)\"\n\nif [ \"${cc}\" != \"\" ];then\n\tparams=\"${params} -cc ${cc}\"\nfi\n\nif [ \"${append}\" != \"\" ];then\n\tparams=\"${params} -a ${append}\"\nfi\n\necho ${params}\n\ncat txt | sendEmail ${params}\n```\n\n","source":"_posts/sendEmail.md","raw":"title: 使用sendEmail在命令行下自动发送邮件\nshow: true\ndate: 2016-08-16 18:11:20\ntags: [sendEmail,发送邮件,中文乱码]\ncategories: 技术人生\n---\n\n> 偷懒是优秀程序员的美好品德。\n\n# 背景\n\n作为一个码农，我们的原则是尽量把能自动化完成的任务交给机器。工作上一些流程性的邮件完全可以通过自动化实现。前端获取邮件信息，后端将信息组装发送出去。本篇博文将如何使用sendEmail发送邮件做一记录。\n\n# 安装\n\n点击[此处](http://caspian.dotconf.net/menu/Software/SendEmail/)，从官网下载sendEmail二进制文件。\n\n# 使用\n\n官网的说明已经很完善，或者直接运行`sendEmail`命令，会打出详尽的命令参数。\n\n主要的参数有：\n\n```\n-t 收件人\n-f 发件人\n-u 邮件主题\n-m 邮件内容 (也可以通过读取文件方式)\n-s 发送邮件服务器\n-a 发送附件\n-cc 抄送人\n-xu 发件人验证\n-xp 发件人密码\n```\n\n<!--more-->\n\n# 脚本封装\n\n```sh\n#!/bin/bash\n\nfunction USAGE(){\n\techo \"sh $0 <-t toEmail> <-u subject> <-m message> <-C ccEmail> <-a appendFile>\"\n} \n\nif [ $# -lt 1 ];then\n\tUSAGE\n\texit 1\nfi\n\nwhile getopts t:u:m:C:a:h OPTION\ndo\n\tcase $OPTION in\n\t\tt) to=\"${OPTARG}\"\n\t\t;;\n\t\tu) subject=\"${OPTARG}\"\n\t\t;;\n\t\tm) message=\"${OPTARG}\"\n\t\t;;\n\t\tC) cc=\"${OPTARG}\"\n\t\t;;\n\t\ta) append=\"${OPTARG}\"\n\t\t;;\n\t\th) USAGE\n\t\t;;\n\tesac\ndone\n\nparams=\" -t ${to} -u ${subject} -f ${from} -s xxxx(绿色围墙) -xu xxxx(绿色围墙) -xp xxxx(绿色围墙)\"\n\nif [ \"${cc}\" != \"\" ];then\n\tparams=\"${params} -cc ${cc}\"\nfi\n\nif [ \"${append}\" != \"\" ];then\n\tparams=\"${params} -a ${append}\"\nfi\n\necho ${params}\n\ncat txt | sendEmail ${params}\n```\n\n","slug":"sendEmail","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxl005tfnpvp76u8aqx","content":"<blockquote>\n<p>偷懒是优秀程序员的美好品德。</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>作为一个码农，我们的原则是尽量把能自动化完成的任务交给机器。工作上一些流程性的邮件完全可以通过自动化实现。前端获取邮件信息，后端将信息组装发送出去。本篇博文将如何使用sendEmail发送邮件做一记录。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>点击<a href=\"http://caspian.dotconf.net/menu/Software/SendEmail/\" target=\"_blank\" rel=\"noopener\">此处</a>，从官网下载sendEmail二进制文件。</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>官网的说明已经很完善，或者直接运行<code>sendEmail</code>命令，会打出详尽的命令参数。</p>\n<p>主要的参数有：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-t 收件人</span></span><br><span class=\"line\"><span class=\"deletion\">-f 发件人</span></span><br><span class=\"line\"><span class=\"deletion\">-u 邮件主题</span></span><br><span class=\"line\"><span class=\"deletion\">-m 邮件内容 (也可以通过读取文件方式)</span></span><br><span class=\"line\"><span class=\"deletion\">-s 发送邮件服务器</span></span><br><span class=\"line\"><span class=\"deletion\">-a 发送附件</span></span><br><span class=\"line\"><span class=\"deletion\">-cc 抄送人</span></span><br><span class=\"line\"><span class=\"deletion\">-xu 发件人验证</span></span><br><span class=\"line\"><span class=\"deletion\">-xp 发件人密码</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"脚本封装\"><a href=\"#脚本封装\" class=\"headerlink\" title=\"脚本封装\"></a>脚本封装</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">USAGE</span></span>()&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"sh <span class=\"variable\">$0</span> &lt;-t toEmail&gt; &lt;-u subject&gt; &lt;-m message&gt; &lt;-C ccEmail&gt; &lt;-a appendFile&gt;\"</span></span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -lt 1 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\tUSAGE</span><br><span class=\"line\">\t<span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">getopts</span> t:u:m:C:a:h OPTION</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$OPTION</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\tt) to=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\tu) subject=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\tm) message=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\tC) cc=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\ta) append=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\th) USAGE</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">params=<span class=\"string\">\" -t <span class=\"variable\">$&#123;to&#125;</span> -u <span class=\"variable\">$&#123;subject&#125;</span> -f <span class=\"variable\">$&#123;from&#125;</span> -s xxxx(绿色围墙) -xu xxxx(绿色围墙) -xp xxxx(绿色围墙)\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$&#123;cc&#125;</span>\"</span> != <span class=\"string\">\"\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\tparams=<span class=\"string\">\"<span class=\"variable\">$&#123;params&#125;</span> -cc <span class=\"variable\">$&#123;cc&#125;</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$&#123;append&#125;</span>\"</span> != <span class=\"string\">\"\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\tparams=<span class=\"string\">\"<span class=\"variable\">$&#123;params&#125;</span> -a <span class=\"variable\">$&#123;append&#125;</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;params&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat txt | sendEmail <span class=\"variable\">$&#123;params&#125;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>偷懒是优秀程序员的美好品德。</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>作为一个码农，我们的原则是尽量把能自动化完成的任务交给机器。工作上一些流程性的邮件完全可以通过自动化实现。前端获取邮件信息，后端将信息组装发送出去。本篇博文将如何使用sendEmail发送邮件做一记录。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>点击<a href=\"http://caspian.dotconf.net/menu/Software/SendEmail/\" target=\"_blank\" rel=\"noopener\">此处</a>，从官网下载sendEmail二进制文件。</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>官网的说明已经很完善，或者直接运行<code>sendEmail</code>命令，会打出详尽的命令参数。</p>\n<p>主要的参数有：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-t 收件人</span></span><br><span class=\"line\"><span class=\"deletion\">-f 发件人</span></span><br><span class=\"line\"><span class=\"deletion\">-u 邮件主题</span></span><br><span class=\"line\"><span class=\"deletion\">-m 邮件内容 (也可以通过读取文件方式)</span></span><br><span class=\"line\"><span class=\"deletion\">-s 发送邮件服务器</span></span><br><span class=\"line\"><span class=\"deletion\">-a 发送附件</span></span><br><span class=\"line\"><span class=\"deletion\">-cc 抄送人</span></span><br><span class=\"line\"><span class=\"deletion\">-xu 发件人验证</span></span><br><span class=\"line\"><span class=\"deletion\">-xp 发件人密码</span></span><br></pre></td></tr></table></figure>","more":"<h1 id=\"脚本封装\"><a href=\"#脚本封装\" class=\"headerlink\" title=\"脚本封装\"></a>脚本封装</h1><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">USAGE</span></span>()&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"sh <span class=\"variable\">$0</span> &lt;-t toEmail&gt; &lt;-u subject&gt; &lt;-m message&gt; &lt;-C ccEmail&gt; &lt;-a appendFile&gt;\"</span></span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$#</span> -lt 1 ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\tUSAGE</span><br><span class=\"line\">\t<span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">getopts</span> t:u:m:C:a:h OPTION</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$OPTION</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\tt) to=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\tu) subject=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\tm) message=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\tC) cc=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\ta) append=<span class=\"string\">\"<span class=\"variable\">$&#123;OPTARG&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t\th) USAGE</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\">params=<span class=\"string\">\" -t <span class=\"variable\">$&#123;to&#125;</span> -u <span class=\"variable\">$&#123;subject&#125;</span> -f <span class=\"variable\">$&#123;from&#125;</span> -s xxxx(绿色围墙) -xu xxxx(绿色围墙) -xp xxxx(绿色围墙)\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$&#123;cc&#125;</span>\"</span> != <span class=\"string\">\"\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\tparams=<span class=\"string\">\"<span class=\"variable\">$&#123;params&#125;</span> -cc <span class=\"variable\">$&#123;cc&#125;</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$&#123;append&#125;</span>\"</span> != <span class=\"string\">\"\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">\tparams=<span class=\"string\">\"<span class=\"variable\">$&#123;params&#125;</span> -a <span class=\"variable\">$&#123;append&#125;</span>\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;params&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cat txt | sendEmail <span class=\"variable\">$&#123;params&#125;</span></span><br></pre></td></tr></table></figure>","sticky":0},{"title":"Linux Shell中运行mysql命令","show":true,"date":"2017-03-14T10:08:27.000Z","_content":"\n## 背景\n我们经常需要批量地执行很多mysql命令，这时候如果直接在mysql终端下执行，效率很低。如果借助Shell来进行自动化地操作，则会大大方便我们操作。这里就记录一下我用来进行数据库表重建的方法。\n\n## 准备mysql脚本\n首先我们要准备相应的mysql命令脚本，以便shell调用。\n如：\n```\nDROP TABLE IF EXISTS `attachment`;\nCREATE TABLE `attachment` (\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `init_name` varchar(100) NOT NULL,\n  `file_path` varchar(100) NOT NULL,\n  `gmt_create` datetime NOT NULL DEFAULT now(),\n  `gmt_modified` timestamp NOT NULL DEFAULT now(),\n  `creator` varchar(100) NOT NULL DEFAULT 'system',\n  `modifier` varchar(100) NOT NULL DEFAULT 'system',\n  `is_deleted` char(1) NOT NULL DEFAULT 'N',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=460 DEFAULT CHARSET=utf8;\n```\n正常写mysql命令即可。\n\n<!--more-->\n\n## 编写Shell脚本\n接着我们编写Shell脚本调用sql，我们要知道可以在Shell中使用\n```\nmysql <<EOF\nEOF\n```\n的方式来运行mysql命令，在mysql段中还可以使用`source` sql命令来运行sql。\n\n由于我的建表sql命令是导出的，只有建表命令，没有选择数据库的命令，因此正式使用之前还需要进行一点修改。\n\n我们可以把要批量运行的sql命令按照任务的不同分放在不同的文件中，然后使用Shell统一调用。\n如：\n```\n#!/bin/bash\nSQL_DIR=\"./sqlinit\"\ncd ${SQL_DIR}\nls *.sql | while read line;\ndo\n    mysql -uroot << EOF\n        ## 选中要处理的数据库\n        USE db_name; \n        source $line\nEOF\ndone\n```\n\n简单的sql命令，可以使用`mysql -uxx -pxx -e \"sql cmd\"`来运行，其他的方式就不多说了，文中这种应该算是最好用的方式了。\n","source":"_posts/shell-run-mysql.md","raw":"title: Linux Shell中运行mysql命令\nshow: true\ndate: 2017-03-14 18:08:27\ntags: [shell,mysql]\ncategories: 技术人生\n---\n\n## 背景\n我们经常需要批量地执行很多mysql命令，这时候如果直接在mysql终端下执行，效率很低。如果借助Shell来进行自动化地操作，则会大大方便我们操作。这里就记录一下我用来进行数据库表重建的方法。\n\n## 准备mysql脚本\n首先我们要准备相应的mysql命令脚本，以便shell调用。\n如：\n```\nDROP TABLE IF EXISTS `attachment`;\nCREATE TABLE `attachment` (\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `init_name` varchar(100) NOT NULL,\n  `file_path` varchar(100) NOT NULL,\n  `gmt_create` datetime NOT NULL DEFAULT now(),\n  `gmt_modified` timestamp NOT NULL DEFAULT now(),\n  `creator` varchar(100) NOT NULL DEFAULT 'system',\n  `modifier` varchar(100) NOT NULL DEFAULT 'system',\n  `is_deleted` char(1) NOT NULL DEFAULT 'N',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=460 DEFAULT CHARSET=utf8;\n```\n正常写mysql命令即可。\n\n<!--more-->\n\n## 编写Shell脚本\n接着我们编写Shell脚本调用sql，我们要知道可以在Shell中使用\n```\nmysql <<EOF\nEOF\n```\n的方式来运行mysql命令，在mysql段中还可以使用`source` sql命令来运行sql。\n\n由于我的建表sql命令是导出的，只有建表命令，没有选择数据库的命令，因此正式使用之前还需要进行一点修改。\n\n我们可以把要批量运行的sql命令按照任务的不同分放在不同的文件中，然后使用Shell统一调用。\n如：\n```\n#!/bin/bash\nSQL_DIR=\"./sqlinit\"\ncd ${SQL_DIR}\nls *.sql | while read line;\ndo\n    mysql -uroot << EOF\n        ## 选中要处理的数据库\n        USE db_name; \n        source $line\nEOF\ndone\n```\n\n简单的sql命令，可以使用`mysql -uxx -pxx -e \"sql cmd\"`来运行，其他的方式就不多说了，文中这种应该算是最好用的方式了。\n","slug":"shell-run-mysql","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxn005wfnpv2f2ohwta","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>我们经常需要批量地执行很多mysql命令，这时候如果直接在mysql终端下执行，效率很低。如果借助Shell来进行自动化地操作，则会大大方便我们操作。这里就记录一下我用来进行数据库表重建的方法。</p>\n<h2 id=\"准备mysql脚本\"><a href=\"#准备mysql脚本\" class=\"headerlink\" title=\"准备mysql脚本\"></a>准备mysql脚本</h2><p>首先我们要准备相应的mysql命令脚本，以便shell调用。<br>如：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">IF</span> <span class=\"keyword\">EXISTS</span> <span class=\"string\">`attachment`</span>;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`attachment`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  <span class=\"string\">`init_name`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`file_path`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`gmt_create`</span> datetime <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">now</span>(),</span><br><span class=\"line\">  <span class=\"string\">`gmt_modified`</span> <span class=\"built_in\">timestamp</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">now</span>(),</span><br><span class=\"line\">  <span class=\"string\">`creator`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'system'</span>,</span><br><span class=\"line\">  <span class=\"string\">`modifier`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'system'</span>,</span><br><span class=\"line\">  <span class=\"string\">`is_deleted`</span> <span class=\"built_in\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'N'</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>)</span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> AUTO_INCREMENT=<span class=\"number\">460</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure></p>\n<p>正常写mysql命令即可。</p>\n<a id=\"more\"></a>\n<h2 id=\"编写Shell脚本\"><a href=\"#编写Shell脚本\" class=\"headerlink\" title=\"编写Shell脚本\"></a>编写Shell脚本</h2><p>接着我们编写Shell脚本调用sql，我们要知道可以在Shell中使用<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql &lt;&lt;<span class=\"built_in\">EOF</span></span><br><span class=\"line\"><span class=\"built_in\">EOF</span></span><br></pre></td></tr></table></figure></p>\n<p>的方式来运行mysql命令，在mysql段中还可以使用<code>source</code> sql命令来运行sql。</p>\n<p>由于我的建表sql命令是导出的，只有建表命令，没有选择数据库的命令，因此正式使用之前还需要进行一点修改。</p>\n<p>我们可以把要批量运行的sql命令按照任务的不同分放在不同的文件中，然后使用Shell统一调用。<br>如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">SQL_DIR=<span class=\"string\">\"./sqlinit\"</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;SQL_DIR&#125;</span></span><br><span class=\"line\">ls *.sql | <span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    mysql -uroot &lt;&lt; EOF</span><br><span class=\"line\">        <span class=\"comment\">## 选中要处理的数据库</span></span><br><span class=\"line\">        USE db_name; </span><br><span class=\"line\">        <span class=\"built_in\">source</span> <span class=\"variable\">$line</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>简单的sql命令，可以使用<code>mysql -uxx -pxx -e &quot;sql cmd&quot;</code>来运行，其他的方式就不多说了，文中这种应该算是最好用的方式了。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>我们经常需要批量地执行很多mysql命令，这时候如果直接在mysql终端下执行，效率很低。如果借助Shell来进行自动化地操作，则会大大方便我们操作。这里就记录一下我用来进行数据库表重建的方法。</p>\n<h2 id=\"准备mysql脚本\"><a href=\"#准备mysql脚本\" class=\"headerlink\" title=\"准备mysql脚本\"></a>准备mysql脚本</h2><p>首先我们要准备相应的mysql命令脚本，以便shell调用。<br>如：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">IF</span> <span class=\"keyword\">EXISTS</span> <span class=\"string\">`attachment`</span>;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"string\">`attachment`</span> (</span><br><span class=\"line\">  <span class=\"string\">`id`</span> <span class=\"built_in\">bigint</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  <span class=\"string\">`init_name`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`file_path`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`gmt_create`</span> datetime <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">now</span>(),</span><br><span class=\"line\">  <span class=\"string\">`gmt_modified`</span> <span class=\"built_in\">timestamp</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">now</span>(),</span><br><span class=\"line\">  <span class=\"string\">`creator`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'system'</span>,</span><br><span class=\"line\">  <span class=\"string\">`modifier`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'system'</span>,</span><br><span class=\"line\">  <span class=\"string\">`is_deleted`</span> <span class=\"built_in\">char</span>(<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'N'</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"string\">`id`</span>)</span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> AUTO_INCREMENT=<span class=\"number\">460</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure></p>\n<p>正常写mysql命令即可。</p>","more":"<h2 id=\"编写Shell脚本\"><a href=\"#编写Shell脚本\" class=\"headerlink\" title=\"编写Shell脚本\"></a>编写Shell脚本</h2><p>接着我们编写Shell脚本调用sql，我们要知道可以在Shell中使用<br><figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql &lt;&lt;<span class=\"built_in\">EOF</span></span><br><span class=\"line\"><span class=\"built_in\">EOF</span></span><br></pre></td></tr></table></figure></p>\n<p>的方式来运行mysql命令，在mysql段中还可以使用<code>source</code> sql命令来运行sql。</p>\n<p>由于我的建表sql命令是导出的，只有建表命令，没有选择数据库的命令，因此正式使用之前还需要进行一点修改。</p>\n<p>我们可以把要批量运行的sql命令按照任务的不同分放在不同的文件中，然后使用Shell统一调用。<br>如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">SQL_DIR=<span class=\"string\">\"./sqlinit\"</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;SQL_DIR&#125;</span></span><br><span class=\"line\">ls *.sql | <span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line;</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    mysql -uroot &lt;&lt; EOF</span><br><span class=\"line\">        <span class=\"comment\">## 选中要处理的数据库</span></span><br><span class=\"line\">        USE db_name; </span><br><span class=\"line\">        <span class=\"built_in\">source</span> <span class=\"variable\">$line</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>简单的sql命令，可以使用<code>mysql -uxx -pxx -e &quot;sql cmd&quot;</code>来运行，其他的方式就不多说了，文中这种应该算是最好用的方式了。</p>","sticky":0},{"title":"2018开工寄语&2017年终总结","show":true,"date":"2018-02-22T02:55:57.000Z","_content":"\n一个短暂的春节过去了，短短的七天假期有一多半的时间是在开车，属于自己的时间满打满算也就一个双休日吧。明天又要开工了，新的一年新的一轮奋斗又要开始了，像这种传承了几千年的节日怎么着也得放个半个月吧，谁说不是呢？\n\n本来是一篇2017年终总结，硬是从元旦拖到春节再从春节拖到春节结束，现在真真的是离笔太久，提笔恐惧啊。简单说几句算是对去年的一个交代也给新年做点期许吧。\n\n现在时间流逝太快，转眼我儿子都已经满地跑，而我也已经年过三十。那个在宿舍憋着写《水样年华》的日子仿佛还历历在目。时间催促着我成长，而我成长的速度远远赶不上时间。有一个理论说，年少时记忆的东西少，每一年的经历都是崭新的，而年岁越大经历的重复的东西也越多，于是乎可供大脑记忆的东西越少越觉得时间过得快。想想有些道理，于是偶尔抽身世外，读读书神游太虚便是件快乐的事，否则无时无刻都在感受时光洪流冲刷着身体，眼睁睁看着他衰朽是件多么可怕的事。\n\n诶，提笔就爱瞎矫情的毛病又犯了，这老气横秋的气质与我本人不符啊，哈哈~说了些废话的感慨，先总结下年度阅读吧。\n\n<!--more-->\n\n### 关于阅读\n\n去年一共阅读了17本书，每本都简要记述了读后感想，都记录在我[**这篇博客**](http://zhangjh.me/2017/02/23/myreading-2017/)里。\n\n《东周列国志》闻名已久终于看完，它是文言白话我也掉书袋似的以文言写了80几个章节点评。这书属于还以前的阅读债，上学时就想看一直没看。现在回想，上学时那么多自由支配的时间都浪费了，年轻懵懂，以为靠一点小聪明就可以应付学业，殊不知比你厉害的人还比你努力，这差距就是这么来的。\n\n去年给自己的目标是开始学习理财，于是书单里多了基本理财的科普书籍。去年的投资收益也达到了28%，股灾入市亏出血，经历了风险教育开始逐渐建立自己的投资价值观，但还远远不敢说达到入门水平，毕竟投入时间太少。去年的收益也只是站对了队而已，节前的一波回撤也带走了不少盈利。本金太少先学习练手吧。\n\n总体来说，现在的阅读水平还比较低，还处在娱乐层面，希望逐渐提高阅读水平增加思辨性的书目。\n\n### 关于家庭\n\n虽然都已年过三十，但我们的感情经历都很少，处理问题的方式都显幼稚。有过一年多的频繁争吵，去年争吵少了很多，也许是所谓的磨合差不多了吧，也许是我们相互接纳了对方的不完美。我也放弃了一些对婚姻对爱情的不切实际的幻想，试着接受我眼里还有很多缺点以前觉得难以容忍的老婆，接受缺点放大优点，信任是相互的，有些已经过去的就让它过去，有些该放弃的幻想就让它沉在心底，于是很多问题都迎刃而解了。我有很多问题，我很较真，我老婆有很多问题，她很固执，很多时候我尝试改变自己放弃跟她说理，我开始接受那句话，“家是说爱的地方不是说理的地方”。也许是我的改变也许是她的改变，总之去年我们的家庭关系融洽了很多，逐渐在朝良好的方向发展，我们是要一起度过余生的人，大家都要好好珍惜是吧。她也许不是完美的对象，但会是合适的对象，不折腾了，包容缺点发现优点，我们要好好培养甜橙呢。\n\n### 关于工作\n\n参加工作已经五年，走了很多的弯路。从被运维岗录取到调剂QA岗，到开始认识职业认识自身，发觉QA工作不是自己兴趣所在准备转职位，到转了前端再到转了后端，终于将自己title中的\"测试\"去掉，曲线救国的路走的不容易。虽然起步晚了点，但技能点是丰富了不少。今年我最大的问题是有点\"颓丧\"，终于转成了曾经心心念念的研发岗后，仿佛突然之间失去了方向。曾经自驱力超强的我突然不知道了努力的方向，也许是年龄大了思虑多了，前有传说华为清退34岁工程师，又有中兴多年老员工跳楼新闻在后。。一直危机感很重，别人眼中光鲜的工作，担心万一失去竞争力后被\"清退\"后是否还有\"重头再来\"的机会与能力。中年危机与职业迷茫像一把达摩克里斯之剑，我们每个人都有可能遇到，你不知道它什么时候会\"掉下来\"。我现在能做的只能是调整心态，走一步看一步，有危机感不是坏事，但想太多有时候也不是好事。新的一年希望能有所突破。\n\n### 关于新年目标\n\n年年立flag，年底一看好多坚持不了半途而废的。不过该立还得立。\n\n1. 17年在手机上浪费的时间太多，微信、微博、脉脉、网易新闻、王者荣耀，后期还有各种答题App。。 今年首要就是要**删除各种无用App，告别无谓的刷微博、刷脉脉行**为，微信、网易新闻暂时还是离不了的，毕竟互联网的社会，不可能脱离了去做个原始人。\n\n2. 去年一年一共才写了11篇博客，太久不写点东西对写文会产生恐惧，文笔也会越变越差。悖论爱好者的公众号也早就停止了更新，一是受限于时间，这类纯原创的文章很耗精力，二是受限于题材，持续地更新需要有持续的悖论解析，这对于个人创作者来说难度太大。今年希望能够做到**每周至少写一篇博文**，自己的博客的话没有了题材限制，相信会容易很多。刚好也可以作为自己平时学习和知识的一种积累，否则看过的就只是看过，隔一段时间就忘了，讲出来，记下来加深记忆也方便日后翻阅。在此就涉及到一个定位问题，博客到底是什么作用？以前我是把我的博客定位为技术博客分享，题材主要定位在技术文章，作用主要定位在知识分享，基本上都是自己实践过程中的心得分享。今年将突破这两个限制，博客主要还是给自己看的，任何内容都可以记录。\n\n3. 今年想读几部大部头的书，因此书单总数会少一些，但希望**至少大于10本**。减少娱乐性阅读比例。继续学习理财知识，坚持定投，**投资收益达到20%**。\n\n4. 最后最重要的，工作上有所进步，持续学习技术技能，至少手头三本书需要看完吧。然后攒够装修的钱，至于二套房，随缘吧~\n","source":"_posts/summary17.md","raw":"title: 2018开工寄语&2017年终总结\nshow: true\ndate: 2018-02-22 10:55:57\ntags: [年终总结,开年寄语]\ncategories: 心情杂感\n---\n\n一个短暂的春节过去了，短短的七天假期有一多半的时间是在开车，属于自己的时间满打满算也就一个双休日吧。明天又要开工了，新的一年新的一轮奋斗又要开始了，像这种传承了几千年的节日怎么着也得放个半个月吧，谁说不是呢？\n\n本来是一篇2017年终总结，硬是从元旦拖到春节再从春节拖到春节结束，现在真真的是离笔太久，提笔恐惧啊。简单说几句算是对去年的一个交代也给新年做点期许吧。\n\n现在时间流逝太快，转眼我儿子都已经满地跑，而我也已经年过三十。那个在宿舍憋着写《水样年华》的日子仿佛还历历在目。时间催促着我成长，而我成长的速度远远赶不上时间。有一个理论说，年少时记忆的东西少，每一年的经历都是崭新的，而年岁越大经历的重复的东西也越多，于是乎可供大脑记忆的东西越少越觉得时间过得快。想想有些道理，于是偶尔抽身世外，读读书神游太虚便是件快乐的事，否则无时无刻都在感受时光洪流冲刷着身体，眼睁睁看着他衰朽是件多么可怕的事。\n\n诶，提笔就爱瞎矫情的毛病又犯了，这老气横秋的气质与我本人不符啊，哈哈~说了些废话的感慨，先总结下年度阅读吧。\n\n<!--more-->\n\n### 关于阅读\n\n去年一共阅读了17本书，每本都简要记述了读后感想，都记录在我[**这篇博客**](http://zhangjh.me/2017/02/23/myreading-2017/)里。\n\n《东周列国志》闻名已久终于看完，它是文言白话我也掉书袋似的以文言写了80几个章节点评。这书属于还以前的阅读债，上学时就想看一直没看。现在回想，上学时那么多自由支配的时间都浪费了，年轻懵懂，以为靠一点小聪明就可以应付学业，殊不知比你厉害的人还比你努力，这差距就是这么来的。\n\n去年给自己的目标是开始学习理财，于是书单里多了基本理财的科普书籍。去年的投资收益也达到了28%，股灾入市亏出血，经历了风险教育开始逐渐建立自己的投资价值观，但还远远不敢说达到入门水平，毕竟投入时间太少。去年的收益也只是站对了队而已，节前的一波回撤也带走了不少盈利。本金太少先学习练手吧。\n\n总体来说，现在的阅读水平还比较低，还处在娱乐层面，希望逐渐提高阅读水平增加思辨性的书目。\n\n### 关于家庭\n\n虽然都已年过三十，但我们的感情经历都很少，处理问题的方式都显幼稚。有过一年多的频繁争吵，去年争吵少了很多，也许是所谓的磨合差不多了吧，也许是我们相互接纳了对方的不完美。我也放弃了一些对婚姻对爱情的不切实际的幻想，试着接受我眼里还有很多缺点以前觉得难以容忍的老婆，接受缺点放大优点，信任是相互的，有些已经过去的就让它过去，有些该放弃的幻想就让它沉在心底，于是很多问题都迎刃而解了。我有很多问题，我很较真，我老婆有很多问题，她很固执，很多时候我尝试改变自己放弃跟她说理，我开始接受那句话，“家是说爱的地方不是说理的地方”。也许是我的改变也许是她的改变，总之去年我们的家庭关系融洽了很多，逐渐在朝良好的方向发展，我们是要一起度过余生的人，大家都要好好珍惜是吧。她也许不是完美的对象，但会是合适的对象，不折腾了，包容缺点发现优点，我们要好好培养甜橙呢。\n\n### 关于工作\n\n参加工作已经五年，走了很多的弯路。从被运维岗录取到调剂QA岗，到开始认识职业认识自身，发觉QA工作不是自己兴趣所在准备转职位，到转了前端再到转了后端，终于将自己title中的\"测试\"去掉，曲线救国的路走的不容易。虽然起步晚了点，但技能点是丰富了不少。今年我最大的问题是有点\"颓丧\"，终于转成了曾经心心念念的研发岗后，仿佛突然之间失去了方向。曾经自驱力超强的我突然不知道了努力的方向，也许是年龄大了思虑多了，前有传说华为清退34岁工程师，又有中兴多年老员工跳楼新闻在后。。一直危机感很重，别人眼中光鲜的工作，担心万一失去竞争力后被\"清退\"后是否还有\"重头再来\"的机会与能力。中年危机与职业迷茫像一把达摩克里斯之剑，我们每个人都有可能遇到，你不知道它什么时候会\"掉下来\"。我现在能做的只能是调整心态，走一步看一步，有危机感不是坏事，但想太多有时候也不是好事。新的一年希望能有所突破。\n\n### 关于新年目标\n\n年年立flag，年底一看好多坚持不了半途而废的。不过该立还得立。\n\n1. 17年在手机上浪费的时间太多，微信、微博、脉脉、网易新闻、王者荣耀，后期还有各种答题App。。 今年首要就是要**删除各种无用App，告别无谓的刷微博、刷脉脉行**为，微信、网易新闻暂时还是离不了的，毕竟互联网的社会，不可能脱离了去做个原始人。\n\n2. 去年一年一共才写了11篇博客，太久不写点东西对写文会产生恐惧，文笔也会越变越差。悖论爱好者的公众号也早就停止了更新，一是受限于时间，这类纯原创的文章很耗精力，二是受限于题材，持续地更新需要有持续的悖论解析，这对于个人创作者来说难度太大。今年希望能够做到**每周至少写一篇博文**，自己的博客的话没有了题材限制，相信会容易很多。刚好也可以作为自己平时学习和知识的一种积累，否则看过的就只是看过，隔一段时间就忘了，讲出来，记下来加深记忆也方便日后翻阅。在此就涉及到一个定位问题，博客到底是什么作用？以前我是把我的博客定位为技术博客分享，题材主要定位在技术文章，作用主要定位在知识分享，基本上都是自己实践过程中的心得分享。今年将突破这两个限制，博客主要还是给自己看的，任何内容都可以记录。\n\n3. 今年想读几部大部头的书，因此书单总数会少一些，但希望**至少大于10本**。减少娱乐性阅读比例。继续学习理财知识，坚持定投，**投资收益达到20%**。\n\n4. 最后最重要的，工作上有所进步，持续学习技术技能，至少手头三本书需要看完吧。然后攒够装修的钱，至于二套房，随缘吧~\n","slug":"summary17","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxo005yfnpvgdqi6h82","content":"<p>一个短暂的春节过去了，短短的七天假期有一多半的时间是在开车，属于自己的时间满打满算也就一个双休日吧。明天又要开工了，新的一年新的一轮奋斗又要开始了，像这种传承了几千年的节日怎么着也得放个半个月吧，谁说不是呢？</p>\n<p>本来是一篇2017年终总结，硬是从元旦拖到春节再从春节拖到春节结束，现在真真的是离笔太久，提笔恐惧啊。简单说几句算是对去年的一个交代也给新年做点期许吧。</p>\n<p>现在时间流逝太快，转眼我儿子都已经满地跑，而我也已经年过三十。那个在宿舍憋着写《水样年华》的日子仿佛还历历在目。时间催促着我成长，而我成长的速度远远赶不上时间。有一个理论说，年少时记忆的东西少，每一年的经历都是崭新的，而年岁越大经历的重复的东西也越多，于是乎可供大脑记忆的东西越少越觉得时间过得快。想想有些道理，于是偶尔抽身世外，读读书神游太虚便是件快乐的事，否则无时无刻都在感受时光洪流冲刷着身体，眼睁睁看着他衰朽是件多么可怕的事。</p>\n<p>诶，提笔就爱瞎矫情的毛病又犯了，这老气横秋的气质与我本人不符啊，哈哈~说了些废话的感慨，先总结下年度阅读吧。</p>\n<a id=\"more\"></a>\n<h3 id=\"关于阅读\"><a href=\"#关于阅读\" class=\"headerlink\" title=\"关于阅读\"></a>关于阅读</h3><p>去年一共阅读了17本书，每本都简要记述了读后感想，都记录在我<a href=\"http://zhangjh.me/2017/02/23/myreading-2017/\"><strong>这篇博客</strong></a>里。</p>\n<p>《东周列国志》闻名已久终于看完，它是文言白话我也掉书袋似的以文言写了80几个章节点评。这书属于还以前的阅读债，上学时就想看一直没看。现在回想，上学时那么多自由支配的时间都浪费了，年轻懵懂，以为靠一点小聪明就可以应付学业，殊不知比你厉害的人还比你努力，这差距就是这么来的。</p>\n<p>去年给自己的目标是开始学习理财，于是书单里多了基本理财的科普书籍。去年的投资收益也达到了28%，股灾入市亏出血，经历了风险教育开始逐渐建立自己的投资价值观，但还远远不敢说达到入门水平，毕竟投入时间太少。去年的收益也只是站对了队而已，节前的一波回撤也带走了不少盈利。本金太少先学习练手吧。</p>\n<p>总体来说，现在的阅读水平还比较低，还处在娱乐层面，希望逐渐提高阅读水平增加思辨性的书目。</p>\n<h3 id=\"关于家庭\"><a href=\"#关于家庭\" class=\"headerlink\" title=\"关于家庭\"></a>关于家庭</h3><p>虽然都已年过三十，但我们的感情经历都很少，处理问题的方式都显幼稚。有过一年多的频繁争吵，去年争吵少了很多，也许是所谓的磨合差不多了吧，也许是我们相互接纳了对方的不完美。我也放弃了一些对婚姻对爱情的不切实际的幻想，试着接受我眼里还有很多缺点以前觉得难以容忍的老婆，接受缺点放大优点，信任是相互的，有些已经过去的就让它过去，有些该放弃的幻想就让它沉在心底，于是很多问题都迎刃而解了。我有很多问题，我很较真，我老婆有很多问题，她很固执，很多时候我尝试改变自己放弃跟她说理，我开始接受那句话，“家是说爱的地方不是说理的地方”。也许是我的改变也许是她的改变，总之去年我们的家庭关系融洽了很多，逐渐在朝良好的方向发展，我们是要一起度过余生的人，大家都要好好珍惜是吧。她也许不是完美的对象，但会是合适的对象，不折腾了，包容缺点发现优点，我们要好好培养甜橙呢。</p>\n<h3 id=\"关于工作\"><a href=\"#关于工作\" class=\"headerlink\" title=\"关于工作\"></a>关于工作</h3><p>参加工作已经五年，走了很多的弯路。从被运维岗录取到调剂QA岗，到开始认识职业认识自身，发觉QA工作不是自己兴趣所在准备转职位，到转了前端再到转了后端，终于将自己title中的”测试”去掉，曲线救国的路走的不容易。虽然起步晚了点，但技能点是丰富了不少。今年我最大的问题是有点”颓丧”，终于转成了曾经心心念念的研发岗后，仿佛突然之间失去了方向。曾经自驱力超强的我突然不知道了努力的方向，也许是年龄大了思虑多了，前有传说华为清退34岁工程师，又有中兴多年老员工跳楼新闻在后。。一直危机感很重，别人眼中光鲜的工作，担心万一失去竞争力后被”清退”后是否还有”重头再来”的机会与能力。中年危机与职业迷茫像一把达摩克里斯之剑，我们每个人都有可能遇到，你不知道它什么时候会”掉下来”。我现在能做的只能是调整心态，走一步看一步，有危机感不是坏事，但想太多有时候也不是好事。新的一年希望能有所突破。</p>\n<h3 id=\"关于新年目标\"><a href=\"#关于新年目标\" class=\"headerlink\" title=\"关于新年目标\"></a>关于新年目标</h3><p>年年立flag，年底一看好多坚持不了半途而废的。不过该立还得立。</p>\n<ol>\n<li><p>17年在手机上浪费的时间太多，微信、微博、脉脉、网易新闻、王者荣耀，后期还有各种答题App。。 今年首要就是要<strong>删除各种无用App，告别无谓的刷微博、刷脉脉行</strong>为，微信、网易新闻暂时还是离不了的，毕竟互联网的社会，不可能脱离了去做个原始人。</p>\n</li>\n<li><p>去年一年一共才写了11篇博客，太久不写点东西对写文会产生恐惧，文笔也会越变越差。悖论爱好者的公众号也早就停止了更新，一是受限于时间，这类纯原创的文章很耗精力，二是受限于题材，持续地更新需要有持续的悖论解析，这对于个人创作者来说难度太大。今年希望能够做到<strong>每周至少写一篇博文</strong>，自己的博客的话没有了题材限制，相信会容易很多。刚好也可以作为自己平时学习和知识的一种积累，否则看过的就只是看过，隔一段时间就忘了，讲出来，记下来加深记忆也方便日后翻阅。在此就涉及到一个定位问题，博客到底是什么作用？以前我是把我的博客定位为技术博客分享，题材主要定位在技术文章，作用主要定位在知识分享，基本上都是自己实践过程中的心得分享。今年将突破这两个限制，博客主要还是给自己看的，任何内容都可以记录。</p>\n</li>\n<li><p>今年想读几部大部头的书，因此书单总数会少一些，但希望<strong>至少大于10本</strong>。减少娱乐性阅读比例。继续学习理财知识，坚持定投，<strong>投资收益达到20%</strong>。</p>\n</li>\n<li><p>最后最重要的，工作上有所进步，持续学习技术技能，至少手头三本书需要看完吧。然后攒够装修的钱，至于二套房，随缘吧~</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>一个短暂的春节过去了，短短的七天假期有一多半的时间是在开车，属于自己的时间满打满算也就一个双休日吧。明天又要开工了，新的一年新的一轮奋斗又要开始了，像这种传承了几千年的节日怎么着也得放个半个月吧，谁说不是呢？</p>\n<p>本来是一篇2017年终总结，硬是从元旦拖到春节再从春节拖到春节结束，现在真真的是离笔太久，提笔恐惧啊。简单说几句算是对去年的一个交代也给新年做点期许吧。</p>\n<p>现在时间流逝太快，转眼我儿子都已经满地跑，而我也已经年过三十。那个在宿舍憋着写《水样年华》的日子仿佛还历历在目。时间催促着我成长，而我成长的速度远远赶不上时间。有一个理论说，年少时记忆的东西少，每一年的经历都是崭新的，而年岁越大经历的重复的东西也越多，于是乎可供大脑记忆的东西越少越觉得时间过得快。想想有些道理，于是偶尔抽身世外，读读书神游太虚便是件快乐的事，否则无时无刻都在感受时光洪流冲刷着身体，眼睁睁看着他衰朽是件多么可怕的事。</p>\n<p>诶，提笔就爱瞎矫情的毛病又犯了，这老气横秋的气质与我本人不符啊，哈哈~说了些废话的感慨，先总结下年度阅读吧。</p>","more":"<h3 id=\"关于阅读\"><a href=\"#关于阅读\" class=\"headerlink\" title=\"关于阅读\"></a>关于阅读</h3><p>去年一共阅读了17本书，每本都简要记述了读后感想，都记录在我<a href=\"http://zhangjh.me/2017/02/23/myreading-2017/\"><strong>这篇博客</strong></a>里。</p>\n<p>《东周列国志》闻名已久终于看完，它是文言白话我也掉书袋似的以文言写了80几个章节点评。这书属于还以前的阅读债，上学时就想看一直没看。现在回想，上学时那么多自由支配的时间都浪费了，年轻懵懂，以为靠一点小聪明就可以应付学业，殊不知比你厉害的人还比你努力，这差距就是这么来的。</p>\n<p>去年给自己的目标是开始学习理财，于是书单里多了基本理财的科普书籍。去年的投资收益也达到了28%，股灾入市亏出血，经历了风险教育开始逐渐建立自己的投资价值观，但还远远不敢说达到入门水平，毕竟投入时间太少。去年的收益也只是站对了队而已，节前的一波回撤也带走了不少盈利。本金太少先学习练手吧。</p>\n<p>总体来说，现在的阅读水平还比较低，还处在娱乐层面，希望逐渐提高阅读水平增加思辨性的书目。</p>\n<h3 id=\"关于家庭\"><a href=\"#关于家庭\" class=\"headerlink\" title=\"关于家庭\"></a>关于家庭</h3><p>虽然都已年过三十，但我们的感情经历都很少，处理问题的方式都显幼稚。有过一年多的频繁争吵，去年争吵少了很多，也许是所谓的磨合差不多了吧，也许是我们相互接纳了对方的不完美。我也放弃了一些对婚姻对爱情的不切实际的幻想，试着接受我眼里还有很多缺点以前觉得难以容忍的老婆，接受缺点放大优点，信任是相互的，有些已经过去的就让它过去，有些该放弃的幻想就让它沉在心底，于是很多问题都迎刃而解了。我有很多问题，我很较真，我老婆有很多问题，她很固执，很多时候我尝试改变自己放弃跟她说理，我开始接受那句话，“家是说爱的地方不是说理的地方”。也许是我的改变也许是她的改变，总之去年我们的家庭关系融洽了很多，逐渐在朝良好的方向发展，我们是要一起度过余生的人，大家都要好好珍惜是吧。她也许不是完美的对象，但会是合适的对象，不折腾了，包容缺点发现优点，我们要好好培养甜橙呢。</p>\n<h3 id=\"关于工作\"><a href=\"#关于工作\" class=\"headerlink\" title=\"关于工作\"></a>关于工作</h3><p>参加工作已经五年，走了很多的弯路。从被运维岗录取到调剂QA岗，到开始认识职业认识自身，发觉QA工作不是自己兴趣所在准备转职位，到转了前端再到转了后端，终于将自己title中的”测试”去掉，曲线救国的路走的不容易。虽然起步晚了点，但技能点是丰富了不少。今年我最大的问题是有点”颓丧”，终于转成了曾经心心念念的研发岗后，仿佛突然之间失去了方向。曾经自驱力超强的我突然不知道了努力的方向，也许是年龄大了思虑多了，前有传说华为清退34岁工程师，又有中兴多年老员工跳楼新闻在后。。一直危机感很重，别人眼中光鲜的工作，担心万一失去竞争力后被”清退”后是否还有”重头再来”的机会与能力。中年危机与职业迷茫像一把达摩克里斯之剑，我们每个人都有可能遇到，你不知道它什么时候会”掉下来”。我现在能做的只能是调整心态，走一步看一步，有危机感不是坏事，但想太多有时候也不是好事。新的一年希望能有所突破。</p>\n<h3 id=\"关于新年目标\"><a href=\"#关于新年目标\" class=\"headerlink\" title=\"关于新年目标\"></a>关于新年目标</h3><p>年年立flag，年底一看好多坚持不了半途而废的。不过该立还得立。</p>\n<ol>\n<li><p>17年在手机上浪费的时间太多，微信、微博、脉脉、网易新闻、王者荣耀，后期还有各种答题App。。 今年首要就是要<strong>删除各种无用App，告别无谓的刷微博、刷脉脉行</strong>为，微信、网易新闻暂时还是离不了的，毕竟互联网的社会，不可能脱离了去做个原始人。</p>\n</li>\n<li><p>去年一年一共才写了11篇博客，太久不写点东西对写文会产生恐惧，文笔也会越变越差。悖论爱好者的公众号也早就停止了更新，一是受限于时间，这类纯原创的文章很耗精力，二是受限于题材，持续地更新需要有持续的悖论解析，这对于个人创作者来说难度太大。今年希望能够做到<strong>每周至少写一篇博文</strong>，自己的博客的话没有了题材限制，相信会容易很多。刚好也可以作为自己平时学习和知识的一种积累，否则看过的就只是看过，隔一段时间就忘了，讲出来，记下来加深记忆也方便日后翻阅。在此就涉及到一个定位问题，博客到底是什么作用？以前我是把我的博客定位为技术博客分享，题材主要定位在技术文章，作用主要定位在知识分享，基本上都是自己实践过程中的心得分享。今年将突破这两个限制，博客主要还是给自己看的，任何内容都可以记录。</p>\n</li>\n<li><p>今年想读几部大部头的书，因此书单总数会少一些，但希望<strong>至少大于10本</strong>。减少娱乐性阅读比例。继续学习理财知识，坚持定投，<strong>投资收益达到20%</strong>。</p>\n</li>\n<li><p>最后最重要的，工作上有所进步，持续学习技术技能，至少手头三本书需要看完吧。然后攒够装修的钱，至于二套房，随缘吧~</p>\n</li>\n</ol>","sticky":0},{"title":"【翻译】GitHub的光明未来","show":true,"date":"2018-06-05T14:57:10.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 16/53，每周一篇博，坚持！\n\n(翻译自[Github blog](https://blog.github.com/2018-06-04-github-microsoft/))\n![](http://wx2.sinaimg.cn/mw690/62d95157gy1fs0pfox35cj21ut0z5q58.jpg)\n\n我很高兴地宣布，微软正在谋求收购Github并且有望在今年年底完成收购协议。虽然最终达成收购还需要几个月的时间，但我们想尽快分享这个消息给大家。\n\n当十年前刚建立Github的时候，我从未想到过这个“标题”。Git是一个强大且优秀的工具（原文niche疑为nice笔误），“云”只是天上的东西，而微软则是一个非常不同的公司。人们谈论到开源和商业的时候，仿佛它们是水火不容的两件事。\n\n<!--more-->\n\n然而我们不同意。作为开发者，我们知道这是一个错误的对立----我们长期以来一直在商业环境中成功地使用开源软件。我们真正需要的是一个更简单的同其他人协同工作的方式，无论代码是公开的、私有的还是二者兼有。我们希望使用Git达成这一所愿，我们希望世界上的任何人都能够加入进来，如果代码是开源的，我们不希望花费一分钱。所以我们创建了Github。\n\n当然现在情况已经完全不同了。Git已经是最流行的版本控制系统，“云”也变成了非常非常多的电脑的意思，而微软也成为了当今Github上最为活跃的组织。仅仅他们的VS Code项目就获得了上百万开发者的点赞，VS Code完完全全地开放源码并且使用Github的Electron平台进行构建。除此之外，现如今大型企业也都习惯了拥抱开源。世界已经意识到快乐并高产的开发人员有多么重要。并且人们现在也都拥有智能手机了。\n\n然而没变的是，我们的聚焦点依然在开发者身上。一开始，我们一直着迷于打造一款人们正在使用的产品。我们希望让开发者们更加多产，更多的人成为开发者。从“Code to Cloud,Code to Edge\"，Github的使命是帮助每一个开发者----无论他们的经验水平如何----有效地学习，编写并提供软件。\n\n因此当我们期待未来十年的软件开发的时候，我们知道那些都会是关于开发者的。正如我们在过去几年中，通过从Git LFS到Electron项目合作中了解到的微软团队，我们了解到他们也是这么看的。他们在开源领域的工作激励了我们，Minecraft（我的世界）和LinkedIn（领英）收购后的成功也向我们表明他们对拓展新业务的是非常认真的，同时Azure的发展也证明他们是一个创新的开发平台。\n\n但不止如此，他们关于未来的认知和我们的观点高度契合。我们都认为Github仍会是一个对所有开发者保持开放的平台。无论您的语种、技术栈、平台、云或者许可证如何，Github将会继续是你的家----那个软件创建、协作、发现的最佳场所。\n\n我们都认为软件开发需要更简单、更加无障碍、更加智能、更加开放，以使更多的人可以成为开发者，已经是开发者的可以花费更多的时间在他们正试图解决的独特的问题上。\n\n我们都看到了开发人员日益增长的需求以及软件在我们生活的各个方面日益增长的重要性。\n\n更为重要的是，我们都认为我们一起可以比双方独自时做到更好。毕竟，合作正是我们所做事情的核心。\n\n作为变化的一部分，Nat Friedman将成为Github的CEO。我们一直在寻找一位新的CEO，现在在微软和Nat中找到了我们认为将在未来几年加强和发展Github社区和公司的合作伙伴。Nat 拥有相当丰富的软件经验和开源软件社区的经验，曾共同创建了Xamarin，并且在大量的开源软件项目工作过数年。他将是一个帮助Github成长且继续让开发者的生活变得更美好的完美人选。\n\n至于我，我将在与微软和Nat的团队紧密合作中担任一个新的角色，未来会跟大家分享更多的细节。\n\n我对Github和我们的社区在过去十年中所取得的成就感到非常自豪，我迫不及待地想看到未来会发生什么。软件开发的未来是光明的，我很高兴能够与微软一起联手实现这一目标。\n\n[@defunkt](https://github.com/defunkt)\nCEO & Co-Founder, GitHub\n\n\n","source":"_posts/translate_github_acquire.md","raw":"title: 【翻译】GitHub的光明未来\nshow: true\ndate: 2018-06-05 22:57:10\ntags: [翻译]\ncategories: 技术人生\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 16/53，每周一篇博，坚持！\n\n(翻译自[Github blog](https://blog.github.com/2018-06-04-github-microsoft/))\n![](http://wx2.sinaimg.cn/mw690/62d95157gy1fs0pfox35cj21ut0z5q58.jpg)\n\n我很高兴地宣布，微软正在谋求收购Github并且有望在今年年底完成收购协议。虽然最终达成收购还需要几个月的时间，但我们想尽快分享这个消息给大家。\n\n当十年前刚建立Github的时候，我从未想到过这个“标题”。Git是一个强大且优秀的工具（原文niche疑为nice笔误），“云”只是天上的东西，而微软则是一个非常不同的公司。人们谈论到开源和商业的时候，仿佛它们是水火不容的两件事。\n\n<!--more-->\n\n然而我们不同意。作为开发者，我们知道这是一个错误的对立----我们长期以来一直在商业环境中成功地使用开源软件。我们真正需要的是一个更简单的同其他人协同工作的方式，无论代码是公开的、私有的还是二者兼有。我们希望使用Git达成这一所愿，我们希望世界上的任何人都能够加入进来，如果代码是开源的，我们不希望花费一分钱。所以我们创建了Github。\n\n当然现在情况已经完全不同了。Git已经是最流行的版本控制系统，“云”也变成了非常非常多的电脑的意思，而微软也成为了当今Github上最为活跃的组织。仅仅他们的VS Code项目就获得了上百万开发者的点赞，VS Code完完全全地开放源码并且使用Github的Electron平台进行构建。除此之外，现如今大型企业也都习惯了拥抱开源。世界已经意识到快乐并高产的开发人员有多么重要。并且人们现在也都拥有智能手机了。\n\n然而没变的是，我们的聚焦点依然在开发者身上。一开始，我们一直着迷于打造一款人们正在使用的产品。我们希望让开发者们更加多产，更多的人成为开发者。从“Code to Cloud,Code to Edge\"，Github的使命是帮助每一个开发者----无论他们的经验水平如何----有效地学习，编写并提供软件。\n\n因此当我们期待未来十年的软件开发的时候，我们知道那些都会是关于开发者的。正如我们在过去几年中，通过从Git LFS到Electron项目合作中了解到的微软团队，我们了解到他们也是这么看的。他们在开源领域的工作激励了我们，Minecraft（我的世界）和LinkedIn（领英）收购后的成功也向我们表明他们对拓展新业务的是非常认真的，同时Azure的发展也证明他们是一个创新的开发平台。\n\n但不止如此，他们关于未来的认知和我们的观点高度契合。我们都认为Github仍会是一个对所有开发者保持开放的平台。无论您的语种、技术栈、平台、云或者许可证如何，Github将会继续是你的家----那个软件创建、协作、发现的最佳场所。\n\n我们都认为软件开发需要更简单、更加无障碍、更加智能、更加开放，以使更多的人可以成为开发者，已经是开发者的可以花费更多的时间在他们正试图解决的独特的问题上。\n\n我们都看到了开发人员日益增长的需求以及软件在我们生活的各个方面日益增长的重要性。\n\n更为重要的是，我们都认为我们一起可以比双方独自时做到更好。毕竟，合作正是我们所做事情的核心。\n\n作为变化的一部分，Nat Friedman将成为Github的CEO。我们一直在寻找一位新的CEO，现在在微软和Nat中找到了我们认为将在未来几年加强和发展Github社区和公司的合作伙伴。Nat 拥有相当丰富的软件经验和开源软件社区的经验，曾共同创建了Xamarin，并且在大量的开源软件项目工作过数年。他将是一个帮助Github成长且继续让开发者的生活变得更美好的完美人选。\n\n至于我，我将在与微软和Nat的团队紧密合作中担任一个新的角色，未来会跟大家分享更多的细节。\n\n我对Github和我们的社区在过去十年中所取得的成就感到非常自豪，我迫不及待地想看到未来会发生什么。软件开发的未来是光明的，我很高兴能够与微软一起联手实现这一目标。\n\n[@defunkt](https://github.com/defunkt)\nCEO & Co-Founder, GitHub\n\n\n","slug":"translate_github_acquire","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxq0061fnpvqok1nldg","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 16/53，每周一篇博，坚持！</p>\n<p>(翻译自<a href=\"https://blog.github.com/2018-06-04-github-microsoft/\" target=\"_blank\" rel=\"noopener\">Github blog</a>)<br><img src=\"http://wx2.sinaimg.cn/mw690/62d95157gy1fs0pfox35cj21ut0z5q58.jpg\" alt=\"\"></p>\n<p>我很高兴地宣布，微软正在谋求收购Github并且有望在今年年底完成收购协议。虽然最终达成收购还需要几个月的时间，但我们想尽快分享这个消息给大家。</p>\n<p>当十年前刚建立Github的时候，我从未想到过这个“标题”。Git是一个强大且优秀的工具（原文niche疑为nice笔误），“云”只是天上的东西，而微软则是一个非常不同的公司。人们谈论到开源和商业的时候，仿佛它们是水火不容的两件事。</p>\n<a id=\"more\"></a>\n<p>然而我们不同意。作为开发者，我们知道这是一个错误的对立—-我们长期以来一直在商业环境中成功地使用开源软件。我们真正需要的是一个更简单的同其他人协同工作的方式，无论代码是公开的、私有的还是二者兼有。我们希望使用Git达成这一所愿，我们希望世界上的任何人都能够加入进来，如果代码是开源的，我们不希望花费一分钱。所以我们创建了Github。</p>\n<p>当然现在情况已经完全不同了。Git已经是最流行的版本控制系统，“云”也变成了非常非常多的电脑的意思，而微软也成为了当今Github上最为活跃的组织。仅仅他们的VS Code项目就获得了上百万开发者的点赞，VS Code完完全全地开放源码并且使用Github的Electron平台进行构建。除此之外，现如今大型企业也都习惯了拥抱开源。世界已经意识到快乐并高产的开发人员有多么重要。并且人们现在也都拥有智能手机了。</p>\n<p>然而没变的是，我们的聚焦点依然在开发者身上。一开始，我们一直着迷于打造一款人们正在使用的产品。我们希望让开发者们更加多产，更多的人成为开发者。从“Code to Cloud,Code to Edge”，Github的使命是帮助每一个开发者—-无论他们的经验水平如何—-有效地学习，编写并提供软件。</p>\n<p>因此当我们期待未来十年的软件开发的时候，我们知道那些都会是关于开发者的。正如我们在过去几年中，通过从Git LFS到Electron项目合作中了解到的微软团队，我们了解到他们也是这么看的。他们在开源领域的工作激励了我们，Minecraft（我的世界）和LinkedIn（领英）收购后的成功也向我们表明他们对拓展新业务的是非常认真的，同时Azure的发展也证明他们是一个创新的开发平台。</p>\n<p>但不止如此，他们关于未来的认知和我们的观点高度契合。我们都认为Github仍会是一个对所有开发者保持开放的平台。无论您的语种、技术栈、平台、云或者许可证如何，Github将会继续是你的家—-那个软件创建、协作、发现的最佳场所。</p>\n<p>我们都认为软件开发需要更简单、更加无障碍、更加智能、更加开放，以使更多的人可以成为开发者，已经是开发者的可以花费更多的时间在他们正试图解决的独特的问题上。</p>\n<p>我们都看到了开发人员日益增长的需求以及软件在我们生活的各个方面日益增长的重要性。</p>\n<p>更为重要的是，我们都认为我们一起可以比双方独自时做到更好。毕竟，合作正是我们所做事情的核心。</p>\n<p>作为变化的一部分，Nat Friedman将成为Github的CEO。我们一直在寻找一位新的CEO，现在在微软和Nat中找到了我们认为将在未来几年加强和发展Github社区和公司的合作伙伴。Nat 拥有相当丰富的软件经验和开源软件社区的经验，曾共同创建了Xamarin，并且在大量的开源软件项目工作过数年。他将是一个帮助Github成长且继续让开发者的生活变得更美好的完美人选。</p>\n<p>至于我，我将在与微软和Nat的团队紧密合作中担任一个新的角色，未来会跟大家分享更多的细节。</p>\n<p>我对Github和我们的社区在过去十年中所取得的成就感到非常自豪，我迫不及待地想看到未来会发生什么。软件开发的未来是光明的，我很高兴能够与微软一起联手实现这一目标。</p>\n<p><a href=\"https://github.com/defunkt\" target=\"_blank\" rel=\"noopener\">@defunkt</a><br>CEO &amp; Co-Founder, GitHub</p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i> 16/53，每周一篇博，坚持！</p>\n<p>(翻译自<a href=\"https://blog.github.com/2018-06-04-github-microsoft/\" target=\"_blank\" rel=\"noopener\">Github blog</a>)<br><img src=\"http://wx2.sinaimg.cn/mw690/62d95157gy1fs0pfox35cj21ut0z5q58.jpg\" alt=\"\"></p>\n<p>我很高兴地宣布，微软正在谋求收购Github并且有望在今年年底完成收购协议。虽然最终达成收购还需要几个月的时间，但我们想尽快分享这个消息给大家。</p>\n<p>当十年前刚建立Github的时候，我从未想到过这个“标题”。Git是一个强大且优秀的工具（原文niche疑为nice笔误），“云”只是天上的东西，而微软则是一个非常不同的公司。人们谈论到开源和商业的时候，仿佛它们是水火不容的两件事。</p>","more":"<p>然而我们不同意。作为开发者，我们知道这是一个错误的对立—-我们长期以来一直在商业环境中成功地使用开源软件。我们真正需要的是一个更简单的同其他人协同工作的方式，无论代码是公开的、私有的还是二者兼有。我们希望使用Git达成这一所愿，我们希望世界上的任何人都能够加入进来，如果代码是开源的，我们不希望花费一分钱。所以我们创建了Github。</p>\n<p>当然现在情况已经完全不同了。Git已经是最流行的版本控制系统，“云”也变成了非常非常多的电脑的意思，而微软也成为了当今Github上最为活跃的组织。仅仅他们的VS Code项目就获得了上百万开发者的点赞，VS Code完完全全地开放源码并且使用Github的Electron平台进行构建。除此之外，现如今大型企业也都习惯了拥抱开源。世界已经意识到快乐并高产的开发人员有多么重要。并且人们现在也都拥有智能手机了。</p>\n<p>然而没变的是，我们的聚焦点依然在开发者身上。一开始，我们一直着迷于打造一款人们正在使用的产品。我们希望让开发者们更加多产，更多的人成为开发者。从“Code to Cloud,Code to Edge”，Github的使命是帮助每一个开发者—-无论他们的经验水平如何—-有效地学习，编写并提供软件。</p>\n<p>因此当我们期待未来十年的软件开发的时候，我们知道那些都会是关于开发者的。正如我们在过去几年中，通过从Git LFS到Electron项目合作中了解到的微软团队，我们了解到他们也是这么看的。他们在开源领域的工作激励了我们，Minecraft（我的世界）和LinkedIn（领英）收购后的成功也向我们表明他们对拓展新业务的是非常认真的，同时Azure的发展也证明他们是一个创新的开发平台。</p>\n<p>但不止如此，他们关于未来的认知和我们的观点高度契合。我们都认为Github仍会是一个对所有开发者保持开放的平台。无论您的语种、技术栈、平台、云或者许可证如何，Github将会继续是你的家—-那个软件创建、协作、发现的最佳场所。</p>\n<p>我们都认为软件开发需要更简单、更加无障碍、更加智能、更加开放，以使更多的人可以成为开发者，已经是开发者的可以花费更多的时间在他们正试图解决的独特的问题上。</p>\n<p>我们都看到了开发人员日益增长的需求以及软件在我们生活的各个方面日益增长的重要性。</p>\n<p>更为重要的是，我们都认为我们一起可以比双方独自时做到更好。毕竟，合作正是我们所做事情的核心。</p>\n<p>作为变化的一部分，Nat Friedman将成为Github的CEO。我们一直在寻找一位新的CEO，现在在微软和Nat中找到了我们认为将在未来几年加强和发展Github社区和公司的合作伙伴。Nat 拥有相当丰富的软件经验和开源软件社区的经验，曾共同创建了Xamarin，并且在大量的开源软件项目工作过数年。他将是一个帮助Github成长且继续让开发者的生活变得更美好的完美人选。</p>\n<p>至于我，我将在与微软和Nat的团队紧密合作中担任一个新的角色，未来会跟大家分享更多的细节。</p>\n<p>我对Github和我们的社区在过去十年中所取得的成就感到非常自豪，我迫不及待地想看到未来会发生什么。软件开发的未来是光明的，我很高兴能够与微软一起联手实现这一目标。</p>\n<p><a href=\"https://github.com/defunkt\" target=\"_blank\" rel=\"noopener\">@defunkt</a><br>CEO &amp; Co-Founder, GitHub</p>","sticky":0},{"title":"Java volatile关键字简析","show":true,"date":"2017-08-26T05:26:03.000Z","_content":"最近在看《Java编程思想》，记录一些觉得有必要整理的内容。本篇就简要分析一下Java并发编程中遇到的volatile关键字。\n\n并发编程中，我们通常会遇到以下三个概念：**原子性**、**可视性**以及**有序性**。\nvolatile关键词正式对应可视性这个概念。\n\n可视性是指，当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看到修改的值。即便使用了本地缓存，volatile修饰的域也会立即被写入到主存中，而读取操作就是发生在主存中。\n而相应地，非volatile域上的原子操作不必刷新到主存中去，因此其他读取该域的任务也不必看到这个新值。\n\n然而，要区分原子性和可视性是不同的概念。volatile关键字能保证可视性但并不能保证操作的原子性。如果一个域的值依赖于它之前的值，例如递增一个计数器，或者某个域的值收到其他域的值的限制，例如Range类的lower和upper边界就必须遵循lower<=upper的限制，那么只用volatie修饰是不起作用的。保持原子性或说同步，第一选择应该是使用`synchronized`关键字，同步也会导致向主存中刷新，因此`synchronized`防护的方法或语句块内的域就不必使用`volatile`修饰了。\n\n<!--more-->\n\n下面来看个例子说明下：\n```\npublic class Counter {\n    public static int count = 0;\n\t// 先不使用volatile\n\t// public volatile static int count = 0;\n    public static void inc(){\n        try {\n            Thread.sleep(1);\n        }catch (InterruptedException ignore){\n        }\n\t\t// 先不使用同步块\n        //synchronized (Counter.class){\n            count++;\n        //}\n    }\n\n    public static void main(String ...args){\n        for(int i=0;i<1000;i++){\n            new Thread(){\n                @Override\n                public void run(){\n                    Counter.inc();\n                }\n            }.start();\n        }\n        try {\n            Thread.sleep(2000);\n        }catch (InterruptedException e){\n            e.printStackTrace();\n        }\n        System.out.println(Counter.count);\n    }\n}\n```\n这个例子是个递增计数器，先不使用volatile修饰count，启动1000个线程去递增后打印count的值。由于线程的并发执行特性，读取到count值时，可能有另一个进程此时刚递增过count，导致值不是最新。\n实际的输出比预期的1000要小。\n当我们使用volatile修饰count时，按理输出应该和预期的1000一致了，然而实际运行结果显示还是小于1000。这个例子其实看不出来volatile的可视性，实际上它在这个场景能够说明的是volatile并不能保证原子性，正如上面的描述说到的，递增依赖之前的值volatile并不能正常工作。这个例子中，要想完全符合预期的工作需要使用同步代码块。\n\n那我们再来看一个volatile可以说明可视性的例子：\n```\n\tprivate /*volatile*/ static boolean flag = true;\n\n    public static void main(String ...args){\n        new Thread(){\n            @Override\n            public void run(){\n                while (true){\n                    if(Volatile.flag != Volatile.flag){\n                        System.exit(0);\n                    }\n                }\n            }\n        }.start();\n\n        try {\n            Thread.sleep(1);\n        }catch (InterruptedException e){}\n\n        new Thread(){\n            @Override\n            public void run(){\n                while (true){\n                    Volatile.flag = !Volatile.flag;\n                }\n            }\n        }.start();\n    }\n```\n在先不用volatile修饰flag之前，程序将进入死循环，因为线程2的修改线程1看不见，当我们加上volatile之后，运行后程序立即结束。这说明线程2修改了flag之后，线程1立即就感知到了。呼，可视性的例子还真是不好举。。\n\n总之，如果一个域可能会被多个任务同时访问，或者这些任务至少有一个是写入任务，那么就应该将该域设置为volatile。volatile会告诉编译器不要执行任何移除读取和写入操作的优化，这些操作的目的是用线程中的局部变量维护对该域的精确同步。实际上，读取和写入都会直接针对内存，没有被缓存。但volatile并不能保证原子性，对涉及原子性操作的同步第一选择总是做同步。\n\n\n","source":"_posts/volatile.md","raw":"title: Java volatile关键字简析\nshow: true\ndate: 2017-08-26 13:26:03\ntags: [Java,volatile]\ncategories: 技术人生\n---\n最近在看《Java编程思想》，记录一些觉得有必要整理的内容。本篇就简要分析一下Java并发编程中遇到的volatile关键字。\n\n并发编程中，我们通常会遇到以下三个概念：**原子性**、**可视性**以及**有序性**。\nvolatile关键词正式对应可视性这个概念。\n\n可视性是指，当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看到修改的值。即便使用了本地缓存，volatile修饰的域也会立即被写入到主存中，而读取操作就是发生在主存中。\n而相应地，非volatile域上的原子操作不必刷新到主存中去，因此其他读取该域的任务也不必看到这个新值。\n\n然而，要区分原子性和可视性是不同的概念。volatile关键字能保证可视性但并不能保证操作的原子性。如果一个域的值依赖于它之前的值，例如递增一个计数器，或者某个域的值收到其他域的值的限制，例如Range类的lower和upper边界就必须遵循lower<=upper的限制，那么只用volatie修饰是不起作用的。保持原子性或说同步，第一选择应该是使用`synchronized`关键字，同步也会导致向主存中刷新，因此`synchronized`防护的方法或语句块内的域就不必使用`volatile`修饰了。\n\n<!--more-->\n\n下面来看个例子说明下：\n```\npublic class Counter {\n    public static int count = 0;\n\t// 先不使用volatile\n\t// public volatile static int count = 0;\n    public static void inc(){\n        try {\n            Thread.sleep(1);\n        }catch (InterruptedException ignore){\n        }\n\t\t// 先不使用同步块\n        //synchronized (Counter.class){\n            count++;\n        //}\n    }\n\n    public static void main(String ...args){\n        for(int i=0;i<1000;i++){\n            new Thread(){\n                @Override\n                public void run(){\n                    Counter.inc();\n                }\n            }.start();\n        }\n        try {\n            Thread.sleep(2000);\n        }catch (InterruptedException e){\n            e.printStackTrace();\n        }\n        System.out.println(Counter.count);\n    }\n}\n```\n这个例子是个递增计数器，先不使用volatile修饰count，启动1000个线程去递增后打印count的值。由于线程的并发执行特性，读取到count值时，可能有另一个进程此时刚递增过count，导致值不是最新。\n实际的输出比预期的1000要小。\n当我们使用volatile修饰count时，按理输出应该和预期的1000一致了，然而实际运行结果显示还是小于1000。这个例子其实看不出来volatile的可视性，实际上它在这个场景能够说明的是volatile并不能保证原子性，正如上面的描述说到的，递增依赖之前的值volatile并不能正常工作。这个例子中，要想完全符合预期的工作需要使用同步代码块。\n\n那我们再来看一个volatile可以说明可视性的例子：\n```\n\tprivate /*volatile*/ static boolean flag = true;\n\n    public static void main(String ...args){\n        new Thread(){\n            @Override\n            public void run(){\n                while (true){\n                    if(Volatile.flag != Volatile.flag){\n                        System.exit(0);\n                    }\n                }\n            }\n        }.start();\n\n        try {\n            Thread.sleep(1);\n        }catch (InterruptedException e){}\n\n        new Thread(){\n            @Override\n            public void run(){\n                while (true){\n                    Volatile.flag = !Volatile.flag;\n                }\n            }\n        }.start();\n    }\n```\n在先不用volatile修饰flag之前，程序将进入死循环，因为线程2的修改线程1看不见，当我们加上volatile之后，运行后程序立即结束。这说明线程2修改了flag之后，线程1立即就感知到了。呼，可视性的例子还真是不好举。。\n\n总之，如果一个域可能会被多个任务同时访问，或者这些任务至少有一个是写入任务，那么就应该将该域设置为volatile。volatile会告诉编译器不要执行任何移除读取和写入操作的优化，这些操作的目的是用线程中的局部变量维护对该域的精确同步。实际上，读取和写入都会直接针对内存，没有被缓存。但volatile并不能保证原子性，对涉及原子性操作的同步第一选择总是做同步。\n\n\n","slug":"volatile","published":1,"updated":"2018-10-19T18:30:07.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxu0063fnpvy26n77k8","content":"<p>最近在看《Java编程思想》，记录一些觉得有必要整理的内容。本篇就简要分析一下Java并发编程中遇到的volatile关键字。</p>\n<p>并发编程中，我们通常会遇到以下三个概念：<strong>原子性</strong>、<strong>可视性</strong>以及<strong>有序性</strong>。<br>volatile关键词正式对应可视性这个概念。</p>\n<p>可视性是指，当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看到修改的值。即便使用了本地缓存，volatile修饰的域也会立即被写入到主存中，而读取操作就是发生在主存中。<br>而相应地，非volatile域上的原子操作不必刷新到主存中去，因此其他读取该域的任务也不必看到这个新值。</p>\n<p>然而，要区分原子性和可视性是不同的概念。volatile关键字能保证可视性但并不能保证操作的原子性。如果一个域的值依赖于它之前的值，例如递增一个计数器，或者某个域的值收到其他域的值的限制，例如Range类的lower和upper边界就必须遵循lower&lt;=upper的限制，那么只用volatie修饰是不起作用的。保持原子性或说同步，第一选择应该是使用<code>synchronized</code>关键字，同步也会导致向主存中刷新，因此<code>synchronized</code>防护的方法或语句块内的域就不必使用<code>volatile</code>修饰了。</p>\n<a id=\"more\"></a>\n<p>下面来看个例子说明下：<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Counter</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// 先不使用volatile</span></span><br><span class=\"line\">\t<span class=\"comment\">// public volatile static int count = 0;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">inc</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (InterruptedException ignore)&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 先不使用同步块</span></span><br><span class=\"line\">        <span class=\"comment\">//synchronized (Counter.class)&#123;</span></span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        <span class=\"comment\">//&#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String ...args</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">1000</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread()&#123;</span><br><span class=\"line\">                @Override</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                    Counter.inc();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;.start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (InterruptedException e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.<span class=\"keyword\">out</span>.println(Counter.count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个例子是个递增计数器，先不使用volatile修饰count，启动1000个线程去递增后打印count的值。由于线程的并发执行特性，读取到count值时，可能有另一个进程此时刚递增过count，导致值不是最新。<br>实际的输出比预期的1000要小。<br>当我们使用volatile修饰count时，按理输出应该和预期的1000一致了，然而实际运行结果显示还是小于1000。这个例子其实看不出来volatile的可视性，实际上它在这个场景能够说明的是volatile并不能保证原子性，正如上面的描述说到的，递增依赖之前的值volatile并不能正常工作。这个例子中，要想完全符合预期的工作需要使用同步代码块。</p>\n<p>那我们再来看一个volatile可以说明可视性的例子：<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"comment\">/*volatile*/</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String ...args)</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">new</span> Thread()&#123;</span><br><span class=\"line\">           <span class=\"meta\">@Override</span></span><br><span class=\"line\">           <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span>(Volatile.flag != Volatile.flag)&#123;</span><br><span class=\"line\">                       System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;.start();</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">           Thread.sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">       &#125;<span class=\"keyword\">catch</span> (InterruptedException e)&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">new</span> Thread()&#123;</span><br><span class=\"line\">           <span class=\"meta\">@Override</span></span><br><span class=\"line\">           <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">                   Volatile.flag = !Volatile.flag;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;.start();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></p>\n<p>在先不用volatile修饰flag之前，程序将进入死循环，因为线程2的修改线程1看不见，当我们加上volatile之后，运行后程序立即结束。这说明线程2修改了flag之后，线程1立即就感知到了。呼，可视性的例子还真是不好举。。</p>\n<p>总之，如果一个域可能会被多个任务同时访问，或者这些任务至少有一个是写入任务，那么就应该将该域设置为volatile。volatile会告诉编译器不要执行任何移除读取和写入操作的优化，这些操作的目的是用线程中的局部变量维护对该域的精确同步。实际上，读取和写入都会直接针对内存，没有被缓存。但volatile并不能保证原子性，对涉及原子性操作的同步第一选择总是做同步。</p>\n","site":{"data":{}},"excerpt":"<p>最近在看《Java编程思想》，记录一些觉得有必要整理的内容。本篇就简要分析一下Java并发编程中遇到的volatile关键字。</p>\n<p>并发编程中，我们通常会遇到以下三个概念：<strong>原子性</strong>、<strong>可视性</strong>以及<strong>有序性</strong>。<br>volatile关键词正式对应可视性这个概念。</p>\n<p>可视性是指，当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看到修改的值。即便使用了本地缓存，volatile修饰的域也会立即被写入到主存中，而读取操作就是发生在主存中。<br>而相应地，非volatile域上的原子操作不必刷新到主存中去，因此其他读取该域的任务也不必看到这个新值。</p>\n<p>然而，要区分原子性和可视性是不同的概念。volatile关键字能保证可视性但并不能保证操作的原子性。如果一个域的值依赖于它之前的值，例如递增一个计数器，或者某个域的值收到其他域的值的限制，例如Range类的lower和upper边界就必须遵循lower&lt;=upper的限制，那么只用volatie修饰是不起作用的。保持原子性或说同步，第一选择应该是使用<code>synchronized</code>关键字，同步也会导致向主存中刷新，因此<code>synchronized</code>防护的方法或语句块内的域就不必使用<code>volatile</code>修饰了。</p>","more":"<p>下面来看个例子说明下：<br><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Counter</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// 先不使用volatile</span></span><br><span class=\"line\">\t<span class=\"comment\">// public volatile static int count = 0;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">inc</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (InterruptedException ignore)&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 先不使用同步块</span></span><br><span class=\"line\">        <span class=\"comment\">//synchronized (Counter.class)&#123;</span></span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        <span class=\"comment\">//&#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">String ...args</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">1000</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread()&#123;</span><br><span class=\"line\">                @Override</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                    Counter.inc();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;.start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (InterruptedException e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.<span class=\"keyword\">out</span>.println(Counter.count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个例子是个递增计数器，先不使用volatile修饰count，启动1000个线程去递增后打印count的值。由于线程的并发执行特性，读取到count值时，可能有另一个进程此时刚递增过count，导致值不是最新。<br>实际的输出比预期的1000要小。<br>当我们使用volatile修饰count时，按理输出应该和预期的1000一致了，然而实际运行结果显示还是小于1000。这个例子其实看不出来volatile的可视性，实际上它在这个场景能够说明的是volatile并不能保证原子性，正如上面的描述说到的，递增依赖之前的值volatile并不能正常工作。这个例子中，要想完全符合预期的工作需要使用同步代码块。</p>\n<p>那我们再来看一个volatile可以说明可视性的例子：<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"comment\">/*volatile*/</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String ...args)</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">new</span> Thread()&#123;</span><br><span class=\"line\">           <span class=\"meta\">@Override</span></span><br><span class=\"line\">           <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span>(Volatile.flag != Volatile.flag)&#123;</span><br><span class=\"line\">                       System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;.start();</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">           Thread.sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">       &#125;<span class=\"keyword\">catch</span> (InterruptedException e)&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">new</span> Thread()&#123;</span><br><span class=\"line\">           <span class=\"meta\">@Override</span></span><br><span class=\"line\">           <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">               <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">                   Volatile.flag = !Volatile.flag;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;.start();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure></p>\n<p>在先不用volatile修饰flag之前，程序将进入死循环，因为线程2的修改线程1看不见，当我们加上volatile之后，运行后程序立即结束。这说明线程2修改了flag之后，线程1立即就感知到了。呼，可视性的例子还真是不好举。。</p>\n<p>总之，如果一个域可能会被多个任务同时访问，或者这些任务至少有一个是写入任务，那么就应该将该域设置为volatile。volatile会告诉编译器不要执行任何移除读取和写入操作的优化，这些操作的目的是用线程中的局部变量维护对该域的精确同步。实际上，读取和写入都会直接针对内存，没有被缓存。但volatile并不能保证原子性，对涉及原子性操作的同步第一选择总是做同步。</p>","sticky":0},{"title":"结婚照","date":"2015-12-09T02:13:38.000Z","show":false,"_content":"<!DOCTYPE html>\n<html>\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n\t<title>结婚照</title>\n\t<style type=\"text/css\">\n\t\timg {\n\t\t\twidth: 33%;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.fancybox-skin {\n\t\t\tpadding: 5px !important;\n\t\t}\n\t</style>\n\t<script src=\"http://libs.baidu.com/jquery/1.9.1/jquery.min.js\"></script>\n</head>\n\n<body>\n\t<div>\n\t\t<ul>\n\t\t\t<li><a href=\"#male\">新郎篇</a></li>\n\t\t\t<li><a href=\"#female\">新娘篇</a></li>\n\t\t\t<li><a href=\"#couple\">合照篇</a></li>\n\t\t<ul>\n\t</div>\n\n\t<div id=\"male\">\n\t\t<h2>新郎篇</h2>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysm0namv0j24c02w0qve.jpg\" />\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm1af7uwj24c02w0he0.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslmjwg2wj24c02w0b2g.jpg\" />\n\t</div>\n\n\t<div id=\"female\">\n\t\t<h2>新娘篇</h2>\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysljojf6gj24yo2w0he7.jpg\" style=\"height: 154px;\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslhqc6woj24c02w0b2i.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslh8ngqqj24c02w0qvd.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslfm204hj22w04c07wr.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eyslfec4luj22sr475u12.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysln7llobj22w04c07wr.jpg\" />\n\t</div>\n\t<div id=\"couple\">\n\t\t<h2>合照篇</h2>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eyslembq30j24c02w0he1.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslp8ss3zj24c02w0e8c.jpg\" />\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmh26kdpj24c02w07ws.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysmiu28m4j22w04c0e8c.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysm1nugatj24pc4pbkjy.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslte9gslj22w04c0u13.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmmiam6cj24c02w0x6x.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslvh2pqhj24c02w0x6x.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslwrr4eqj24c02w01l6.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysn47owlfj24c02w01l6.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysmks1m5zj24c02w01l7.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysls4lg7jj24c02w0u12.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm0l9o2tj24c02w01l7.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysn208g2tj24c02w0he4.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyt8eta7xzj24c02w07wt.jpg\" />\n\t</div>\n\n\t<hr />\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\" >\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\t<script>\n\t\t//根据不同的用户设备显示\n\t\tfunction isPc(){\n\t\t\tvar userAgentInfo = navigator.userAgent;\n\t\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\t\tvar flag = true;\n\t\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn flag;\n\t\t}\n\t\tif(!isPc()){\n\t\t\tconsole.log(\"移动设备访问.\");\n\t\t\t$(\"img\").removeAttr(\"style\");\n\t\t\t$(\"img\").css({\"width\": \"100%\"});\n\t\t}\n\t</script>\n</body>\n</html>\n","source":"_posts/wedding.html","raw":"title: 结婚照\ncategories: 图片廊\ndate: 2015-12-09 10:13:38\ntags: 结婚照\nshow: false\n---\n<!DOCTYPE html>\n<html>\n<head>\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n\t<title>结婚照</title>\n\t<style type=\"text/css\">\n\t\timg {\n\t\t\twidth: 33%;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.fancybox-skin {\n\t\t\tpadding: 5px !important;\n\t\t}\n\t</style>\n\t<script src=\"http://libs.baidu.com/jquery/1.9.1/jquery.min.js\"></script>\n</head>\n\n<body>\n\t<div>\n\t\t<ul>\n\t\t\t<li><a href=\"#male\">新郎篇</a></li>\n\t\t\t<li><a href=\"#female\">新娘篇</a></li>\n\t\t\t<li><a href=\"#couple\">合照篇</a></li>\n\t\t<ul>\n\t</div>\n\n\t<div id=\"male\">\n\t\t<h2>新郎篇</h2>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysm0namv0j24c02w0qve.jpg\" />\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm1af7uwj24c02w0he0.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslmjwg2wj24c02w0b2g.jpg\" />\n\t</div>\n\n\t<div id=\"female\">\n\t\t<h2>新娘篇</h2>\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysljojf6gj24yo2w0he7.jpg\" style=\"height: 154px;\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslhqc6woj24c02w0b2i.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslh8ngqqj24c02w0qvd.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslfm204hj22w04c07wr.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eyslfec4luj22sr475u12.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysln7llobj22w04c07wr.jpg\" />\n\t</div>\n\t<div id=\"couple\">\n\t\t<h2>合照篇</h2>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eyslembq30j24c02w0he1.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslp8ss3zj24c02w0e8c.jpg\" />\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmh26kdpj24c02w07ws.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysmiu28m4j22w04c0e8c.jpg\" />\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysm1nugatj24pc4pbkjy.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslte9gslj22w04c0u13.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmmiam6cj24c02w0x6x.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslvh2pqhj24c02w0x6x.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslwrr4eqj24c02w01l6.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysn47owlfj24c02w01l6.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysmks1m5zj24c02w01l7.jpg\" />\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysls4lg7jj24c02w0u12.jpg\" />\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm0l9o2tj24c02w01l7.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysn208g2tj24c02w0he4.jpg\" />\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyt8eta7xzj24c02w07wt.jpg\" />\n\t</div>\n\n\t<hr />\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\" >\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\t<script>\n\t\t//根据不同的用户设备显示\n\t\tfunction isPc(){\n\t\t\tvar userAgentInfo = navigator.userAgent;\n\t\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\t\tvar flag = true;\n\t\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn flag;\n\t\t}\n\t\tif(!isPc()){\n\t\t\tconsole.log(\"移动设备访问.\");\n\t\t\t$(\"img\").removeAttr(\"style\");\n\t\t\t$(\"img\").css({\"width\": \"100%\"});\n\t\t}\n\t</script>\n</body>\n</html>\n","slug":"wedding","published":1,"updated":"2018-10-19T18:30:07.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxw0066fnpvjmovenod","content":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n\t<title>结婚照</title>\n\t<style type=\"text/css\">\n\t\timg {\n\t\t\twidth: 33%;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.fancybox-skin {\n\t\t\tpadding: 5px !important;\n\t\t}\n\t</style>\n\t<script src=\"http://libs.baidu.com/jquery/1.9.1/jquery.min.js\"></script>\n</head>\n\n<body>\n\t<div>\n\t\t<ul>\n\t\t\t<li><a href=\"#male\">新郎篇</a></li>\n\t\t\t<li><a href=\"#female\">新娘篇</a></li>\n\t\t\t<li><a href=\"#couple\">合照篇</a></li>\n\t\t<ul>\n\t</ul></ul></div>\n\n\t<div id=\"male\">\n\t\t<h2>新郎篇</h2>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysm0namv0j24c02w0qve.jpg\">\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm1af7uwj24c02w0he0.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslmjwg2wj24c02w0b2g.jpg\">\n\t</div>\n\n\t<div id=\"female\">\n\t\t<h2>新娘篇</h2>\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysljojf6gj24yo2w0he7.jpg\" style=\"height: 154px;\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslhqc6woj24c02w0b2i.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslh8ngqqj24c02w0qvd.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslfm204hj22w04c07wr.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eyslfec4luj22sr475u12.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysln7llobj22w04c07wr.jpg\">\n\t</div>\n\t<div id=\"couple\">\n\t\t<h2>合照篇</h2>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eyslembq30j24c02w0he1.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslp8ss3zj24c02w0e8c.jpg\">\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmh26kdpj24c02w07ws.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysmiu28m4j22w04c0e8c.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysm1nugatj24pc4pbkjy.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslte9gslj22w04c0u13.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmmiam6cj24c02w0x6x.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslvh2pqhj24c02w0x6x.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslwrr4eqj24c02w01l6.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysn47owlfj24c02w01l6.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysmks1m5zj24c02w01l7.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysls4lg7jj24c02w0u12.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm0l9o2tj24c02w01l7.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysn208g2tj24c02w0he4.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyt8eta7xzj24c02w07wt.jpg\">\n\t</div>\n\n\t<hr>\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\t<script>\n\t\t//根据不同的用户设备显示\n\t\tfunction isPc(){\n\t\t\tvar userAgentInfo = navigator.userAgent;\n\t\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\t\tvar flag = true;\n\t\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn flag;\n\t\t}\n\t\tif(!isPc()){\n\t\t\tconsole.log(\"移动设备访问.\");\n\t\t\t$(\"img\").removeAttr(\"style\");\n\t\t\t$(\"img\").css({\"width\": \"100%\"});\n\t\t}\n\t</script>\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t<meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n\t<title>结婚照</title>\n\t<style type=\"text/css\">\n\t\timg {\n\t\t\twidth: 33%;\n\t\t\tdisplay: inline;\n\t\t}\n\t\t.fancybox-skin {\n\t\t\tpadding: 5px !important;\n\t\t}\n\t</style>\n\t<script src=\"http://libs.baidu.com/jquery/1.9.1/jquery.min.js\"></script>\n</head>\n\n<body>\n\t<div>\n\t\t<ul>\n\t\t\t<li><a href=\"#male\">新郎篇</a></li>\n\t\t\t<li><a href=\"#female\">新娘篇</a></li>\n\t\t\t<li><a href=\"#couple\">合照篇</a></li>\n\t\t<ul>\n\t</ul></ul></div>\n\n\t<div id=\"male\">\n\t\t<h2>新郎篇</h2>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysm0namv0j24c02w0qve.jpg\">\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm1af7uwj24c02w0he0.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslmjwg2wj24c02w0b2g.jpg\">\n\t</div>\n\n\t<div id=\"female\">\n\t\t<h2>新娘篇</h2>\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysljojf6gj24yo2w0he7.jpg\" style=\"height: 154px;\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslhqc6woj24c02w0b2i.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslh8ngqqj24c02w0qvd.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslfm204hj22w04c07wr.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eyslfec4luj22sr475u12.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysln7llobj22w04c07wr.jpg\">\n\t</div>\n\t<div id=\"couple\">\n\t\t<h2>合照篇</h2>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eyslembq30j24c02w0he1.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslp8ss3zj24c02w0e8c.jpg\">\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmh26kdpj24c02w07ws.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysmiu28m4j22w04c0e8c.jpg\">\n\t\t<img src=\"http://ww4.sinaimg.cn/mw690/62d95157gw1eysm1nugatj24pc4pbkjy.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslte9gslj22w04c0u13.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysmmiam6cj24c02w0x6x.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eyslvh2pqhj24c02w0x6x.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyslwrr4eqj24c02w01l6.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysn47owlfj24c02w01l6.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysmks1m5zj24c02w01l7.jpg\">\n\t\t<img src=\"http://ww1.sinaimg.cn/mw690/62d95157gw1eysls4lg7jj24c02w0u12.jpg\">\n\t</div>\n\t<div>\n\t\t<img src=\"http://ww3.sinaimg.cn/mw690/62d95157gw1eysm0l9o2tj24c02w01l7.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eysn208g2tj24c02w0he4.jpg\">\n\t\t<img src=\"http://ww2.sinaimg.cn/mw690/62d95157gw1eyt8eta7xzj24c02w07wt.jpg\">\n\t</div>\n\n\t<hr>\n\n\t<div class=\"post-spread\">\n\t\t<!-- JiaThis Button BEGIN -->\n\t\t<div class=\"jiathis_style\">\n\t\t  <a class=\"jiathis_button_tsina\"></a>\n\t\t  <a class=\"jiathis_button_tqq\"></a>\n\t\t  <a class=\"jiathis_button_weixin\"></a>\n\t\t  <a class=\"jiathis_button_cqq\"></a>\n\t\t  <a class=\"jiathis_button_douban\"></a>\n\t\t  <a class=\"jiathis_button_renren\"></a>\n\t\t  <a class=\"jiathis_button_qzone\"></a>\n\t\t  <a class=\"jiathis_button_kaixin001\"></a>\n\t\t  <a class=\"jiathis_button_copy\"></a>\n\t\t  <a href=\"http://www.jiathis.com/share\" class=\"jiathis jiathis_txt jiathis_separator jtico jtico_jiathis\" target=\"_blank\"></a>\n\t\t  <a class=\"jiathis_counter_style\"></a>\n\t\t</div>\n\t\t<script type=\"text/javascript\">\n\t\t  var jiathis_config={\n\t\t\thideMore:false\n\t\t  }\n\t\t</script>\n\t\t<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js\" charset=\"utf-8\"></script>\n\t</div>\n\n\t<script>\n\t\t//根据不同的用户设备显示\n\t\tfunction isPc(){\n\t\t\tvar userAgentInfo = navigator.userAgent;\n\t\t\tvar agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n\t\t\tvar flag = true;\n\t\t\tfor(var i=0,len=agents.length;i<len;i++){\n\t\t\t\tif(userAgentInfo.indexOf(agents[i]) != -1){\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn flag;\n\t\t}\n\t\tif(!isPc()){\n\t\t\tconsole.log(\"移动设备访问.\");\n\t\t\t$(\"img\").removeAttr(\"style\");\n\t\t\t$(\"img\").css({\"width\": \"100%\"});\n\t\t}\n\t</script>\n</body>\n</html>\n","sticky":0},{"title":"从零开始，教你写留言板（一）","show":true,"date":"2018-04-15T13:53:46.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  8/53，每周一篇博，坚持！\n\n我的博客是建立在[Hexo](https://hexo.io/)的基础上，了解Hexo的朋友应该都知道，Hexo是一种使用Node.js将markdown文件编译成HTML文件的纯静态博客系统。\n\n因此整个博客网站你只需要有一个Web服务器即可，网站的所有内容都是基于HTML、CSS、JS三大件的。这样的好处就是轻量，博客作者也可以将注意力集中在写作上。尤其对于没有技术基础的博主来说，Hexo尤为友好便利：自己只要专注于写作，会点markdown语法就可以了。\n\n但缺点也是同样明显的，正因为是静态博客，所有需要动态交互的地方，如数据持久化、评论、内容推荐、流量统计、分享等等静态博客就提供不了了，这也是所有静态网站的缺陷。Hexo在这方面就需要接入很多的第三方服务来进行补充。如博客的评论系统通常就是使用Disqus，多说，畅言等等。我的博客用过一阵子多说，2017年左右多说关闭切换到了畅言，可以查看我的博客[网站大事记](//zhangjh.me/issue)。\n\n<!--more-->\n\n使用第三方评论系统的最大好处是简单，通常只需要注册后将其提供的代码段贴到你需要的位置，页面上做做调整即可，但缺点真的就太多太多了：\n1. 数据安全，你无法掌控你自己的评论数据\n2. 统计不方便，毕竟数据在人家手里\n3. 使用麻烦，用户想要评论通常要经历一串复杂的注册登录过程，讲道理我就是心血来潮想给博主留个言而已，这么复杂我干嘛还要留？\n4. 网站不再维护的风险，多说是活生生的例子。。。\n\n本来作为一个技术党，Hexo博客已经被我修改了很多了，畅言的评论系统最近又增加了绑定手机号才能发表留言这给用户增加了很大的门槛，而且我自己的VPS虽然便宜，但只用来部署网站&搭建科学上网的梯子似乎有点浪费，于是乎想到干脆自己动手撸一套留言系统替换掉畅言好了。\n\n本系列博文就准备将如何从头开始撸一套留言系统整理下来分享，预计会分成三篇博文，从前后端，数据库等方向分享。\n\n### 第一部分 数据库设计\n\n#### 评论系统的设计\n其实从头开始写一个评论系统不是一件难事，想清楚了就是一个收集特定评论数据持久化，反向读取渲染的过程。过程中注意评论数据和文章关联，并且注意回复关系及引文关联等等细节即可。\n一个评论系统需要收集哪些数据呢？首先评论者的姓名必须的吧，评论内容必须的吧，然后从我个人的角度来说，我还希望如果评论者再次访问网站时，如果有人回复了他的评论给予提醒，因此得记住回复时回复的是哪条评论，也就是得有个回复ID；同时评论阅读过之后该评论的提醒需要去掉，因此要有是否阅读过的标识；如果评论者拥有自己的网站可以评论时留下网站做一种友情链接的效果，因此也要支持记录下评论者的网站；出于联系或消息提醒等目的也需要记录评论者的邮箱。\n收集了这些数据之后，根据评论者所评论的文章的地址做关联，即是一条唯一的文章-评论数据，持久化到数据库。当读者打开该篇博文时，异步加载所有该文章的评论数据渲染出来。\n评论者评论时提供的姓名，邮箱等数据可以选择是否记住，如果选择了记住个人信息，则持久化到评论者的本地浏览器中，待该用户下次再次登录时，请求其曾评论过的评论是否有回复，如果有则显示有未读回复消息的提示。根据其打开提示的情况对未读消息数目实时修改。\n\n#### 数据库选型\n数据持久化离不开数据库，因此想跟随本博客一起自撸留言系统的前提是得有一台自己VPS机器。\n数据库最常用的当属mySql以及noSql领域火热的MongoDB。\n这里我采用的是MongoDB，一来是因为我的VPS上已经安装了MongoDB（之前写[藏经阁](https://favlink.cn)时数据库采用了MongoDB），二来MongoDB我之前已经撸了一套增删改查的接口[mongoose-client](https://github.com/zhangjh/mongoose-client)，使用起来会方便很多，第三，评论系统的后端我准备采用Node.js，搭配MongoDB简直是如虎添翼。\n\n#### 数据库Schema的定义\n根据前述所要收集的数据的分析，加上创建时间、是否删除、文章链接等字段我们可以整理出一条评论信息对应的数据Schema如下：\n```\n// infos--MongoDB的collection命，对应mysql的表\ninfos: {\n\t// 姓名\n\tname: { type: String },\n\t// 邮箱\n\temail: { type: String },\n\t// 网站\n\twebsite: { type: String },\n\t// 评论\n\tcontent: { type: String },\n\t// 所评文章链接\n\turl: { type: String },\n\t// 回复评论id\n\treplyId: { type: String },\n\t// 是否删除\n\tisDeleted: { type: Boolean, default: false},\n\t// 提交时间\n\tgmtCreate: { type: Date, default: Date.now},\n\t// 是否已读\n\treaded: { type: Boolean, default: false}\n}\n```\n\n#### 数据库增删改查接口\n本篇博文里，我将使用[mongoose-client](https://github.com/zhangjh/mongoose-client)提供的数据库操作封装来简化我们的数据操作。\n一个评论系统需要哪些操作接口？\n最基本的提交评论后的保存接口，查询所有评论的接口，删除某个不和谐评论的接口，查询某个具体条件的接口，更新一般不用，但也一并加上以防万一需要。\n保存接口所需传递信息较多，我们采用post方式，其他查询接口采用get方式即可。\n\n这一篇我们主要讲一下基本思路和设计，下一篇我们讲讲如何使用Node.js实际部署评论系统的后端应用，再来具体讲讲这些接口该如何实现。\n","source":"_posts/write-comment.md","raw":"title: 从零开始，教你写留言板（一）\nshow: true\ndate: 2018-04-15 21:53:46\ntags: [留言板,评论]\ncategories: 技术人生\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  8/53，每周一篇博，坚持！\n\n我的博客是建立在[Hexo](https://hexo.io/)的基础上，了解Hexo的朋友应该都知道，Hexo是一种使用Node.js将markdown文件编译成HTML文件的纯静态博客系统。\n\n因此整个博客网站你只需要有一个Web服务器即可，网站的所有内容都是基于HTML、CSS、JS三大件的。这样的好处就是轻量，博客作者也可以将注意力集中在写作上。尤其对于没有技术基础的博主来说，Hexo尤为友好便利：自己只要专注于写作，会点markdown语法就可以了。\n\n但缺点也是同样明显的，正因为是静态博客，所有需要动态交互的地方，如数据持久化、评论、内容推荐、流量统计、分享等等静态博客就提供不了了，这也是所有静态网站的缺陷。Hexo在这方面就需要接入很多的第三方服务来进行补充。如博客的评论系统通常就是使用Disqus，多说，畅言等等。我的博客用过一阵子多说，2017年左右多说关闭切换到了畅言，可以查看我的博客[网站大事记](//zhangjh.me/issue)。\n\n<!--more-->\n\n使用第三方评论系统的最大好处是简单，通常只需要注册后将其提供的代码段贴到你需要的位置，页面上做做调整即可，但缺点真的就太多太多了：\n1. 数据安全，你无法掌控你自己的评论数据\n2. 统计不方便，毕竟数据在人家手里\n3. 使用麻烦，用户想要评论通常要经历一串复杂的注册登录过程，讲道理我就是心血来潮想给博主留个言而已，这么复杂我干嘛还要留？\n4. 网站不再维护的风险，多说是活生生的例子。。。\n\n本来作为一个技术党，Hexo博客已经被我修改了很多了，畅言的评论系统最近又增加了绑定手机号才能发表留言这给用户增加了很大的门槛，而且我自己的VPS虽然便宜，但只用来部署网站&搭建科学上网的梯子似乎有点浪费，于是乎想到干脆自己动手撸一套留言系统替换掉畅言好了。\n\n本系列博文就准备将如何从头开始撸一套留言系统整理下来分享，预计会分成三篇博文，从前后端，数据库等方向分享。\n\n### 第一部分 数据库设计\n\n#### 评论系统的设计\n其实从头开始写一个评论系统不是一件难事，想清楚了就是一个收集特定评论数据持久化，反向读取渲染的过程。过程中注意评论数据和文章关联，并且注意回复关系及引文关联等等细节即可。\n一个评论系统需要收集哪些数据呢？首先评论者的姓名必须的吧，评论内容必须的吧，然后从我个人的角度来说，我还希望如果评论者再次访问网站时，如果有人回复了他的评论给予提醒，因此得记住回复时回复的是哪条评论，也就是得有个回复ID；同时评论阅读过之后该评论的提醒需要去掉，因此要有是否阅读过的标识；如果评论者拥有自己的网站可以评论时留下网站做一种友情链接的效果，因此也要支持记录下评论者的网站；出于联系或消息提醒等目的也需要记录评论者的邮箱。\n收集了这些数据之后，根据评论者所评论的文章的地址做关联，即是一条唯一的文章-评论数据，持久化到数据库。当读者打开该篇博文时，异步加载所有该文章的评论数据渲染出来。\n评论者评论时提供的姓名，邮箱等数据可以选择是否记住，如果选择了记住个人信息，则持久化到评论者的本地浏览器中，待该用户下次再次登录时，请求其曾评论过的评论是否有回复，如果有则显示有未读回复消息的提示。根据其打开提示的情况对未读消息数目实时修改。\n\n#### 数据库选型\n数据持久化离不开数据库，因此想跟随本博客一起自撸留言系统的前提是得有一台自己VPS机器。\n数据库最常用的当属mySql以及noSql领域火热的MongoDB。\n这里我采用的是MongoDB，一来是因为我的VPS上已经安装了MongoDB（之前写[藏经阁](https://favlink.cn)时数据库采用了MongoDB），二来MongoDB我之前已经撸了一套增删改查的接口[mongoose-client](https://github.com/zhangjh/mongoose-client)，使用起来会方便很多，第三，评论系统的后端我准备采用Node.js，搭配MongoDB简直是如虎添翼。\n\n#### 数据库Schema的定义\n根据前述所要收集的数据的分析，加上创建时间、是否删除、文章链接等字段我们可以整理出一条评论信息对应的数据Schema如下：\n```\n// infos--MongoDB的collection命，对应mysql的表\ninfos: {\n\t// 姓名\n\tname: { type: String },\n\t// 邮箱\n\temail: { type: String },\n\t// 网站\n\twebsite: { type: String },\n\t// 评论\n\tcontent: { type: String },\n\t// 所评文章链接\n\turl: { type: String },\n\t// 回复评论id\n\treplyId: { type: String },\n\t// 是否删除\n\tisDeleted: { type: Boolean, default: false},\n\t// 提交时间\n\tgmtCreate: { type: Date, default: Date.now},\n\t// 是否已读\n\treaded: { type: Boolean, default: false}\n}\n```\n\n#### 数据库增删改查接口\n本篇博文里，我将使用[mongoose-client](https://github.com/zhangjh/mongoose-client)提供的数据库操作封装来简化我们的数据操作。\n一个评论系统需要哪些操作接口？\n最基本的提交评论后的保存接口，查询所有评论的接口，删除某个不和谐评论的接口，查询某个具体条件的接口，更新一般不用，但也一并加上以防万一需要。\n保存接口所需传递信息较多，我们采用post方式，其他查询接口采用get方式即可。\n\n这一篇我们主要讲一下基本思路和设计，下一篇我们讲讲如何使用Node.js实际部署评论系统的后端应用，再来具体讲讲这些接口该如何实现。\n","slug":"write-comment","published":1,"updated":"2018-10-19T18:30:07.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxy0069fnpvr6w0hscv","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  8/53，每周一篇博，坚持！</p>\n<p>我的博客是建立在<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>的基础上，了解Hexo的朋友应该都知道，Hexo是一种使用Node.js将markdown文件编译成HTML文件的纯静态博客系统。</p>\n<p>因此整个博客网站你只需要有一个Web服务器即可，网站的所有内容都是基于HTML、CSS、JS三大件的。这样的好处就是轻量，博客作者也可以将注意力集中在写作上。尤其对于没有技术基础的博主来说，Hexo尤为友好便利：自己只要专注于写作，会点markdown语法就可以了。</p>\n<p>但缺点也是同样明显的，正因为是静态博客，所有需要动态交互的地方，如数据持久化、评论、内容推荐、流量统计、分享等等静态博客就提供不了了，这也是所有静态网站的缺陷。Hexo在这方面就需要接入很多的第三方服务来进行补充。如博客的评论系统通常就是使用Disqus，多说，畅言等等。我的博客用过一阵子多说，2017年左右多说关闭切换到了畅言，可以查看我的博客<a href=\"//zhangjh.me/issue\">网站大事记</a>。</p>\n<a id=\"more\"></a>\n<p>使用第三方评论系统的最大好处是简单，通常只需要注册后将其提供的代码段贴到你需要的位置，页面上做做调整即可，但缺点真的就太多太多了：</p>\n<ol>\n<li>数据安全，你无法掌控你自己的评论数据</li>\n<li>统计不方便，毕竟数据在人家手里</li>\n<li>使用麻烦，用户想要评论通常要经历一串复杂的注册登录过程，讲道理我就是心血来潮想给博主留个言而已，这么复杂我干嘛还要留？</li>\n<li>网站不再维护的风险，多说是活生生的例子。。。</li>\n</ol>\n<p>本来作为一个技术党，Hexo博客已经被我修改了很多了，畅言的评论系统最近又增加了绑定手机号才能发表留言这给用户增加了很大的门槛，而且我自己的VPS虽然便宜，但只用来部署网站&amp;搭建科学上网的梯子似乎有点浪费，于是乎想到干脆自己动手撸一套留言系统替换掉畅言好了。</p>\n<p>本系列博文就准备将如何从头开始撸一套留言系统整理下来分享，预计会分成三篇博文，从前后端，数据库等方向分享。</p>\n<h3 id=\"第一部分-数据库设计\"><a href=\"#第一部分-数据库设计\" class=\"headerlink\" title=\"第一部分 数据库设计\"></a>第一部分 数据库设计</h3><h4 id=\"评论系统的设计\"><a href=\"#评论系统的设计\" class=\"headerlink\" title=\"评论系统的设计\"></a>评论系统的设计</h4><p>其实从头开始写一个评论系统不是一件难事，想清楚了就是一个收集特定评论数据持久化，反向读取渲染的过程。过程中注意评论数据和文章关联，并且注意回复关系及引文关联等等细节即可。<br>一个评论系统需要收集哪些数据呢？首先评论者的姓名必须的吧，评论内容必须的吧，然后从我个人的角度来说，我还希望如果评论者再次访问网站时，如果有人回复了他的评论给予提醒，因此得记住回复时回复的是哪条评论，也就是得有个回复ID；同时评论阅读过之后该评论的提醒需要去掉，因此要有是否阅读过的标识；如果评论者拥有自己的网站可以评论时留下网站做一种友情链接的效果，因此也要支持记录下评论者的网站；出于联系或消息提醒等目的也需要记录评论者的邮箱。<br>收集了这些数据之后，根据评论者所评论的文章的地址做关联，即是一条唯一的文章-评论数据，持久化到数据库。当读者打开该篇博文时，异步加载所有该文章的评论数据渲染出来。<br>评论者评论时提供的姓名，邮箱等数据可以选择是否记住，如果选择了记住个人信息，则持久化到评论者的本地浏览器中，待该用户下次再次登录时，请求其曾评论过的评论是否有回复，如果有则显示有未读回复消息的提示。根据其打开提示的情况对未读消息数目实时修改。</p>\n<h4 id=\"数据库选型\"><a href=\"#数据库选型\" class=\"headerlink\" title=\"数据库选型\"></a>数据库选型</h4><p>数据持久化离不开数据库，因此想跟随本博客一起自撸留言系统的前提是得有一台自己VPS机器。<br>数据库最常用的当属mySql以及noSql领域火热的MongoDB。<br>这里我采用的是MongoDB，一来是因为我的VPS上已经安装了MongoDB（之前写<a href=\"https://favlink.cn\" target=\"_blank\" rel=\"noopener\">藏经阁</a>时数据库采用了MongoDB），二来MongoDB我之前已经撸了一套增删改查的接口<a href=\"https://github.com/zhangjh/mongoose-client\" target=\"_blank\" rel=\"noopener\">mongoose-client</a>，使用起来会方便很多，第三，评论系统的后端我准备采用Node.js，搭配MongoDB简直是如虎添翼。</p>\n<h4 id=\"数据库Schema的定义\"><a href=\"#数据库Schema的定义\" class=\"headerlink\" title=\"数据库Schema的定义\"></a>数据库Schema的定义</h4><p>根据前述所要收集的数据的分析，加上创建时间、是否删除、文章链接等字段我们可以整理出一条评论信息对应的数据Schema如下：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// infos--MongoDB的collection命，对应mysql的表</span></span><br><span class=\"line\">infos: &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 姓名</span></span><br><span class=\"line\">\tname: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 邮箱</span></span><br><span class=\"line\">\temail: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 网站</span></span><br><span class=\"line\">\twebsite: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 评论</span></span><br><span class=\"line\">\tcontent: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 所评文章链接</span></span><br><span class=\"line\">\turl: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 回复评论id</span></span><br><span class=\"line\">\treplyId: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 是否删除</span></span><br><span class=\"line\">\tisDeleted: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Boolean</span>, <span class=\"keyword\">default</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 提交时间</span></span><br><span class=\"line\">\tgmtCreate: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Date</span>, <span class=\"keyword\">default</span>: <span class=\"built_in\">Date</span>.now&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 是否已读</span></span><br><span class=\"line\">\treaded: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Boolean</span>, <span class=\"keyword\">default</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"数据库增删改查接口\"><a href=\"#数据库增删改查接口\" class=\"headerlink\" title=\"数据库增删改查接口\"></a>数据库增删改查接口</h4><p>本篇博文里，我将使用<a href=\"https://github.com/zhangjh/mongoose-client\" target=\"_blank\" rel=\"noopener\">mongoose-client</a>提供的数据库操作封装来简化我们的数据操作。<br>一个评论系统需要哪些操作接口？<br>最基本的提交评论后的保存接口，查询所有评论的接口，删除某个不和谐评论的接口，查询某个具体条件的接口，更新一般不用，但也一并加上以防万一需要。<br>保存接口所需传递信息较多，我们采用post方式，其他查询接口采用get方式即可。</p>\n<p>这一篇我们主要讲一下基本思路和设计，下一篇我们讲讲如何使用Node.js实际部署评论系统的后端应用，再来具体讲讲这些接口该如何实现。</p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  8/53，每周一篇博，坚持！</p>\n<p>我的博客是建立在<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>的基础上，了解Hexo的朋友应该都知道，Hexo是一种使用Node.js将markdown文件编译成HTML文件的纯静态博客系统。</p>\n<p>因此整个博客网站你只需要有一个Web服务器即可，网站的所有内容都是基于HTML、CSS、JS三大件的。这样的好处就是轻量，博客作者也可以将注意力集中在写作上。尤其对于没有技术基础的博主来说，Hexo尤为友好便利：自己只要专注于写作，会点markdown语法就可以了。</p>\n<p>但缺点也是同样明显的，正因为是静态博客，所有需要动态交互的地方，如数据持久化、评论、内容推荐、流量统计、分享等等静态博客就提供不了了，这也是所有静态网站的缺陷。Hexo在这方面就需要接入很多的第三方服务来进行补充。如博客的评论系统通常就是使用Disqus，多说，畅言等等。我的博客用过一阵子多说，2017年左右多说关闭切换到了畅言，可以查看我的博客<a href=\"//zhangjh.me/issue\">网站大事记</a>。</p>","more":"<p>使用第三方评论系统的最大好处是简单，通常只需要注册后将其提供的代码段贴到你需要的位置，页面上做做调整即可，但缺点真的就太多太多了：</p>\n<ol>\n<li>数据安全，你无法掌控你自己的评论数据</li>\n<li>统计不方便，毕竟数据在人家手里</li>\n<li>使用麻烦，用户想要评论通常要经历一串复杂的注册登录过程，讲道理我就是心血来潮想给博主留个言而已，这么复杂我干嘛还要留？</li>\n<li>网站不再维护的风险，多说是活生生的例子。。。</li>\n</ol>\n<p>本来作为一个技术党，Hexo博客已经被我修改了很多了，畅言的评论系统最近又增加了绑定手机号才能发表留言这给用户增加了很大的门槛，而且我自己的VPS虽然便宜，但只用来部署网站&amp;搭建科学上网的梯子似乎有点浪费，于是乎想到干脆自己动手撸一套留言系统替换掉畅言好了。</p>\n<p>本系列博文就准备将如何从头开始撸一套留言系统整理下来分享，预计会分成三篇博文，从前后端，数据库等方向分享。</p>\n<h3 id=\"第一部分-数据库设计\"><a href=\"#第一部分-数据库设计\" class=\"headerlink\" title=\"第一部分 数据库设计\"></a>第一部分 数据库设计</h3><h4 id=\"评论系统的设计\"><a href=\"#评论系统的设计\" class=\"headerlink\" title=\"评论系统的设计\"></a>评论系统的设计</h4><p>其实从头开始写一个评论系统不是一件难事，想清楚了就是一个收集特定评论数据持久化，反向读取渲染的过程。过程中注意评论数据和文章关联，并且注意回复关系及引文关联等等细节即可。<br>一个评论系统需要收集哪些数据呢？首先评论者的姓名必须的吧，评论内容必须的吧，然后从我个人的角度来说，我还希望如果评论者再次访问网站时，如果有人回复了他的评论给予提醒，因此得记住回复时回复的是哪条评论，也就是得有个回复ID；同时评论阅读过之后该评论的提醒需要去掉，因此要有是否阅读过的标识；如果评论者拥有自己的网站可以评论时留下网站做一种友情链接的效果，因此也要支持记录下评论者的网站；出于联系或消息提醒等目的也需要记录评论者的邮箱。<br>收集了这些数据之后，根据评论者所评论的文章的地址做关联，即是一条唯一的文章-评论数据，持久化到数据库。当读者打开该篇博文时，异步加载所有该文章的评论数据渲染出来。<br>评论者评论时提供的姓名，邮箱等数据可以选择是否记住，如果选择了记住个人信息，则持久化到评论者的本地浏览器中，待该用户下次再次登录时，请求其曾评论过的评论是否有回复，如果有则显示有未读回复消息的提示。根据其打开提示的情况对未读消息数目实时修改。</p>\n<h4 id=\"数据库选型\"><a href=\"#数据库选型\" class=\"headerlink\" title=\"数据库选型\"></a>数据库选型</h4><p>数据持久化离不开数据库，因此想跟随本博客一起自撸留言系统的前提是得有一台自己VPS机器。<br>数据库最常用的当属mySql以及noSql领域火热的MongoDB。<br>这里我采用的是MongoDB，一来是因为我的VPS上已经安装了MongoDB（之前写<a href=\"https://favlink.cn\" target=\"_blank\" rel=\"noopener\">藏经阁</a>时数据库采用了MongoDB），二来MongoDB我之前已经撸了一套增删改查的接口<a href=\"https://github.com/zhangjh/mongoose-client\" target=\"_blank\" rel=\"noopener\">mongoose-client</a>，使用起来会方便很多，第三，评论系统的后端我准备采用Node.js，搭配MongoDB简直是如虎添翼。</p>\n<h4 id=\"数据库Schema的定义\"><a href=\"#数据库Schema的定义\" class=\"headerlink\" title=\"数据库Schema的定义\"></a>数据库Schema的定义</h4><p>根据前述所要收集的数据的分析，加上创建时间、是否删除、文章链接等字段我们可以整理出一条评论信息对应的数据Schema如下：<br><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// infos--MongoDB的collection命，对应mysql的表</span></span><br><span class=\"line\">infos: &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 姓名</span></span><br><span class=\"line\">\tname: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 邮箱</span></span><br><span class=\"line\">\temail: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 网站</span></span><br><span class=\"line\">\twebsite: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 评论</span></span><br><span class=\"line\">\tcontent: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 所评文章链接</span></span><br><span class=\"line\">\turl: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 回复评论id</span></span><br><span class=\"line\">\treplyId: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 是否删除</span></span><br><span class=\"line\">\tisDeleted: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Boolean</span>, <span class=\"keyword\">default</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 提交时间</span></span><br><span class=\"line\">\tgmtCreate: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Date</span>, <span class=\"keyword\">default</span>: <span class=\"built_in\">Date</span>.now&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 是否已读</span></span><br><span class=\"line\">\treaded: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Boolean</span>, <span class=\"keyword\">default</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"数据库增删改查接口\"><a href=\"#数据库增删改查接口\" class=\"headerlink\" title=\"数据库增删改查接口\"></a>数据库增删改查接口</h4><p>本篇博文里，我将使用<a href=\"https://github.com/zhangjh/mongoose-client\" target=\"_blank\" rel=\"noopener\">mongoose-client</a>提供的数据库操作封装来简化我们的数据操作。<br>一个评论系统需要哪些操作接口？<br>最基本的提交评论后的保存接口，查询所有评论的接口，删除某个不和谐评论的接口，查询某个具体条件的接口，更新一般不用，但也一并加上以防万一需要。<br>保存接口所需传递信息较多，我们采用post方式，其他查询接口采用get方式即可。</p>\n<p>这一篇我们主要讲一下基本思路和设计，下一篇我们讲讲如何使用Node.js实际部署评论系统的后端应用，再来具体讲讲这些接口该如何实现。</p>","sticky":0},{"title":"从零开始，教你写留言板（二）","show":true,"date":"2018-04-22T12:13:46.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  9/53，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/04/15/write-comment/)\n\n上一篇我们主要讲了一下一个评论系统的基本设计思路和数据库的设计，这篇我们主要讲一下如何使用Node.js来构建评论系统所需要的后端服务。\n\n## 第二部分 搭建后端应用\n#### Express框架介绍\n这里我们使用Node.js的Express框架来构建相应的后端应用，相应的准备工作大致包括Node.js环境的安装，npm的安装，MongoDB的安装等，不赘述。\n\n首先我们需要安装Node下的Express框架：\n```\nnpm i express-generator -d -g\n```\n上述命令为我们安装了Express框架的生成器，我们只需调用：\n```\nexpress comment\n```\n即可生成一个comment的Express框架工程的目录。\n然后安装工程依赖：\n```\ncd comment\nnpm install\n```\n依赖安装完成后，该目录即已完成一个Express工程的初始化了，启动后就是一个WEB服务器了。\n```\nnpm start\n```\n该命令在本地的3000端口启动了一个WEB服务器，可以通过访问：http://localhost:3000来测试下是否正常。\n\n以上只是一个简单的Node.js下Express框架的介绍，详细可以查看[官方文档](http://expressjs.com/en/starter/generator.html)。\n\n<!--more-->\n\n#### 开始编码\n这里我们假设开发环境已经部署完成，下面开始本篇的正式部分。\n\n1. 数据库配置\n\t按照上篇的分析，我们需要先建立数据库配置，在comment下建立conf目录并创建config文件如下：\n\t```\n\t// mongoose config\n\tvar mongooseClient = require('mongoose-client');\n\tvar mongooseClientInstance = new mongooseClient({\n\t  DB_IP: 'localhost',\n\t  DB_PORT: '20172',\n\t  DB_NAME: 'comment',\n\t  schema: {\n\t    infos: {\n\t      name: { type: String },\n        email: { type: String },\n        website: { type: String },\n        content: { type: String },\n        url: { type: String },\n        replyId: { type: String },\n        isDeleted: { type: Boolean, default: false},\n        gmtCreate: { type: Date, default: Date.now},\n        readed: { type: Boolean, default: false}\n\t\t\t}\n\t\t}\n\t});\n\n\tmodule.exports = mongooseClientInstance;\n\t```\n\n2. 数据读写接口\n\t根据上篇的分析，我们需要评论数据的保存、查找、删除、更新等接口。这里以保存和查找接口为例，详细的可以参见[Git上的项目源码](https://github.com/zhangjh/comment)。\n\t我们在项目routes目录下创建comment.js文件，用来编写评论接口，该文件一会儿会作为路由文件供web服务器使用。\n\t保存接口我们使用POST方式来写，因为需要传递的数据还是比较多的。\n\t这个接口我们需要接收前端传递的姓名、邮箱、网站、评论内容、文章的url以及如果是回复的他人的评论还有评论的ID。\n\tPOST收集参数的方式如下：\n\t```\n\trouter.post('/save',function(req,res){\n\t\tlet name = req.body.name;\n\t\tlet email = req.body.email;\n\t\tlet website = req.body.website;\n\t\tlet cotent = req.body.content;\n\t\tlet url = req.body.url;\n\t\tlet replyId = req.body.replyId;\n\t});\n\t```\n\t保存前需要对数据进行一定的校验，以保证程序的健壮性。并且为了防止恶意提交，需要加上一定的校验机制，如设置连续提交需要间隔十秒以上。\n\t```\n\tif(!name){\n\t    res.send({\n\t    status: false,\n\t        errorMsg: \"大侠请留名\"\n\t    });\n\t}\n\tif(!email){\n\t    res.send({\n\t        status: false,\n\t        errorMsg: \"留个邮箱吧，一有回复我就提醒你\"\n\t    });\n\t}\n\tif(!content){\n\t    res.send({\n\t        status: false,\n\t        errorMsg: \"大侠，逗我呢？一个字不留咋提交啊\"\n\t    });\n\t}\n\t```\n\t将数据整合后，利用mongooseClient封装的接口插入数据库中：\n\t```\n\t// 此处collection为mongodb表名，这里未infos，可回看数据库设置\n\tmongooseClientInstance.find(collection,{name: name, url: url},function(ret){\n\t    if(ret.status){\n\t        if(ret.data.length){\n\t            // 此处为限制评论频率逻辑，同一人同一文章两次评论间隔需大于十秒\n\t            let createTime = ret.data[0].gmtCreate;\n\t            if(Math.abs(createTime - new Date()) < 10000){\n\t                return res.send({\n\t                    status: false,\n\t                    errorMsg: \"大侠手速惊人，练过弹指神通？\"\n\t                });\n\t            }else {\n                  mongooseClientInstance.insert(collection,data,function(ret){\n\t                    return res.send(ret);\n\t                });\n\t            }\n\t        }else {\n\t            mongooseClientInstance.insert(collection,data,function(ret){\n\t                return res.send(ret);\n\t            });\n\t      }\n\t    }\n\t},{gmtCreate: -1});\n\t```\n\n\t同样地，评论数据读取接口要更为简单一些，以查询所有评论数据为例，只需要构造查询条件然后交给封装好的mongooseClient查询，将结果数据返回即可：\n\t```\n\trouter.get('/queryAll',function(req, res, next){\n\t  mongooseClientInstance.find(collection,{isDeleted: false},function(ret){\n\t    return res.send(ret);\n\t  });\n\t});\n\t```\n\n\t完整的接口代码，可以[点击查看](https://github.com/zhangjh/comment/blob/master/routes/comment.js)\n\n3. 编写HTTP接口\n\t完成上一步之后，数据库的数据读写算是可以了，但如何编写对应的HTTP接口以便可以访问到这些数据库读写接口呢？\n\n\tExpress下，项目工程目录的app.js定义了各个接口的路由方式。我们只需新增几个我们所需的接口并绑定到相应的路由方法上即可。如新增一个评论数据保存HTTP接口，对应的操作方法为路由文件中刚刚定义的保存接口：\n\t```\n\t// 首先我们需要在app.js中引入刚刚新建的路由文件\n\tconst commentRouter = require('./routes/comment');\n\t// 然后再设置一下接口的跨域访问权限，这里我设置的是所有接口都可以被http://zhangjh.me这个域访问\n\tapp.all('*', function(req, res, next) {\n\t  res.header(\"Access-Control-Allow-Origin\", \"http://zhangjh.me\");\n\t  res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With\");\n\t  res.header(\"Access-Control-Allow-Methods\",\"PUT,POST,GET,DELETE,OPTIONS\");\n\t  res.header(\"X-Powered-By\",' 3.2.1')\n\t  res.header(\"Content-Type\", \"application/json;charset=utf-8\");\n\t  next();\n\t});\n\t// 最后我们关联一下接口的路由方式，这句话告诉应用所有请求/comment/*的请求均有commentRouter路由文件来承接\n\tapp.use('/comment',commentRouter);\n\t```\n\t上述设置之后，如果我要获取一个GET请求\"/comment/queryAll\"，服务器将从comment.js中查找是否有定义\"/queryAll\"的get请求。这里正好访问到我们上一步中编写的查询所有评论数据的接口并将数据返回。\n\n\t设置完成以后，重启应用，试试访问我们新编写的接口是否已经生效了。\n\n\n这一篇主要讲了如何利用Node.js的Express构建评论数据的后端读写接口应用，在Express下编写纯粹的后端HTTP接口还是非常简便的。\n下一篇我再讲一下有了评论接口后，如何在Hexo博客下进行评论部分的前端渲染，可以看一下我现在评论部分的效果，是仿的畅言的样式，并且比畅言更佳的地方是更好的适配了移动端，不会存在畅言那样在移动端屏宽不够的情况下撑开页面的情况。我们下篇博文继续说一下评论系统的前端交互实现。\n","source":"_posts/write-comment2.md","raw":"title: 从零开始，教你写留言板（二）\nshow: true\ndate: 2018-04-22 20:13:46\ntags: [留言板,评论]\ncategories: 技术人生\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  9/53，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/04/15/write-comment/)\n\n上一篇我们主要讲了一下一个评论系统的基本设计思路和数据库的设计，这篇我们主要讲一下如何使用Node.js来构建评论系统所需要的后端服务。\n\n## 第二部分 搭建后端应用\n#### Express框架介绍\n这里我们使用Node.js的Express框架来构建相应的后端应用，相应的准备工作大致包括Node.js环境的安装，npm的安装，MongoDB的安装等，不赘述。\n\n首先我们需要安装Node下的Express框架：\n```\nnpm i express-generator -d -g\n```\n上述命令为我们安装了Express框架的生成器，我们只需调用：\n```\nexpress comment\n```\n即可生成一个comment的Express框架工程的目录。\n然后安装工程依赖：\n```\ncd comment\nnpm install\n```\n依赖安装完成后，该目录即已完成一个Express工程的初始化了，启动后就是一个WEB服务器了。\n```\nnpm start\n```\n该命令在本地的3000端口启动了一个WEB服务器，可以通过访问：http://localhost:3000来测试下是否正常。\n\n以上只是一个简单的Node.js下Express框架的介绍，详细可以查看[官方文档](http://expressjs.com/en/starter/generator.html)。\n\n<!--more-->\n\n#### 开始编码\n这里我们假设开发环境已经部署完成，下面开始本篇的正式部分。\n\n1. 数据库配置\n\t按照上篇的分析，我们需要先建立数据库配置，在comment下建立conf目录并创建config文件如下：\n\t```\n\t// mongoose config\n\tvar mongooseClient = require('mongoose-client');\n\tvar mongooseClientInstance = new mongooseClient({\n\t  DB_IP: 'localhost',\n\t  DB_PORT: '20172',\n\t  DB_NAME: 'comment',\n\t  schema: {\n\t    infos: {\n\t      name: { type: String },\n        email: { type: String },\n        website: { type: String },\n        content: { type: String },\n        url: { type: String },\n        replyId: { type: String },\n        isDeleted: { type: Boolean, default: false},\n        gmtCreate: { type: Date, default: Date.now},\n        readed: { type: Boolean, default: false}\n\t\t\t}\n\t\t}\n\t});\n\n\tmodule.exports = mongooseClientInstance;\n\t```\n\n2. 数据读写接口\n\t根据上篇的分析，我们需要评论数据的保存、查找、删除、更新等接口。这里以保存和查找接口为例，详细的可以参见[Git上的项目源码](https://github.com/zhangjh/comment)。\n\t我们在项目routes目录下创建comment.js文件，用来编写评论接口，该文件一会儿会作为路由文件供web服务器使用。\n\t保存接口我们使用POST方式来写，因为需要传递的数据还是比较多的。\n\t这个接口我们需要接收前端传递的姓名、邮箱、网站、评论内容、文章的url以及如果是回复的他人的评论还有评论的ID。\n\tPOST收集参数的方式如下：\n\t```\n\trouter.post('/save',function(req,res){\n\t\tlet name = req.body.name;\n\t\tlet email = req.body.email;\n\t\tlet website = req.body.website;\n\t\tlet cotent = req.body.content;\n\t\tlet url = req.body.url;\n\t\tlet replyId = req.body.replyId;\n\t});\n\t```\n\t保存前需要对数据进行一定的校验，以保证程序的健壮性。并且为了防止恶意提交，需要加上一定的校验机制，如设置连续提交需要间隔十秒以上。\n\t```\n\tif(!name){\n\t    res.send({\n\t    status: false,\n\t        errorMsg: \"大侠请留名\"\n\t    });\n\t}\n\tif(!email){\n\t    res.send({\n\t        status: false,\n\t        errorMsg: \"留个邮箱吧，一有回复我就提醒你\"\n\t    });\n\t}\n\tif(!content){\n\t    res.send({\n\t        status: false,\n\t        errorMsg: \"大侠，逗我呢？一个字不留咋提交啊\"\n\t    });\n\t}\n\t```\n\t将数据整合后，利用mongooseClient封装的接口插入数据库中：\n\t```\n\t// 此处collection为mongodb表名，这里未infos，可回看数据库设置\n\tmongooseClientInstance.find(collection,{name: name, url: url},function(ret){\n\t    if(ret.status){\n\t        if(ret.data.length){\n\t            // 此处为限制评论频率逻辑，同一人同一文章两次评论间隔需大于十秒\n\t            let createTime = ret.data[0].gmtCreate;\n\t            if(Math.abs(createTime - new Date()) < 10000){\n\t                return res.send({\n\t                    status: false,\n\t                    errorMsg: \"大侠手速惊人，练过弹指神通？\"\n\t                });\n\t            }else {\n                  mongooseClientInstance.insert(collection,data,function(ret){\n\t                    return res.send(ret);\n\t                });\n\t            }\n\t        }else {\n\t            mongooseClientInstance.insert(collection,data,function(ret){\n\t                return res.send(ret);\n\t            });\n\t      }\n\t    }\n\t},{gmtCreate: -1});\n\t```\n\n\t同样地，评论数据读取接口要更为简单一些，以查询所有评论数据为例，只需要构造查询条件然后交给封装好的mongooseClient查询，将结果数据返回即可：\n\t```\n\trouter.get('/queryAll',function(req, res, next){\n\t  mongooseClientInstance.find(collection,{isDeleted: false},function(ret){\n\t    return res.send(ret);\n\t  });\n\t});\n\t```\n\n\t完整的接口代码，可以[点击查看](https://github.com/zhangjh/comment/blob/master/routes/comment.js)\n\n3. 编写HTTP接口\n\t完成上一步之后，数据库的数据读写算是可以了，但如何编写对应的HTTP接口以便可以访问到这些数据库读写接口呢？\n\n\tExpress下，项目工程目录的app.js定义了各个接口的路由方式。我们只需新增几个我们所需的接口并绑定到相应的路由方法上即可。如新增一个评论数据保存HTTP接口，对应的操作方法为路由文件中刚刚定义的保存接口：\n\t```\n\t// 首先我们需要在app.js中引入刚刚新建的路由文件\n\tconst commentRouter = require('./routes/comment');\n\t// 然后再设置一下接口的跨域访问权限，这里我设置的是所有接口都可以被http://zhangjh.me这个域访问\n\tapp.all('*', function(req, res, next) {\n\t  res.header(\"Access-Control-Allow-Origin\", \"http://zhangjh.me\");\n\t  res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With\");\n\t  res.header(\"Access-Control-Allow-Methods\",\"PUT,POST,GET,DELETE,OPTIONS\");\n\t  res.header(\"X-Powered-By\",' 3.2.1')\n\t  res.header(\"Content-Type\", \"application/json;charset=utf-8\");\n\t  next();\n\t});\n\t// 最后我们关联一下接口的路由方式，这句话告诉应用所有请求/comment/*的请求均有commentRouter路由文件来承接\n\tapp.use('/comment',commentRouter);\n\t```\n\t上述设置之后，如果我要获取一个GET请求\"/comment/queryAll\"，服务器将从comment.js中查找是否有定义\"/queryAll\"的get请求。这里正好访问到我们上一步中编写的查询所有评论数据的接口并将数据返回。\n\n\t设置完成以后，重启应用，试试访问我们新编写的接口是否已经生效了。\n\n\n这一篇主要讲了如何利用Node.js的Express构建评论数据的后端读写接口应用，在Express下编写纯粹的后端HTTP接口还是非常简便的。\n下一篇我再讲一下有了评论接口后，如何在Hexo博客下进行评论部分的前端渲染，可以看一下我现在评论部分的效果，是仿的畅言的样式，并且比畅言更佳的地方是更好的适配了移动端，不会存在畅言那样在移动端屏宽不够的情况下撑开页面的情况。我们下篇博文继续说一下评论系统的前端交互实现。\n","slug":"write-comment2","published":1,"updated":"2018-10-19T18:30:07.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzxz006cfnpvosu6nsc6","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  9/53，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/04/15/write-comment/\">续上篇</a></p>\n<p>上一篇我们主要讲了一下一个评论系统的基本设计思路和数据库的设计，这篇我们主要讲一下如何使用Node.js来构建评论系统所需要的后端服务。</p>\n<h2 id=\"第二部分-搭建后端应用\"><a href=\"#第二部分-搭建后端应用\" class=\"headerlink\" title=\"第二部分 搭建后端应用\"></a>第二部分 搭建后端应用</h2><h4 id=\"Express框架介绍\"><a href=\"#Express框架介绍\" class=\"headerlink\" title=\"Express框架介绍\"></a>Express框架介绍</h4><p>这里我们使用Node.js的Express框架来构建相应的后端应用，相应的准备工作大致包括Node.js环境的安装，npm的安装，MongoDB的安装等，不赘述。</p>\n<p>首先我们需要安装Node下的Express框架：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> express-generator -d -g</span><br></pre></td></tr></table></figure></p>\n<p>上述命令为我们安装了Express框架的生成器，我们只需调用：<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">express comment</span></span><br></pre></td></tr></table></figure></p>\n<p>即可生成一个comment的Express框架工程的目录。<br>然后安装工程依赖：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd <span class=\"keyword\">comment</span></span><br><span class=\"line\">npm <span class=\"keyword\">install</span></span><br></pre></td></tr></table></figure></p>\n<p>依赖安装完成后，该目录即已完成一个Express工程的初始化了，启动后就是一个WEB服务器了。<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> start</span><br></pre></td></tr></table></figure></p>\n<p>该命令在本地的3000端口启动了一个WEB服务器，可以通过访问：<a href=\"http://localhost:3000来测试下是否正常。\" target=\"_blank\" rel=\"noopener\">http://localhost:3000来测试下是否正常。</a></p>\n<p>以上只是一个简单的Node.js下Express框架的介绍，详细可以查看<a href=\"http://expressjs.com/en/starter/generator.html\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>\n<a id=\"more\"></a>\n<h4 id=\"开始编码\"><a href=\"#开始编码\" class=\"headerlink\" title=\"开始编码\"></a>开始编码</h4><p>这里我们假设开发环境已经部署完成，下面开始本篇的正式部分。</p>\n<ol>\n<li><p>数据库配置<br> 按照上篇的分析，我们需要先建立数据库配置，在comment下建立conf目录并创建config文件如下：</p>\n <figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// mongoose config</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mongooseClient = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose-client'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mongooseClientInstance = <span class=\"keyword\">new</span> mongooseClient(&#123;</span><br><span class=\"line\">  DB_IP: <span class=\"string\">'localhost'</span>,</span><br><span class=\"line\">  DB_PORT: <span class=\"string\">'20172'</span>,</span><br><span class=\"line\">  DB_NAME: <span class=\"string\">'comment'</span>,</span><br><span class=\"line\">  schema: &#123;</span><br><span class=\"line\">    infos: &#123;</span><br><span class=\"line\">      name: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       email: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       website: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       content: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       url: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       replyId: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       isDeleted: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Boolean</span>, <span class=\"keyword\">default</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">       gmtCreate: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Date</span>, <span class=\"keyword\">default</span>: <span class=\"built_in\">Date</span>.now&#125;,</span><br><span class=\"line\">       readed: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Boolean</span>, <span class=\"keyword\">default</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = mongooseClientInstance;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数据读写接口<br> 根据上篇的分析，我们需要评论数据的保存、查找、删除、更新等接口。这里以保存和查找接口为例，详细的可以参见<a href=\"https://github.com/zhangjh/comment\" target=\"_blank\" rel=\"noopener\">Git上的项目源码</a>。<br> 我们在项目routes目录下创建comment.js文件，用来编写评论接口，该文件一会儿会作为路由文件供web服务器使用。<br> 保存接口我们使用POST方式来写，因为需要传递的数据还是比较多的。<br> 这个接口我们需要接收前端传递的姓名、邮箱、网站、评论内容、文章的url以及如果是回复的他人的评论还有评论的ID。<br> POST收集参数的方式如下：</p>\n <figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.post('/save',function(req,res)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">name</span> = req.body.name;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">email</span> = req.body.email;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">website</span> = req.body.website;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">cotent</span> = req.body.content;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">url</span> = req.body.url;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">replyId</span> = req.body.replyId;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 保存前需要对数据进行一定的校验，以保证程序的健壮性。并且为了防止恶意提交，需要加上一定的校验机制，如设置连续提交需要间隔十秒以上。</p>\n <figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">if</span>(!name)&#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">res</span><span class=\"selector-class\">.send</span>(&#123;</span><br><span class=\"line\">    <span class=\"attribute\">status</span>: false,</span><br><span class=\"line\">        <span class=\"attribute\">errorMsg</span>: <span class=\"string\">\"大侠请留名\"</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if(!email)&#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">res</span><span class=\"selector-class\">.send</span>(&#123;</span><br><span class=\"line\">        <span class=\"attribute\">status</span>: false,</span><br><span class=\"line\">        <span class=\"attribute\">errorMsg</span>: <span class=\"string\">\"留个邮箱吧，一有回复我就提醒你\"</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if(!content)&#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">res</span><span class=\"selector-class\">.send</span>(&#123;</span><br><span class=\"line\">        <span class=\"attribute\">status</span>: false,</span><br><span class=\"line\">        <span class=\"attribute\">errorMsg</span>: <span class=\"string\">\"大侠，逗我呢？一个字不留咋提交啊\"</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 将数据整合后，利用mongooseClient封装的接口插入数据库中：</p>\n <figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 此处collection为mongodb表名，这里未infos，可回看数据库设置</span><br><span class=\"line\">mongooseClientInstance.find(collection,&#123;<span class=\"keyword\">name</span>: <span class=\"keyword\">name</span>, url: url&#125;,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ret)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ret.<span class=\"keyword\">status</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ret.<span class=\"keyword\">data</span>.length)&#123;</span><br><span class=\"line\">            // 此处为限制评论频率逻辑，同一人同一文章两次评论间隔需大于十秒</span><br><span class=\"line\">            let createTime = ret.<span class=\"keyword\">data</span>[<span class=\"number\">0</span>].gmtCreate;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Math.<span class=\"built_in\">abs</span>(createTime - new Date()) &lt; <span class=\"number\">10000</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> res.send(&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">status</span>: false,</span><br><span class=\"line\">                    errorMsg: <span class=\"string\">\"大侠手速惊人，练过弹指神通？\"</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                 mongooseClientInstance.insert(collection,<span class=\"keyword\">data</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ret)</span></span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res.send(ret);</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            mongooseClientInstance.insert(collection,<span class=\"keyword\">data</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ret)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> res.send(ret);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,&#123;gmtCreate: -<span class=\"number\">1</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p> 同样地，评论数据读取接口要更为简单一些，以查询所有评论数据为例，只需要构造查询条件然后交给封装好的mongooseClient查询，将结果数据返回即可：</p>\n <figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.get(<span class=\"string\">'/queryAll'</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(req, res, next)</span></span>&#123;</span><br><span class=\"line\">  mongooseClientInstance.<span class=\"built_in\">find</span>(collection,&#123;isDeleted: <span class=\"literal\">false</span>&#125;,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ret)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.send(ret);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 完整的接口代码，可以<a href=\"https://github.com/zhangjh/comment/blob/master/routes/comment.js\" target=\"_blank\" rel=\"noopener\">点击查看</a></p>\n</li>\n<li><p>编写HTTP接口<br> 完成上一步之后，数据库的数据读写算是可以了，但如何编写对应的HTTP接口以便可以访问到这些数据库读写接口呢？</p>\n<p> Express下，项目工程目录的app.js定义了各个接口的路由方式。我们只需新增几个我们所需的接口并绑定到相应的路由方法上即可。如新增一个评论数据保存HTTP接口，对应的操作方法为路由文件中刚刚定义的保存接口：</p>\n <figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 首先我们需要在app.js中引入刚刚新建的路由文件</span><br><span class=\"line\">const commentRouter = require('./routes/comment');</span><br><span class=\"line\">// 然后再设置一下接口的跨域访问权限，这里我设置的是所有接口都可以被http://zhangjh.me这个域访问</span><br><span class=\"line\">app.all('*', function(req, res, next) &#123;</span><br><span class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Origin\"</span>, <span class=\"string\">\"http://zhangjh.me\"</span>);</span><br><span class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Headers\"</span>, <span class=\"string\">\"X-Requested-With\"</span>);</span><br><span class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Methods\"</span>,<span class=\"string\">\"<span class=\"keyword\">PUT</span>,<span class=\"keyword\">POST</span>,<span class=\"keyword\">GET</span>,<span class=\"keyword\">DELETE</span>,<span class=\"keyword\">OPTIONS</span>\"</span>);</span><br><span class=\"line\">  res.header(<span class=\"string\">\"X-Powered-By\"</span>,' <span class=\"number\">3</span>.<span class=\"number\">2</span>.<span class=\"number\">1</span>')</span><br><span class=\"line\">  res.header(<span class=\"string\">\"Content-Type\"</span>, <span class=\"string\">\"application/json;charset=utf-8\"</span>);</span><br><span class=\"line\">  next();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 最后我们关联一下接口的路由方式，这句话告诉应用所有请求/comment/*的请求均有commentRouter路由文件来承接</span><br><span class=\"line\">app.use('/comment',commentRouter);</span><br></pre></td></tr></table></figure>\n<p> 上述设置之后，如果我要获取一个GET请求”/comment/queryAll”，服务器将从comment.js中查找是否有定义”/queryAll”的get请求。这里正好访问到我们上一步中编写的查询所有评论数据的接口并将数据返回。</p>\n<p> 设置完成以后，重启应用，试试访问我们新编写的接口是否已经生效了。</p>\n</li>\n</ol>\n<p>这一篇主要讲了如何利用Node.js的Express构建评论数据的后端读写接口应用，在Express下编写纯粹的后端HTTP接口还是非常简便的。<br>下一篇我再讲一下有了评论接口后，如何在Hexo博客下进行评论部分的前端渲染，可以看一下我现在评论部分的效果，是仿的畅言的样式，并且比畅言更佳的地方是更好的适配了移动端，不会存在畅言那样在移动端屏宽不够的情况下撑开页面的情况。我们下篇博文继续说一下评论系统的前端交互实现。</p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  9/53，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/04/15/write-comment/\">续上篇</a></p>\n<p>上一篇我们主要讲了一下一个评论系统的基本设计思路和数据库的设计，这篇我们主要讲一下如何使用Node.js来构建评论系统所需要的后端服务。</p>\n<h2 id=\"第二部分-搭建后端应用\"><a href=\"#第二部分-搭建后端应用\" class=\"headerlink\" title=\"第二部分 搭建后端应用\"></a>第二部分 搭建后端应用</h2><h4 id=\"Express框架介绍\"><a href=\"#Express框架介绍\" class=\"headerlink\" title=\"Express框架介绍\"></a>Express框架介绍</h4><p>这里我们使用Node.js的Express框架来构建相应的后端应用，相应的准备工作大致包括Node.js环境的安装，npm的安装，MongoDB的安装等，不赘述。</p>\n<p>首先我们需要安装Node下的Express框架：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> express-generator -d -g</span><br></pre></td></tr></table></figure></p>\n<p>上述命令为我们安装了Express框架的生成器，我们只需调用：<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">express comment</span></span><br></pre></td></tr></table></figure></p>\n<p>即可生成一个comment的Express框架工程的目录。<br>然后安装工程依赖：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd <span class=\"keyword\">comment</span></span><br><span class=\"line\">npm <span class=\"keyword\">install</span></span><br></pre></td></tr></table></figure></p>\n<p>依赖安装完成后，该目录即已完成一个Express工程的初始化了，启动后就是一个WEB服务器了。<br><figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> start</span><br></pre></td></tr></table></figure></p>\n<p>该命令在本地的3000端口启动了一个WEB服务器，可以通过访问：<a href=\"http://localhost:3000来测试下是否正常。\" target=\"_blank\" rel=\"noopener\">http://localhost:3000来测试下是否正常。</a></p>\n<p>以上只是一个简单的Node.js下Express框架的介绍，详细可以查看<a href=\"http://expressjs.com/en/starter/generator.html\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>","more":"<h4 id=\"开始编码\"><a href=\"#开始编码\" class=\"headerlink\" title=\"开始编码\"></a>开始编码</h4><p>这里我们假设开发环境已经部署完成，下面开始本篇的正式部分。</p>\n<ol>\n<li><p>数据库配置<br> 按照上篇的分析，我们需要先建立数据库配置，在comment下建立conf目录并创建config文件如下：</p>\n <figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// mongoose config</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mongooseClient = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose-client'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mongooseClientInstance = <span class=\"keyword\">new</span> mongooseClient(&#123;</span><br><span class=\"line\">  DB_IP: <span class=\"string\">'localhost'</span>,</span><br><span class=\"line\">  DB_PORT: <span class=\"string\">'20172'</span>,</span><br><span class=\"line\">  DB_NAME: <span class=\"string\">'comment'</span>,</span><br><span class=\"line\">  schema: &#123;</span><br><span class=\"line\">    infos: &#123;</span><br><span class=\"line\">      name: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       email: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       website: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       content: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       url: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       replyId: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">String</span> &#125;,</span><br><span class=\"line\">       isDeleted: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Boolean</span>, <span class=\"keyword\">default</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">       gmtCreate: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Date</span>, <span class=\"keyword\">default</span>: <span class=\"built_in\">Date</span>.now&#125;,</span><br><span class=\"line\">       readed: &#123; <span class=\"keyword\">type</span>: <span class=\"built_in\">Boolean</span>, <span class=\"keyword\">default</span>: <span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = mongooseClientInstance;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>数据读写接口<br> 根据上篇的分析，我们需要评论数据的保存、查找、删除、更新等接口。这里以保存和查找接口为例，详细的可以参见<a href=\"https://github.com/zhangjh/comment\" target=\"_blank\" rel=\"noopener\">Git上的项目源码</a>。<br> 我们在项目routes目录下创建comment.js文件，用来编写评论接口，该文件一会儿会作为路由文件供web服务器使用。<br> 保存接口我们使用POST方式来写，因为需要传递的数据还是比较多的。<br> 这个接口我们需要接收前端传递的姓名、邮箱、网站、评论内容、文章的url以及如果是回复的他人的评论还有评论的ID。<br> POST收集参数的方式如下：</p>\n <figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.post('/save',function(req,res)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">name</span> = req.body.name;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">email</span> = req.body.email;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">website</span> = req.body.website;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">cotent</span> = req.body.content;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">url</span> = req.body.url;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"attr\">replyId</span> = req.body.replyId;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 保存前需要对数据进行一定的校验，以保证程序的健壮性。并且为了防止恶意提交，需要加上一定的校验机制，如设置连续提交需要间隔十秒以上。</p>\n <figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">if</span>(!name)&#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">res</span><span class=\"selector-class\">.send</span>(&#123;</span><br><span class=\"line\">    <span class=\"attribute\">status</span>: false,</span><br><span class=\"line\">        <span class=\"attribute\">errorMsg</span>: <span class=\"string\">\"大侠请留名\"</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if(!email)&#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">res</span><span class=\"selector-class\">.send</span>(&#123;</span><br><span class=\"line\">        <span class=\"attribute\">status</span>: false,</span><br><span class=\"line\">        <span class=\"attribute\">errorMsg</span>: <span class=\"string\">\"留个邮箱吧，一有回复我就提醒你\"</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if(!content)&#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">res</span><span class=\"selector-class\">.send</span>(&#123;</span><br><span class=\"line\">        <span class=\"attribute\">status</span>: false,</span><br><span class=\"line\">        <span class=\"attribute\">errorMsg</span>: <span class=\"string\">\"大侠，逗我呢？一个字不留咋提交啊\"</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 将数据整合后，利用mongooseClient封装的接口插入数据库中：</p>\n <figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 此处collection为mongodb表名，这里未infos，可回看数据库设置</span><br><span class=\"line\">mongooseClientInstance.find(collection,&#123;<span class=\"keyword\">name</span>: <span class=\"keyword\">name</span>, url: url&#125;,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ret)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ret.<span class=\"keyword\">status</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ret.<span class=\"keyword\">data</span>.length)&#123;</span><br><span class=\"line\">            // 此处为限制评论频率逻辑，同一人同一文章两次评论间隔需大于十秒</span><br><span class=\"line\">            let createTime = ret.<span class=\"keyword\">data</span>[<span class=\"number\">0</span>].gmtCreate;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Math.<span class=\"built_in\">abs</span>(createTime - new Date()) &lt; <span class=\"number\">10000</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> res.send(&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">status</span>: false,</span><br><span class=\"line\">                    errorMsg: <span class=\"string\">\"大侠手速惊人，练过弹指神通？\"</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                 mongooseClientInstance.insert(collection,<span class=\"keyword\">data</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ret)</span></span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> res.send(ret);</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            mongooseClientInstance.insert(collection,<span class=\"keyword\">data</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ret)</span></span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> res.send(ret);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,&#123;gmtCreate: -<span class=\"number\">1</span>&#125;);</span><br></pre></td></tr></table></figure>\n<p> 同样地，评论数据读取接口要更为简单一些，以查询所有评论数据为例，只需要构造查询条件然后交给封装好的mongooseClient查询，将结果数据返回即可：</p>\n <figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.get(<span class=\"string\">'/queryAll'</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(req, res, next)</span></span>&#123;</span><br><span class=\"line\">  mongooseClientInstance.<span class=\"built_in\">find</span>(collection,&#123;isDeleted: <span class=\"literal\">false</span>&#125;,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(ret)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res.send(ret);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> 完整的接口代码，可以<a href=\"https://github.com/zhangjh/comment/blob/master/routes/comment.js\" target=\"_blank\" rel=\"noopener\">点击查看</a></p>\n</li>\n<li><p>编写HTTP接口<br> 完成上一步之后，数据库的数据读写算是可以了，但如何编写对应的HTTP接口以便可以访问到这些数据库读写接口呢？</p>\n<p> Express下，项目工程目录的app.js定义了各个接口的路由方式。我们只需新增几个我们所需的接口并绑定到相应的路由方法上即可。如新增一个评论数据保存HTTP接口，对应的操作方法为路由文件中刚刚定义的保存接口：</p>\n <figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 首先我们需要在app.js中引入刚刚新建的路由文件</span><br><span class=\"line\">const commentRouter = require('./routes/comment');</span><br><span class=\"line\">// 然后再设置一下接口的跨域访问权限，这里我设置的是所有接口都可以被http://zhangjh.me这个域访问</span><br><span class=\"line\">app.all('*', function(req, res, next) &#123;</span><br><span class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Origin\"</span>, <span class=\"string\">\"http://zhangjh.me\"</span>);</span><br><span class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Headers\"</span>, <span class=\"string\">\"X-Requested-With\"</span>);</span><br><span class=\"line\">  res.header(<span class=\"string\">\"Access-Control-Allow-Methods\"</span>,<span class=\"string\">\"<span class=\"keyword\">PUT</span>,<span class=\"keyword\">POST</span>,<span class=\"keyword\">GET</span>,<span class=\"keyword\">DELETE</span>,<span class=\"keyword\">OPTIONS</span>\"</span>);</span><br><span class=\"line\">  res.header(<span class=\"string\">\"X-Powered-By\"</span>,' <span class=\"number\">3</span>.<span class=\"number\">2</span>.<span class=\"number\">1</span>')</span><br><span class=\"line\">  res.header(<span class=\"string\">\"Content-Type\"</span>, <span class=\"string\">\"application/json;charset=utf-8\"</span>);</span><br><span class=\"line\">  next();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// 最后我们关联一下接口的路由方式，这句话告诉应用所有请求/comment/*的请求均有commentRouter路由文件来承接</span><br><span class=\"line\">app.use('/comment',commentRouter);</span><br></pre></td></tr></table></figure>\n<p> 上述设置之后，如果我要获取一个GET请求”/comment/queryAll”，服务器将从comment.js中查找是否有定义”/queryAll”的get请求。这里正好访问到我们上一步中编写的查询所有评论数据的接口并将数据返回。</p>\n<p> 设置完成以后，重启应用，试试访问我们新编写的接口是否已经生效了。</p>\n</li>\n</ol>\n<p>这一篇主要讲了如何利用Node.js的Express构建评论数据的后端读写接口应用，在Express下编写纯粹的后端HTTP接口还是非常简便的。<br>下一篇我再讲一下有了评论接口后，如何在Hexo博客下进行评论部分的前端渲染，可以看一下我现在评论部分的效果，是仿的畅言的样式，并且比畅言更佳的地方是更好的适配了移动端，不会存在畅言那样在移动端屏宽不够的情况下撑开页面的情况。我们下篇博文继续说一下评论系统的前端交互实现。</p>","sticky":0},{"title":"从零开始，教你写留言板（三）","show":true,"date":"2018-04-30T15:54:46.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  10/52，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/04/22/write-comment2/)\n\n上一篇里我们主要讲了评论系统的后端应用搭建及主要评论接口的实现，这篇里继续讲一下后端应用里其他一些逻辑的实现，如评论提醒功能。\n前端的交互逻辑和渲染放到下一篇里进行。\n\n## 第三部分 后端应用的其他功能逻辑实现\n\n为了给评论系统提供更好的体验，我们有必要给评论系统添加上消息提醒，这里存在两种场景：\n一个是当有评论被回复时，评论者应该收到提醒消息，\n二是若评论时选择了记住个人信息，那么在同一个人再次访问时如果有未读的评论消息应该在页面上显示出提醒框。\n\n<!--more-->\n\n我们先来看第一个功能：\n\n#### 评论回复提醒\n当用户发表评论时，收集的信息里包括了邮箱，这里邮箱就是用来接收评论回复的提醒，将被评论的文章url放在消息里发给被评论者，方便后续查看交互。\n这里主要的功能就是发送邮件，在Node生态下已经有完善的工具支持，这里我们使用[nodemailer](https://nodemailer.com/about/)。\n\n1. 安装\n```\nnpm i nodemailer --save\n```\n\n2. 配置\n使用nodemailer发送邮件之前，我们需要做下简单配置，我们将配置封装成函数如下：\n```\nconst nodemailer = require('nodemailer');\n\nconst sendMail = function(to,subject,text,html,cb){\n\tnodemailer.createTestAccount((err, account) => {\n\t\tlet transporter = nodemailer.createTransport({\n\t\t\t// 这里以我的smtp 126服务为例\n\t\t\thost: 'smtp.126.com',\n\t\t\tport: 465,\n\t\t\tsecure: true, // true for 465, false for other ports\n\t\t\tauth: {\n\t\t\t\tuser: \"填写邮箱\",\n\t\t\t\tpass: \"填写密码\"\n\t\t\t}\n\t\t});\n\n\t\t// setup email data with unicode symbols\n\t\tlet mailOptions = {\n\t\t\tfrom: '需要跟上面的邮箱一致',\n\t\t\tto: to, // 支持多个，逗号分隔\n\t\t\tsubject: subject, // 主题\n\t\t\ttext: text || \"\", // 文本内容\n\t\t\thtml: html || \"\" // html 内容\n\t\t};\n\n\t\t// send mail with defined transport object\n\t\ttransporter.sendMail(mailOptions, (error, info) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t\t// 将错误信息传递给回调函数\n\t\t\tif(cb)cb(error,info);\n\t\t});\n\t});\n};\nmodule.exports = sendMail;\n```\n\n3. 使用封装的函数发送提醒邮件\n我们先自行封装一个用来发送邮件的HTTP接口，方便使用：\n```\n// 将此内容放置在前文的router.js路由文件中\n// 封装的sendmail函数放置在../conf/sendmail.js中\nconst sendmail = require('../conf/sendmail');\n\nrouter.post('/sendMail',function (req, res, next) {\n\tlet mail = req.body.email;\n\tlet url = req.body.url;\n\tlet subject = req.body.subject;\n\tlet isReply = req.body.replyId;\n\t// 发送全局提醒给我自己\n\tlet html = \"收到评论：<a href='\" + url + \"'>点击查看</a>\";\n\tif(isReply){\n\t\thtml = \"你的评论收到了回复，<a href='\" + url + \"'>点击查看</a>\";\n\t}\n\n\tsendmail({\n\t\tfrom: \"xxxx@zhangjh.me\",\n\t\tto: mail,\n\t\tsubject: subject,\n\t\thtml: html\n\t},function (err, reply) {\n\t\tconsole.log(err && err.stack);\n\t\tconsole.dir(reply);\n    });\n});\n```\n非常简单的post HTTP接口，接收收件人，文章链接，邮件主题等信息，然后调用刚刚封装的sendmail函数将邮件发送出去。\n\n这样在前台的文件中在用户点击了回复评论按钮时，获取被回复评论的作者的邮箱信息组装后调用sendMail接口发送提醒邮件给被回复者。\n\n#### 页面消息提醒框\n接下来我们再看下页面上显示评论消息的提醒框功能如何实现？\n这里先不讨论前端的内容，只讨论下如果要支持前端显示这个功能，后端应该要做哪些事？\n其实非常简单，只需要去数据库里查找出当前用户被回复并且未读过的评论信息即可。\n根据上面的分析，可以看出其实后端只需给数据库里评论数据增加一个readed字段代表是否已经读过即可，查找评论的接口已经封装实现过了，只需客户端调用即可：\n```\n/** 首先在访问网站时，请求该用户评论过的数据\n\t然后将这些评论id作为被评论id查询是否有被回复且未读的数据\n*/\nlet replyComments = [];\n$.ajax({\n\turl: \"/comment/find\",\n\tdata: {\n\t\tname: name,\n\t\turl: url\n\t}\n}).done(ret => {\n\tif(ret.status){\n\t\tfor(let item of ret.data){\n\t\t\t$.ajax({\n\t\t\t\turl: \"/comment/find\",\n\t\t\t\tdata: {\n\t\t\t\t\treplyId: item.id,\n\t\t\t\t\treaded: false\n\t\t\t\t},\n\t\t\t\tasync: false\n\t\t\t}).done(result => {\n\t\t\t\tif(result.status){\n\t\t\t\t\t// 拼接结果到评论数组里\n\t\t\t\t\treplyComments.concat(result.data);\n\t\t\t\t\t// replyComments供前端渲染提醒框，这节暂且不表\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n```\n\n至此，一个功能完善的评论系统的后端就已经完全搭建完毕。下节我们最后讲讲如何利用这些接口方法实现前台应用的渲染，模仿一个畅言风格的前端评论系统。\n","source":"_posts/write-comment3.md","raw":"title: 从零开始，教你写留言板（三）\nshow: true\ndate: 2018-04-30 23:54:46\ntags: [留言板,评论]\ncategories: 技术人生\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  10/52，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/04/22/write-comment2/)\n\n上一篇里我们主要讲了评论系统的后端应用搭建及主要评论接口的实现，这篇里继续讲一下后端应用里其他一些逻辑的实现，如评论提醒功能。\n前端的交互逻辑和渲染放到下一篇里进行。\n\n## 第三部分 后端应用的其他功能逻辑实现\n\n为了给评论系统提供更好的体验，我们有必要给评论系统添加上消息提醒，这里存在两种场景：\n一个是当有评论被回复时，评论者应该收到提醒消息，\n二是若评论时选择了记住个人信息，那么在同一个人再次访问时如果有未读的评论消息应该在页面上显示出提醒框。\n\n<!--more-->\n\n我们先来看第一个功能：\n\n#### 评论回复提醒\n当用户发表评论时，收集的信息里包括了邮箱，这里邮箱就是用来接收评论回复的提醒，将被评论的文章url放在消息里发给被评论者，方便后续查看交互。\n这里主要的功能就是发送邮件，在Node生态下已经有完善的工具支持，这里我们使用[nodemailer](https://nodemailer.com/about/)。\n\n1. 安装\n```\nnpm i nodemailer --save\n```\n\n2. 配置\n使用nodemailer发送邮件之前，我们需要做下简单配置，我们将配置封装成函数如下：\n```\nconst nodemailer = require('nodemailer');\n\nconst sendMail = function(to,subject,text,html,cb){\n\tnodemailer.createTestAccount((err, account) => {\n\t\tlet transporter = nodemailer.createTransport({\n\t\t\t// 这里以我的smtp 126服务为例\n\t\t\thost: 'smtp.126.com',\n\t\t\tport: 465,\n\t\t\tsecure: true, // true for 465, false for other ports\n\t\t\tauth: {\n\t\t\t\tuser: \"填写邮箱\",\n\t\t\t\tpass: \"填写密码\"\n\t\t\t}\n\t\t});\n\n\t\t// setup email data with unicode symbols\n\t\tlet mailOptions = {\n\t\t\tfrom: '需要跟上面的邮箱一致',\n\t\t\tto: to, // 支持多个，逗号分隔\n\t\t\tsubject: subject, // 主题\n\t\t\ttext: text || \"\", // 文本内容\n\t\t\thtml: html || \"\" // html 内容\n\t\t};\n\n\t\t// send mail with defined transport object\n\t\ttransporter.sendMail(mailOptions, (error, info) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t\t// 将错误信息传递给回调函数\n\t\t\tif(cb)cb(error,info);\n\t\t});\n\t});\n};\nmodule.exports = sendMail;\n```\n\n3. 使用封装的函数发送提醒邮件\n我们先自行封装一个用来发送邮件的HTTP接口，方便使用：\n```\n// 将此内容放置在前文的router.js路由文件中\n// 封装的sendmail函数放置在../conf/sendmail.js中\nconst sendmail = require('../conf/sendmail');\n\nrouter.post('/sendMail',function (req, res, next) {\n\tlet mail = req.body.email;\n\tlet url = req.body.url;\n\tlet subject = req.body.subject;\n\tlet isReply = req.body.replyId;\n\t// 发送全局提醒给我自己\n\tlet html = \"收到评论：<a href='\" + url + \"'>点击查看</a>\";\n\tif(isReply){\n\t\thtml = \"你的评论收到了回复，<a href='\" + url + \"'>点击查看</a>\";\n\t}\n\n\tsendmail({\n\t\tfrom: \"xxxx@zhangjh.me\",\n\t\tto: mail,\n\t\tsubject: subject,\n\t\thtml: html\n\t},function (err, reply) {\n\t\tconsole.log(err && err.stack);\n\t\tconsole.dir(reply);\n    });\n});\n```\n非常简单的post HTTP接口，接收收件人，文章链接，邮件主题等信息，然后调用刚刚封装的sendmail函数将邮件发送出去。\n\n这样在前台的文件中在用户点击了回复评论按钮时，获取被回复评论的作者的邮箱信息组装后调用sendMail接口发送提醒邮件给被回复者。\n\n#### 页面消息提醒框\n接下来我们再看下页面上显示评论消息的提醒框功能如何实现？\n这里先不讨论前端的内容，只讨论下如果要支持前端显示这个功能，后端应该要做哪些事？\n其实非常简单，只需要去数据库里查找出当前用户被回复并且未读过的评论信息即可。\n根据上面的分析，可以看出其实后端只需给数据库里评论数据增加一个readed字段代表是否已经读过即可，查找评论的接口已经封装实现过了，只需客户端调用即可：\n```\n/** 首先在访问网站时，请求该用户评论过的数据\n\t然后将这些评论id作为被评论id查询是否有被回复且未读的数据\n*/\nlet replyComments = [];\n$.ajax({\n\turl: \"/comment/find\",\n\tdata: {\n\t\tname: name,\n\t\turl: url\n\t}\n}).done(ret => {\n\tif(ret.status){\n\t\tfor(let item of ret.data){\n\t\t\t$.ajax({\n\t\t\t\turl: \"/comment/find\",\n\t\t\t\tdata: {\n\t\t\t\t\treplyId: item.id,\n\t\t\t\t\treaded: false\n\t\t\t\t},\n\t\t\t\tasync: false\n\t\t\t}).done(result => {\n\t\t\t\tif(result.status){\n\t\t\t\t\t// 拼接结果到评论数组里\n\t\t\t\t\treplyComments.concat(result.data);\n\t\t\t\t\t// replyComments供前端渲染提醒框，这节暂且不表\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n```\n\n至此，一个功能完善的评论系统的后端就已经完全搭建完毕。下节我们最后讲讲如何利用这些接口方法实现前台应用的渲染，模仿一个畅言风格的前端评论系统。\n","slug":"write-comment3","published":1,"updated":"2018-10-19T18:30:07.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzy1006gfnpv1f7lt6df","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  10/52，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/04/22/write-comment2/\">续上篇</a></p>\n<p>上一篇里我们主要讲了评论系统的后端应用搭建及主要评论接口的实现，这篇里继续讲一下后端应用里其他一些逻辑的实现，如评论提醒功能。<br>前端的交互逻辑和渲染放到下一篇里进行。</p>\n<h2 id=\"第三部分-后端应用的其他功能逻辑实现\"><a href=\"#第三部分-后端应用的其他功能逻辑实现\" class=\"headerlink\" title=\"第三部分 后端应用的其他功能逻辑实现\"></a>第三部分 后端应用的其他功能逻辑实现</h2><p>为了给评论系统提供更好的体验，我们有必要给评论系统添加上消息提醒，这里存在两种场景：<br>一个是当有评论被回复时，评论者应该收到提醒消息，<br>二是若评论时选择了记住个人信息，那么在同一个人再次访问时如果有未读的评论消息应该在页面上显示出提醒框。</p>\n<a id=\"more\"></a>\n<p>我们先来看第一个功能：</p>\n<h4 id=\"评论回复提醒\"><a href=\"#评论回复提醒\" class=\"headerlink\" title=\"评论回复提醒\"></a>评论回复提醒</h4><p>当用户发表评论时，收集的信息里包括了邮箱，这里邮箱就是用来接收评论回复的提醒，将被评论的文章url放在消息里发给被评论者，方便后续查看交互。<br>这里主要的功能就是发送邮件，在Node生态下已经有完善的工具支持，这里我们使用<a href=\"https://nodemailer.com/about/\" target=\"_blank\" rel=\"noopener\">nodemailer</a>。</p>\n<ol>\n<li><p>安装</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> nodemailer --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>使用nodemailer发送邮件之前，我们需要做下简单配置，我们将配置封装成函数如下：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> nodemailer = <span class=\"built_in\">require</span>(<span class=\"string\">'nodemailer'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> sendMail = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">to,subject,text,html,cb</span>)</span>&#123;</span><br><span class=\"line\">\tnodemailer.createTestAccount(<span class=\"function\">(<span class=\"params\">err, account</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> transporter = nodemailer.createTransport(&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 这里以我的smtp 126服务为例</span></span><br><span class=\"line\">\t\t\thost: <span class=\"string\">'smtp.126.com'</span>,</span><br><span class=\"line\">\t\t\tport: <span class=\"number\">465</span>,</span><br><span class=\"line\">\t\t\tsecure: <span class=\"literal\">true</span>, <span class=\"comment\">// true for 465, false for other ports</span></span><br><span class=\"line\">\t\t\tauth: &#123;</span><br><span class=\"line\">\t\t\t\tuser: <span class=\"string\">\"填写邮箱\"</span>,</span><br><span class=\"line\">\t\t\t\tpass: <span class=\"string\">\"填写密码\"</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// setup email data with unicode symbols</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> mailOptions = &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">from</span>: <span class=\"string\">'需要跟上面的邮箱一致'</span>,</span><br><span class=\"line\">\t\t\tto: to, <span class=\"comment\">// 支持多个，逗号分隔</span></span><br><span class=\"line\">\t\t\tsubject: subject, <span class=\"comment\">// 主题</span></span><br><span class=\"line\">\t\t\ttext: text || <span class=\"string\">\"\"</span>, <span class=\"comment\">// 文本内容</span></span><br><span class=\"line\">\t\t\thtml: html || <span class=\"string\">\"\"</span> <span class=\"comment\">// html 内容</span></span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// send mail with defined transport object</span></span><br><span class=\"line\">\t\ttransporter.sendMail(mailOptions, <span class=\"function\">(<span class=\"params\">error, info</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">console</span>.log(error);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 将错误信息传递给回调函数</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(cb)cb(error,info);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = sendMail;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用封装的函数发送提醒邮件<br>我们先自行封装一个用来发送邮件的HTTP接口，方便使用：</p>\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将此内容放置在前文的router.js路由文件中</span></span><br><span class=\"line\"><span class=\"comment\">// 封装的sendmail函数放置在../conf/sendmail.js中</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> sendmail = <span class=\"built_in\">require</span>(<span class=\"string\">'../conf/sendmail'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(<span class=\"string\">'/sendMail'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> mail = req.body.email;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"built_in\">url</span> = req.body.url;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> subject = req.body.subject;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> isReply = req.body.replyId;</span><br><span class=\"line\">\t<span class=\"comment\">// 发送全局提醒给我自己</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> html = <span class=\"string\">\"收到评论：&lt;a href='\"</span> + <span class=\"built_in\">url</span> + <span class=\"string\">\"'&gt;点击查看&lt;/a&gt;\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(isReply)&#123;</span><br><span class=\"line\">\t\thtml = <span class=\"string\">\"你的评论收到了回复，&lt;a href='\"</span> + <span class=\"built_in\">url</span> + <span class=\"string\">\"'&gt;点击查看&lt;/a&gt;\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsendmail(&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">from</span>: <span class=\"string\">\"xxxx@zhangjh.me\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attribute\">to</span>: mail,</span><br><span class=\"line\">\t\t<span class=\"attribute\">subject</span>: subject,</span><br><span class=\"line\">\t\t<span class=\"attribute\">html</span>: html</span><br><span class=\"line\">\t&#125;,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, reply</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(err &amp;&amp; err.stack);</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.dir(reply);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>非常简单的post HTTP接口，接收收件人，文章链接，邮件主题等信息，然后调用刚刚封装的sendmail函数将邮件发送出去。</p>\n<p>这样在前台的文件中在用户点击了回复评论按钮时，获取被回复评论的作者的邮箱信息组装后调用sendMail接口发送提醒邮件给被回复者。</p>\n<h4 id=\"页面消息提醒框\"><a href=\"#页面消息提醒框\" class=\"headerlink\" title=\"页面消息提醒框\"></a>页面消息提醒框</h4><p>接下来我们再看下页面上显示评论消息的提醒框功能如何实现？<br>这里先不讨论前端的内容，只讨论下如果要支持前端显示这个功能，后端应该要做哪些事？<br>其实非常简单，只需要去数据库里查找出当前用户被回复并且未读过的评论信息即可。<br>根据上面的分析，可以看出其实后端只需给数据库里评论数据增加一个readed字段代表是否已经读过即可，查找评论的接口已经封装实现过了，只需客户端调用即可：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 首先在访问网站时，请求该用户评论过的数据</span></span><br><span class=\"line\"><span class=\"comment\">\t然后将这些评论id作为被评论id查询是否有被回复且未读的数据</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> replyComments = [];</span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">\turl: <span class=\"string\">\"/comment/find\"</span>,</span><br><span class=\"line\">\tdata: &#123;</span><br><span class=\"line\">\t\tname: name,</span><br><span class=\"line\">\t\turl: url</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;).done(<span class=\"function\"><span class=\"params\">ret</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ret.status)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> ret.data)&#123;</span><br><span class=\"line\">\t\t\t$.ajax(&#123;</span><br><span class=\"line\">\t\t\t\turl: <span class=\"string\">\"/comment/find\"</span>,</span><br><span class=\"line\">\t\t\t\tdata: &#123;</span><br><span class=\"line\">\t\t\t\t\treplyId: item.id,</span><br><span class=\"line\">\t\t\t\t\treaded: <span class=\"literal\">false</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">async</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">\t\t\t&#125;).done(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(result.status)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 拼接结果到评论数组里</span></span><br><span class=\"line\">\t\t\t\t\treplyComments.concat(result.data);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// replyComments供前端渲染提醒框，这节暂且不表</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>至此，一个功能完善的评论系统的后端就已经完全搭建完毕。下节我们最后讲讲如何利用这些接口方法实现前台应用的渲染，模仿一个畅言风格的前端评论系统。</p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  10/52，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/04/22/write-comment2/\">续上篇</a></p>\n<p>上一篇里我们主要讲了评论系统的后端应用搭建及主要评论接口的实现，这篇里继续讲一下后端应用里其他一些逻辑的实现，如评论提醒功能。<br>前端的交互逻辑和渲染放到下一篇里进行。</p>\n<h2 id=\"第三部分-后端应用的其他功能逻辑实现\"><a href=\"#第三部分-后端应用的其他功能逻辑实现\" class=\"headerlink\" title=\"第三部分 后端应用的其他功能逻辑实现\"></a>第三部分 后端应用的其他功能逻辑实现</h2><p>为了给评论系统提供更好的体验，我们有必要给评论系统添加上消息提醒，这里存在两种场景：<br>一个是当有评论被回复时，评论者应该收到提醒消息，<br>二是若评论时选择了记住个人信息，那么在同一个人再次访问时如果有未读的评论消息应该在页面上显示出提醒框。</p>","more":"<p>我们先来看第一个功能：</p>\n<h4 id=\"评论回复提醒\"><a href=\"#评论回复提醒\" class=\"headerlink\" title=\"评论回复提醒\"></a>评论回复提醒</h4><p>当用户发表评论时，收集的信息里包括了邮箱，这里邮箱就是用来接收评论回复的提醒，将被评论的文章url放在消息里发给被评论者，方便后续查看交互。<br>这里主要的功能就是发送邮件，在Node生态下已经有完善的工具支持，这里我们使用<a href=\"https://nodemailer.com/about/\" target=\"_blank\" rel=\"noopener\">nodemailer</a>。</p>\n<ol>\n<li><p>安装</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"selector-tag\">i</span> nodemailer --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置<br>使用nodemailer发送邮件之前，我们需要做下简单配置，我们将配置封装成函数如下：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> nodemailer = <span class=\"built_in\">require</span>(<span class=\"string\">'nodemailer'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> sendMail = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">to,subject,text,html,cb</span>)</span>&#123;</span><br><span class=\"line\">\tnodemailer.createTestAccount(<span class=\"function\">(<span class=\"params\">err, account</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> transporter = nodemailer.createTransport(&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 这里以我的smtp 126服务为例</span></span><br><span class=\"line\">\t\t\thost: <span class=\"string\">'smtp.126.com'</span>,</span><br><span class=\"line\">\t\t\tport: <span class=\"number\">465</span>,</span><br><span class=\"line\">\t\t\tsecure: <span class=\"literal\">true</span>, <span class=\"comment\">// true for 465, false for other ports</span></span><br><span class=\"line\">\t\t\tauth: &#123;</span><br><span class=\"line\">\t\t\t\tuser: <span class=\"string\">\"填写邮箱\"</span>,</span><br><span class=\"line\">\t\t\t\tpass: <span class=\"string\">\"填写密码\"</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// setup email data with unicode symbols</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">let</span> mailOptions = &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">from</span>: <span class=\"string\">'需要跟上面的邮箱一致'</span>,</span><br><span class=\"line\">\t\t\tto: to, <span class=\"comment\">// 支持多个，逗号分隔</span></span><br><span class=\"line\">\t\t\tsubject: subject, <span class=\"comment\">// 主题</span></span><br><span class=\"line\">\t\t\ttext: text || <span class=\"string\">\"\"</span>, <span class=\"comment\">// 文本内容</span></span><br><span class=\"line\">\t\t\thtml: html || <span class=\"string\">\"\"</span> <span class=\"comment\">// html 内容</span></span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">// send mail with defined transport object</span></span><br><span class=\"line\">\t\ttransporter.sendMail(mailOptions, <span class=\"function\">(<span class=\"params\">error, info</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (error) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">console</span>.log(error);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 将错误信息传递给回调函数</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(cb)cb(error,info);</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = sendMail;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用封装的函数发送提醒邮件<br>我们先自行封装一个用来发送邮件的HTTP接口，方便使用：</p>\n<figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 将此内容放置在前文的router.js路由文件中</span></span><br><span class=\"line\"><span class=\"comment\">// 封装的sendmail函数放置在../conf/sendmail.js中</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> sendmail = <span class=\"built_in\">require</span>(<span class=\"string\">'../conf/sendmail'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">router.post(<span class=\"string\">'/sendMail'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">req, res, next</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> mail = req.body.email;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> <span class=\"built_in\">url</span> = req.body.url;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> subject = req.body.subject;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> isReply = req.body.replyId;</span><br><span class=\"line\">\t<span class=\"comment\">// 发送全局提醒给我自己</span></span><br><span class=\"line\">\t<span class=\"keyword\">let</span> html = <span class=\"string\">\"收到评论：&lt;a href='\"</span> + <span class=\"built_in\">url</span> + <span class=\"string\">\"'&gt;点击查看&lt;/a&gt;\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(isReply)&#123;</span><br><span class=\"line\">\t\thtml = <span class=\"string\">\"你的评论收到了回复，&lt;a href='\"</span> + <span class=\"built_in\">url</span> + <span class=\"string\">\"'&gt;点击查看&lt;/a&gt;\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsendmail(&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">from</span>: <span class=\"string\">\"xxxx@zhangjh.me\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attribute\">to</span>: mail,</span><br><span class=\"line\">\t\t<span class=\"attribute\">subject</span>: subject,</span><br><span class=\"line\">\t\t<span class=\"attribute\">html</span>: html</span><br><span class=\"line\">\t&#125;,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err, reply</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(err &amp;&amp; err.stack);</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.dir(reply);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>非常简单的post HTTP接口，接收收件人，文章链接，邮件主题等信息，然后调用刚刚封装的sendmail函数将邮件发送出去。</p>\n<p>这样在前台的文件中在用户点击了回复评论按钮时，获取被回复评论的作者的邮箱信息组装后调用sendMail接口发送提醒邮件给被回复者。</p>\n<h4 id=\"页面消息提醒框\"><a href=\"#页面消息提醒框\" class=\"headerlink\" title=\"页面消息提醒框\"></a>页面消息提醒框</h4><p>接下来我们再看下页面上显示评论消息的提醒框功能如何实现？<br>这里先不讨论前端的内容，只讨论下如果要支持前端显示这个功能，后端应该要做哪些事？<br>其实非常简单，只需要去数据库里查找出当前用户被回复并且未读过的评论信息即可。<br>根据上面的分析，可以看出其实后端只需给数据库里评论数据增加一个readed字段代表是否已经读过即可，查找评论的接口已经封装实现过了，只需客户端调用即可：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 首先在访问网站时，请求该用户评论过的数据</span></span><br><span class=\"line\"><span class=\"comment\">\t然后将这些评论id作为被评论id查询是否有被回复且未读的数据</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> replyComments = [];</span><br><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">\turl: <span class=\"string\">\"/comment/find\"</span>,</span><br><span class=\"line\">\tdata: &#123;</span><br><span class=\"line\">\t\tname: name,</span><br><span class=\"line\">\t\turl: url</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;).done(<span class=\"function\"><span class=\"params\">ret</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ret.status)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> ret.data)&#123;</span><br><span class=\"line\">\t\t\t$.ajax(&#123;</span><br><span class=\"line\">\t\t\t\turl: <span class=\"string\">\"/comment/find\"</span>,</span><br><span class=\"line\">\t\t\t\tdata: &#123;</span><br><span class=\"line\">\t\t\t\t\treplyId: item.id,</span><br><span class=\"line\">\t\t\t\t\treaded: <span class=\"literal\">false</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">async</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">\t\t\t&#125;).done(<span class=\"function\"><span class=\"params\">result</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(result.status)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// 拼接结果到评论数组里</span></span><br><span class=\"line\">\t\t\t\t\treplyComments.concat(result.data);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// replyComments供前端渲染提醒框，这节暂且不表</span></span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>至此，一个功能完善的评论系统的后端就已经完全搭建完毕。下节我们最后讲讲如何利用这些接口方法实现前台应用的渲染，模仿一个畅言风格的前端评论系统。</p>","sticky":0},{"title":"从零开始，教你写留言板（四）","show":true,"date":"2018-05-06T15:04:46.000Z","_content":"\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  11/52，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/04/30/write-comment3/)\n\n前面几篇把如何搭建一个评论系统的后端描述了一下，这篇就主要讲一下如何把评论系统的前台搭起来。\n\n## 第四部分 前端交互及页面UI的实现\n\n前端不涉及应用，主要就是HTML、CSS、JS。\n评论系统的前端部分主要包括：\n1. 评论框主体\n2. 用户登录\n3. 评论提交动作\n4. 消息提醒\n5. 评论信息的渲染\n6. 事件注册响应\n\n主要是以上几个部分，还有一些细节部分。前端部分主要是仿造原来畅言的风格，具体的渲染方式，如HTML容器怎么放置，CSS样式怎么编写等细节，本篇就不再赘述，前端的实现“一千个人眼中有一千个哈姆雷特”，同样的效果可以有完全不同的实现方式。\n<!--more-->\n\n#### 评论框主体\n评论框主体主要用来收集用户提交的评论信息，这其中需要注意的是，如果用户是回复的某条评论，则原评论的内容需要以引文的方式放置在评论内容之前，因此我们的评论框也要支持HTML格式的文本。\n\n评论框主体为一个textarea，当用户回复某个评论时，先获取评论内容，将内容放置在`<blockquote><pre>`标签中，以形成引文效果。\n当然，因为支持html语法了，后面在获取内容插入数据库时注意要防止xss注入安全问题。\n\n#### 用户登录\n用户提交评论前判断用户是否登录，如果还未登录则弹出登录框收集用户信息。与畅言等第三方登录系统相比，这里只收集必要的用户信息。\n为了提供更好的体验，还可以提供记住用户信息功能，将用户信息以json格式存储在本地localStorage中。\n\n由于只是作为评论信息的用户标识，其实不算一个严格意义上的登录系统，不需要进行用户信息校验。一个人可以以多个用户名来给网站评论。\n\n一旦用户登录，则将登录框按钮替换成用户名称，并将用户信息写入localStorage供以后读取。\n```js\n// 以json格式存储在本地浏览器存储中的用户信息\nemail:\"njhxzhangjihong@126.com\"\nname:\"但丁\"\nurl:\"_2018_04_30_write-comment3_\"\nwebsite:\"//zhangjh.me\"\n```\n后续该用户再次登录，将按照存储的用户信息去读取是否有评论被回复并显示提醒框。\n\n从localStorage中解析用户信息：\n```\n// 解析用户信息\n      const userInfoJson = JSON.parse(userInfo);\n      comment.name = userInfoJson.name;\n      comment.email = userInfoJson.email;\n      comment.website = userInfoJson.website;\n      //$(\".modal-body input[name='name']\").val(userInfoJson.name);\n      //$(\".modal-body input[name='email']\").val(userInfoJson.email);\n      //$(\".modal-body input[name='website']\").val(userInfoJson.website);\n      $(\".header-user\").text(comment.name);\n```\n\n#### 评论提交\n评论提交主要要注意的是一些合法性的校验，如不能提交空内容，不登录不能提交，非法注入字符内容不能提交等。\n这里前端的提示消息的弹出我使用了一个第三方库叫[notie](https://github.com/jaredreich/notie).\n效果非常优雅，比自带的alert不知道高到哪里去了。\n![Alt text](https://raw.githubusercontent.com/jaredreich/notie/master/demo.gif?raw=true \"Demo\")\n\n#### 评论信息的渲染\n获取到评论信息后首先拿到总的条数，然后再循环每条消息渲染成评论列表。\n这其中，每条评论信息还要处理评论者用户名的渲染，如果评论者提供了自己的网址，在渲染时用户名将带上该网址的超链。\n并且，每条评论信息也要增加回复按钮。代码段如下：\n```js\n    const commentList = ret.data;\n    let html = \"\";\n    for(const item of commentList){\n    let contentItem = \"<div class='content-item'>\";\n    contentItem += \"<div class='user-info'><span class='user' data-website='\" + item.website + \"'>\" + item.name + \"</span>\"\n                + \"<span class='time'>\" + parseTime(item.gmtCreate) + \"</span></div>\";\n    contentItem += \"<div class='content'>\" + item.content + \"</div>\";\n    contentItem += \"<div class='operate' data-id='\" + item[\"_id\"] + \"' data-content='\" + item.content + \"' data-name='\" + item.name + \"'>回复</div></div>\";\n    html += contentItem;\n  }\n  $(\".comment-content\").html(html);\n  // 注册用户名点击事件\n  $(\".content-item .user\").click(function(){\n    const website = $(this).attr(\"data-website\");\n    if(website != \"undefined\"){\n      window.open(website);\n    }\n  });\n  // 注册回复点击事件\n  $(\".content-item .operate\").click(function(){\n    const replyId = $(this).attr(\"data-id\");\n    const content = $(this).attr(\"data-content\");\n    const name = $(this).attr(\"data-name\");\n    comment.replyId = replyId;\n    $(\".comment-body textarea\").val(\"<blockquote><pre>引用\" + name + \"的发言:</pre>\" + content + \"</blockquote>\");\n    window.location.href = \"#comment-text\";\n  });\n```\n\n#### 消息提醒\n消息提醒功能是指前端页面上显示当前访问用户是否有未读的评论回复消息，并且点击可以跳转到对应的文章，相应的未读提示减少。\n该消息提示框将绝对定在在页面的右上角。\n实现起来也很简单，首先是要绝对定位放置一个HTML容器在页面的右上角，如：\n```html\n<style>\n    #msg-tip {\n      background-color: orangered;\n      color: white;\n      position: fixed;\n      top: 50px;\n      right: 10px;\n      z-index: 2;\n      display: none;\n      cursor: pointer;\n    }\n    #msg-modal {\n      position: fixed;\n      top: 20%;\n      left: 50%;\n      width: 400px;\n      margin-left: -200px;\n      z-index: 2;\n      -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, .5);\n      -moz-box-shadow: 0 5px 15px rgba(0, 0, 0, .5);\n      box-shadow: 0 5px 15px rgba(0, 0, 0, .5);\n      padding: 5px 20px;\n      background: white;\n      display: none;\n    }\n    #msg-modal h5 {\n      float: left;\n    }\n    #msg-modal .close {\n      float: right;\n    }\n    #modal-body {\n      clear: both;\n    }\n    #modal-body .item a {\n      color: #219bde;\n    }\n  </style>\n<div id=\"msg-tip\">\n    ❗️你有<span>0</span>条未读消息\n  </div>\n\n  <div id=\"msg-modal\">\n    <div id=\"modal-header\">\n      <h5>消息列表</h5>\n      <span class=\"close\">X</span>\n    </div>\n    <div id=\"modal-body\">\n\n    </div>\n  </div>\n```\n然后根据用户信息读取接口获取其被回复的消息进行填充。如果没有则默认不展示，否则点击提示框后将弹出消息列表弹框，渲染逻辑代码段如下：\n```js\nlet total = replyComments.length;\nif(total > 0){\n    $(\"#msg-tip span\").text(total);\n    $(\"#msg-tip\").show();\n    let html = \"\";\n    for(let item of replyComments){\n        let pageUrl = item.url;\n        let name = item.name;\n        html += '<div class=\"item\"><a data-id=\"' + item._id + '\" data-url=\"' + getUrl(pageUrl) + '\">' + name + '回复你</a></div>';\n    }\n    $(\"#modal-body\").html(html);\n    msgClickReg();\n}\n```\n\n详细的代码可以参考：\n[comment.swig--评论容器及逻辑](https://github.com/zhangjh/hello-blog/blob/master/themes/nextNew/layout/_scripts/comments/comment.swig)\n[custom.js--消息列表逻辑](https://github.com/zhangjh/hello-blog/blob/master/source/js/custom.js)\n\n至此，一个自研评论系统就算完成了。","source":"_posts/write-comment4.md","raw":"title: 从零开始，教你写留言板（四）\nshow: true\ndate: 2018-05-06 23:04:46\ntags: [留言板,评论]\ncategories: 技术人生\n---\n\n<i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  11/52，每周一篇博，坚持！\n\n[续上篇](http://zhangjh.me/2018/04/30/write-comment3/)\n\n前面几篇把如何搭建一个评论系统的后端描述了一下，这篇就主要讲一下如何把评论系统的前台搭起来。\n\n## 第四部分 前端交互及页面UI的实现\n\n前端不涉及应用，主要就是HTML、CSS、JS。\n评论系统的前端部分主要包括：\n1. 评论框主体\n2. 用户登录\n3. 评论提交动作\n4. 消息提醒\n5. 评论信息的渲染\n6. 事件注册响应\n\n主要是以上几个部分，还有一些细节部分。前端部分主要是仿造原来畅言的风格，具体的渲染方式，如HTML容器怎么放置，CSS样式怎么编写等细节，本篇就不再赘述，前端的实现“一千个人眼中有一千个哈姆雷特”，同样的效果可以有完全不同的实现方式。\n<!--more-->\n\n#### 评论框主体\n评论框主体主要用来收集用户提交的评论信息，这其中需要注意的是，如果用户是回复的某条评论，则原评论的内容需要以引文的方式放置在评论内容之前，因此我们的评论框也要支持HTML格式的文本。\n\n评论框主体为一个textarea，当用户回复某个评论时，先获取评论内容，将内容放置在`<blockquote><pre>`标签中，以形成引文效果。\n当然，因为支持html语法了，后面在获取内容插入数据库时注意要防止xss注入安全问题。\n\n#### 用户登录\n用户提交评论前判断用户是否登录，如果还未登录则弹出登录框收集用户信息。与畅言等第三方登录系统相比，这里只收集必要的用户信息。\n为了提供更好的体验，还可以提供记住用户信息功能，将用户信息以json格式存储在本地localStorage中。\n\n由于只是作为评论信息的用户标识，其实不算一个严格意义上的登录系统，不需要进行用户信息校验。一个人可以以多个用户名来给网站评论。\n\n一旦用户登录，则将登录框按钮替换成用户名称，并将用户信息写入localStorage供以后读取。\n```js\n// 以json格式存储在本地浏览器存储中的用户信息\nemail:\"njhxzhangjihong@126.com\"\nname:\"但丁\"\nurl:\"_2018_04_30_write-comment3_\"\nwebsite:\"//zhangjh.me\"\n```\n后续该用户再次登录，将按照存储的用户信息去读取是否有评论被回复并显示提醒框。\n\n从localStorage中解析用户信息：\n```\n// 解析用户信息\n      const userInfoJson = JSON.parse(userInfo);\n      comment.name = userInfoJson.name;\n      comment.email = userInfoJson.email;\n      comment.website = userInfoJson.website;\n      //$(\".modal-body input[name='name']\").val(userInfoJson.name);\n      //$(\".modal-body input[name='email']\").val(userInfoJson.email);\n      //$(\".modal-body input[name='website']\").val(userInfoJson.website);\n      $(\".header-user\").text(comment.name);\n```\n\n#### 评论提交\n评论提交主要要注意的是一些合法性的校验，如不能提交空内容，不登录不能提交，非法注入字符内容不能提交等。\n这里前端的提示消息的弹出我使用了一个第三方库叫[notie](https://github.com/jaredreich/notie).\n效果非常优雅，比自带的alert不知道高到哪里去了。\n![Alt text](https://raw.githubusercontent.com/jaredreich/notie/master/demo.gif?raw=true \"Demo\")\n\n#### 评论信息的渲染\n获取到评论信息后首先拿到总的条数，然后再循环每条消息渲染成评论列表。\n这其中，每条评论信息还要处理评论者用户名的渲染，如果评论者提供了自己的网址，在渲染时用户名将带上该网址的超链。\n并且，每条评论信息也要增加回复按钮。代码段如下：\n```js\n    const commentList = ret.data;\n    let html = \"\";\n    for(const item of commentList){\n    let contentItem = \"<div class='content-item'>\";\n    contentItem += \"<div class='user-info'><span class='user' data-website='\" + item.website + \"'>\" + item.name + \"</span>\"\n                + \"<span class='time'>\" + parseTime(item.gmtCreate) + \"</span></div>\";\n    contentItem += \"<div class='content'>\" + item.content + \"</div>\";\n    contentItem += \"<div class='operate' data-id='\" + item[\"_id\"] + \"' data-content='\" + item.content + \"' data-name='\" + item.name + \"'>回复</div></div>\";\n    html += contentItem;\n  }\n  $(\".comment-content\").html(html);\n  // 注册用户名点击事件\n  $(\".content-item .user\").click(function(){\n    const website = $(this).attr(\"data-website\");\n    if(website != \"undefined\"){\n      window.open(website);\n    }\n  });\n  // 注册回复点击事件\n  $(\".content-item .operate\").click(function(){\n    const replyId = $(this).attr(\"data-id\");\n    const content = $(this).attr(\"data-content\");\n    const name = $(this).attr(\"data-name\");\n    comment.replyId = replyId;\n    $(\".comment-body textarea\").val(\"<blockquote><pre>引用\" + name + \"的发言:</pre>\" + content + \"</blockquote>\");\n    window.location.href = \"#comment-text\";\n  });\n```\n\n#### 消息提醒\n消息提醒功能是指前端页面上显示当前访问用户是否有未读的评论回复消息，并且点击可以跳转到对应的文章，相应的未读提示减少。\n该消息提示框将绝对定在在页面的右上角。\n实现起来也很简单，首先是要绝对定位放置一个HTML容器在页面的右上角，如：\n```html\n<style>\n    #msg-tip {\n      background-color: orangered;\n      color: white;\n      position: fixed;\n      top: 50px;\n      right: 10px;\n      z-index: 2;\n      display: none;\n      cursor: pointer;\n    }\n    #msg-modal {\n      position: fixed;\n      top: 20%;\n      left: 50%;\n      width: 400px;\n      margin-left: -200px;\n      z-index: 2;\n      -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, .5);\n      -moz-box-shadow: 0 5px 15px rgba(0, 0, 0, .5);\n      box-shadow: 0 5px 15px rgba(0, 0, 0, .5);\n      padding: 5px 20px;\n      background: white;\n      display: none;\n    }\n    #msg-modal h5 {\n      float: left;\n    }\n    #msg-modal .close {\n      float: right;\n    }\n    #modal-body {\n      clear: both;\n    }\n    #modal-body .item a {\n      color: #219bde;\n    }\n  </style>\n<div id=\"msg-tip\">\n    ❗️你有<span>0</span>条未读消息\n  </div>\n\n  <div id=\"msg-modal\">\n    <div id=\"modal-header\">\n      <h5>消息列表</h5>\n      <span class=\"close\">X</span>\n    </div>\n    <div id=\"modal-body\">\n\n    </div>\n  </div>\n```\n然后根据用户信息读取接口获取其被回复的消息进行填充。如果没有则默认不展示，否则点击提示框后将弹出消息列表弹框，渲染逻辑代码段如下：\n```js\nlet total = replyComments.length;\nif(total > 0){\n    $(\"#msg-tip span\").text(total);\n    $(\"#msg-tip\").show();\n    let html = \"\";\n    for(let item of replyComments){\n        let pageUrl = item.url;\n        let name = item.name;\n        html += '<div class=\"item\"><a data-id=\"' + item._id + '\" data-url=\"' + getUrl(pageUrl) + '\">' + name + '回复你</a></div>';\n    }\n    $(\"#modal-body\").html(html);\n    msgClickReg();\n}\n```\n\n详细的代码可以参考：\n[comment.swig--评论容器及逻辑](https://github.com/zhangjh/hello-blog/blob/master/themes/nextNew/layout/_scripts/comments/comment.swig)\n[custom.js--消息列表逻辑](https://github.com/zhangjh/hello-blog/blob/master/source/js/custom.js)\n\n至此，一个自研评论系统就算完成了。","slug":"write-comment4","published":1,"updated":"2018-10-19T18:30:07.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzy3006ifnpvkb0zs91c","content":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  11/52，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/04/30/write-comment3/\">续上篇</a></p>\n<p>前面几篇把如何搭建一个评论系统的后端描述了一下，这篇就主要讲一下如何把评论系统的前台搭起来。</p>\n<h2 id=\"第四部分-前端交互及页面UI的实现\"><a href=\"#第四部分-前端交互及页面UI的实现\" class=\"headerlink\" title=\"第四部分 前端交互及页面UI的实现\"></a>第四部分 前端交互及页面UI的实现</h2><p>前端不涉及应用，主要就是HTML、CSS、JS。<br>评论系统的前端部分主要包括：</p>\n<ol>\n<li>评论框主体</li>\n<li>用户登录</li>\n<li>评论提交动作</li>\n<li>消息提醒</li>\n<li>评论信息的渲染</li>\n<li>事件注册响应</li>\n</ol>\n<p>主要是以上几个部分，还有一些细节部分。前端部分主要是仿造原来畅言的风格，具体的渲染方式，如HTML容器怎么放置，CSS样式怎么编写等细节，本篇就不再赘述，前端的实现“一千个人眼中有一千个哈姆雷特”，同样的效果可以有完全不同的实现方式。<br><a id=\"more\"></a></p>\n<h4 id=\"评论框主体\"><a href=\"#评论框主体\" class=\"headerlink\" title=\"评论框主体\"></a>评论框主体</h4><p>评论框主体主要用来收集用户提交的评论信息，这其中需要注意的是，如果用户是回复的某条评论，则原评论的内容需要以引文的方式放置在评论内容之前，因此我们的评论框也要支持HTML格式的文本。</p>\n<p>评论框主体为一个textarea，当用户回复某个评论时，先获取评论内容，将内容放置在<code>&lt;blockquote&gt;&lt;pre&gt;</code>标签中，以形成引文效果。<br>当然，因为支持html语法了，后面在获取内容插入数据库时注意要防止xss注入安全问题。</p>\n<h4 id=\"用户登录\"><a href=\"#用户登录\" class=\"headerlink\" title=\"用户登录\"></a>用户登录</h4><p>用户提交评论前判断用户是否登录，如果还未登录则弹出登录框收集用户信息。与畅言等第三方登录系统相比，这里只收集必要的用户信息。<br>为了提供更好的体验，还可以提供记住用户信息功能，将用户信息以json格式存储在本地localStorage中。</p>\n<p>由于只是作为评论信息的用户标识，其实不算一个严格意义上的登录系统，不需要进行用户信息校验。一个人可以以多个用户名来给网站评论。</p>\n<p>一旦用户登录，则将登录框按钮替换成用户名称，并将用户信息写入localStorage供以后读取。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 以json格式存储在本地浏览器存储中的用户信息</span></span><br><span class=\"line\">email:<span class=\"string\">\"njhxzhangjihong@126.com\"</span></span><br><span class=\"line\">name:<span class=\"string\">\"但丁\"</span></span><br><span class=\"line\">url:<span class=\"string\">\"_2018_04_30_write-comment3_\"</span></span><br><span class=\"line\">website:<span class=\"string\">\"//zhangjh.me\"</span></span><br></pre></td></tr></table></figure></p>\n<p>后续该用户再次登录，将按照存储的用户信息去读取是否有评论被回复并显示提醒框。</p>\n<p>从localStorage中解析用户信息：<br><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 解析用户信息</span></span><br><span class=\"line\">      const userInfoJson = JSON.parse(userInfo);</span><br><span class=\"line\">      <span class=\"built_in\">comment</span>.<span class=\"built_in\">name</span> = userInfoJson.<span class=\"built_in\">name</span>;</span><br><span class=\"line\">      <span class=\"built_in\">comment</span>.email = userInfoJson.email;</span><br><span class=\"line\">      <span class=\"built_in\">comment</span>.website = userInfoJson.website;</span><br><span class=\"line\">      <span class=\"comment\">//$(\".modal-body input[name='name']\").val(userInfoJson.name);</span></span><br><span class=\"line\">      <span class=\"comment\">//$(\".modal-body input[name='email']\").val(userInfoJson.email);</span></span><br><span class=\"line\">      <span class=\"comment\">//$(\".modal-body input[name='website']\").val(userInfoJson.website);</span></span><br><span class=\"line\">      $(<span class=\"string\">\".header-user\"</span>).<span class=\"built_in\">text</span>(<span class=\"built_in\">comment</span>.<span class=\"built_in\">name</span>);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"评论提交\"><a href=\"#评论提交\" class=\"headerlink\" title=\"评论提交\"></a>评论提交</h4><p>评论提交主要要注意的是一些合法性的校验，如不能提交空内容，不登录不能提交，非法注入字符内容不能提交等。<br>这里前端的提示消息的弹出我使用了一个第三方库叫<a href=\"https://github.com/jaredreich/notie\" target=\"_blank\" rel=\"noopener\">notie</a>.<br>效果非常优雅，比自带的alert不知道高到哪里去了。<br><img src=\"https://raw.githubusercontent.com/jaredreich/notie/master/demo.gif?raw=true\" alt=\"Alt text\" title=\"Demo\"></p>\n<h4 id=\"评论信息的渲染\"><a href=\"#评论信息的渲染\" class=\"headerlink\" title=\"评论信息的渲染\"></a>评论信息的渲染</h4><p>获取到评论信息后首先拿到总的条数，然后再循环每条消息渲染成评论列表。<br>这其中，每条评论信息还要处理评论者用户名的渲染，如果评论者提供了自己的网址，在渲染时用户名将带上该网址的超链。<br>并且，每条评论信息也要增加回复按钮。代码段如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">const</span> commentList = ret.data;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> html = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> commentList)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> contentItem = <span class=\"string\">\"&lt;div class='content-item'&gt;\"</span>;</span><br><span class=\"line\">  contentItem += <span class=\"string\">\"&lt;div class='user-info'&gt;&lt;span class='user' data-website='\"</span> + item.website + <span class=\"string\">\"'&gt;\"</span> + item.name + <span class=\"string\">\"&lt;/span&gt;\"</span></span><br><span class=\"line\">              + <span class=\"string\">\"&lt;span class='time'&gt;\"</span> + parseTime(item.gmtCreate) + <span class=\"string\">\"&lt;/span&gt;&lt;/div&gt;\"</span>;</span><br><span class=\"line\">  contentItem += <span class=\"string\">\"&lt;div class='content'&gt;\"</span> + item.content + <span class=\"string\">\"&lt;/div&gt;\"</span>;</span><br><span class=\"line\">  contentItem += <span class=\"string\">\"&lt;div class='operate' data-id='\"</span> + item[<span class=\"string\">\"_id\"</span>] + <span class=\"string\">\"' data-content='\"</span> + item.content + <span class=\"string\">\"' data-name='\"</span> + item.name + <span class=\"string\">\"'&gt;回复&lt;/div&gt;&lt;/div&gt;\"</span>;</span><br><span class=\"line\">  html += contentItem;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$(<span class=\"string\">\".comment-content\"</span>).html(html);</span><br><span class=\"line\"><span class=\"comment\">// 注册用户名点击事件</span></span><br><span class=\"line\">$(<span class=\"string\">\".content-item .user\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> website = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"data-website\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(website != <span class=\"string\">\"undefined\"</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.open(website);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 注册回复点击事件</span></span><br><span class=\"line\">$(<span class=\"string\">\".content-item .operate\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> replyId = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"data-id\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"data-content\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> name = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"data-name\"</span>);</span><br><span class=\"line\">  comment.replyId = replyId;</span><br><span class=\"line\">  $(<span class=\"string\">\".comment-body textarea\"</span>).val(<span class=\"string\">\"&lt;blockquote&gt;&lt;pre&gt;引用\"</span> + name + <span class=\"string\">\"的发言:&lt;/pre&gt;\"</span> + content + <span class=\"string\">\"&lt;/blockquote&gt;\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.location.href = <span class=\"string\">\"#comment-text\"</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"消息提醒\"><a href=\"#消息提醒\" class=\"headerlink\" title=\"消息提醒\"></a>消息提醒</h4><p>消息提醒功能是指前端页面上显示当前访问用户是否有未读的评论回复消息，并且点击可以跳转到对应的文章，相应的未读提示减少。<br>该消息提示框将绝对定在在页面的右上角。<br>实现起来也很简单，首先是要绝对定位放置一个HTML容器在页面的右上角，如：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#msg-tip</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      background-color: orangered;</span></span><br><span class=\"line\"><span class=\"undefined\">      color: white;</span></span><br><span class=\"line\"><span class=\"undefined\">      position: fixed;</span></span><br><span class=\"line\"><span class=\"undefined\">      top: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">      right: 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">      z-index: 2;</span></span><br><span class=\"line\"><span class=\"undefined\">      display: none;</span></span><br><span class=\"line\"><span class=\"undefined\">      cursor: pointer;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#msg-modal</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      position: fixed;</span></span><br><span class=\"line\"><span class=\"undefined\">      top: 20%;</span></span><br><span class=\"line\"><span class=\"undefined\">      left: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">      width: 400px;</span></span><br><span class=\"line\"><span class=\"undefined\">      margin-left: -200px;</span></span><br><span class=\"line\"><span class=\"undefined\">      z-index: 2;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">-webkit-box-shadow</span>: 0 5<span class=\"selector-tag\">px</span> 15<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, <span class=\"selector-class\">.5</span>);</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">-moz-box-shadow</span>: 0 5<span class=\"selector-tag\">px</span> 15<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, <span class=\"selector-class\">.5</span>);</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">box-shadow</span>: 0 5<span class=\"selector-tag\">px</span> 15<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, <span class=\"selector-class\">.5</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">      padding: 5px 20px;</span></span><br><span class=\"line\"><span class=\"undefined\">      background: white;</span></span><br><span class=\"line\"><span class=\"undefined\">      display: none;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#msg-modal</span> <span class=\"selector-tag\">h5</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      float: left;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#msg-modal</span> <span class=\"selector-class\">.close</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      float: right;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#modal-body</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      clear: both;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#modal-body</span> <span class=\"selector-class\">.item</span> <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#219bde</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"msg-tip\"</span>&gt;</span></span><br><span class=\"line\">    ❗️你有<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>条未读消息</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"msg-modal\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"modal-header\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>消息列表<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"close\"</span>&gt;</span>X<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"modal-body\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>然后根据用户信息读取接口获取其被回复的消息进行填充。如果没有则默认不展示，否则点击提示框后将弹出消息列表弹框，渲染逻辑代码段如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> total = replyComments.length;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(total &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#msg-tip span\"</span>).text(total);</span><br><span class=\"line\">    $(<span class=\"string\">\"#msg-tip\"</span>).show();</span><br><span class=\"line\">    <span class=\"keyword\">let</span> html = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> replyComments)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> pageUrl = item.url;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> name = item.name;</span><br><span class=\"line\">        html += <span class=\"string\">'&lt;div class=\"item\"&gt;&lt;a data-id=\"'</span> + item._id + <span class=\"string\">'\" data-url=\"'</span> + getUrl(pageUrl) + <span class=\"string\">'\"&gt;'</span> + name + <span class=\"string\">'回复你&lt;/a&gt;&lt;/div&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $(<span class=\"string\">\"#modal-body\"</span>).html(html);</span><br><span class=\"line\">    msgClickReg();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>详细的代码可以参考：<br><a href=\"https://github.com/zhangjh/hello-blog/blob/master/themes/nextNew/layout/_scripts/comments/comment.swig\" target=\"_blank\" rel=\"noopener\">comment.swig–评论容器及逻辑</a><br><a href=\"https://github.com/zhangjh/hello-blog/blob/master/source/js/custom.js\" target=\"_blank\" rel=\"noopener\">custom.js–消息列表逻辑</a></p>\n<p>至此，一个自研评论系统就算完成了。</p>\n","site":{"data":{}},"excerpt":"<p><i class=\"iconfont\" style=\"color: #1296db\">&#xe65d;</i>  11/52，每周一篇博，坚持！</p>\n<p><a href=\"http://zhangjh.me/2018/04/30/write-comment3/\">续上篇</a></p>\n<p>前面几篇把如何搭建一个评论系统的后端描述了一下，这篇就主要讲一下如何把评论系统的前台搭起来。</p>\n<h2 id=\"第四部分-前端交互及页面UI的实现\"><a href=\"#第四部分-前端交互及页面UI的实现\" class=\"headerlink\" title=\"第四部分 前端交互及页面UI的实现\"></a>第四部分 前端交互及页面UI的实现</h2><p>前端不涉及应用，主要就是HTML、CSS、JS。<br>评论系统的前端部分主要包括：</p>\n<ol>\n<li>评论框主体</li>\n<li>用户登录</li>\n<li>评论提交动作</li>\n<li>消息提醒</li>\n<li>评论信息的渲染</li>\n<li>事件注册响应</li>\n</ol>\n<p>主要是以上几个部分，还有一些细节部分。前端部分主要是仿造原来畅言的风格，具体的渲染方式，如HTML容器怎么放置，CSS样式怎么编写等细节，本篇就不再赘述，前端的实现“一千个人眼中有一千个哈姆雷特”，同样的效果可以有完全不同的实现方式。<br>","more":"</p>\n<h4 id=\"评论框主体\"><a href=\"#评论框主体\" class=\"headerlink\" title=\"评论框主体\"></a>评论框主体</h4><p>评论框主体主要用来收集用户提交的评论信息，这其中需要注意的是，如果用户是回复的某条评论，则原评论的内容需要以引文的方式放置在评论内容之前，因此我们的评论框也要支持HTML格式的文本。</p>\n<p>评论框主体为一个textarea，当用户回复某个评论时，先获取评论内容，将内容放置在<code>&lt;blockquote&gt;&lt;pre&gt;</code>标签中，以形成引文效果。<br>当然，因为支持html语法了，后面在获取内容插入数据库时注意要防止xss注入安全问题。</p>\n<h4 id=\"用户登录\"><a href=\"#用户登录\" class=\"headerlink\" title=\"用户登录\"></a>用户登录</h4><p>用户提交评论前判断用户是否登录，如果还未登录则弹出登录框收集用户信息。与畅言等第三方登录系统相比，这里只收集必要的用户信息。<br>为了提供更好的体验，还可以提供记住用户信息功能，将用户信息以json格式存储在本地localStorage中。</p>\n<p>由于只是作为评论信息的用户标识，其实不算一个严格意义上的登录系统，不需要进行用户信息校验。一个人可以以多个用户名来给网站评论。</p>\n<p>一旦用户登录，则将登录框按钮替换成用户名称，并将用户信息写入localStorage供以后读取。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 以json格式存储在本地浏览器存储中的用户信息</span></span><br><span class=\"line\">email:<span class=\"string\">\"njhxzhangjihong@126.com\"</span></span><br><span class=\"line\">name:<span class=\"string\">\"但丁\"</span></span><br><span class=\"line\">url:<span class=\"string\">\"_2018_04_30_write-comment3_\"</span></span><br><span class=\"line\">website:<span class=\"string\">\"//zhangjh.me\"</span></span><br></pre></td></tr></table></figure></p>\n<p>后续该用户再次登录，将按照存储的用户信息去读取是否有评论被回复并显示提醒框。</p>\n<p>从localStorage中解析用户信息：<br><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 解析用户信息</span></span><br><span class=\"line\">      const userInfoJson = JSON.parse(userInfo);</span><br><span class=\"line\">      <span class=\"built_in\">comment</span>.<span class=\"built_in\">name</span> = userInfoJson.<span class=\"built_in\">name</span>;</span><br><span class=\"line\">      <span class=\"built_in\">comment</span>.email = userInfoJson.email;</span><br><span class=\"line\">      <span class=\"built_in\">comment</span>.website = userInfoJson.website;</span><br><span class=\"line\">      <span class=\"comment\">//$(\".modal-body input[name='name']\").val(userInfoJson.name);</span></span><br><span class=\"line\">      <span class=\"comment\">//$(\".modal-body input[name='email']\").val(userInfoJson.email);</span></span><br><span class=\"line\">      <span class=\"comment\">//$(\".modal-body input[name='website']\").val(userInfoJson.website);</span></span><br><span class=\"line\">      $(<span class=\"string\">\".header-user\"</span>).<span class=\"built_in\">text</span>(<span class=\"built_in\">comment</span>.<span class=\"built_in\">name</span>);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"评论提交\"><a href=\"#评论提交\" class=\"headerlink\" title=\"评论提交\"></a>评论提交</h4><p>评论提交主要要注意的是一些合法性的校验，如不能提交空内容，不登录不能提交，非法注入字符内容不能提交等。<br>这里前端的提示消息的弹出我使用了一个第三方库叫<a href=\"https://github.com/jaredreich/notie\" target=\"_blank\" rel=\"noopener\">notie</a>.<br>效果非常优雅，比自带的alert不知道高到哪里去了。<br><img src=\"https://raw.githubusercontent.com/jaredreich/notie/master/demo.gif?raw=true\" alt=\"Alt text\" title=\"Demo\"></p>\n<h4 id=\"评论信息的渲染\"><a href=\"#评论信息的渲染\" class=\"headerlink\" title=\"评论信息的渲染\"></a>评论信息的渲染</h4><p>获取到评论信息后首先拿到总的条数，然后再循环每条消息渲染成评论列表。<br>这其中，每条评论信息还要处理评论者用户名的渲染，如果评论者提供了自己的网址，在渲染时用户名将带上该网址的超链。<br>并且，每条评论信息也要增加回复按钮。代码段如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">const</span> commentList = ret.data;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> html = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> commentList)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> contentItem = <span class=\"string\">\"&lt;div class='content-item'&gt;\"</span>;</span><br><span class=\"line\">  contentItem += <span class=\"string\">\"&lt;div class='user-info'&gt;&lt;span class='user' data-website='\"</span> + item.website + <span class=\"string\">\"'&gt;\"</span> + item.name + <span class=\"string\">\"&lt;/span&gt;\"</span></span><br><span class=\"line\">              + <span class=\"string\">\"&lt;span class='time'&gt;\"</span> + parseTime(item.gmtCreate) + <span class=\"string\">\"&lt;/span&gt;&lt;/div&gt;\"</span>;</span><br><span class=\"line\">  contentItem += <span class=\"string\">\"&lt;div class='content'&gt;\"</span> + item.content + <span class=\"string\">\"&lt;/div&gt;\"</span>;</span><br><span class=\"line\">  contentItem += <span class=\"string\">\"&lt;div class='operate' data-id='\"</span> + item[<span class=\"string\">\"_id\"</span>] + <span class=\"string\">\"' data-content='\"</span> + item.content + <span class=\"string\">\"' data-name='\"</span> + item.name + <span class=\"string\">\"'&gt;回复&lt;/div&gt;&lt;/div&gt;\"</span>;</span><br><span class=\"line\">  html += contentItem;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$(<span class=\"string\">\".comment-content\"</span>).html(html);</span><br><span class=\"line\"><span class=\"comment\">// 注册用户名点击事件</span></span><br><span class=\"line\">$(<span class=\"string\">\".content-item .user\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> website = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"data-website\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(website != <span class=\"string\">\"undefined\"</span>)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.open(website);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 注册回复点击事件</span></span><br><span class=\"line\">$(<span class=\"string\">\".content-item .operate\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> replyId = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"data-id\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> content = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"data-content\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> name = $(<span class=\"keyword\">this</span>).attr(<span class=\"string\">\"data-name\"</span>);</span><br><span class=\"line\">  comment.replyId = replyId;</span><br><span class=\"line\">  $(<span class=\"string\">\".comment-body textarea\"</span>).val(<span class=\"string\">\"&lt;blockquote&gt;&lt;pre&gt;引用\"</span> + name + <span class=\"string\">\"的发言:&lt;/pre&gt;\"</span> + content + <span class=\"string\">\"&lt;/blockquote&gt;\"</span>);</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.location.href = <span class=\"string\">\"#comment-text\"</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"消息提醒\"><a href=\"#消息提醒\" class=\"headerlink\" title=\"消息提醒\"></a>消息提醒</h4><p>消息提醒功能是指前端页面上显示当前访问用户是否有未读的评论回复消息，并且点击可以跳转到对应的文章，相应的未读提示减少。<br>该消息提示框将绝对定在在页面的右上角。<br>实现起来也很简单，首先是要绝对定位放置一个HTML容器在页面的右上角，如：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#msg-tip</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      background-color: orangered;</span></span><br><span class=\"line\"><span class=\"undefined\">      color: white;</span></span><br><span class=\"line\"><span class=\"undefined\">      position: fixed;</span></span><br><span class=\"line\"><span class=\"undefined\">      top: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">      right: 10px;</span></span><br><span class=\"line\"><span class=\"undefined\">      z-index: 2;</span></span><br><span class=\"line\"><span class=\"undefined\">      display: none;</span></span><br><span class=\"line\"><span class=\"undefined\">      cursor: pointer;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#msg-modal</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      position: fixed;</span></span><br><span class=\"line\"><span class=\"undefined\">      top: 20%;</span></span><br><span class=\"line\"><span class=\"undefined\">      left: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">      width: 400px;</span></span><br><span class=\"line\"><span class=\"undefined\">      margin-left: -200px;</span></span><br><span class=\"line\"><span class=\"undefined\">      z-index: 2;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">-webkit-box-shadow</span>: 0 5<span class=\"selector-tag\">px</span> 15<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, <span class=\"selector-class\">.5</span>);</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">-moz-box-shadow</span>: 0 5<span class=\"selector-tag\">px</span> 15<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, <span class=\"selector-class\">.5</span>);</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">box-shadow</span>: 0 5<span class=\"selector-tag\">px</span> 15<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0, 0, 0, <span class=\"selector-class\">.5</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">      padding: 5px 20px;</span></span><br><span class=\"line\"><span class=\"undefined\">      background: white;</span></span><br><span class=\"line\"><span class=\"undefined\">      display: none;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#msg-modal</span> <span class=\"selector-tag\">h5</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      float: left;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#msg-modal</span> <span class=\"selector-class\">.close</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      float: right;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#modal-body</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      clear: both;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-id\">#modal-body</span> <span class=\"selector-class\">.item</span> <span class=\"selector-tag\">a</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#219bde</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"msg-tip\"</span>&gt;</span></span><br><span class=\"line\">    ❗️你有<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>条未读消息</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"msg-modal\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"modal-header\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>消息列表<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"close\"</span>&gt;</span>X<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"modal-body\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>然后根据用户信息读取接口获取其被回复的消息进行填充。如果没有则默认不展示，否则点击提示框后将弹出消息列表弹框，渲染逻辑代码段如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> total = replyComments.length;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(total &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"#msg-tip span\"</span>).text(total);</span><br><span class=\"line\">    $(<span class=\"string\">\"#msg-tip\"</span>).show();</span><br><span class=\"line\">    <span class=\"keyword\">let</span> html = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> replyComments)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> pageUrl = item.url;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> name = item.name;</span><br><span class=\"line\">        html += <span class=\"string\">'&lt;div class=\"item\"&gt;&lt;a data-id=\"'</span> + item._id + <span class=\"string\">'\" data-url=\"'</span> + getUrl(pageUrl) + <span class=\"string\">'\"&gt;'</span> + name + <span class=\"string\">'回复你&lt;/a&gt;&lt;/div&gt;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $(<span class=\"string\">\"#modal-body\"</span>).html(html);</span><br><span class=\"line\">    msgClickReg();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>详细的代码可以参考：<br><a href=\"https://github.com/zhangjh/hello-blog/blob/master/themes/nextNew/layout/_scripts/comments/comment.swig\" target=\"_blank\" rel=\"noopener\">comment.swig–评论容器及逻辑</a><br><a href=\"https://github.com/zhangjh/hello-blog/blob/master/source/js/custom.js\" target=\"_blank\" rel=\"noopener\">custom.js–消息列表逻辑</a></p>\n<p>至此，一个自研评论系统就算完成了。</p>","sticky":0},{"title":"自己动手写爬虫(1)","show":false,"date":"2017-03-21T06:54:15.000Z","_content":"","source":"_posts/written-crawler.md","raw":"title: 自己动手写爬虫(1)\nshow: false\ndate: 2017-03-21 14:54:15\ntags: [爬虫,node,tumblr,自己动手写爬虫]\ncategories: 技术人生\n---\n","slug":"written-crawler","published":1,"updated":"2018-10-19T18:30:07.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzy5006lfnpv37yf4ziv","content":"","site":{"data":{}},"excerpt":"","more":"","sticky":0},{"title":"xz格式文件的解压","show":true,"date":"2016-08-04T08:34:42.000Z","_content":"\n安装node的时候经常会下载到xz格式的压缩包，它是tar包外层在用xz压缩一遍，压缩比更高。\n\n用的不是很多，但正因为此每次用到都要查一下，记录一下：\n\n```\n#解压：\nxz -d file.xz\ntar -xvf file.tar\n\n#如果没有xz命令，安装一下\nsudo yum install xz \n```\n","source":"_posts/xz-decompress.md","raw":"title: xz格式文件的解压\nshow: true\ndate: 2016-08-04 16:34:42\ntags: [xz,解压]\ncategories: 技术人生\n---\n\n安装node的时候经常会下载到xz格式的压缩包，它是tar包外层在用xz压缩一遍，压缩比更高。\n\n用的不是很多，但正因为此每次用到都要查一下，记录一下：\n\n```\n#解压：\nxz -d file.xz\ntar -xvf file.tar\n\n#如果没有xz命令，安装一下\nsudo yum install xz \n```\n","slug":"xz-decompress","published":1,"updated":"2018-10-19T18:30:07.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzy6006nfnpvk0jtbmfq","content":"<p>安装node的时候经常会下载到xz格式的压缩包，它是tar包外层在用xz压缩一遍，压缩比更高。</p>\n<p>用的不是很多，但正因为此每次用到都要查一下，记录一下：</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压：</span></span><br><span class=\"line\">xz -d <span class=\"keyword\">file</span>.xz</span><br><span class=\"line\">tar -xvf <span class=\"keyword\">file</span>.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果没有xz命令，安装一下</span></span><br><span class=\"line\">sudo yum <span class=\"keyword\">install</span> xz</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>安装node的时候经常会下载到xz格式的压缩包，它是tar包外层在用xz压缩一遍，压缩比更高。</p>\n<p>用的不是很多，但正因为此每次用到都要查一下，记录一下：</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解压：</span></span><br><span class=\"line\">xz -d <span class=\"keyword\">file</span>.xz</span><br><span class=\"line\">tar -xvf <span class=\"keyword\">file</span>.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果没有xz命令，安装一下</span></span><br><span class=\"line\">sudo yum <span class=\"keyword\">install</span> xz</span><br></pre></td></tr></table></figure>\n","sticky":0},{"title":"知乎摘选--关于nodejs","date":"2015-07-03T05:29:30.000Z","show":true,"_content":"- [如何系统学习nodejs](http://www.zhihu.com/question/22035738)\n- [nodejs有没有最佳实践](http://www.zhihu.com/question/22131414)\n- [有没优雅的写法，让nodejs的回调+循环不那么操蛋？](http://www.zhihu.com/question/24847805)\n- [如何进行nodejs异步编程？](http://www.zhihu.com/question/28005913)\n\n\n\n","source":"_posts/zhihu-node.md","raw":"title: 知乎摘选--关于nodejs\ndate: 2015-07-03 13:29:30\ntags: [知乎,nodejs]\ncategories: 文摘采撷\nshow: true\n---\n- [如何系统学习nodejs](http://www.zhihu.com/question/22035738)\n- [nodejs有没有最佳实践](http://www.zhihu.com/question/22131414)\n- [有没优雅的写法，让nodejs的回调+循环不那么操蛋？](http://www.zhihu.com/question/24847805)\n- [如何进行nodejs异步编程？](http://www.zhihu.com/question/28005913)\n\n\n\n","slug":"zhihu-node","published":1,"updated":"2018-10-19T18:30:07.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzy8006qfnpvw7rhsls0","content":"<ul>\n<li><a href=\"http://www.zhihu.com/question/22035738\" target=\"_blank\" rel=\"noopener\">如何系统学习nodejs</a></li>\n<li><a href=\"http://www.zhihu.com/question/22131414\" target=\"_blank\" rel=\"noopener\">nodejs有没有最佳实践</a></li>\n<li><a href=\"http://www.zhihu.com/question/24847805\" target=\"_blank\" rel=\"noopener\">有没优雅的写法，让nodejs的回调+循环不那么操蛋？</a></li>\n<li><a href=\"http://www.zhihu.com/question/28005913\" target=\"_blank\" rel=\"noopener\">如何进行nodejs异步编程？</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><a href=\"http://www.zhihu.com/question/22035738\" target=\"_blank\" rel=\"noopener\">如何系统学习nodejs</a></li>\n<li><a href=\"http://www.zhihu.com/question/22131414\" target=\"_blank\" rel=\"noopener\">nodejs有没有最佳实践</a></li>\n<li><a href=\"http://www.zhihu.com/question/24847805\" target=\"_blank\" rel=\"noopener\">有没优雅的写法，让nodejs的回调+循环不那么操蛋？</a></li>\n<li><a href=\"http://www.zhihu.com/question/28005913\" target=\"_blank\" rel=\"noopener\">如何进行nodejs异步编程？</a></li>\n</ul>\n","sticky":0},{"title":"知乎摘选--关于写作","date":"2015-07-02T12:02:42.000Z","show":true,"_content":"如何提高写作水平？摘记一些知乎上关于写作话题的问答，希望有时间的时候可以看一看。\n我深知\"Mark\"最无用，收归一处会看的几率会更大吧。\n\n- [如何提高写作水平](http://www.zhihu.com/question/20669324)\n- [写作过程中如何控制节奏](http://www.zhihu.com/question/22576459)\n- [知乎上关于小说写作的精彩问答有哪些](http://www.zhihu.com/question/20377474)\n- [怎么写小说](http://www.zhihu.com/question/19997669)\n- [如何写好一个故事](http://www.zhihu.com/question/20182906)\n- [如何学习小说写作](http://www.zhihu.com/question/20329849)\n- [如何提高个人的写作能力](http://www.zhihu.com/question/19969360)\n- [怎样提升一个人的文笔](http://www.zhihu.com/question/19591218)\n","source":"_posts/zhihu-writing.md","raw":"title: 知乎摘选--关于写作\ndate: 2015-07-02 20:02:42\ntags: [知乎,写作]\ncategories: 文摘采撷\nshow: true\n---\n如何提高写作水平？摘记一些知乎上关于写作话题的问答，希望有时间的时候可以看一看。\n我深知\"Mark\"最无用，收归一处会看的几率会更大吧。\n\n- [如何提高写作水平](http://www.zhihu.com/question/20669324)\n- [写作过程中如何控制节奏](http://www.zhihu.com/question/22576459)\n- [知乎上关于小说写作的精彩问答有哪些](http://www.zhihu.com/question/20377474)\n- [怎么写小说](http://www.zhihu.com/question/19997669)\n- [如何写好一个故事](http://www.zhihu.com/question/20182906)\n- [如何学习小说写作](http://www.zhihu.com/question/20329849)\n- [如何提高个人的写作能力](http://www.zhihu.com/question/19969360)\n- [怎样提升一个人的文笔](http://www.zhihu.com/question/19591218)\n","slug":"zhihu-writing","published":1,"updated":"2018-10-19T18:30:07.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnijyzya006tfnpvbbewsx1q","content":"<p>如何提高写作水平？摘记一些知乎上关于写作话题的问答，希望有时间的时候可以看一看。<br>我深知”Mark”最无用，收归一处会看的几率会更大吧。</p>\n<ul>\n<li><a href=\"http://www.zhihu.com/question/20669324\" target=\"_blank\" rel=\"noopener\">如何提高写作水平</a></li>\n<li><a href=\"http://www.zhihu.com/question/22576459\" target=\"_blank\" rel=\"noopener\">写作过程中如何控制节奏</a></li>\n<li><a href=\"http://www.zhihu.com/question/20377474\" target=\"_blank\" rel=\"noopener\">知乎上关于小说写作的精彩问答有哪些</a></li>\n<li><a href=\"http://www.zhihu.com/question/19997669\" target=\"_blank\" rel=\"noopener\">怎么写小说</a></li>\n<li><a href=\"http://www.zhihu.com/question/20182906\" target=\"_blank\" rel=\"noopener\">如何写好一个故事</a></li>\n<li><a href=\"http://www.zhihu.com/question/20329849\" target=\"_blank\" rel=\"noopener\">如何学习小说写作</a></li>\n<li><a href=\"http://www.zhihu.com/question/19969360\" target=\"_blank\" rel=\"noopener\">如何提高个人的写作能力</a></li>\n<li><a href=\"http://www.zhihu.com/question/19591218\" target=\"_blank\" rel=\"noopener\">怎样提升一个人的文笔</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>如何提高写作水平？摘记一些知乎上关于写作话题的问答，希望有时间的时候可以看一看。<br>我深知”Mark”最无用，收归一处会看的几率会更大吧。</p>\n<ul>\n<li><a href=\"http://www.zhihu.com/question/20669324\" target=\"_blank\" rel=\"noopener\">如何提高写作水平</a></li>\n<li><a href=\"http://www.zhihu.com/question/22576459\" target=\"_blank\" rel=\"noopener\">写作过程中如何控制节奏</a></li>\n<li><a href=\"http://www.zhihu.com/question/20377474\" target=\"_blank\" rel=\"noopener\">知乎上关于小说写作的精彩问答有哪些</a></li>\n<li><a href=\"http://www.zhihu.com/question/19997669\" target=\"_blank\" rel=\"noopener\">怎么写小说</a></li>\n<li><a href=\"http://www.zhihu.com/question/20182906\" target=\"_blank\" rel=\"noopener\">如何写好一个故事</a></li>\n<li><a href=\"http://www.zhihu.com/question/20329849\" target=\"_blank\" rel=\"noopener\">如何学习小说写作</a></li>\n<li><a href=\"http://www.zhihu.com/question/19969360\" target=\"_blank\" rel=\"noopener\">如何提高个人的写作能力</a></li>\n<li><a href=\"http://www.zhihu.com/question/19591218\" target=\"_blank\" rel=\"noopener\">怎样提升一个人的文笔</a></li>\n</ul>\n","sticky":0}],"PostAsset":[],"PostCategory":[{"post_id":"cjnijyzsr000cfnpvjkqiu29y","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzt3000kfnpvxy87z9of"},{"post_id":"cjnijyzs00004fnpvdox5e378","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzt6000ofnpvysjomrgy"},{"post_id":"cjnijyzsu000efnpvf88mmjvm","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzt8000qfnpvps2fe82p"},{"post_id":"cjnijyzt0000ifnpvyasy93jf","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyztb000tfnpvxyhpirbe"},{"post_id":"cjnijyzs80006fnpvu1weeico","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyztd000xfnpv0ysk5f9q"},{"post_id":"cjnijyzt2000jfnpvde36lvfm","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyztf0011fnpvolijp21y"},{"post_id":"cjnijyzt5000nfnpvoe9anvyn","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzth0015fnpve48kr9gv"},{"post_id":"cjnijyzsh000afnpv2zqqs170","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyztk0018fnpvupok422r"},{"post_id":"cjnijyztc000wfnpvm1xmh17n","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyztm001bfnpv02rfc0q4"},{"post_id":"cjnijyzte0010fnpvgbbs0uh6","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyztq001dfnpvlaf1alfe"},{"post_id":"cjnijyzt7000pfnpv00xu7dst","category_id":"cjnijyztb000vfnpvaegrtluy","_id":"cjnijyzts001gfnpve94r6rxb"},{"post_id":"cjnijyztg0013fnpvp0uzsjxa","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyztu001jfnpvkpzvl1df"},{"post_id":"cjnijyztj0017fnpvdrnuyo7g","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyztz001mfnpvyp7xschr"},{"post_id":"cjnijyzta000sfnpvxtwuamx2","category_id":"cjnijyztb000vfnpvaegrtluy","_id":"cjnijyzu1001pfnpvtvd6jfxy"},{"post_id":"cjnijyztl001afnpv6ujjpui8","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzu4001tfnpvaa8q3a9s"},{"post_id":"cjnijyztn001cfnpvwqrjbq6d","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzu6001wfnpvd53bhtks"},{"post_id":"cjnijyztr001ffnpvgzu72qss","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzu80020fnpv3jo9ma5c"},{"post_id":"cjnijyztt001ifnpvtx7bsbz9","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzua0023fnpvngflxu6a"},{"post_id":"cjnijyztx001lfnpvp2r99yrl","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzuf0027fnpv6nf7e6pp"},{"post_id":"cjnijyzu0001ofnpvs4i2s9j6","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzuh002afnpv0jxk4tsr"},{"post_id":"cjnijyzu3001sfnpvffspsvho","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzuj002efnpvou9nsuiu"},{"post_id":"cjnijyzu5001vfnpviu2qsltl","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzum002hfnpvahg62cim"},{"post_id":"cjnijyzu7001zfnpv6icddg21","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzuo002kfnpvoxk1xo8a"},{"post_id":"cjnijyzu90022fnpvglhg7105","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzuq002ofnpvgagwy9ds"},{"post_id":"cjnijyzub0026fnpvztpmdlry","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzur002qfnpvz1js9wwj"},{"post_id":"cjnijyzug0029fnpvcx210iet","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzut002tfnpv4y5xz9mt"},{"post_id":"cjnijyzui002dfnpvvmoqu0ik","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzuv002vfnpvrguqxgya"},{"post_id":"cjnijyzun002jfnpvn163y3vn","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzv6002yfnpvyr43jryl"},{"post_id":"cjnijyzup002nfnpvkhcw3zz0","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzv80032fnpv0f32hvtx"},{"post_id":"cjnijyzuq002pfnpvcu8jicnf","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzva0036fnpvrc13mahc"},{"post_id":"cjnijyzus002sfnpvjfqdf7gj","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzvc0039fnpvjouiyrf1"},{"post_id":"cjnijyzux002xfnpvxaap3irx","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzve003cfnpvdvowm6d2"},{"post_id":"cjnijyzv70031fnpv34mr23vy","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzvg003ffnpv86l9b96b"},{"post_id":"cjnijyzv90035fnpvnm23uxxo","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzvi003hfnpv0fpbuuwb"},{"post_id":"cjnijyzuu002ufnpvh88jtfxu","category_id":"cjnijyzv60030fnpvt53yyx46","_id":"cjnijyzvo003kfnpvfr4llspf"},{"post_id":"cjnijyzvb0038fnpv2nbvds6u","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzvq003nfnpv8utkham2"},{"post_id":"cjnijyzvd003bfnpv5l8wq9dc","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzvs003rfnpvzcq3u1zt"},{"post_id":"cjnijyzvf003efnpvgapfptfy","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzvu003ufnpvcx2yt1os"},{"post_id":"cjnijyzvh003gfnpvk9yrcys3","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzvw003xfnpv0c5ywxe0"},{"post_id":"cjnijyzvj003jfnpvxcp3urf1","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzvy003zfnpvshlcvhnz"},{"post_id":"cjnijyzvp003mfnpv9thl6jiy","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzw00042fnpvohjfuvlx"},{"post_id":"cjnijyzvr003qfnpvap6qj643","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzw20045fnpvdnns3ds7"},{"post_id":"cjnijyzvt003tfnpvo6xobihi","category_id":"cjnijyztb000vfnpvaegrtluy","_id":"cjnijyzw50048fnpvr1n4s5oc"},{"post_id":"cjnijyzw10044fnpvoq90fu18","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzwa004dfnpvascqecpc"},{"post_id":"cjnijyzvv003wfnpvxl98bunj","category_id":"cjnijyzvy0040fnpv4mme0xp2","_id":"cjnijyzwd004ifnpvjmwxrmas"},{"post_id":"cjnijyzw20046fnpv1gia6jbc","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzwf004lfnpvcrx5ggon"},{"post_id":"cjnijyzw7004afnpvpq660khu","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzwh004pfnpvsgix3qtz"},{"post_id":"cjnijyzvx003yfnpv01olm6cc","category_id":"cjnijyzvy0040fnpv4mme0xp2","_id":"cjnijyzwi004rfnpvvou9nifz"},{"post_id":"cjnijyzw9004cfnpvoew0klrh","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzwk004tfnpv0xobdmkr"},{"post_id":"cjnijyzwc004hfnpvv20wmpn7","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzww004wfnpvcb2bo9xi"},{"post_id":"cjnijyzvz0041fnpvflkhuoit","category_id":"cjnijyzvy0040fnpv4mme0xp2","_id":"cjnijyzwy004zfnpvzaoyjejk"},{"post_id":"cjnijyzwe004kfnpva08c23kx","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzx00052fnpvz4q5sasx"},{"post_id":"cjnijyzwg004ofnpvrvc9yh7u","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzx20056fnpvhqkhjm3e"},{"post_id":"cjnijyzwh004qfnpv5rjwhjp3","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzx4005afnpvhtpl7be3"},{"post_id":"cjnijyzwy0051fnpvvog3dmhw","category_id":"cjnijyzww004xfnpvw116wd49","_id":"cjnijyzx6005efnpvj51iascf"},{"post_id":"cjnijyzwj004sfnpvnoo37dpx","category_id":"cjnijyzww004xfnpvw116wd49","_id":"cjnijyzx8005ifnpvd2wy4i7b"},{"post_id":"cjnijyzx10054fnpvzyengkft","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzxh005lfnpv5pzupb5k"},{"post_id":"cjnijyzx30059fnpvnqkdltcu","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzxi005ofnpvqaucfc2y"},{"post_id":"cjnijyzwl004vfnpvynhqhw47","category_id":"cjnijyzww004xfnpvw116wd49","_id":"cjnijyzxk005sfnpvrrrhgi0e"},{"post_id":"cjnijyzx5005cfnpv9x61gr2j","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzxm005ufnpv3u817kto"},{"post_id":"cjnijyzx7005hfnpvuh2ne09p","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzxo005xfnpv8kd8gtxk"},{"post_id":"cjnijyzwx004yfnpv94qjhkrh","category_id":"cjnijyzww004xfnpvw116wd49","_id":"cjnijyzxp005zfnpvbo0iecmi"},{"post_id":"cjnijyzxf005kfnpvfx1hhoxq","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzxu0062fnpvdiwypax3"},{"post_id":"cjnijyzxh005nfnpv491oj78o","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzxv0064fnpvnxjy11d5"},{"post_id":"cjnijyzxj005rfnpvs5ds89qn","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzxx0067fnpv6psddswm"},{"post_id":"cjnijyzxl005tfnpvp76u8aqx","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzxz006afnpvsow8ul6e"},{"post_id":"cjnijyzxn005wfnpv2f2ohwta","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzy0006dfnpvpssuw3rn"},{"post_id":"cjnijyzxo005yfnpvgdqi6h82","category_id":"cjnijyztb000vfnpvaegrtluy","_id":"cjnijyzy2006hfnpvc1wwg11p"},{"post_id":"cjnijyzxq0061fnpvqok1nldg","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzy4006jfnpv2todozee"},{"post_id":"cjnijyzxu0063fnpvy26n77k8","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzy6006mfnpvlajwjn8v"},{"post_id":"cjnijyzxw0066fnpvjmovenod","category_id":"cjnijyzv60030fnpvt53yyx46","_id":"cjnijyzy7006ofnpvrqu72rtj"},{"post_id":"cjnijyzxy0069fnpvr6w0hscv","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzy9006rfnpv5e8lus44"},{"post_id":"cjnijyzxz006cfnpvosu6nsc6","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzyb006ufnpvf264eob3"},{"post_id":"cjnijyzy1006gfnpv1f7lt6df","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzyc006xfnpvc0umpiub"},{"post_id":"cjnijyzy3006ifnpvkb0zs91c","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzyc006zfnpvtios6f9u"},{"post_id":"cjnijyzy5006lfnpv37yf4ziv","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzyd0070fnpvo14ii72h"},{"post_id":"cjnijyzy6006nfnpvk0jtbmfq","category_id":"cjnijyzsc0007fnpv2ml1spa2","_id":"cjnijyzyd0073fnpvjqz0jh8t"},{"post_id":"cjnijyzy8006qfnpvw7rhsls0","category_id":"cjnijyzvy0040fnpv4mme0xp2","_id":"cjnijyzyd0075fnpvp6wa1yzi"},{"post_id":"cjnijyzya006tfnpvbbewsx1q","category_id":"cjnijyzvy0040fnpv4mme0xp2","_id":"cjnijyzye0077fnpvkfjc94r3"}],"PostTag":[{"post_id":"cjnijyzs00004fnpvdox5e378","tag_id":"cjnijyzsf0008fnpvrt4yj4jt","_id":"cjnijyztb000ufnpv7j7qhatb"},{"post_id":"cjnijyzs00004fnpvdox5e378","tag_id":"cjnijyzsv000gfnpvcygtzux9","_id":"cjnijyztd000yfnpv57yxjagg"},{"post_id":"cjnijyzs00004fnpvdox5e378","tag_id":"cjnijyzt4000mfnpv773nv6ub","_id":"cjnijyztg0012fnpvexwcssge"},{"post_id":"cjnijyzs80006fnpvu1weeico","tag_id":"cjnijyzt9000rfnpv25f15t6d","_id":"cjnijyzti0016fnpvakhusjdh"},{"post_id":"cjnijyztn001cfnpvwqrjbq6d","tag_id":"cjnijyzt9000rfnpv25f15t6d","_id":"cjnijyztt001hfnpvy84n3sy3"},{"post_id":"cjnijyzsh000afnpv2zqqs170","tag_id":"cjnijyzte000zfnpvlnghoc25","_id":"cjnijyztz001nfnpvydpdljpy"},{"post_id":"cjnijyzsh000afnpv2zqqs170","tag_id":"cjnijyztk0019fnpvak3gyoou","_id":"cjnijyzu2001qfnpvc1kz8w9b"},{"post_id":"cjnijyzsh000afnpv2zqqs170","tag_id":"cjnijyztq001efnpvdhky6t72","_id":"cjnijyzu4001ufnpv1buognjm"},{"post_id":"cjnijyztx001lfnpvp2r99yrl","tag_id":"cjnijyzte000zfnpvlnghoc25","_id":"cjnijyzu6001xfnpv1nvriql6"},{"post_id":"cjnijyztx001lfnpvp2r99yrl","tag_id":"cjnijyztk0019fnpvak3gyoou","_id":"cjnijyzu90021fnpvrmm0oh2t"},{"post_id":"cjnijyzu3001sfnpvffspsvho","tag_id":"cjnijyzt9000rfnpv25f15t6d","_id":"cjnijyzub0024fnpv2r2lnncv"},{"post_id":"cjnijyzu5001vfnpviu2qsltl","tag_id":"cjnijyzt9000rfnpv25f15t6d","_id":"cjnijyzuf0028fnpvneylmt52"},{"post_id":"cjnijyzu7001zfnpv6icddg21","tag_id":"cjnijyzt9000rfnpv25f15t6d","_id":"cjnijyzuh002bfnpvwc9s1r9y"},{"post_id":"cjnijyzsr000cfnpvjkqiu29y","tag_id":"cjnijyzte000zfnpvlnghoc25","_id":"cjnijyzuk002ffnpv7kcxol23"},{"post_id":"cjnijyzsr000cfnpvjkqiu29y","tag_id":"cjnijyztk0019fnpvak3gyoou","_id":"cjnijyzum002ifnpv3s9lttrr"},{"post_id":"cjnijyzsr000cfnpvjkqiu29y","tag_id":"cjnijyztq001efnpvdhky6t72","_id":"cjnijyzuo002mfnpvdseo2m4n"},{"post_id":"cjnijyzsu000efnpvf88mmjvm","tag_id":"cjnijyzub0025fnpvbt0ge02m","_id":"cjnijyzv6002zfnpv3vvvdnka"},{"post_id":"cjnijyzsu000efnpvf88mmjvm","tag_id":"cjnijyzuh002cfnpvfw6w6xy8","_id":"cjnijyzv80033fnpv797eo8dt"},{"post_id":"cjnijyzsu000efnpvf88mmjvm","tag_id":"cjnijyzuo002lfnpvmu7cd0qd","_id":"cjnijyzvb0037fnpvat4rt3j6"},{"post_id":"cjnijyzsu000efnpvf88mmjvm","tag_id":"cjnijyzus002rfnpv30jdtd1f","_id":"cjnijyzvd003afnpv7sop7qyo"},{"post_id":"cjnijyzt0000ifnpvyasy93jf","tag_id":"cjnijyzuw002wfnpvcr8hs3qa","_id":"cjnijyzvo003lfnpvfohujmhu"},{"post_id":"cjnijyzt0000ifnpvyasy93jf","tag_id":"cjnijyzv90034fnpvmgjv88hb","_id":"cjnijyzvq003ofnpv64063hw6"},{"post_id":"cjnijyzt0000ifnpvyasy93jf","tag_id":"cjnijyzve003dfnpv9s6pqejo","_id":"cjnijyzvs003sfnpvhv3x5hu8"},{"post_id":"cjnijyzt2000jfnpvde36lvfm","tag_id":"cjnijyzvi003ifnpv6wg50beu","_id":"cjnijyzw8004bfnpv9qu7wv1t"},{"post_id":"cjnijyzt2000jfnpvde36lvfm","tag_id":"cjnijyzvq003pfnpv6sqk096e","_id":"cjnijyzwa004ffnpv48i8mtp4"},{"post_id":"cjnijyzt2000jfnpvde36lvfm","tag_id":"cjnijyzvu003vfnpvlids5fnw","_id":"cjnijyzwd004jfnpv7gbm0tzp"},{"post_id":"cjnijyzt2000jfnpvde36lvfm","tag_id":"cjnijyzw00043fnpvj4euwacg","_id":"cjnijyzwf004mfnpvikrtk4rc"},{"post_id":"cjnijyzt5000nfnpvoe9anvyn","tag_id":"cjnijyzw60049fnpv4htmpwqv","_id":"cjnijyzx00053fnpviourbj1g"},{"post_id":"cjnijyzt5000nfnpvoe9anvyn","tag_id":"cjnijyzwb004gfnpvlpn3d4dv","_id":"cjnijyzx20057fnpvvd2fl2c6"},{"post_id":"cjnijyzt5000nfnpvoe9anvyn","tag_id":"cjnijyzwf004nfnpvgxwatxjt","_id":"cjnijyzx4005bfnpvhgo6tkhr"},{"post_id":"cjnijyzt5000nfnpvoe9anvyn","tag_id":"cjnijyzwk004ufnpv777uf878","_id":"cjnijyzx6005ffnpvlqcekp5q"},{"post_id":"cjnijyzt7000pfnpv00xu7dst","tag_id":"cjnijyzwy0050fnpv1ae1z9zy","_id":"cjnijyzxf005jfnpvusbr6h5o"},{"post_id":"cjnijyzt7000pfnpv00xu7dst","tag_id":"cjnijyzx30058fnpv2jsdyt1z","_id":"cjnijyzxh005mfnpvwa8fl80h"},{"post_id":"cjnijyzta000sfnpvxtwuamx2","tag_id":"cjnijyzx7005gfnpv4pkh4bkb","_id":"cjnijyzxj005qfnpvnse7k12k"},{"post_id":"cjnijyztc000wfnpvm1xmh17n","tag_id":"cjnijyzxi005pfnpvamv64qzv","_id":"cjnijyzxx0068fnpvixuil0yf"},{"post_id":"cjnijyztc000wfnpvm1xmh17n","tag_id":"cjnijyzxm005vfnpvdphgdrat","_id":"cjnijyzxz006bfnpvuvtiwdlw"},{"post_id":"cjnijyztc000wfnpvm1xmh17n","tag_id":"cjnijyzxq0060fnpv25tn01hy","_id":"cjnijyzy1006ffnpv16t24od4"},{"post_id":"cjnijyzte0010fnpvgbbs0uh6","tag_id":"cjnijyzxw0065fnpvjmop5o88","_id":"cjnijyzya006sfnpvh2nr4ijd"},{"post_id":"cjnijyzte0010fnpvgbbs0uh6","tag_id":"cjnijyzy1006efnpvj7wyqi25","_id":"cjnijyzyb006vfnpvei4rgg0e"},{"post_id":"cjnijyzte0010fnpvgbbs0uh6","tag_id":"cjnijyzy4006kfnpvo3cwigqk","_id":"cjnijyzyc006yfnpvolj6ccau"},{"post_id":"cjnijyztg0013fnpvp0uzsjxa","tag_id":"cjnijyzy8006pfnpvbijndsv3","_id":"cjnijyzyd0072fnpvv2yix9jy"},{"post_id":"cjnijyztg0013fnpvp0uzsjxa","tag_id":"cjnijyzyc006wfnpvw023jxew","_id":"cjnijyzyd0074fnpvp8f4f6cf"},{"post_id":"cjnijyztj0017fnpvdrnuyo7g","tag_id":"cjnijyzyd0071fnpv6c61dz98","_id":"cjnijyzye0078fnpvou1tznhl"},{"post_id":"cjnijyztl001afnpv6ujjpui8","tag_id":"cjnijyzyd0076fnpv1xav33as","_id":"cjnijyzyn007dfnpv29ppp8ec"},{"post_id":"cjnijyztl001afnpv6ujjpui8","tag_id":"cjnijyzye0079fnpvfjltn964","_id":"cjnijyzyn007efnpvdbleas3i"},{"post_id":"cjnijyztl001afnpv6ujjpui8","tag_id":"cjnijyzye007afnpvavhyz9rg","_id":"cjnijyzyn007gfnpv0fkvavf3"},{"post_id":"cjnijyztl001afnpv6ujjpui8","tag_id":"cjnijyzym007bfnpvtvkzmvu2","_id":"cjnijyzyn007hfnpvlpte0wn7"},{"post_id":"cjnijyztr001ffnpvgzu72qss","tag_id":"cjnijyzym007cfnpvyjmgvu2t","_id":"cjnijyzyo007jfnpv70bhzocn"},{"post_id":"cjnijyztt001ifnpvtx7bsbz9","tag_id":"cjnijyzyn007ffnpvrn4mwu9i","_id":"cjnijyzyp007mfnpv4a89lqjh"},{"post_id":"cjnijyztt001ifnpvtx7bsbz9","tag_id":"cjnijyzyo007ifnpv3yueiat0","_id":"cjnijyzyq007nfnpvw68j85i4"},{"post_id":"cjnijyztt001ifnpvtx7bsbz9","tag_id":"cjnijyzyp007kfnpv6iy6hzxp","_id":"cjnijyzyq007pfnpv8z1qzynx"},{"post_id":"cjnijyzu0001ofnpvs4i2s9j6","tag_id":"cjnijyzyp007lfnpvfpny2rcc","_id":"cjnijyzyr007tfnpvtwtogmev"},{"post_id":"cjnijyzu0001ofnpvs4i2s9j6","tag_id":"cjnijyzyq007ofnpvd98ctaci","_id":"cjnijyzyr007ufnpvmo4du540"},{"post_id":"cjnijyzu0001ofnpvs4i2s9j6","tag_id":"cjnijyzyq007qfnpvaguievv9","_id":"cjnijyzyr007wfnpv2m38529y"},{"post_id":"cjnijyzu0001ofnpvs4i2s9j6","tag_id":"cjnijyzyq007rfnpvvuww5bda","_id":"cjnijyzyr007xfnpvwr85gbwo"},{"post_id":"cjnijyzu90022fnpvglhg7105","tag_id":"cjnijyzyr007sfnpvvn09rwsf","_id":"cjnijyzys0080fnpv5ntzxs4a"},{"post_id":"cjnijyzu90022fnpvglhg7105","tag_id":"cjnijyzyr007vfnpvf1y413vx","_id":"cjnijyzys0081fnpvbre54uzn"},{"post_id":"cjnijyzu90022fnpvglhg7105","tag_id":"cjnijyzys007yfnpvn3leljlp","_id":"cjnijyzyt0083fnpvyijp1x2h"},{"post_id":"cjnijyzub0026fnpvztpmdlry","tag_id":"cjnijyzys007zfnpvak7sak3d","_id":"cjnijyzyu0088fnpv25toy9wz"},{"post_id":"cjnijyzub0026fnpvztpmdlry","tag_id":"cjnijyzys0082fnpv0dpoaygi","_id":"cjnijyzyu0089fnpvl5nrj400"},{"post_id":"cjnijyzub0026fnpvztpmdlry","tag_id":"cjnijyzyt0084fnpvrocv0zif","_id":"cjnijyzyv008bfnpvtunok4h3"},{"post_id":"cjnijyzub0026fnpvztpmdlry","tag_id":"cjnijyzyt0085fnpvvcoj4xnn","_id":"cjnijyzyv008cfnpv0fx2qsww"},{"post_id":"cjnijyzub0026fnpvztpmdlry","tag_id":"cjnijyzyt0086fnpvl52iu70b","_id":"cjnijyzyv008efnpvgo23yqwb"},{"post_id":"cjnijyzug0029fnpvcx210iet","tag_id":"cjnijyzyu0087fnpvl7gt0oer","_id":"cjnijyzyw008ffnpvlwl33h4e"},{"post_id":"cjnijyzug0029fnpvcx210iet","tag_id":"cjnijyzyu008afnpviwvmsnfb","_id":"cjnijyzyw008hfnpvdmdtcy9o"},{"post_id":"cjnijyzui002dfnpvvmoqu0ik","tag_id":"cjnijyzyt0085fnpvvcoj4xnn","_id":"cjnijyzyy008nfnpvz7lqlun6"},{"post_id":"cjnijyzui002dfnpvvmoqu0ik","tag_id":"cjnijyzyu0087fnpvl7gt0oer","_id":"cjnijyzyz008ofnpvj8qx6lxo"},{"post_id":"cjnijyzui002dfnpvvmoqu0ik","tag_id":"cjnijyzyw008ifnpvxd3f2lho","_id":"cjnijyzyz008qfnpvvkvl830g"},{"post_id":"cjnijyzui002dfnpvvmoqu0ik","tag_id":"cjnijyzyx008jfnpv8wd6qllv","_id":"cjnijyzyz008rfnpv5m6hpnhp"},{"post_id":"cjnijyzui002dfnpvvmoqu0ik","tag_id":"cjnijyzyx008kfnpvht9g2d8u","_id":"cjnijyzyz008tfnpvt6v36nzu"},{"post_id":"cjnijyzui002dfnpvvmoqu0ik","tag_id":"cjnijyzyx008lfnpvmlnbwdr6","_id":"cjnijyzyz008ufnpvy8h0bznz"},{"post_id":"cjnijyzun002jfnpvn163y3vn","tag_id":"cjnijyzyt0085fnpvvcoj4xnn","_id":"cjnijyzz0008wfnpvoiomthoe"},{"post_id":"cjnijyzun002jfnpvn163y3vn","tag_id":"cjnijyzyz008pfnpvfqzu3ygv","_id":"cjnijyzz0008xfnpvz3duw8on"},{"post_id":"cjnijyzun002jfnpvn163y3vn","tag_id":"cjnijyzyz008sfnpvqlbbrpuj","_id":"cjnijyzz1008zfnpvyohrbpya"},{"post_id":"cjnijyzup002nfnpvkhcw3zz0","tag_id":"cjnijyzz0008vfnpvy4rvix83","_id":"cjnijyzz10090fnpv7fdfijcg"},{"post_id":"cjnijyzuq002pfnpvcu8jicnf","tag_id":"cjnijyzz0008yfnpvpziik603","_id":"cjnijyzz20093fnpvlzz4jwpp"},{"post_id":"cjnijyzuq002pfnpvcu8jicnf","tag_id":"cjnijyzz10091fnpv6siohmup","_id":"cjnijyzz20094fnpvy4k9sw0s"},{"post_id":"cjnijyzus002sfnpvjfqdf7gj","tag_id":"cjnijyzz0008yfnpvpziik603","_id":"cjnijyzz30097fnpvr5411759"},{"post_id":"cjnijyzus002sfnpvjfqdf7gj","tag_id":"cjnijyzz20095fnpvbx03mzm2","_id":"cjnijyzz30098fnpvdnjfvcic"},{"post_id":"cjnijyzuu002ufnpvh88jtfxu","tag_id":"cjnijyzz20096fnpv2syuvy50","_id":"cjnijyzz3009afnpv6u7vscnt"},{"post_id":"cjnijyzux002xfnpvxaap3irx","tag_id":"cjnijyzz30099fnpvd6k5zard","_id":"cjnijyzz4009dfnpvb9pwf4kc"},{"post_id":"cjnijyzux002xfnpvxaap3irx","tag_id":"cjnijyzz3009bfnpv9lr5z8mu","_id":"cjnijyzz4009efnpvwitjful4"},{"post_id":"cjnijyzv70031fnpv34mr23vy","tag_id":"cjnijyzz4009cfnpvssp90oxy","_id":"cjnijyzz5009gfnpvi5rbhfuv"},{"post_id":"cjnijyzv90035fnpvnm23uxxo","tag_id":"cjnijyzxm005vfnpvdphgdrat","_id":"cjnijyzz7009lfnpvkn1x86j7"},{"post_id":"cjnijyzv90035fnpvnm23uxxo","tag_id":"cjnijyzz5009hfnpv557wc9tr","_id":"cjnijyzz7009mfnpvb32ixy41"},{"post_id":"cjnijyzv90035fnpvnm23uxxo","tag_id":"cjnijyzz6009ifnpvc9uvaywf","_id":"cjnijyzz8009ofnpvicpdirig"},{"post_id":"cjnijyzv90035fnpvnm23uxxo","tag_id":"cjnijyzz6009jfnpvkfri807c","_id":"cjnijyzz8009pfnpvjkplybxp"},{"post_id":"cjnijyzvb0038fnpv2nbvds6u","tag_id":"cjnijyzxm005vfnpvdphgdrat","_id":"cjnijyzz9009sfnpvj6j1wqvz"},{"post_id":"cjnijyzvb0038fnpv2nbvds6u","tag_id":"cjnijyzte000zfnpvlnghoc25","_id":"cjnijyzza009tfnpvyqhpcapd"},{"post_id":"cjnijyzvb0038fnpv2nbvds6u","tag_id":"cjnijyzz7009nfnpvnvltn86u","_id":"cjnijyzza009vfnpvpplqel9l"},{"post_id":"cjnijyzvb0038fnpv2nbvds6u","tag_id":"cjnijyzz8009qfnpv5u9w5d1k","_id":"cjnijyzza009wfnpvuahmzl3i"},{"post_id":"cjnijyzvd003bfnpv5l8wq9dc","tag_id":"cjnijyzte000zfnpvlnghoc25","_id":"cjnijyzzb009yfnpvywgx0hkb"},{"post_id":"cjnijyzvd003bfnpv5l8wq9dc","tag_id":"cjnijyzz9009rfnpvt6qc8nvx","_id":"cjnijyzzb009zfnpvpv8fjdxx"},{"post_id":"cjnijyzvf003efnpvgapfptfy","tag_id":"cjnijyzte000zfnpvlnghoc25","_id":"cjnijyzzb00a1fnpvinybw6hc"},{"post_id":"cjnijyzvf003efnpvgapfptfy","tag_id":"cjnijyzza009ufnpv0syiweno","_id":"cjnijyzzc00a2fnpvv5wiehuw"},{"post_id":"cjnijyzvh003gfnpvk9yrcys3","tag_id":"cjnijyzza009xfnpvgsx5mm8f","_id":"cjnijyzzc00a4fnpv2epmijn0"},{"post_id":"cjnijyzvj003jfnpvxcp3urf1","tag_id":"cjnijyzza009xfnpvgsx5mm8f","_id":"cjnijyzzd00a5fnpvss3q0bvy"},{"post_id":"cjnijyzvp003mfnpv9thl6jiy","tag_id":"cjnijyzza009xfnpvgsx5mm8f","_id":"cjnijyzze00a7fnpvlh475kok"},{"post_id":"cjnijyzvr003qfnpvap6qj643","tag_id":"cjnijyzz5009hfnpv557wc9tr","_id":"cjnijyzzg00abfnpvhuskw990"},{"post_id":"cjnijyzvr003qfnpvap6qj643","tag_id":"cjnijyzxm005vfnpvdphgdrat","_id":"cjnijyzzg00acfnpva7bkxjyh"},{"post_id":"cjnijyzvr003qfnpvap6qj643","tag_id":"cjnijyzzf00a9fnpvsuvp1uwo","_id":"cjnijyzzg00aefnpvf0r7fklr"},{"post_id":"cjnijyzvt003tfnpvo6xobihi","tag_id":"cjnijyzzf00aafnpvh36ljbg4","_id":"cjnijyzzh00agfnpvr29jtoo3"},{"post_id":"cjnijyzvt003tfnpvo6xobihi","tag_id":"cjnijyzzg00adfnpvx2nrlxfj","_id":"cjnijyzzh00ahfnpv112t8yd9"},{"post_id":"cjnijyzvv003wfnpvxl98bunj","tag_id":"cjnijyzzg00affnpvyuv0kz4p","_id":"cjnijyzzh00ajfnpvkjiujcne"},{"post_id":"cjnijyzvx003yfnpv01olm6cc","tag_id":"cjnijyzzg00affnpvyuv0kz4p","_id":"cjnijyzzi00alfnpvmy7j8goz"},{"post_id":"cjnijyzvz0041fnpvflkhuoit","tag_id":"cjnijyzzg00affnpvyuv0kz4p","_id":"cjnijyzzj00anfnpvq0rs4v5k"},{"post_id":"cjnijyzw10044fnpvoq90fu18","tag_id":"cjnijyzzj00amfnpvjqy1874d","_id":"cjnijyzzl00asfnpvmh9l1x0w"},{"post_id":"cjnijyzw10044fnpvoq90fu18","tag_id":"cjnijyzzj00aofnpvgig9id7y","_id":"cjnijyzzl00atfnpvsekjf618"},{"post_id":"cjnijyzw10044fnpvoq90fu18","tag_id":"cjnijyzzk00apfnpvdh56bcmq","_id":"cjnijyzzl00avfnpv8r6bsojb"},{"post_id":"cjnijyzw10044fnpvoq90fu18","tag_id":"cjnijyzzk00aqfnpvev06fw00","_id":"cjnijyzzl00awfnpvooxyvscj"},{"post_id":"cjnijyzw20046fnpv1gia6jbc","tag_id":"cjnijyzzk00arfnpvaj6xzce1","_id":"cjnijyzzo00ayfnpvwkh47yib"},{"post_id":"cjnijyzw7004afnpvpq660khu","tag_id":"cjnijyzzl00aufnpvbgjysfba","_id":"cjnijyzzp00b0fnpvuuh24rzk"},{"post_id":"cjnijyzw7004afnpvpq660khu","tag_id":"cjnijyzzm00axfnpvfo2p8fbh","_id":"cjnijyzzp00b1fnpvte25n7q1"},{"post_id":"cjnijyzw9004cfnpvoew0klrh","tag_id":"cjnijyzzo00azfnpveu1r5c85","_id":"cjnijyzzp00b3fnpvdrc70n6r"},{"post_id":"cjnijyzwc004hfnpvv20wmpn7","tag_id":"cjnijyzzp00b2fnpv18ameeta","_id":"cjnijyzzq00b5fnpvevart9mn"},{"post_id":"cjnijyzwe004kfnpva08c23kx","tag_id":"cjnijyzzp00b4fnpvteie0gej","_id":"cjnijyzzt00b9fnpvvakedx6i"},{"post_id":"cjnijyzwe004kfnpva08c23kx","tag_id":"cjnijyzzq00b6fnpvuy7x22jp","_id":"cjnijyzzu00bafnpv5iey36wu"},{"post_id":"cjnijyzwe004kfnpva08c23kx","tag_id":"cjnijyzzs00b7fnpvy4mnhgwr","_id":"cjnijyzzu00bcfnpv2knysn6p"},{"post_id":"cjnijyzwg004ofnpvrvc9yh7u","tag_id":"cjnijyzwb004gfnpvlpn3d4dv","_id":"cjnijyzzv00befnpvawqzp1bw"},{"post_id":"cjnijyzwg004ofnpvrvc9yh7u","tag_id":"cjnijyzwf004nfnpvgxwatxjt","_id":"cjnijyzzv00bffnpvwig7a8z4"},{"post_id":"cjnijyzwg004ofnpvrvc9yh7u","tag_id":"cjnijyzzs00b7fnpvy4mnhgwr","_id":"cjnijyzzw00bhfnpvtyhal1bb"},{"post_id":"cjnijyzwh004qfnpv5rjwhjp3","tag_id":"cjnijyzwb004gfnpvlpn3d4dv","_id":"cjnijyzzw00bjfnpv4saziddr"},{"post_id":"cjnijyzwh004qfnpv5rjwhjp3","tag_id":"cjnijyzzu00bdfnpv6hzubm2b","_id":"cjnijyzzw00bkfnpvze4utrk0"},{"post_id":"cjnijyzwh004qfnpv5rjwhjp3","tag_id":"cjnijyzzv00bgfnpvfz92n81a","_id":"cjnijyzzx00bmfnpvxauauitx"},{"post_id":"cjnijyzwj004sfnpvnoo37dpx","tag_id":"cjnijyzzw00bifnpvzwh6ojln","_id":"cjnijyzzx00bnfnpvabrj8jai"},{"post_id":"cjnijyzwl004vfnpvynhqhw47","tag_id":"cjnijyzzw00bifnpvzwh6ojln","_id":"cjnijyzzy00bpfnpvevoehmtv"},{"post_id":"cjnijyzwx004yfnpv94qjhkrh","tag_id":"cjnijyzzw00bifnpvzwh6ojln","_id":"cjnijyzzz00brfnpv79j16glj"},{"post_id":"cjnijyzwy0051fnpvvog3dmhw","tag_id":"cjnijyzzw00bifnpvzwh6ojln","_id":"cjnijz00000btfnpvqhm48sab"},{"post_id":"cjnijyzx10054fnpvzyengkft","tag_id":"cjnijyzzk00arfnpvaj6xzce1","_id":"cjnijz00800bwfnpvyzby666s"},{"post_id":"cjnijyzx10054fnpvzyengkft","tag_id":"cjnijz00000bufnpv6gjh5yau","_id":"cjnijz00800bxfnpv7f530pj0"},{"post_id":"cjnijyzx30059fnpvnqkdltcu","tag_id":"cjnijyzzk00arfnpvaj6xzce1","_id":"cjnijz00a00c1fnpvakre6vd9"},{"post_id":"cjnijyzx30059fnpvnqkdltcu","tag_id":"cjnijz00800byfnpv5gvmkw8w","_id":"cjnijz00a00c2fnpviiexmary"},{"post_id":"cjnijyzx30059fnpvnqkdltcu","tag_id":"cjnijz00900bzfnpvt8sqvcee","_id":"cjnijz00b00c4fnpvqa7iw1y7"},{"post_id":"cjnijyzx5005cfnpv9x61gr2j","tag_id":"cjnijz00900c0fnpvfg911c4q","_id":"cjnijz00c00c8fnpvz8vf4vgg"},{"post_id":"cjnijyzx5005cfnpv9x61gr2j","tag_id":"cjnijz00a00c3fnpvi24udd1a","_id":"cjnijz00c00c9fnpv8xptvubl"},{"post_id":"cjnijyzx5005cfnpv9x61gr2j","tag_id":"cjnijz00b00c5fnpv2jpheahu","_id":"cjnijz00d00cbfnpvdmled50h"},{"post_id":"cjnijyzx5005cfnpv9x61gr2j","tag_id":"cjnijz00b00c6fnpv8b85bzcn","_id":"cjnijz00d00ccfnpvusojk7ro"},{"post_id":"cjnijyzx7005hfnpvuh2ne09p","tag_id":"cjnijz00b00c7fnpvvtkzlksq","_id":"cjnijz00e00cffnpvtszuv089"},{"post_id":"cjnijyzx7005hfnpvuh2ne09p","tag_id":"cjnijz00c00cafnpvwxflsw1o","_id":"cjnijz00e00cgfnpvw69mxxkv"},{"post_id":"cjnijyzx7005hfnpvuh2ne09p","tag_id":"cjnijz00d00cdfnpvrsal19zo","_id":"cjnijz00e00cifnpvmhalpepl"},{"post_id":"cjnijyzxf005kfnpvfx1hhoxq","tag_id":"cjnijz00d00cefnpvyfzqaedw","_id":"cjnijz00g00cmfnpv54h8r0y6"},{"post_id":"cjnijyzxf005kfnpvfx1hhoxq","tag_id":"cjnijz00e00chfnpvycbvn357","_id":"cjnijz00g00cnfnpvfimptdls"},{"post_id":"cjnijyzxf005kfnpvfx1hhoxq","tag_id":"cjnijz00e00cjfnpv8vej2rn3","_id":"cjnijz00h00cpfnpvcybqinu1"},{"post_id":"cjnijyzxf005kfnpvfx1hhoxq","tag_id":"cjnijz00f00ckfnpv22jia2ph","_id":"cjnijz00h00cqfnpv97ybrgmi"},{"post_id":"cjnijyzxh005nfnpv491oj78o","tag_id":"cjnijyzve003dfnpv9s6pqejo","_id":"cjnijz00h00csfnpve69qtr7q"},{"post_id":"cjnijyzxh005nfnpv491oj78o","tag_id":"cjnijz00f00clfnpvqbh8jzyg","_id":"cjnijz00i00ctfnpvio3x6gfy"},{"post_id":"cjnijyzxj005rfnpvs5ds89qn","tag_id":"cjnijyzve003dfnpv9s6pqejo","_id":"cjnijz00i00cvfnpv6cxk84q2"},{"post_id":"cjnijyzxj005rfnpvs5ds89qn","tag_id":"cjnijz00f00clfnpvqbh8jzyg","_id":"cjnijz00i00cwfnpvifwb9wxx"},{"post_id":"cjnijyzxl005tfnpvp76u8aqx","tag_id":"cjnijz00h00crfnpvpbg57qsi","_id":"cjnijz00k00czfnpv7zhobwje"},{"post_id":"cjnijyzxl005tfnpvp76u8aqx","tag_id":"cjnijz00i00cufnpvfz3cxdwd","_id":"cjnijz00k00d0fnpv04vmvftp"},{"post_id":"cjnijyzxl005tfnpvp76u8aqx","tag_id":"cjnijz00i00cxfnpviwxk6eb8","_id":"cjnijz00k00d2fnpvpty67zdi"},{"post_id":"cjnijyzxn005wfnpv2f2ohwta","tag_id":"cjnijz00e00cjfnpv8vej2rn3","_id":"cjnijz00l00d4fnpv41odtyet"},{"post_id":"cjnijyzxn005wfnpv2f2ohwta","tag_id":"cjnijyzzk00arfnpvaj6xzce1","_id":"cjnijz00l00d5fnpv7dqsjjg7"},{"post_id":"cjnijyzxo005yfnpvgdqi6h82","tag_id":"cjnijz00l00d3fnpvyru6ae7m","_id":"cjnijz00m00d8fnpvrkks3phy"},{"post_id":"cjnijyzxo005yfnpvgdqi6h82","tag_id":"cjnijz00l00d6fnpvivpd4p2m","_id":"cjnijz00n00d9fnpvdwip5dn1"},{"post_id":"cjnijyzxq0061fnpvqok1nldg","tag_id":"cjnijz00m00d7fnpv6xa612h4","_id":"cjnijz00n00dbfnpvfroizyk2"},{"post_id":"cjnijyzxu0063fnpvy26n77k8","tag_id":"cjnijz00n00dafnpv33yrgvo3","_id":"cjnijz00o00defnpvnj3wmthp"},{"post_id":"cjnijyzxu0063fnpvy26n77k8","tag_id":"cjnijz00n00dcfnpvv9wiw7oc","_id":"cjnijz00o00dffnpvz9el5x7g"},{"post_id":"cjnijyzxw0066fnpvjmovenod","tag_id":"cjnijz00o00ddfnpvhmin1i05","_id":"cjnijz00p00dhfnpvp3jvedic"},{"post_id":"cjnijyzxy0069fnpvr6w0hscv","tag_id":"cjnijz00o00dgfnpvtvupmotw","_id":"cjnijz00q00dkfnpv1662v0dz"},{"post_id":"cjnijyzxy0069fnpvr6w0hscv","tag_id":"cjnijz00p00difnpvdzlcqay9","_id":"cjnijz00q00dlfnpvhfst8jyl"},{"post_id":"cjnijyzxz006cfnpvosu6nsc6","tag_id":"cjnijz00o00dgfnpvtvupmotw","_id":"cjnijz00s00dofnpvgvvesam8"},{"post_id":"cjnijyzxz006cfnpvosu6nsc6","tag_id":"cjnijz00p00difnpvdzlcqay9","_id":"cjnijz00s00dpfnpv7df6foxk"},{"post_id":"cjnijyzy1006gfnpv1f7lt6df","tag_id":"cjnijz00o00dgfnpvtvupmotw","_id":"cjnijz00u00dsfnpvvhjrk8w2"},{"post_id":"cjnijyzy1006gfnpv1f7lt6df","tag_id":"cjnijz00p00difnpvdzlcqay9","_id":"cjnijz00u00dtfnpvcdrxww9v"},{"post_id":"cjnijyzy3006ifnpvkb0zs91c","tag_id":"cjnijz00o00dgfnpvtvupmotw","_id":"cjnijz00v00dwfnpv7mg2mlir"},{"post_id":"cjnijyzy3006ifnpvkb0zs91c","tag_id":"cjnijz00p00difnpvdzlcqay9","_id":"cjnijz00v00dxfnpv77d6me40"},{"post_id":"cjnijyzy5006lfnpv37yf4ziv","tag_id":"cjnijz00v00dvfnpvxlupcyis","_id":"cjnijz00y00e2fnpvukbf75yj"},{"post_id":"cjnijyzy5006lfnpv37yf4ziv","tag_id":"cjnijz00d00cefnpvyfzqaedw","_id":"cjnijz00y00e3fnpvtcqxxlrx"},{"post_id":"cjnijyzy5006lfnpv37yf4ziv","tag_id":"cjnijz00w00dzfnpv52aso0fv","_id":"cjnijz00y00e5fnpv6fkjcj48"},{"post_id":"cjnijyzy5006lfnpv37yf4ziv","tag_id":"cjnijz00x00e0fnpvdtim4005","_id":"cjnijz00y00e6fnpvujqezskt"},{"post_id":"cjnijyzy6006nfnpvk0jtbmfq","tag_id":"cjnijz00x00e1fnpvu5y3dtsp","_id":"cjnijz00z00e8fnpveifkevt5"},{"post_id":"cjnijyzy6006nfnpvk0jtbmfq","tag_id":"cjnijz00y00e4fnpv7wn407b5","_id":"cjnijz00z00e9fnpv87rvp3n9"},{"post_id":"cjnijyzy8006qfnpvw7rhsls0","tag_id":"cjnijz00y00e7fnpveqv7y858","_id":"cjnijz01800ecfnpvxpnrle8j"},{"post_id":"cjnijyzy8006qfnpvw7rhsls0","tag_id":"cjnijz00900c0fnpvfg911c4q","_id":"cjnijz01800edfnpvr1b3mdcl"},{"post_id":"cjnijyzya006tfnpvbbewsx1q","tag_id":"cjnijz00y00e7fnpveqv7y858","_id":"cjnijz01900effnpvtl4k5riv"},{"post_id":"cjnijyzya006tfnpvbbewsx1q","tag_id":"cjnijz01800eefnpvvce9utxf","_id":"cjnijz01900egfnpvhbjn5xnu"}],"Tag":[{"name":"HTML5","_id":"cjnijyzsf0008fnpvrt4yj4jt"},{"name":"FormData","_id":"cjnijyzsv000gfnpvcygtzux9"},{"name":"上传文件","_id":"cjnijyzt4000mfnpv773nv6ub"},{"name":"git","_id":"cjnijyzt9000rfnpv25f15t6d"},{"name":"javascript","_id":"cjnijyzte000zfnpvlnghoc25"},{"name":"算法，字符串","_id":"cjnijyztk0019fnpvak3gyoou"},{"name":"freecodecamp","_id":"cjnijyztq001efnpvdhky6t72"},{"name":"react","_id":"cjnijyzub0025fnpvbt0ge02m"},{"name":"ant-design","_id":"cjnijyzuh002cfnpvfw6w6xy8"},{"name":"select","_id":"cjnijyzuo002lfnpvmu7cd0qd"},{"name":"onSelect","_id":"cjnijyzus002rfnpv30jdtd1f"},{"name":"aria2","_id":"cjnijyzuw002wfnpvcr8hs3qa"},{"name":"transmission","_id":"cjnijyzv90034fnpvmgjv88hb"},{"name":"树莓派","_id":"cjnijyzve003dfnpv9s6pqejo"},{"name":"awk","_id":"cjnijyzvi003ifnpv6wg50beu"},{"name":"awk求和","_id":"cjnijyzvq003pfnpv6sqk096e"},{"name":"awk BEGIN","_id":"cjnijyzvu003vfnpvlids5fnw"},{"name":"awk END","_id":"cjnijyzw00043fnpvj4euwacg"},{"name":"aws","_id":"cjnijyzw60049fnpv4htmpwqv"},{"name":"mongodb","_id":"cjnijyzwb004gfnpvlpn3d4dv"},{"name":"备份","_id":"cjnijyzwf004nfnpvgxwatxjt"},{"name":"安全防护","_id":"cjnijyzwk004ufnpv777uf878"},{"name":"开篇","_id":"cjnijyzwy0050fnpv1ae1z9zy"},{"name":"心情","_id":"cjnijyzx30058fnpv2jsdyt1z"},{"name":"备案","_id":"cjnijyzx7005gfnpv4pkh4bkb"},{"name":"轮播","_id":"cjnijyzxi005pfnpvamv64qzv"},{"name":"js","_id":"cjnijyzxm005vfnpvdphgdrat"},{"name":"组件化","_id":"cjnijyzxq0060fnpv25tn01hy"},{"name":"Charles","_id":"cjnijyzxw0065fnpvjmop5o88"},{"name":"代理","_id":"cjnijyzy1006efnpvj7wyqi25"},{"name":"抓包","_id":"cjnijyzy4006kfnpvo3cwigqk"},{"name":"去广告","_id":"cjnijyzy8006pfnpvbijndsv3"},{"name":"Chrome插件","_id":"cjnijyzyc006wfnpvw023jxew"},{"name":"CSS，转载","_id":"cjnijyzyd0071fnpv6c61dz98"},{"name":"csv","_id":"cjnijyzyd0076fnpv1xav33as"},{"name":"oss","_id":"cjnijyzye0079fnpvfjltn964"},{"name":"utf8","_id":"cjnijyzye007afnpvavhyz9rg"},{"name":"bom","_id":"cjnijyzym007bfnpvtvkzmvu2"},{"name":"filewatchers","_id":"cjnijyzym007cfnpvyjmgvu2t"},{"name":"find","_id":"cjnijyzyn007ffnpvrn4mwu9i"},{"name":"xargs","_id":"cjnijyzyo007ifnpv3yueiat0"},{"name":"cp","_id":"cjnijyzyp007kfnpv6iy6hzxp"},{"name":"翻墙","_id":"cjnijyzyp007lfnpvfpny2rcc"},{"name":"squid","_id":"cjnijyzyq007ofnpvd98ctaci"},{"name":"stunnel","_id":"cjnijyzyq007qfnpvaguievv9"},{"name":"vpn代理","_id":"cjnijyzyq007rfnpvvuww5bda"},{"name":"gitcafe pages","_id":"cjnijyzyr007sfnpvvn09rwsf"},{"name":"gitcafe dns","_id":"cjnijyzyr007vfnpvf1y413vx"},{"name":"gitcafe 域名解析","_id":"cjnijyzys007yfnpvn3leljlp"},{"name":"page build warning","_id":"cjnijyzys007zfnpvak7sak3d"},{"name":"github","_id":"cjnijyzys0082fnpv0dpoaygi"},{"name":"gitpages warning","_id":"cjnijyzyt0084fnpvrocv0zif"},{"name":"hexo","_id":"cjnijyzyt0085fnpvvcoj4xnn"},{"name":"dns","_id":"cjnijyzyt0086fnpvl52iu70b"},{"name":"gulp","_id":"cjnijyzyu0087fnpvl7gt0oer"},{"name":"代码压缩","_id":"cjnijyzyu008afnpviwvmsnfb"},{"name":"minify","_id":"cjnijyzyw008ifnpvxd3f2lho"},{"name":"代码精简","_id":"cjnijyzyx008jfnpv8wd6qllv"},{"name":"Hexo博客优化","_id":"cjnijyzyx008kfnpvht9g2d8u"},{"name":"压缩","_id":"cjnijyzyx008lfnpvmlnbwdr6"},{"name":"访问统计","_id":"cjnijyzyz008pfnpvfqzu3ygv"},{"name":"阅读量，文章浏览统计","_id":"cjnijyzyz008sfnpvqlbbrpuj"},{"name":"html5 摄像头","_id":"cjnijyzz0008vfnpvy4rvix83"},{"name":"idea","_id":"cjnijyzz0008yfnpvpziik603"},{"name":"jvm","_id":"cjnijyzz10091fnpv6siohmup"},{"name":"远程调试","_id":"cjnijyzz20095fnpvbx03mzm2"},{"name":"请柬","_id":"cjnijyzz20096fnpv2syuvy50"},{"name":"iptables","_id":"cjnijyzz30099fnpvd6k5zard"},{"name":"端口转发","_id":"cjnijyzz3009bfnpv9lr5z8mu"},{"name":"jenkins","_id":"cjnijyzz4009cfnpvssp90oxy"},{"name":"java","_id":"cjnijyzz5009hfnpv557wc9tr"},{"name":"精度丢失","_id":"cjnijyzz6009ifnpvc9uvaywf"},{"name":"数值","_id":"cjnijyzz6009jfnpvkfri807c"},{"name":"区分访问设备","_id":"cjnijyzz7009nfnpvnvltn86u"},{"name":"获取访问设备","_id":"cjnijyzz8009qfnpv5u9w5d1k"},{"name":"encode","_id":"cjnijyzz9009rfnpvt6qc8nvx"},{"name":"for..in","_id":"cjnijyzza009ufnpv0syiweno"},{"name":"JS库","_id":"cjnijyzza009xfnpvgsx5mm8f"},{"name":"整型","_id":"cjnijyzzf00a9fnpvsuvp1uwo"},{"name":"养老","_id":"cjnijyzzf00aafnpvh36ljbg4"},{"name":"空巢老人","_id":"cjnijyzzg00adfnpvx2nrlxfj"},{"name":"口才","_id":"cjnijyzzg00affnpvyuv0kz4p"},{"name":"懒加载","_id":"cjnijyzzj00amfnpvjqy1874d"},{"name":"延迟加载","_id":"cjnijyzzj00aofnpvgig9id7y"},{"name":"jquery","_id":"cjnijyzzk00apfnpvdh56bcmq"},{"name":"lazyload","_id":"cjnijyzzk00aqfnpvev06fw00"},{"name":"mysql","_id":"cjnijyzzk00arfnpvaj6xzce1"},{"name":"天气API","_id":"cjnijyzzl00aufnpvbgjysfba"},{"name":"城市定位","_id":"cjnijyzzm00axfnpvfo2p8fbh"},{"name":"markdown","_id":"cjnijyzzo00azfnpveu1r5c85"},{"name":"maven","_id":"cjnijyzzp00b2fnpv18ameeta"},{"name":"锤子","_id":"cjnijyzzp00b4fnpvteie0gej"},{"name":"短信","_id":"cjnijyzzq00b6fnpvuy7x22jp"},{"name":"恢复","_id":"cjnijyzzs00b7fnpvy4mnhgwr"},{"name":"mongoose","_id":"cjnijyzzu00bdfnpv6hzubm2b"},{"name":"update all","_id":"cjnijyzzv00bgfnpvfz92n81a"},{"name":"阅读","_id":"cjnijyzzw00bifnpvzwh6ojln"},{"name":"case when","_id":"cjnijz00000bufnpv6gjh5yau"},{"name":"in","_id":"cjnijz00800byfnpv5gvmkw8w"},{"name":"find_in_set","_id":"cjnijz00900bzfnpvt8sqvcee"},{"name":"nodejs","_id":"cjnijz00900c0fnpvfg911c4q"},{"name":"session","_id":"cjnijz00a00c3fnpvi24udd1a"},{"name":"cookie","_id":"cjnijz00b00c5fnpv2jpheahu"},{"name":"登录验证","_id":"cjnijz00b00c6fnpv8b85bzcn"},{"name":"crypto","_id":"cjnijz00b00c7fnpvvtkzlksq"},{"name":"加密","_id":"cjnijz00c00cafnpvwxflsw1o"},{"name":"解密","_id":"cjnijz00d00cdfnpvrsal19zo"},{"name":"node","_id":"cjnijz00d00cefnpvyfzqaedw"},{"name":"ssh","_id":"cjnijz00e00chfnpvycbvn357"},{"name":"shell","_id":"cjnijz00e00cjfnpv8vej2rn3"},{"name":"远程执行","_id":"cjnijz00f00ckfnpv22jia2ph"},{"name":"raspberry","_id":"cjnijz00f00clfnpvqbh8jzyg"},{"name":"sendEmail","_id":"cjnijz00h00crfnpvpbg57qsi"},{"name":"发送邮件","_id":"cjnijz00i00cufnpvfz3cxdwd"},{"name":"中文乱码","_id":"cjnijz00i00cxfnpviwxk6eb8"},{"name":"年终总结","_id":"cjnijz00l00d3fnpvyru6ae7m"},{"name":"开年寄语","_id":"cjnijz00l00d6fnpvivpd4p2m"},{"name":"翻译","_id":"cjnijz00m00d7fnpv6xa612h4"},{"name":"Java","_id":"cjnijz00n00dafnpv33yrgvo3"},{"name":"volatile","_id":"cjnijz00n00dcfnpvv9wiw7oc"},{"name":"结婚照","_id":"cjnijz00o00ddfnpvhmin1i05"},{"name":"留言板","_id":"cjnijz00o00dgfnpvtvupmotw"},{"name":"评论","_id":"cjnijz00p00difnpvdzlcqay9"},{"name":"爬虫","_id":"cjnijz00v00dvfnpvxlupcyis"},{"name":"tumblr","_id":"cjnijz00w00dzfnpv52aso0fv"},{"name":"自己动手写爬虫","_id":"cjnijz00x00e0fnpvdtim4005"},{"name":"xz","_id":"cjnijz00x00e1fnpvu5y3dtsp"},{"name":"解压","_id":"cjnijz00y00e4fnpv7wn407b5"},{"name":"知乎","_id":"cjnijz00y00e7fnpveqv7y858"},{"name":"写作","_id":"cjnijz01800eefnpvvce9utxf"}]}}